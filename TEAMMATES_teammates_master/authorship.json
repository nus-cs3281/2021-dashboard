[{"path":"src/client/java/teammates/client/scripts/ListActiveInstructors.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.client.scripts;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"import java.time.ZoneOffset;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"import java.util.Set;"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":"import teammates.client.remoteapi.RemoteApiClient;"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"import teammates.storage.entity.FeedbackSession;"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":" * Script to generate emails of active instructors within a period."},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"public class ListActiveInstructors extends RemoteApiClient {"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    protected void doOperation() {"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"        //2010/01/01"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"        int startDate \u003d 1;"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"        int startMonth \u003d 1;"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"        int startYear \u003d 2010;"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"        //2021/02/01"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"        int endDate \u003d 1;"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"        int endMonth \u003d 3;"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"        int endYear \u003d 2021;"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"        LocalDate startPoint \u003d LocalDate.of(startYear, startMonth, startDate);"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"        LocalDate endPoint \u003d LocalDate.of(endYear, endMonth, endDate);"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"        long startTimeInMilli \u003d startPoint.atStartOfDay().toInstant(ZoneOffset.UTC).toEpochMilli();"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"        long endTimeInMilli \u003d endPoint.atStartOfDay().toInstant(ZoneOffset.UTC).toEpochMilli();"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":"        Instant startTime \u003d Instant.ofEpochMilli(startTimeInMilli);"},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"        Instant endTime \u003d Instant.ofEpochMilli(endTimeInMilli);"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"        Set\u003cString\u003e activeInstructorEmails \u003d new HashSet\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"        ofy().load().type(FeedbackSession.class)"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"                .filter(\"startTime \u003e\u003d\", startTime)"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"                .filter(\"startTime \u003c\u003d\", endTime).project().forEach(feedbackSession -\u003e {"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"                    activeInstructorEmails.add(feedbackSession.getCreatorEmail());"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":"                });"},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"        StringBuilder results \u003d new StringBuilder();"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"        for (String email : activeInstructorEmails) {"},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"            results.append(email).append(\", \\n\");"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":"        System.out.println(results.toString());"},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":"    public static void main(String[] args) throws Exception {"},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"        new ListActiveInstructors().doOperationRemotely();"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":52}},{"path":"src/client/java/teammates/client/scripts/MockCourseWithLargeResponseScript.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"package teammates.client.scripts;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"import java.util.HashMap;"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"import java.util.LinkedHashMap;"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"import java.util.Map;"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"import teammates.client.remoteapi.RemoteApiClient;"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.InstructorPrivileges;"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":20,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionDetails;"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"import teammates.common.util.Const;"},{"lineNumber":28,"author":{"gitId":"moziliar"},"content":"import teammates.logic.api.Logic;"},{"lineNumber":29,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":30,"author":{"gitId":"moziliar"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"moziliar"},"content":" * Script to mock a course and populate large number of responses."},{"lineNumber":32,"author":{"gitId":"moziliar"},"content":" */"},{"lineNumber":33,"author":{"gitId":"moziliar"},"content":"public final class MockCourseWithLargeResponseScript extends RemoteApiClient {"},{"lineNumber":34,"author":{"gitId":"moziliar"},"content":"    // Change the following params for different course setup"},{"lineNumber":35,"author":{"gitId":"moziliar"},"content":"    private static final int NUMBER_OF_STUDENTS \u003d 500;"},{"lineNumber":36,"author":{"gitId":"moziliar"},"content":"    private static final int NUMBER_OF_TEAMS \u003d 100;"},{"lineNumber":37,"author":{"gitId":"moziliar"},"content":"    private static final int NUMBER_OF_FEEDBACK_QUESTIONS \u003d 30;"},{"lineNumber":38,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":39,"author":{"gitId":"moziliar"},"content":"    // For each student, the number of responses depends on:"},{"lineNumber":40,"author":{"gitId":"moziliar"},"content":"    // number_of_students / number_of_teams * (per team feedback strategy)"},{"lineNumber":41,"author":{"gitId":"moziliar"},"content":"    private static final FeedbackParticipantType FEEDBACK_QUESTION_RECIPIENT_TYPE \u003d"},{"lineNumber":42,"author":{"gitId":"moziliar"},"content":"            FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF;"},{"lineNumber":43,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":44,"author":{"gitId":"moziliar"},"content":"    // Change the course ID to be recognizable"},{"lineNumber":45,"author":{"gitId":"moziliar"},"content":"    private static final String COURSE_ID \u003d \"TestData.500S30Q100T\";"},{"lineNumber":46,"author":{"gitId":"moziliar"},"content":"    private static final String COURSE_NAME \u003d \"MockLargeCourse\";"},{"lineNumber":47,"author":{"gitId":"moziliar"},"content":"    private static final String COURSE_TIME_ZONE \u003d \"UTC\";"},{"lineNumber":48,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":49,"author":{"gitId":"moziliar"},"content":"    private static final String INSTRUCTOR_ID \u003d \"LoadInstructor_id\";"},{"lineNumber":50,"author":{"gitId":"moziliar"},"content":"    private static final String INSTRUCTOR_NAME \u003d \"LoadInstructor\";"},{"lineNumber":51,"author":{"gitId":"moziliar"},"content":"    private static final String INSTRUCTOR_EMAIL \u003d \"tmms.test@gmail.tmt\";"},{"lineNumber":52,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":53,"author":{"gitId":"moziliar"},"content":"    private static final String STUDENT_ID \u003d \"LoadStudent.tmms\";"},{"lineNumber":54,"author":{"gitId":"moziliar"},"content":"    private static final String STUDENT_NAME \u003d \"LoadStudent\";"},{"lineNumber":55,"author":{"gitId":"moziliar"},"content":"    private static final String STUDENT_EMAIL \u003d \"studentEmail@gmail.tmt\";"},{"lineNumber":56,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":57,"author":{"gitId":"moziliar"},"content":"    private static final String TEAM_NAME \u003d \"Team \";"},{"lineNumber":58,"author":{"gitId":"moziliar"},"content":"    private static final String GIVER_SECTION_NAME \u003d \"Section 1\";"},{"lineNumber":59,"author":{"gitId":"moziliar"},"content":"    private static final String RECEIVER_SECTION_NAME \u003d \"Section 1\";"},{"lineNumber":60,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":61,"author":{"gitId":"moziliar"},"content":"    private static final String FEEDBACK_SESSION_NAME \u003d \"Test Feedback Session\";"},{"lineNumber":62,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":63,"author":{"gitId":"moziliar"},"content":"    private static final String FEEDBACK_QUESTION_ID \u003d \"QuestionTest\";"},{"lineNumber":64,"author":{"gitId":"moziliar"},"content":"    private static final String FEEDBACK_QUESTION_TEXT \u003d \"Test Question\";"},{"lineNumber":65,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":66,"author":{"gitId":"moziliar"},"content":"    private static final String FEEDBACK_RESPONSE_ID \u003d \"ResponseForQ\";"},{"lineNumber":67,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":68,"author":{"gitId":"moziliar"},"content":"    private MockCourseWithLargeResponseScript() {"},{"lineNumber":69,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":71,"author":{"gitId":"moziliar"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"moziliar"},"content":"    protected void doOperation() {"},{"lineNumber":73,"author":{"gitId":"moziliar"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"moziliar"},"content":"            Logic logic \u003d new Logic();"},{"lineNumber":75,"author":{"gitId":"moziliar"},"content":"            DataBundle data \u003d generateDataBundle();"},{"lineNumber":76,"author":{"gitId":"moziliar"},"content":"            logic.removeDataBundle(data);"},{"lineNumber":77,"author":{"gitId":"moziliar"},"content":"            logic.persistDataBundle(data);"},{"lineNumber":78,"author":{"gitId":"moziliar"},"content":"            System.out.println(data.feedbackResponses.size());"},{"lineNumber":79,"author":{"gitId":"moziliar"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":80,"author":{"gitId":"moziliar"},"content":"            System.err.println(e);"},{"lineNumber":81,"author":{"gitId":"moziliar"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":84,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, AccountAttributes\u003e generateAccounts() {"},{"lineNumber":85,"author":{"gitId":"moziliar"},"content":"        return new HashMap\u003c\u003e();"},{"lineNumber":86,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":88,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, CourseAttributes\u003e generateCourses() {"},{"lineNumber":89,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, CourseAttributes\u003e courses \u003d new HashMap\u003c\u003e();"},{"lineNumber":90,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":91,"author":{"gitId":"moziliar"},"content":"        courses.put(COURSE_NAME, CourseAttributes.builder(COURSE_ID)"},{"lineNumber":92,"author":{"gitId":"moziliar"},"content":"                .withName(COURSE_NAME)"},{"lineNumber":93,"author":{"gitId":"moziliar"},"content":"                .withTimezone(ZoneId.of(COURSE_TIME_ZONE))"},{"lineNumber":94,"author":{"gitId":"moziliar"},"content":"                .build());"},{"lineNumber":95,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":96,"author":{"gitId":"moziliar"},"content":"        return courses;"},{"lineNumber":97,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":99,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, InstructorAttributes\u003e generateInstructors() {"},{"lineNumber":100,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, InstructorAttributes\u003e instructors \u003d new HashMap\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":102,"author":{"gitId":"moziliar"},"content":"        instructors.put(INSTRUCTOR_NAME,"},{"lineNumber":103,"author":{"gitId":"moziliar"},"content":"                InstructorAttributes.builder(COURSE_ID, INSTRUCTOR_EMAIL)"},{"lineNumber":104,"author":{"gitId":"moziliar"},"content":"                        .withGoogleId(INSTRUCTOR_ID)"},{"lineNumber":105,"author":{"gitId":"moziliar"},"content":"                        .withName(INSTRUCTOR_NAME)"},{"lineNumber":106,"author":{"gitId":"moziliar"},"content":"                        .withRole(\"Co-owner\")"},{"lineNumber":107,"author":{"gitId":"moziliar"},"content":"                        .withIsDisplayedToStudents(true)"},{"lineNumber":108,"author":{"gitId":"moziliar"},"content":"                        .withDisplayedName(\"Co-owner\")"},{"lineNumber":109,"author":{"gitId":"moziliar"},"content":"                        .withPrivileges(new InstructorPrivileges("},{"lineNumber":110,"author":{"gitId":"moziliar"},"content":"                                Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER))"},{"lineNumber":111,"author":{"gitId":"moziliar"},"content":"                        .build()"},{"lineNumber":112,"author":{"gitId":"moziliar"},"content":"        );"},{"lineNumber":113,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":114,"author":{"gitId":"moziliar"},"content":"        return instructors;"},{"lineNumber":115,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":117,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, StudentAttributes\u003e generateStudents() {"},{"lineNumber":118,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, StudentAttributes\u003e students \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":119,"author":{"gitId":"moziliar"},"content":"        StudentAttributes studentAttribute;"},{"lineNumber":120,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":121,"author":{"gitId":"moziliar"},"content":"        for (int i \u003d 1; i \u003c\u003d NUMBER_OF_STUDENTS; i++) {"},{"lineNumber":122,"author":{"gitId":"moziliar"},"content":"            studentAttribute \u003d StudentAttributes.builder(COURSE_ID, i + STUDENT_EMAIL)"},{"lineNumber":123,"author":{"gitId":"moziliar"},"content":"                    .withGoogleId(STUDENT_ID + i)"},{"lineNumber":124,"author":{"gitId":"moziliar"},"content":"                    .withName(STUDENT_NAME + i)"},{"lineNumber":125,"author":{"gitId":"moziliar"},"content":"                    .withComment(\"This student\u0027s name is \" + STUDENT_NAME + i)"},{"lineNumber":126,"author":{"gitId":"moziliar"},"content":"                    .withSectionName(GIVER_SECTION_NAME)"},{"lineNumber":127,"author":{"gitId":"moziliar"},"content":"                    .withTeamName(TEAM_NAME + i % NUMBER_OF_TEAMS)"},{"lineNumber":128,"author":{"gitId":"moziliar"},"content":"                    .build();"},{"lineNumber":129,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":130,"author":{"gitId":"moziliar"},"content":"            students.put(STUDENT_NAME + i, studentAttribute);"},{"lineNumber":131,"author":{"gitId":"moziliar"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":133,"author":{"gitId":"moziliar"},"content":"        return students;"},{"lineNumber":134,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":136,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, FeedbackSessionAttributes\u003e generateFeedbackSessions() {"},{"lineNumber":137,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, FeedbackSessionAttributes\u003e feedbackSessions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":138,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":139,"author":{"gitId":"moziliar"},"content":"        FeedbackSessionAttributes session \u003d FeedbackSessionAttributes"},{"lineNumber":140,"author":{"gitId":"moziliar"},"content":"                .builder(FEEDBACK_SESSION_NAME, COURSE_ID)"},{"lineNumber":141,"author":{"gitId":"moziliar"},"content":"                .withCreatorEmail(INSTRUCTOR_EMAIL)"},{"lineNumber":142,"author":{"gitId":"moziliar"},"content":"                .withStartTime(Instant.now())"},{"lineNumber":143,"author":{"gitId":"moziliar"},"content":"                .withEndTime(Instant.now().plusSeconds(500))"},{"lineNumber":144,"author":{"gitId":"moziliar"},"content":"                .withSessionVisibleFromTime(Instant.now())"},{"lineNumber":145,"author":{"gitId":"moziliar"},"content":"                .withResultsVisibleFromTime(Instant.now())"},{"lineNumber":146,"author":{"gitId":"moziliar"},"content":"                .build();"},{"lineNumber":147,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":148,"author":{"gitId":"moziliar"},"content":"        feedbackSessions.put(FEEDBACK_SESSION_NAME, session);"},{"lineNumber":149,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":150,"author":{"gitId":"moziliar"},"content":"        return feedbackSessions;"},{"lineNumber":151,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":153,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, FeedbackQuestionAttributes\u003e generateFeedbackQuestions() {"},{"lineNumber":154,"author":{"gitId":"moziliar"},"content":"        List\u003cFeedbackParticipantType\u003e showResponses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":155,"author":{"gitId":"moziliar"},"content":"        showResponses.add(FeedbackParticipantType.RECEIVER);"},{"lineNumber":156,"author":{"gitId":"moziliar"},"content":"        showResponses.add(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":157,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":158,"author":{"gitId":"moziliar"},"content":"        List\u003cFeedbackParticipantType\u003e showGiverName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":159,"author":{"gitId":"moziliar"},"content":"        showGiverName.add(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":160,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":161,"author":{"gitId":"moziliar"},"content":"        List\u003cFeedbackParticipantType\u003e showRecepientName \u003d new ArrayList\u003c\u003e();"},{"lineNumber":162,"author":{"gitId":"moziliar"},"content":"        showRecepientName.add(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":163,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":164,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, FeedbackQuestionAttributes\u003e feedbackQuestions \u003d new LinkedHashMap\u003c\u003e();"},{"lineNumber":165,"author":{"gitId":"moziliar"},"content":"        FeedbackQuestionDetails details \u003d new FeedbackTextQuestionDetails(FEEDBACK_QUESTION_TEXT);"},{"lineNumber":166,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":167,"author":{"gitId":"moziliar"},"content":"        for (int i \u003d 1; i \u003c\u003d NUMBER_OF_FEEDBACK_QUESTIONS; i++) {"},{"lineNumber":168,"author":{"gitId":"moziliar"},"content":"            feedbackQuestions.put(FEEDBACK_QUESTION_ID + \" \" + i,"},{"lineNumber":169,"author":{"gitId":"moziliar"},"content":"                    FeedbackQuestionAttributes.builder()"},{"lineNumber":170,"author":{"gitId":"moziliar"},"content":"                            .withFeedbackSessionName(FEEDBACK_SESSION_NAME)"},{"lineNumber":171,"author":{"gitId":"moziliar"},"content":"                            .withQuestionDescription(FEEDBACK_QUESTION_TEXT)"},{"lineNumber":172,"author":{"gitId":"moziliar"},"content":"                            .withCourseId(COURSE_ID)"},{"lineNumber":173,"author":{"gitId":"moziliar"},"content":"                            .withQuestionDetails(details)"},{"lineNumber":174,"author":{"gitId":"moziliar"},"content":"                            .withQuestionNumber(i)"},{"lineNumber":175,"author":{"gitId":"moziliar"},"content":"                            .withGiverType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":176,"author":{"gitId":"moziliar"},"content":"                            .withRecipientType(FEEDBACK_QUESTION_RECIPIENT_TYPE)"},{"lineNumber":177,"author":{"gitId":"moziliar"},"content":"                            .withShowResponsesTo(showResponses)"},{"lineNumber":178,"author":{"gitId":"moziliar"},"content":"                            .withShowGiverNameTo(showGiverName)"},{"lineNumber":179,"author":{"gitId":"moziliar"},"content":"                            .withShowRecipientNameTo(showRecepientName)"},{"lineNumber":180,"author":{"gitId":"moziliar"},"content":"                            .build()"},{"lineNumber":181,"author":{"gitId":"moziliar"},"content":"            );"},{"lineNumber":182,"author":{"gitId":"moziliar"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":184,"author":{"gitId":"moziliar"},"content":"        return feedbackQuestions;"},{"lineNumber":185,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":186,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":187,"author":{"gitId":"moziliar"},"content":"    private static Map\u003cString, FeedbackResponseAttributes\u003e generateFeedbackResponses() {"},{"lineNumber":188,"author":{"gitId":"moziliar"},"content":"        Map\u003cString, FeedbackResponseAttributes\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"},{"lineNumber":189,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":190,"author":{"gitId":"moziliar"},"content":"        for (int i \u003d 1; i \u003c\u003d NUMBER_OF_STUDENTS; i++) {"},{"lineNumber":191,"author":{"gitId":"moziliar"},"content":"            for (int j \u003d 1; j \u003c\u003d NUMBER_OF_STUDENTS; j++) {"},{"lineNumber":192,"author":{"gitId":"moziliar"},"content":"                if (j % NUMBER_OF_TEAMS !\u003d i % NUMBER_OF_TEAMS) {"},{"lineNumber":193,"author":{"gitId":"moziliar"},"content":"                    continue;"},{"lineNumber":194,"author":{"gitId":"moziliar"},"content":"                }"},{"lineNumber":195,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":196,"author":{"gitId":"moziliar"},"content":"                for (int k \u003d 1; k \u003c\u003d NUMBER_OF_FEEDBACK_QUESTIONS; k++) {"},{"lineNumber":197,"author":{"gitId":"moziliar"},"content":"                    String responseText \u003d FEEDBACK_RESPONSE_ID + \" \" + k"},{"lineNumber":198,"author":{"gitId":"moziliar"},"content":"                            + \" from student \" + i + \" to student \" + j;"},{"lineNumber":199,"author":{"gitId":"moziliar"},"content":"                    FeedbackTextResponseDetails details \u003d"},{"lineNumber":200,"author":{"gitId":"moziliar"},"content":"                            new FeedbackTextResponseDetails(responseText);"},{"lineNumber":201,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":202,"author":{"gitId":"moziliar"},"content":"                    feedbackResponses.put(responseText,"},{"lineNumber":203,"author":{"gitId":"moziliar"},"content":"                            FeedbackResponseAttributes.builder("},{"lineNumber":204,"author":{"gitId":"moziliar"},"content":"                                    Integer.toString(k),"},{"lineNumber":205,"author":{"gitId":"moziliar"},"content":"                                    i + STUDENT_EMAIL,"},{"lineNumber":206,"author":{"gitId":"moziliar"},"content":"                                    j + STUDENT_EMAIL)"},{"lineNumber":207,"author":{"gitId":"moziliar"},"content":"                                    .withCourseId(COURSE_ID)"},{"lineNumber":208,"author":{"gitId":"moziliar"},"content":"                                    .withFeedbackSessionName(FEEDBACK_SESSION_NAME)"},{"lineNumber":209,"author":{"gitId":"moziliar"},"content":"                                    .withGiverSection(GIVER_SECTION_NAME)"},{"lineNumber":210,"author":{"gitId":"moziliar"},"content":"                                    .withRecipientSection(RECEIVER_SECTION_NAME)"},{"lineNumber":211,"author":{"gitId":"moziliar"},"content":"                                    .withResponseDetails(details)"},{"lineNumber":212,"author":{"gitId":"moziliar"},"content":"                                    .build());"},{"lineNumber":213,"author":{"gitId":"moziliar"},"content":"                }"},{"lineNumber":214,"author":{"gitId":"moziliar"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"moziliar"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"moziliar"},"content":"        System.out.println(feedbackResponses.size());"},{"lineNumber":217,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":218,"author":{"gitId":"moziliar"},"content":"        return feedbackResponses;"},{"lineNumber":219,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":221,"author":{"gitId":"moziliar"},"content":"    private static DataBundle generateDataBundle() {"},{"lineNumber":222,"author":{"gitId":"moziliar"},"content":"        DataBundle dataBundle \u003d new DataBundle();"},{"lineNumber":223,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":224,"author":{"gitId":"moziliar"},"content":"        dataBundle.accounts \u003d generateAccounts();"},{"lineNumber":225,"author":{"gitId":"moziliar"},"content":"        dataBundle.courses \u003d generateCourses();"},{"lineNumber":226,"author":{"gitId":"moziliar"},"content":"        dataBundle.instructors \u003d generateInstructors();"},{"lineNumber":227,"author":{"gitId":"moziliar"},"content":"        dataBundle.students \u003d generateStudents();"},{"lineNumber":228,"author":{"gitId":"moziliar"},"content":"        dataBundle.feedbackSessions \u003d generateFeedbackSessions();"},{"lineNumber":229,"author":{"gitId":"moziliar"},"content":"        dataBundle.feedbackQuestions \u003d generateFeedbackQuestions();"},{"lineNumber":230,"author":{"gitId":"moziliar"},"content":"        dataBundle.feedbackResponses \u003d generateFeedbackResponses();"},{"lineNumber":231,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":232,"author":{"gitId":"moziliar"},"content":"        return dataBundle;"},{"lineNumber":233,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":235,"author":{"gitId":"moziliar"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":236,"author":{"gitId":"moziliar"},"content":"        new MockCourseWithLargeResponseScript().doOperationRemotely();"},{"lineNumber":237,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":239,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":239}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackEditPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertFalse;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertTrue;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.openqa.selenium.Keys;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackConstantSumQuestionDetails;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackContributionQuestionDetails;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackNumericalScaleQuestionDetails;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankOptionsQuestionDetails;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRankQuestionDetails;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackRubricQuestionDetails;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.common.util.ThreadHelper;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Represents the instructor feedback edit page of the website."},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class InstructorFeedbackEditPage extends AppPage {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_FEEDBACK_PATH_OPTION \u003d \"Custom feedback path\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_PATH_SEPARATOR \u003d \" will give feedback on \";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String CUSTOM_VISIBILITY_OPTION \u003d \"Custom visibility options\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-edit\")"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private WebElement fsEditButton;"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-save\")"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private WebElement fsSaveButton;"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-fs-copy\")"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private WebElement fsCopyButton;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-course-id\")"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private WebElement courseIdTextBox;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"time-zone\")"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private WebElement timezoneDropDown;"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"course-name\")"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private WebElement courseNameTextBox;"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"edit-session-name\")"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-status\")"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private WebElement submissionStatusTextBox;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"published-status\")"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private WebElement publishStatusTextBox;"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-new-question\")"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private WebElement addNewQuestionButton;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-copy-question\")"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private WebElement copyQuestionButton;"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-student\")"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentDropdown;"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-student\")"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private WebElement previewAsStudentButton;"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"preview-instructor\")"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorDropdown;"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-preview-instructor\")"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private WebElement previewAsInstructorButton;"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public InstructorFeedbackEditPage(Browser browser) {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Edit Feedback Session\");"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(CourseAttributes course, FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"instructions\"));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(getCourseId(), course.getId());"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(getCourseName(), course.getName());"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(getTimeZone(), feedbackSession.getTimeZone().toString());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(getFeedbackSessionName(), feedbackSession.getFeedbackSessionName());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertEquals(getInstructions(), feedbackSession.getInstructions());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(getStartDate(), getDateString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(getStartTime(), getTimeString(feedbackSession.getStartTime(), feedbackSession.getTimeZone()));"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(getEndDate(), getDateString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(getEndTime(), getTimeString(feedbackSession.getEndTime(), feedbackSession.getTimeZone()));"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(getGracePeriod(), feedbackSession.getGracePeriodMinutes() + \" min\");"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        verifySubmissionStatus(feedbackSession);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        verifyPublishedStatus(feedbackSession);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        verifyVisibilitySettings(feedbackSession);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        verifyEmailSettings(feedbackSession);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private void verifySubmissionStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String submissionStatus \u003d getSubmissionStatus();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (feedbackSession.isClosed()) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Closed\");"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } else if (feedbackSession.isVisible() \u0026\u0026 (feedbackSession.isOpened() || feedbackSession.isInGracePeriod())) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Open\");"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            assertEquals(submissionStatus, \"Awaiting\");"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private void verifyPublishedStatus(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        String publishedStatus \u003d getPublishedStatus();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (feedbackSession.isPublished()) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Published\");"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            assertEquals(publishedStatus, \"Not Published\");"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"    private void verifyVisibilitySettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Instant sessionVisibleTime \u003d feedbackSession.getSessionVisibleFromTime();"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Instant responseVisibleTime \u003d feedbackSession.getResultsVisibleFromTime();"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \u0026\u0026 responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-visibility\"));"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        verifySessionVisibilitySettings(sessionVisibleTime, feedbackSession);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        verifyResponseVisibilitySettings(responseVisibleTime, feedbackSession);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void verifySessionVisibilitySettings(Instant sessionVisibleTime,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                                                 FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (sessionVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            assertTrue(openSessionVisibleTimeButton.isSelected());"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityDate(), getDateString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            assertEquals(getSessionVisibilityTime(), getTimeString(feedbackSession.getSessionVisibleFromTime(),"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private void verifyResponseVisibilitySettings(Instant responseVisibleTime,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                                                  FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (responseVisibleTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            assertTrue(immediateResponseVisibleTimeButton.isSelected());"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } else if (responseVisibleTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            assertTrue(manualResponseVisibleTimeButton.isSelected());"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            assertTrue(customSessionVisibleTimeButton.isSelected());"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityDate(), getDateString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            assertEquals(getResponseVisibilityTime(), getTimeString(feedbackSession.getResultsVisibleFromTime(),"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    feedbackSession.getTimeZone()));"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    private void verifyEmailSettings(FeedbackSessionAttributes feedbackSession) {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        boolean isOpeningEmailEnabled \u003d feedbackSession.isOpeningEmailEnabled();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        boolean isClosingEmailEnabled \u003d feedbackSession.isClosingEmailEnabled();"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        boolean isPublishedEmailEnabled \u003d feedbackSession.isPublishedEmailEnabled();"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // Default settings, assert setting section not expanded"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled \u0026\u0026 isClosingEmailEnabled \u0026\u0026 isPublishedEmailEnabled) {"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            assertTrue(isElementPresent(\"btn-change-email\"));"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (isOpeningEmailEnabled) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            assertTrue(openingSessionEmailCheckbox.isSelected());"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        if (isClosingEmailEnabled) {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            assertTrue(closingSessionEmailCheckbox.isSelected());"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        if (isPublishedEmailEnabled) {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            assertTrue(publishedSessionEmailCheckbox.isSelected());"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void editSessionDetails(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        click(fsEditButton);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        setInstructions(newFeedbackSessionDetails.getInstructions());"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newFeedbackSessionDetails.getStartTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newFeedbackSessionDetails.getEndTime(), newFeedbackSessionDetails.getTimeZone());"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        selectGracePeriod(newFeedbackSessionDetails.getGracePeriodMinutes());"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newFeedbackSessionDetails);"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        setEmailSettings(newFeedbackSessionDetails);"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        click(fsSaveButton);"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void copySessionToOtherCourse(CourseAttributes otherCourse, String sessionName) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        click(fsCopyButton);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), sessionName);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (courseId.equals(otherCourse.getId())) {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public void deleteSession() {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-fs-delete\")));"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"-"},"content":""},{"lineNumber":293,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsStudent(StudentAttributes student) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsStudentDropdown, String.format(\"[%s] %s\", student.team, student.name));"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        click(previewAsStudentButton);"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public FeedbackSubmitPage previewAsInstructor(InstructorAttributes instructor) {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(previewAsInstructorDropdown, instructor.name);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        click(previewAsInstructorButton);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(2000);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        switchToNewWindow();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        return changePageType(FeedbackSubmitPage.class);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public void verifyNumQuestions(int expected) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertEquals(getNumQuestions(), expected);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"    public void verifyQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        scrollElementToCenter(getQuestionForm(questionNum));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionType(), getQuestionType(questionNum));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionNumber(), getQuestionNumber(questionNum));"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertEquals(feedbackQuestion.getQuestionDetails().getQuestionText(), getQuestionBrief(questionNum));"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertEquals(getQuestionDescription(questionNum), feedbackQuestion.getQuestionDescription());"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        verifyFeedbackPathSettings(questionNum, feedbackQuestion);"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        verifyQuestionVisibilitySettings(questionNum, feedbackQuestion);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    private void verifyFeedbackPathSettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayGiverName(feedbackQuestion.getGiverType()), getFeedbackGiver(questionNum));"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        String feedbackReceiver \u003d getFeedbackReceiver(questionNum);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        assertEquals(getDisplayRecipientName(feedbackQuestion.getRecipientType()), feedbackReceiver);"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        if (feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF))"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                || feedbackReceiver.equals(getDisplayRecipientName(FeedbackParticipantType.TEAMS_EXCLUDING_SELF))) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            verifyNumberOfEntitiesToGiveFeedbackTo(questionNum, feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo());"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    private void verifyNumberOfEntitiesToGiveFeedbackTo(int questionNum, int numberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        if (numberOfEntitiesToGiveFeedbackTo \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            assertTrue(questionForm.findElement(By.id(\"unlimited-recipients\")).isSelected());"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            assertTrue(questionForm.findElement(By.id(\"custom-recipients\")).isSelected());"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            assertEquals(questionForm.findElement(By.id(\"custom-recipients-number\")).getAttribute(\"value\"),"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                    Integer.toString(numberOfEntitiesToGiveFeedbackTo));"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"-"},"content":""},{"lineNumber":346,"author":{"gitId":"-"},"content":"    private void verifyQuestionVisibilitySettings(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        String visibility \u003d questionForm.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showResponsesTo \u003d feedbackQuestion.getShowResponsesTo();"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showGiverNameTo \u003d feedbackQuestion.getShowGiverNameTo();"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e showRecipientNameTo \u003d feedbackQuestion.getShowRecipientNameTo();"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"        switch (visibility) {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver\u0027s team members, visible to instructors\":"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":357,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 3);"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":365,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        case \"Visible to instructors only\":"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":370,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 1);"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 1);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and instructors\":"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":383,"author":{"gitId":"-"},"content":""},{"lineNumber":384,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 0);"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":387,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":390,"author":{"gitId":"-"},"content":""},{"lineNumber":391,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient, visible to instructors\":"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        case \"Shown anonymously to recipient and giver/recipient\u0027s team members, visible to instructors\":"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.OWN_TEAM_MEMBERS));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS));"},{"lineNumber":409,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 4);"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 1);"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":418,"author":{"gitId":"-"},"content":""},{"lineNumber":419,"author":{"gitId":"-"},"content":"        case \"Visible to recipient and instructors\":"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            assertTrue(showResponsesTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":422,"author":{"gitId":"-"},"content":"            assertEquals(showResponsesTo.size(), 2);"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":425,"author":{"gitId":"-"},"content":"            assertTrue(showGiverNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            assertEquals(showGiverNameTo.size(), 2);"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            assertTrue(showRecipientNameTo.contains(FeedbackParticipantType.RECEIVER));"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            assertEquals(showRecipientNameTo.size(), 2);"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            verifyCustomQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    private void verifyCustomQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":441,"author":{"gitId":"-"},"content":"        String visibility \u003d questionForm.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        assertEquals(visibility, CUSTOM_VISIBILITY_OPTION);"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d questionForm.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        assertVisibilityBoxesSelected(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"    private void assertVisibilityBoxesSelected(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                                               FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"                                               int colNum) {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":456,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":461,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":465,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":466,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":467,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":472,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            assertTrue(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index)"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                    .isSelected());"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    public void addTemplateQuestion(int optionNum) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        addNewQuestion(1);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        WebElement templateQuestionModal \u003d waitForElementPresence(By.id(\"template-question-modal\"));"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        click(templateQuestionModal.findElements(By.tagName(\"input\")).get(optionNum - 1));"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-template\")));"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":486,"author":{"gitId":"-"},"content":""},{"lineNumber":487,"author":{"gitId":"-"},"content":"    public void copyQuestion(String courseId, String questionText) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        click(copyQuestionButton);"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        WebElement copyQuestionModal \u003d waitForElementPresence(By.id(\"copy-question-modal\"));"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d copyQuestionModal.findElements(By.cssSelector(\"tbody tr\"));"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":493,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            if (cells.get(1).getText().equals(courseId) \u0026\u0026 cells.get(4).getText().equals(questionText)) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                markOptionAsSelected(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(browser.driver.findElement(By.id(\"btn-confirm-copy-question\")));"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"    public void editQuestionNumber(int questionNum, int newQuestionNumber) {"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(getQuestionForm(questionNum).findElement(By.id(\"question-number-dropdown\")),"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                Integer.toString(newQuestionNumber));"},{"lineNumber":505,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public void editQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":510,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":511,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":513,"author":{"gitId":"-"},"content":""},{"lineNumber":514,"author":{"gitId":"-"},"content":"    private void inputQuestionDetails(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        setQuestionBrief(questionNum, feedbackQuestion.getQuestionDetails().getQuestionText());"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        setQuestionDescription(questionNum, feedbackQuestion.getQuestionDescription());"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        FeedbackQuestionType questionType \u003d feedbackQuestion.getQuestionType();"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        if (!questionType.equals(FeedbackQuestionType.CONTRIB)) {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            setFeedbackPath(questionNum, feedbackQuestion);"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            setQuestionVisibility(questionNum, feedbackQuestion);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    public void duplicateQuestion(int questionNum) {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        clickAndWaitForNewQuestion(getQuestionForm(questionNum).findElement(By.id(\"btn-duplicate-question\")));"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"    public void deleteQuestion(int questionNum) {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        clickAndConfirm(getQuestionForm(questionNum).findElement(By.id(\"btn-delete-question\")));"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"    public void verifyTextQuestionDetails(int questionNum, FeedbackTextQuestionDetails questionDetails) {"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        String recommendLength \u003d getRecommendedTextLengthField(questionNum).getAttribute(\"value\");"},{"lineNumber":534,"author":{"gitId":"-"},"content":"        assertEquals(recommendLength, questionDetails.getRecommendedLength().toString());"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"    public void addTextQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        addNewQuestion(2);"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        FeedbackTextQuestionDetails questionDetails \u003d (FeedbackTextQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        fillTextBox(getRecommendedTextLengthField(questionNum), questionDetails.getRecommendedLength().toString());"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    public void editTextQuestion(int questionNum, FeedbackTextQuestionDetails textQuestionDetails) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        WebElement recommendedTextLengthField \u003d getRecommendedTextLengthField(questionNum);"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        waitForElementToBeClickable(recommendedTextLengthField);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        fillTextBox(recommendedTextLengthField, textQuestionDetails.getRecommendedLength().toString());"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"    public void verifyMcqQuestionDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":556,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.hasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"    public void addMcqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"        addNewQuestion(3);"},{"lineNumber":565,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        FeedbackMcqQuestionDetails questionDetails \u003d (FeedbackMcqQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"    public void editMcqQuestion(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":574,"author":{"gitId":"-"},"content":"        inputMcqDetails(questionNum, questionDetails);"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":577,"author":{"gitId":"-"},"content":""},{"lineNumber":578,"author":{"gitId":"-"},"content":"    public void verifyMsqQuestionDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        if (verifyGeneratedOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        verifyOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        verifyOptionWeights(questionNum, questionDetails.hasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        verifyOtherOption(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":588,"author":{"gitId":"-"},"content":""},{"lineNumber":589,"author":{"gitId":"-"},"content":"    public void addMsqQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        addNewQuestion(4);"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails questionDetails \u003d (FeedbackMsqQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, questionDetails);"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"    public void editMsqQuestion(int questionNum, FeedbackMsqQuestionDetails msqQuestionDetails) {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":600,"author":{"gitId":"-"},"content":"        inputMsqDetails(questionNum, msqQuestionDetails);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    public void verifyNumScaleQuestionDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"        assertEquals(getMinNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        assertEquals(getNumScaleIncrementInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                getDoubleString(questionDetails.getStep()));"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        assertEquals(getMaxNumscaleInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":610,"author":{"gitId":"-"},"content":"                Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":612,"author":{"gitId":"-"},"content":""},{"lineNumber":613,"author":{"gitId":"-"},"content":"    public void addNumScaleQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"        addNewQuestion(5);"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        FeedbackNumericalScaleQuestionDetails questionDetails \u003d"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                (FeedbackNumericalScaleQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":619,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":620,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"    public void editNumScaleQuestion(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        inputNumScaleDetails(questionNum, questionDetails);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"    public void verifyConstSumQuestionDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":635,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":636,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumPerOptionPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":637,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":639,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":640,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumTotalPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            assertEquals(getConstSumTotalPointsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":642,"author":{"gitId":"-"},"content":"                    Integer.toString(questionDetails.getPoints()));"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumPerOptionPointsRadioBtn(questionNum).isSelected());"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":645,"author":{"gitId":"-"},"content":""},{"lineNumber":646,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"            String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":648,"author":{"gitId":"-"},"content":"            assertTrue(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":649,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getConstSumUnevenDistributionDropdown(questionNum)).trim(),"},{"lineNumber":650,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":652,"author":{"gitId":"-"},"content":"            assertFalse(getConstSumUnevenDistributionCheckbox(questionNum).isSelected());"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"    public void addConstSumOptionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        addNewQuestion(6);"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":660,"author":{"gitId":"-"},"content":""},{"lineNumber":661,"author":{"gitId":"-"},"content":"    public void addConstSumRecipientQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        addNewQuestion(7);"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        addConstSumQuestion(feedbackQuestion);"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":665,"author":{"gitId":"-"},"content":""},{"lineNumber":666,"author":{"gitId":"-"},"content":"    public void addConstSumQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":669,"author":{"gitId":"-"},"content":"        FeedbackConstantSumQuestionDetails questionDetails \u003d"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                (FeedbackConstantSumQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, questionDetails);"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"    public void editConstSumQuestion(int questionNum, FeedbackConstantSumQuestionDetails csQuestionDetails) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":677,"author":{"gitId":"-"},"content":"        inputConstSumDetails(questionNum, csQuestionDetails);"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":679,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":680,"author":{"gitId":"-"},"content":""},{"lineNumber":681,"author":{"gitId":"-"},"content":"    public void verifyContributionQuestionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"        assertEquals(questionDetails.isNotSureAllowed(), getAllowNotSureContributionCheckbox(questionNum).isSelected());"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"    public void addContributionQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        addNewQuestion(8);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":689,"author":{"gitId":"-"},"content":"        FeedbackContributionQuestionDetails questionDetails \u003d"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                (FeedbackContributionQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":691,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":693,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"    public void editContributionQuestion(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"        inputContributionDetails(questionNum, questionDetails);"},{"lineNumber":698,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"    public void verifyRubricQuestionDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":702,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":703,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            assertEquals(choices.get(i), getRubricChoiceInputs(questionNum).get(i).getAttribute(\"value\"));"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":707,"author":{"gitId":"-"},"content":""},{"lineNumber":708,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":710,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            assertEquals(subQuestions.get(i), textAreas.get(0).getAttribute(\"value\"));"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":715,"author":{"gitId":"-"},"content":"                assertEquals(descriptions.get(i).get(j), textAreas.get(j + 1).getAttribute(\"value\"));"},{"lineNumber":716,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":717,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"        if (questionDetails.hasAssignedWeights()) {"},{"lineNumber":720,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":721,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                List\u003cWebElement\u003e rubricWeights \u003d getRubricWeights(questionNum, i + 2);"},{"lineNumber":724,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"                    assertEquals(rubricWeights.get(j).getAttribute(\"value\"),"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                            getDoubleString(weights.get(i).get(j)));"},{"lineNumber":727,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":728,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":732,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":733,"author":{"gitId":"-"},"content":""},{"lineNumber":734,"author":{"gitId":"-"},"content":"    public void addRubricQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"        addNewQuestion(9);"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":737,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        FeedbackRubricQuestionDetails questionDetails \u003d"},{"lineNumber":739,"author":{"gitId":"-"},"content":"                (FeedbackRubricQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":740,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":741,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"    public void editRubricQuestion(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":745,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":746,"author":{"gitId":"-"},"content":"        inputRubricDetails(questionNum, questionDetails);"},{"lineNumber":747,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":748,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":749,"author":{"gitId":"-"},"content":""},{"lineNumber":750,"author":{"gitId":"-"},"content":"    public void verifyRankQuestionDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":753,"author":{"gitId":"-"},"content":"            verifyOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":754,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        assertEquals(getAllowDuplicateRankCheckbox(questionNum).isSelected(), questionDetails.areDuplicatesAllowed());"},{"lineNumber":756,"author":{"gitId":"-"},"content":"        verifyMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":757,"author":{"gitId":"-"},"content":"        verifyMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"    public void addRankOptionsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":761,"author":{"gitId":"-"},"content":"        addNewQuestion(10);"},{"lineNumber":762,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":764,"author":{"gitId":"-"},"content":"        FeedbackRankOptionsQuestionDetails questionDetails \u003d"},{"lineNumber":765,"author":{"gitId":"-"},"content":"                (FeedbackRankOptionsQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":766,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":767,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":768,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":769,"author":{"gitId":"-"},"content":""},{"lineNumber":770,"author":{"gitId":"-"},"content":"    public void addRankRecipientsQuestion(FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        addNewQuestion(11);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        int questionNum \u003d getNumQuestions();"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        inputQuestionDetails(questionNum, feedbackQuestion);"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        FeedbackRankQuestionDetails questionDetails \u003d"},{"lineNumber":775,"author":{"gitId":"-"},"content":"                (FeedbackRankQuestionDetails) feedbackQuestion.getQuestionDetails();"},{"lineNumber":776,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        clickSaveNewQuestionButton();"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"    public void editRankQuestion(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        clickEditQuestionButton(questionNum);"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        inputRankDetails(questionNum, questionDetails);"},{"lineNumber":783,"author":{"gitId":"-"},"content":"        clickSaveQuestionButton(questionNum);"},{"lineNumber":784,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":785,"author":{"gitId":"-"},"content":""},{"lineNumber":786,"author":{"gitId":"-"},"content":"    private String getCourseId() {"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        return courseIdTextBox.getText();"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"    private String getCourseName() {"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        return courseNameTextBox.getText();"},{"lineNumber":792,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":793,"author":{"gitId":"-"},"content":""},{"lineNumber":794,"author":{"gitId":"-"},"content":"    private String getTimeZone() {"},{"lineNumber":795,"author":{"gitId":"-"},"content":"        return timezoneDropDown.getText();"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName() {"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        return sessionNameTextBox.getText();"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":801,"author":{"gitId":"-"},"content":""},{"lineNumber":802,"author":{"gitId":"-"},"content":"    private String getInstructions() {"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        return getEditorRichText(instructionsEditor.findElement(By.tagName(\"editor\")));"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":805,"author":{"gitId":"-"},"content":""},{"lineNumber":806,"author":{"gitId":"-"},"content":"    private String getStartDate() {"},{"lineNumber":807,"author":{"gitId":"daongochieu2810"},"content":"        return startDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":808,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"    private String getStartTime() {"},{"lineNumber":811,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(startTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":812,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"    private String getEndDate() {"},{"lineNumber":815,"author":{"gitId":"daongochieu2810"},"content":"        return endDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"    private String getEndTime() {"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(endTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":821,"author":{"gitId":"-"},"content":""},{"lineNumber":822,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityDate() {"},{"lineNumber":823,"author":{"gitId":"daongochieu2810"},"content":"        return sessionVisibilityDateBox.findElement(By.tagName(\"input\")).getAttribute(\"value\");"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":825,"author":{"gitId":"-"},"content":""},{"lineNumber":826,"author":{"gitId":"-"},"content":"    private String getSessionVisibilityTime() {"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(sessionVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityDate() {"},{"lineNumber":831,"author":{"gitId":"daongochieu2810"},"content":"        return responseVisibilityDateBox.findElement(By.tagName(\"input\"))"},{"lineNumber":832,"author":{"gitId":"daongochieu2810"},"content":"                .getAttribute(\"value\");"},{"lineNumber":833,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":834,"author":{"gitId":"-"},"content":""},{"lineNumber":835,"author":{"gitId":"-"},"content":"    private String getResponseVisibilityTime() {"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(responseVisibilityTimeDropdown.findElement(By.tagName(\"select\")));"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":""},{"lineNumber":839,"author":{"gitId":"-"},"content":"    private String getGracePeriod() {"},{"lineNumber":840,"author":{"gitId":"-"},"content":"        return getSelectedDropdownOptionText(gracePeriodDropdown);"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":842,"author":{"gitId":"-"},"content":""},{"lineNumber":843,"author":{"gitId":"-"},"content":"    private String getSubmissionStatus() {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"        return submissionStatusTextBox.getText();"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":846,"author":{"gitId":"-"},"content":""},{"lineNumber":847,"author":{"gitId":"-"},"content":"    private String getPublishedStatus() {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"        return publishStatusTextBox.getText();"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":850,"author":{"gitId":"-"},"content":""},{"lineNumber":851,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, ZoneId timeZone) {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"        return DateTimeFormatter"},{"lineNumber":853,"author":{"gitId":"-"},"content":"                .ofPattern(\"EE, dd MMM, yyyy\")"},{"lineNumber":854,"author":{"gitId":"-"},"content":"                .format(instant.atZone(timeZone));"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, ZoneId timeZone) {"},{"lineNumber":858,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(timeZone);"},{"lineNumber":859,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 23 \u0026\u0026 dateTime.getMinute() \u003d\u003d 59) {"},{"lineNumber":860,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":861,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":862,"author":{"gitId":"-"},"content":"        return DateTimeFormatter"},{"lineNumber":863,"author":{"gitId":"-"},"content":"                .ofPattern(\"HH:00\")"},{"lineNumber":864,"author":{"gitId":"-"},"content":"                .format(instant.atZone(timeZone)) + \"H\";"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":866,"author":{"gitId":"-"},"content":""},{"lineNumber":867,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":868,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor.findElement(By.tagName(\"editor\")), newInstructions);"},{"lineNumber":869,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":870,"author":{"gitId":"-"},"content":""},{"lineNumber":871,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, ZoneId timeZone) {"},{"lineNumber":872,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")), startTimeDropdown, startInstant, timeZone);"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":874,"author":{"gitId":"-"},"content":""},{"lineNumber":875,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, ZoneId timeZone) {"},{"lineNumber":876,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")), endTimeDropdown, endInstant, timeZone);"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":878,"author":{"gitId":"-"},"content":""},{"lineNumber":879,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, ZoneId timeZone) {"},{"lineNumber":880,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":881,"author":{"gitId":"daongochieu2810"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":883,"author":{"gitId":"-"},"content":""},{"lineNumber":884,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, ZoneId timeZone) {"},{"lineNumber":885,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":886,"author":{"gitId":"daongochieu2810"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":888,"author":{"gitId":"-"},"content":""},{"lineNumber":889,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, ZoneId timeZone) {"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":891,"author":{"gitId":"-"},"content":""},{"lineNumber":892,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":897,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":898,"author":{"gitId":"-"},"content":""},{"lineNumber":899,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":901,"author":{"gitId":"-"},"content":""},{"lineNumber":902,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":903,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":905,"author":{"gitId":"-"},"content":""},{"lineNumber":906,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":907,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":908,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":909,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":911,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":912,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":913,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":914,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":915,"author":{"gitId":"-"},"content":""},{"lineNumber":916,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":918,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":920,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":921,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":922,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":923,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":924,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":925,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":926,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":927,"author":{"gitId":"-"},"content":""},{"lineNumber":928,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":929,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":930,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":931,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":932,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":933,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":934,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":936,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":938,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":939,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":940,"author":{"gitId":"-"},"content":""},{"lineNumber":941,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":943,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":945,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":946,"author":{"gitId":"-"},"content":""},{"lineNumber":947,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":949,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":950,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":951,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":952,"author":{"gitId":"-"},"content":""},{"lineNumber":953,"author":{"gitId":"-"},"content":"    private int getNumQuestions() {"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).size();"},{"lineNumber":955,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"    private WebElement getQuestionForm(int questionNum) {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        return browser.driver.findElements(By.tagName(\"tm-question-edit-form\")).get(questionNum - 1);"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":960,"author":{"gitId":"-"},"content":""},{"lineNumber":961,"author":{"gitId":"-"},"content":"    private FeedbackQuestionType getQuestionType(int questionNum) {"},{"lineNumber":962,"author":{"gitId":"-"},"content":"        String questionDetails \u003d getQuestionForm(questionNum).findElement(By.id(\"question-header\")).getText();"},{"lineNumber":963,"author":{"gitId":"-"},"content":"        String questionType \u003d questionDetails.split(\" \\\\d+ \")[1].trim();"},{"lineNumber":964,"author":{"gitId":"-"},"content":""},{"lineNumber":965,"author":{"gitId":"-"},"content":"        switch (questionType) {"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        case \"Essay question\":"},{"lineNumber":967,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.TEXT;"},{"lineNumber":968,"author":{"gitId":"-"},"content":"        case \"Multiple-Choice (single answer) question\":"},{"lineNumber":969,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MCQ;"},{"lineNumber":970,"author":{"gitId":"-"},"content":"        case \"Multiple-choice (multiple answers) question\":"},{"lineNumber":971,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.MSQ;"},{"lineNumber":972,"author":{"gitId":"-"},"content":"        case \"Numerical Scale Question\":"},{"lineNumber":973,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.NUMSCALE;"},{"lineNumber":974,"author":{"gitId":"-"},"content":"        case \"Distribute points (among options) question\":"},{"lineNumber":975,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_OPTIONS;"},{"lineNumber":976,"author":{"gitId":"-"},"content":"        case \"Distribute points (among recipients) question\":"},{"lineNumber":977,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONSTSUM_RECIPIENTS;"},{"lineNumber":978,"author":{"gitId":"-"},"content":"        case \"Team contribution question\":"},{"lineNumber":979,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.CONTRIB;"},{"lineNumber":980,"author":{"gitId":"-"},"content":"        case \"Rubric question\":"},{"lineNumber":981,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RUBRIC;"},{"lineNumber":982,"author":{"gitId":"-"},"content":"        case \"Rank (options) question\":"},{"lineNumber":983,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_OPTIONS;"},{"lineNumber":984,"author":{"gitId":"-"},"content":"        case \"Rank (recipients) question\":"},{"lineNumber":985,"author":{"gitId":"-"},"content":"            return FeedbackQuestionType.RANK_RECIPIENTS;"},{"lineNumber":986,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":987,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Unknown FeedbackQuestionType\");"},{"lineNumber":988,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":989,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":990,"author":{"gitId":"-"},"content":""},{"lineNumber":991,"author":{"gitId":"-"},"content":"    private int getQuestionNumber(int questionNum) {"},{"lineNumber":992,"author":{"gitId":"-"},"content":"        return Integer.parseInt(getQuestionForm(questionNum).findElement(By.id(\"question-number\")).getText());"},{"lineNumber":993,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":994,"author":{"gitId":"-"},"content":""},{"lineNumber":995,"author":{"gitId":"-"},"content":"    private String getQuestionBrief(int questionNum) {"},{"lineNumber":996,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"question-brief\")).getAttribute(\"value\");"},{"lineNumber":997,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":998,"author":{"gitId":"-"},"content":""},{"lineNumber":999,"author":{"gitId":"-"},"content":"    private String getQuestionDescription(int questionNum) {"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"        return getEditorRichText(editor);"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1003,"author":{"gitId":"-"},"content":""},{"lineNumber":1004,"author":{"gitId":"-"},"content":"    private String getFeedbackGiver(int questionNum) {"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"        if (feedbackPath.equals(CUSTOM_FEEDBACK_PATH_OPTION)) {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum).findElement(By.id(\"giver-type\")));"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[0];"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1011,"author":{"gitId":"-"},"content":""},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    private String getFeedbackReceiver(int questionNum) {"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"        if (feedbackPath.equals(CUSTOM_FEEDBACK_PATH_OPTION)) {"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"            return getSelectedDropdownOptionText(getQuestionForm(questionNum).findElement(By.id(\"receiver-type\")));"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"        return feedbackPath.split(FEEDBACK_PATH_SEPARATOR)[1];"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1019,"author":{"gitId":"-"},"content":""},{"lineNumber":1020,"author":{"gitId":"-"},"content":"    private String getFeedbackPath(int questionNum) {"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        return questionForm.findElement(By.cssSelector(\"#btn-feedback-path span\")).getText();"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1024,"author":{"gitId":"-"},"content":""},{"lineNumber":1025,"author":{"gitId":"-"},"content":"    private void setQuestionBrief(int questionNum, String newBrief) {"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"        fillTextBox(getQuestionForm(questionNum).findElement(By.id(\"question-brief\")), newBrief);"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1028,"author":{"gitId":"-"},"content":""},{"lineNumber":1029,"author":{"gitId":"-"},"content":"    private void setQuestionDescription(int questionNum, String newDescription) {"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"        WebElement editor \u003d waitForElementPresence(By.cssSelector(\"#question-form-\" + questionNum + \" editor\"));"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(editor, newDescription);"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1033,"author":{"gitId":"-"},"content":""},{"lineNumber":1034,"author":{"gitId":"-"},"content":"    private void setFeedbackPath(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newGiver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"        FeedbackParticipantType newRecipient \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        String feedbackPath \u003d getFeedbackPath(questionNum);"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        if (!feedbackPath.equals(CUSTOM_FEEDBACK_PATH_OPTION)) {"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"            selectFeedbackPathDropdownOption(questionNum, CUSTOM_FEEDBACK_PATH_OPTION + \"...\");"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"        // Set to type STUDENT first to adjust NumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")),"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"                getDisplayGiverName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(FeedbackParticipantType.STUDENTS));"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        if (feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo() \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"unlimited-recipients\")));"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"            click(questionForm.findElement(By.id(\"custom-recipients\")));"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"            fillTextBox(questionForm.findElement(By.id(\"custom-recipients-number\")),"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"                    Integer.toString(feedbackQuestion.getNumberOfEntitiesToGiveFeedbackTo()));"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1054,"author":{"gitId":"-"},"content":""},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"giver-type\")), getDisplayGiverName(newGiver));"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(questionForm.findElement(By.id(\"receiver-type\")),"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"                getDisplayRecipientName(newRecipient));"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1059,"author":{"gitId":"-"},"content":""},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    private void selectFeedbackPathDropdownOption(int questionNum, String text) {"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        click(questionForm.findElement(By.id(\"btn-feedback-path\")));"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d questionForm.findElement(By.id(\"feedback-path-dropdown\"));"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1072,"author":{"gitId":"-"},"content":""},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    private void clickEditQuestionButton(int questionNum) {"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        click(getQuestionForm(questionNum).findElement(By.id(\"btn-edit-question\")));"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1076,"author":{"gitId":"-"},"content":""},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    private void clickSaveQuestionButton(int questionNum) {"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d getQuestionForm(questionNum).findElement(By.id(\"btn-save-question\"));"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        ThreadHelper.waitFor(1000);"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1082,"author":{"gitId":"-"},"content":""},{"lineNumber":1083,"author":{"gitId":"-"},"content":"    private void setQuestionVisibility(int questionNum, FeedbackQuestionAttributes feedbackQuestion) {"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"        String visibility \u003d questionForm.findElement(By.cssSelector(\"#btn-question-visibility span\")).getText();"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        if (!visibility.equals(CUSTOM_VISIBILITY_OPTION)) {"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"            selectVisibilityDropdownOption(questionNum, CUSTOM_VISIBILITY_OPTION + \"...\");"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1089,"author":{"gitId":"-"},"content":""},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giver \u003d feedbackQuestion.getGiverType();"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"        FeedbackParticipantType receiver \u003d feedbackQuestion.getRecipientType();"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"        WebElement customVisibilityTable \u003d questionForm.findElement(By.id(\"custom-visibility-table\"));"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowResponsesTo(), 1);"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowGiverNameTo(), 2);"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"        selectVisibilityBoxes(customVisibilityTable, giver, receiver, feedbackQuestion.getShowRecipientNameTo(), 3);"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1097,"author":{"gitId":"-"},"content":""},{"lineNumber":1098,"author":{"gitId":"-"},"content":"    private void selectVisibilityBoxes(WebElement table, FeedbackParticipantType giver,"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"                                       FeedbackParticipantType receiver, List\u003cFeedbackParticipantType\u003e participants,"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"                                       int colNum) {"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e possibleTypes \u003d new ArrayList(Arrays.asList(FeedbackParticipantType.RECEIVER,"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.OWN_TEAM_MEMBERS, FeedbackParticipantType.RECEIVER_TEAM_MEMBERS,"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"                FeedbackParticipantType.STUDENTS, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"        if (!giver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"        if (!receiver.equals(FeedbackParticipantType.STUDENTS)) {"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        if (receiver.equals(FeedbackParticipantType.NONE)"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.SELF)"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"                || receiver.equals(FeedbackParticipantType.OWN_TEAM)) {"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER);"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"            possibleTypes.remove(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS);"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1116,"author":{"gitId":"-"},"content":""},{"lineNumber":1117,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"        int index \u003d colNum - 1;"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"        for (FeedbackParticipantType participant : participants) {"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"            markOptionAsSelected(rows.get(possibleTypes.indexOf(participant)).findElements(By.tagName(\"input\")).get(index));"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1123,"author":{"gitId":"-"},"content":""},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    private void selectVisibilityDropdownOption(int questionNum, String text) {"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"        WebElement questionForm \u003d getQuestionForm(questionNum);"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"        click(questionForm.findElement(By.id(\"btn-question-visibility\")));"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"        WebElement dropdown \u003d questionForm.findElement(By.id(\"question-visibility-dropdown\"));"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d dropdown.findElements(By.className(\"dropdown-item\"));"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"            if (option.getText().equals(text)) {"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"                click(option);"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"                return;"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1136,"author":{"gitId":"-"},"content":""},{"lineNumber":1137,"author":{"gitId":"-"},"content":"    private void clickAndWaitForNewQuestion(WebElement button) {"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"        int newQuestionNum \u003d getNumQuestions() + 1;"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"        click(button);"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"question-form-\" + newQuestionNum));"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1142,"author":{"gitId":"-"},"content":""},{"lineNumber":1143,"author":{"gitId":"-"},"content":"    private void addNewQuestion(int optionNumber) {"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"        click(addNewQuestionButton);"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"        WebElement newQuestionDropdown \u003d waitForElementPresence(By.id(\"new-question-dropdown\"));"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"        WebElement optionButton \u003d newQuestionDropdown.findElements(By.tagName(\"button\")).get(optionNumber - 1);"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"        if (optionNumber \u003d\u003d 1) {"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"            click(optionButton);"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"            clickAndWaitForNewQuestion(optionButton);"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1153,"author":{"gitId":"-"},"content":""},{"lineNumber":1154,"author":{"gitId":"-"},"content":"    private void clickSaveNewQuestionButton() {"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"        WebElement saveButton \u003d browser.driver.findElement(By.id(\"btn-save-new\"));"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"        click(saveButton);"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"        waitForElementStaleness(saveButton);"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1159,"author":{"gitId":"-"},"content":""},{"lineNumber":1160,"author":{"gitId":"-"},"content":"    private WebElement getRecommendedTextLengthField(int questionNum) {"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"recommended-length\"));"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1163,"author":{"gitId":"-"},"content":""},{"lineNumber":1164,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsCheckbox(int questionNum) {"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-checkbox\"));"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1167,"author":{"gitId":"-"},"content":""},{"lineNumber":1168,"author":{"gitId":"-"},"content":"    private WebElement getGenerateOptionsDropdown(int questionNum) {"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"generate-dropdown\"));"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1171,"author":{"gitId":"-"},"content":""},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    private WebElement getWeightCheckbox(int questionNum) {"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"weights-checkbox\"));"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1175,"author":{"gitId":"-"},"content":""},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    private WebElement getOtherOptionCheckbox(int questionNum) {"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-checkbox\"));"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1179,"author":{"gitId":"-"},"content":""},{"lineNumber":1180,"author":{"gitId":"-"},"content":"    private String getGeneratedOptionString(FeedbackParticipantType type) {"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"        switch (type) {"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"            return \"students\";"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"        case STUDENTS_EXCLUDING_SELF:"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"            return \"students (excluding self)\";"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"            return \"teams\";"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"        case TEAMS_EXCLUDING_SELF:"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"            return \"teams (excluding own team)\";"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"            return \"instructors\";"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"            return \"unknown\";"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1196,"author":{"gitId":"-"},"content":""},{"lineNumber":1197,"author":{"gitId":"-"},"content":"    private String getDoubleString(Double value) {"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"        return value % 1 \u003d\u003d 0 ? Integer.toString(value.intValue()) : Double.toString(value);"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1200,"author":{"gitId":"-"},"content":""},{"lineNumber":1201,"author":{"gitId":"-"},"content":"    private WebElement getOptionsSection(int questionNum) {"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"options-section\"));"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1204,"author":{"gitId":"-"},"content":""},{"lineNumber":1205,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionInputs(int questionNum) {"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"input[type\u003d\u0027text\u0027]\"));"},{"lineNumber":1208,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1209,"author":{"gitId":"-"},"content":""},{"lineNumber":1210,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getOptionWeightInputs(int questionNum) {"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"        WebElement optionsSection \u003d getOptionsSection(questionNum);"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"        return optionsSection.findElements(By.cssSelector(\"tm-weight-field input\"));"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1214,"author":{"gitId":"-"},"content":""},{"lineNumber":1215,"author":{"gitId":"-"},"content":"    private WebElement getOtherWeightInput(int questionNum) {"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"other-weight\"));"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1218,"author":{"gitId":"-"},"content":""},{"lineNumber":1219,"author":{"gitId":"-"},"content":"    private boolean verifyGeneratedOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"            assertTrue(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"            assertEquals(getSelectedDropdownOptionText(getGenerateOptionsDropdown(questionNum)),"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1226,"author":{"gitId":"-"},"content":"        assertFalse(getGenerateOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1229,"author":{"gitId":"-"},"content":""},{"lineNumber":1230,"author":{"gitId":"-"},"content":"    private void verifyOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"            assertEquals(options.get(i), inputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1236,"author":{"gitId":"-"},"content":""},{"lineNumber":1237,"author":{"gitId":"-"},"content":"    private void verifyOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"            assertTrue(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weights.get(i)), weightInputs.get(i).getAttribute(\"value\"));"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"            assertFalse(getWeightCheckbox(questionNum).isSelected());"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1248,"author":{"gitId":"-"},"content":""},{"lineNumber":1249,"author":{"gitId":"-"},"content":"    private void verifyOtherOption(int questionNum, boolean hasOther, Double weight) {"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"            assertTrue(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"            if (weight \u003e 0) {"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"                String otherWeight \u003d getOtherWeightInput(questionNum).getAttribute(\"value\");"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"                assertEquals(getDoubleString(weight), otherWeight);"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"            assertFalse(getOtherOptionCheckbox(questionNum).isSelected());"},{"lineNumber":1258,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1260,"author":{"gitId":"-"},"content":""},{"lineNumber":1261,"author":{"gitId":"-"},"content":"    private void inputMcqDetails(int questionNum, FeedbackMcqQuestionDetails questionDetails) {"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1265,"author":{"gitId":"-"},"content":""},{"lineNumber":1266,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMcqChoices());"},{"lineNumber":1267,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.hasAssignedWeights(), questionDetails.getMcqWeights());"},{"lineNumber":1268,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMcqOtherWeight());"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1270,"author":{"gitId":"-"},"content":""},{"lineNumber":1271,"author":{"gitId":"-"},"content":"    private boolean inputGenerateOptions(int questionNum, FeedbackParticipantType participantType) {"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"        if (!participantType.equals(FeedbackParticipantType.NONE)) {"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getGenerateOptionsDropdown(questionNum),"},{"lineNumber":1275,"author":{"gitId":"-"},"content":"                    getGeneratedOptionString(participantType));"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"            clickSaveQuestionButton(questionNum);"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"        markOptionAsUnselected(getGenerateOptionsCheckbox(questionNum));"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1282,"author":{"gitId":"-"},"content":""},{"lineNumber":1283,"author":{"gitId":"-"},"content":"    private void inputOptions(int questionNum, List\u003cString\u003e options) {"},{"lineNumber":1284,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1285,"author":{"gitId":"-"},"content":"        int numInputsNeeded \u003d options.size() - inputs.size();"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003e 0) {"},{"lineNumber":1287,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numInputsNeeded; i++) {"},{"lineNumber":1288,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-option\")));"},{"lineNumber":1289,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"        if (numInputsNeeded \u003c 0) {"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numInputsNeeded; i++) {"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"                click(getOptionsSection(questionNum).findElement(By.tagName(\"button\")));"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"            inputs \u003d getOptionInputs(questionNum);"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1298,"author":{"gitId":"-"},"content":""},{"lineNumber":1299,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c options.size(); i++) {"},{"lineNumber":1300,"author":{"gitId":"-"},"content":"            fillTextBox(inputs.get(i), options.get(i));"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1303,"author":{"gitId":"-"},"content":""},{"lineNumber":1304,"author":{"gitId":"-"},"content":"    private void inputOptionWeights(int questionNum, boolean hasWeights, List\u003cDouble\u003e weights) {"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"        if (hasWeights) {"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e weightInputs \u003d getOptionWeightInputs(questionNum);"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c weights.size(); i++) {"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"                fillTextBox(weightInputs.get(i), getDoubleString(weights.get(i)));"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1315,"author":{"gitId":"-"},"content":""},{"lineNumber":1316,"author":{"gitId":"-"},"content":"    private void inputOtherChoice(int questionNum, boolean hasOther, Double otherWeight) {"},{"lineNumber":1317,"author":{"gitId":"-"},"content":"        if (hasOther) {"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1319,"author":{"gitId":"-"},"content":"            if (otherWeight \u003e 0) {"},{"lineNumber":1320,"author":{"gitId":"-"},"content":"                fillTextBox(getOtherWeightInput(questionNum), getDoubleString(otherWeight));"},{"lineNumber":1321,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1322,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1323,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getOtherOptionCheckbox(questionNum));"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1326,"author":{"gitId":"-"},"content":""},{"lineNumber":1327,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsCheckbox(int questionNum) {"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options-checkbox\"));"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1330,"author":{"gitId":"-"},"content":""},{"lineNumber":1331,"author":{"gitId":"-"},"content":"    private WebElement getMaxOptionsInput(int questionNum) {"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-options\"));"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1334,"author":{"gitId":"-"},"content":""},{"lineNumber":1335,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsCheckbox(int questionNum) {"},{"lineNumber":1336,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options-checkbox\"));"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1338,"author":{"gitId":"-"},"content":""},{"lineNumber":1339,"author":{"gitId":"-"},"content":"    private WebElement getMinOptionsInput(int questionNum) {"},{"lineNumber":1340,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-options\"));"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1342,"author":{"gitId":"-"},"content":""},{"lineNumber":1343,"author":{"gitId":"-"},"content":"    private void verifyMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"            assertFalse(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"            assertTrue(getMaxOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"            assertEquals(getMaxOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"                    Integer.toString(maxOptions));"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1351,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1352,"author":{"gitId":"-"},"content":""},{"lineNumber":1353,"author":{"gitId":"-"},"content":"    private void verifyMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"            assertFalse(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"            assertTrue(getMinOptionsCheckbox(questionNum).isSelected());"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"            assertEquals(getMinOptionsInput(questionNum).getAttribute(\"value\"),"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"                    Integer.toString(minOptions));"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1362,"author":{"gitId":"-"},"content":""},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    private void inputMsqDetails(int questionNum, FeedbackMsqQuestionDetails questionDetails) {"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"        if (inputGenerateOptions(questionNum, questionDetails.getGenerateOptionsFor())) {"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1367,"author":{"gitId":"-"},"content":""},{"lineNumber":1368,"author":{"gitId":"-"},"content":"        inputOptions(questionNum, questionDetails.getMsqChoices());"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"        inputOptionWeights(questionNum, questionDetails.hasAssignedWeights(), questionDetails.getMsqWeights());"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"        inputOtherChoice(questionNum, questionDetails.isOtherEnabled(), questionDetails.getMsqOtherWeight());"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxSelectableChoices());"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinSelectableChoices());"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1374,"author":{"gitId":"-"},"content":""},{"lineNumber":1375,"author":{"gitId":"-"},"content":"    private void inputMaxOptions(int questionNum, int maxOptions) {"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"        if (maxOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1377,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1378,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMaxOptionsCheckbox(questionNum));"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"            fillTextBox(getMaxOptionsInput(questionNum), Integer.toString(maxOptions));"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1383,"author":{"gitId":"-"},"content":""},{"lineNumber":1384,"author":{"gitId":"-"},"content":"    private void inputMinOptions(int questionNum, int minOptions) {"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"        if (minOptions \u003d\u003d Const.POINTS_NO_VALUE) {"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1388,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getMinOptionsCheckbox(questionNum));"},{"lineNumber":1389,"author":{"gitId":"-"},"content":"            fillTextBox(getMinOptionsInput(questionNum), Integer.toString(minOptions));"},{"lineNumber":1390,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1392,"author":{"gitId":"-"},"content":""},{"lineNumber":1393,"author":{"gitId":"-"},"content":"    private WebElement getMinNumscaleInput(int questionNum) {"},{"lineNumber":1394,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"min-value\"));"},{"lineNumber":1395,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1396,"author":{"gitId":"-"},"content":""},{"lineNumber":1397,"author":{"gitId":"-"},"content":"    private WebElement getMaxNumscaleInput(int questionNum) {"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"max-value\"));"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1400,"author":{"gitId":"-"},"content":""},{"lineNumber":1401,"author":{"gitId":"-"},"content":"    private WebElement getNumScaleIncrementInput(int questionNum) {"},{"lineNumber":1402,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"increment-value\"));"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1404,"author":{"gitId":"-"},"content":""},{"lineNumber":1405,"author":{"gitId":"-"},"content":"    private void inputNumScaleDetails(int questionNum, FeedbackNumericalScaleQuestionDetails questionDetails) {"},{"lineNumber":1406,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMinNumscaleInput(questionNum), Integer.toString(questionDetails.getMinScale()));"},{"lineNumber":1407,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getNumScaleIncrementInput(questionNum), getDoubleString(questionDetails.getStep()));"},{"lineNumber":1408,"author":{"gitId":"-"},"content":"        inputNumScaleValue(getMaxNumscaleInput(questionNum), Integer.toString(questionDetails.getMaxScale()));"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1410,"author":{"gitId":"-"},"content":""},{"lineNumber":1411,"author":{"gitId":"-"},"content":"    private void inputNumScaleValue(WebElement input, String value) {"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"        input.clear();"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"        input.sendKeys(value);"},{"lineNumber":1414,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1415,"author":{"gitId":"-"},"content":""},{"lineNumber":1416,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsRadioBtn(int questionNum) {"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points-radio\"));"},{"lineNumber":1418,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1419,"author":{"gitId":"-"},"content":""},{"lineNumber":1420,"author":{"gitId":"-"},"content":"    private WebElement getConstSumTotalPointsInput(int questionNum) {"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"total-points\"));"},{"lineNumber":1422,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1423,"author":{"gitId":"-"},"content":""},{"lineNumber":1424,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsRadioBtn(int questionNum) {"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points-radio\"));"},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1427,"author":{"gitId":"-"},"content":""},{"lineNumber":1428,"author":{"gitId":"-"},"content":"    private WebElement getConstSumPerOptionPointsInput(int questionNum) {"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"per-option-points\"));"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1431,"author":{"gitId":"-"},"content":""},{"lineNumber":1432,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionCheckbox(int questionNum) {"},{"lineNumber":1433,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-checkbox\"));"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1435,"author":{"gitId":"-"},"content":""},{"lineNumber":1436,"author":{"gitId":"-"},"content":"    private WebElement getConstSumUnevenDistributionDropdown(int questionNum) {"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"uneven-distribution-dropdown\"));"},{"lineNumber":1438,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1439,"author":{"gitId":"-"},"content":""},{"lineNumber":1440,"author":{"gitId":"-"},"content":"    private void inputConstSumDetails(int questionNum, FeedbackConstantSumQuestionDetails questionDetails) {"},{"lineNumber":1441,"author":{"gitId":"-"},"content":"        if (!questionDetails.isDistributeToRecipients()) {"},{"lineNumber":1442,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, questionDetails.getConstSumOptions());"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1444,"author":{"gitId":"-"},"content":"        if (questionDetails.isPointsPerOption()) {"},{"lineNumber":1445,"author":{"gitId":"-"},"content":"            click(getConstSumPerOptionPointsRadioBtn(questionNum));"},{"lineNumber":1446,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumPerOptionPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"            click(getConstSumTotalPointsRadioBtn(questionNum));"},{"lineNumber":1449,"author":{"gitId":"-"},"content":"            fillTextBox(getConstSumTotalPointsInput(questionNum), Integer.toString(questionDetails.getPoints()));"},{"lineNumber":1450,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1451,"author":{"gitId":"-"},"content":"        String distributeFor \u003d questionDetails.getDistributePointsFor();"},{"lineNumber":1452,"author":{"gitId":"-"},"content":"        if (questionDetails.isForceUnevenDistribution()) {"},{"lineNumber":1453,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1454,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(getConstSumUnevenDistributionDropdown(questionNum),"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"                    \"All options\".equals(distributeFor) ? \"Every option\" : distributeFor);"},{"lineNumber":1456,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1457,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getConstSumUnevenDistributionCheckbox(questionNum));"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1460,"author":{"gitId":"-"},"content":""},{"lineNumber":1461,"author":{"gitId":"-"},"content":"    private WebElement getAllowNotSureContributionCheckbox(int questionNum) {"},{"lineNumber":1462,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"not-sure-checkbox\"));"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1464,"author":{"gitId":"-"},"content":""},{"lineNumber":1465,"author":{"gitId":"-"},"content":"    private void inputContributionDetails(int questionNum, FeedbackContributionQuestionDetails questionDetails) {"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"        if (questionDetails.isNotSureAllowed()) {"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1468,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1469,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowNotSureContributionCheckbox(questionNum));"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1472,"author":{"gitId":"-"},"content":""},{"lineNumber":1473,"author":{"gitId":"-"},"content":"    private WebElement getRubricRow(int questionNum, int rowNumber) {"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"tm-rubric-question-edit-details-form tr\"))"},{"lineNumber":1475,"author":{"gitId":"-"},"content":"                .get(rowNumber - 1);"},{"lineNumber":1476,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1477,"author":{"gitId":"-"},"content":""},{"lineNumber":1478,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricChoiceInputs(int questionNum) {"},{"lineNumber":1479,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"input\"));"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1481,"author":{"gitId":"-"},"content":""},{"lineNumber":1482,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricTextareas(int questionNum, int rowNum) {"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"textarea\"));"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1485,"author":{"gitId":"-"},"content":""},{"lineNumber":1486,"author":{"gitId":"-"},"content":"    private List\u003cWebElement\u003e getRubricWeights(int questionNum, int rowNum) {"},{"lineNumber":1487,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElements(By.tagName(\"input\"));"},{"lineNumber":1488,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1489,"author":{"gitId":"-"},"content":""},{"lineNumber":1490,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteSubQnBtn(int questionNum, int rowNum) {"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, rowNum).findElement(By.id(\"btn-delete-subquestion\"));"},{"lineNumber":1492,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1493,"author":{"gitId":"-"},"content":""},{"lineNumber":1494,"author":{"gitId":"-"},"content":"    private WebElement getRubricDeleteChoiceBtn(int questionNum, int colNum) {"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, getNumRubricRows(questionNum)).findElements(By.id(\"btn-delete-choice\")).get(colNum);"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1497,"author":{"gitId":"-"},"content":""},{"lineNumber":1498,"author":{"gitId":"-"},"content":"    private int getNumRubricRows(int questionNum) {"},{"lineNumber":1499,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElements(By.cssSelector(\"#rubric-table tr\")).size();"},{"lineNumber":1500,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1501,"author":{"gitId":"-"},"content":""},{"lineNumber":1502,"author":{"gitId":"-"},"content":"    private int getNumRubricCols(int questionNum) {"},{"lineNumber":1503,"author":{"gitId":"-"},"content":"        return getRubricRow(questionNum, 1).findElements(By.tagName(\"td\")).size();"},{"lineNumber":1504,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1505,"author":{"gitId":"-"},"content":""},{"lineNumber":1506,"author":{"gitId":"-"},"content":"    private void inputRubricDetails(int questionNum, FeedbackRubricQuestionDetails questionDetails) {"},{"lineNumber":1507,"author":{"gitId":"-"},"content":"        int numSubQn \u003d questionDetails.getNumOfRubricSubQuestions();"},{"lineNumber":1508,"author":{"gitId":"-"},"content":"        int numChoices \u003d questionDetails.getNumOfRubricChoices();"},{"lineNumber":1509,"author":{"gitId":"-"},"content":"        adjustNumRubricFields(questionNum, numSubQn, numChoices);"},{"lineNumber":1510,"author":{"gitId":"-"},"content":""},{"lineNumber":1511,"author":{"gitId":"-"},"content":"        List\u003cString\u003e choices \u003d questionDetails.getRubricChoices();"},{"lineNumber":1512,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numChoices; i++) {"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"            fillTextBox(getRubricChoiceInputs(questionNum).get(i), choices.get(i));"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1515,"author":{"gitId":"-"},"content":""},{"lineNumber":1516,"author":{"gitId":"-"},"content":"        List\u003cString\u003e subQuestions \u003d questionDetails.getRubricSubQuestions();"},{"lineNumber":1517,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e descriptions \u003d questionDetails.getRubricDescriptions();"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1519,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e textAreas \u003d getRubricTextareas(questionNum, i + 2);"},{"lineNumber":1520,"author":{"gitId":"-"},"content":"            fillTextBox(textAreas.get(0), subQuestions.get(i));"},{"lineNumber":1521,"author":{"gitId":"-"},"content":"            for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"                fillTextBox(textAreas.get(j + 1), descriptions.get(i).get(j));"},{"lineNumber":1523,"author":{"gitId":"-"},"content":"                if (descriptions.get(i).get(j).isEmpty()) {"},{"lineNumber":1524,"author":{"gitId":"-"},"content":"                    // using clear does not send the required event"},{"lineNumber":1525,"author":{"gitId":"-"},"content":"                    // as a workaround, after clearing without event, enter a random character and delete it"},{"lineNumber":1526,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(\"a\");"},{"lineNumber":1527,"author":{"gitId":"-"},"content":"                    textAreas.get(j + 1).sendKeys(Keys.BACK_SPACE);"},{"lineNumber":1528,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1529,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1531,"author":{"gitId":"-"},"content":""},{"lineNumber":1532,"author":{"gitId":"-"},"content":"        if (questionDetails.hasAssignedWeights()) {"},{"lineNumber":1533,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getWeightCheckbox(questionNum));"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"            List\u003cList\u003cDouble\u003e\u003e weights \u003d questionDetails.getRubricWeights();"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQn; i++) {"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"                for (int j \u003d 0; j \u003c numChoices; j++) {"},{"lineNumber":1537,"author":{"gitId":"-"},"content":"                    fillTextBox(getRubricWeights(questionNum, i + 2).get(j), getDoubleString(weights.get(i).get(j)));"},{"lineNumber":1538,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":1539,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getWeightCheckbox(questionNum));"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1543,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1544,"author":{"gitId":"-"},"content":""},{"lineNumber":1545,"author":{"gitId":"-"},"content":"    private void adjustNumRubricFields(int questionNum, int numSubQn, int numChoices) {"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"        int numSubQnsNeeded \u003d numSubQn - (getNumRubricRows(questionNum) - 2);"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"        int numChoicesNeeded \u003d numChoices - (getNumRubricCols(questionNum) - 1);"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003e 0) {"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numSubQnsNeeded; i++) {"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-row\")));"},{"lineNumber":1551,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1552,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1553,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003e 0) {"},{"lineNumber":1554,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c numChoicesNeeded; i++) {"},{"lineNumber":1555,"author":{"gitId":"-"},"content":"                click(getQuestionForm(questionNum).findElement(By.id(\"btn-add-col\")));"},{"lineNumber":1556,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1557,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1558,"author":{"gitId":"-"},"content":"        if (numSubQnsNeeded \u003c 0) {"},{"lineNumber":1559,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numSubQnsNeeded; i++) {"},{"lineNumber":1560,"author":{"gitId":"-"},"content":"                click(getRubricDeleteSubQnBtn(questionNum, 2));"},{"lineNumber":1561,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1562,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1563,"author":{"gitId":"-"},"content":"        if (numChoicesNeeded \u003c 0) {"},{"lineNumber":1564,"author":{"gitId":"-"},"content":"            for (int i \u003d 0; i \u003c -numChoicesNeeded; i++) {"},{"lineNumber":1565,"author":{"gitId":"-"},"content":"                clickAndConfirm(getRubricDeleteChoiceBtn(questionNum, 2));"},{"lineNumber":1566,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":1567,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1568,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1569,"author":{"gitId":"-"},"content":""},{"lineNumber":1570,"author":{"gitId":"-"},"content":"    private WebElement getAllowDuplicateRankCheckbox(int questionNum) {"},{"lineNumber":1571,"author":{"gitId":"-"},"content":"        return getQuestionForm(questionNum).findElement(By.id(\"duplicate-rank-checkbox\"));"},{"lineNumber":1572,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1573,"author":{"gitId":"-"},"content":""},{"lineNumber":1574,"author":{"gitId":"-"},"content":"    private void inputRankDetails(int questionNum, FeedbackRankQuestionDetails questionDetails) {"},{"lineNumber":1575,"author":{"gitId":"-"},"content":"        if (questionDetails instanceof FeedbackRankOptionsQuestionDetails) {"},{"lineNumber":1576,"author":{"gitId":"-"},"content":"            FeedbackRankOptionsQuestionDetails optionDetails \u003d (FeedbackRankOptionsQuestionDetails) questionDetails;"},{"lineNumber":1577,"author":{"gitId":"-"},"content":"            inputOptions(questionNum, optionDetails.getOptions());"},{"lineNumber":1578,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1579,"author":{"gitId":"-"},"content":"        if (questionDetails.areDuplicatesAllowed()) {"},{"lineNumber":1580,"author":{"gitId":"-"},"content":"            markOptionAsSelected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1581,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":1582,"author":{"gitId":"-"},"content":"            markOptionAsUnselected(getAllowDuplicateRankCheckbox(questionNum));"},{"lineNumber":1583,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":1584,"author":{"gitId":"-"},"content":"        inputMaxOptions(questionNum, questionDetails.getMaxOptionsToBeRanked());"},{"lineNumber":1585,"author":{"gitId":"-"},"content":"        inputMinOptions(questionNum, questionDetails.getMinOptionsToBeRanked());"},{"lineNumber":1586,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1587,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":11,"-":1576}},{"path":"src/e2e/java/teammates/e2e/pageobjects/InstructorFeedbackSessionsPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.e2e.pageobjects;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.openqa.selenium.By;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.openqa.selenium.WebElement;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.openqa.selenium.support.FindBy;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the \"Sessions\" page for Instructors."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class InstructorFeedbackSessionsPage extends AppPage {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-add-session\")"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private WebElement addSessionButton;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-type\")"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private WebElement sessionTypeDropdown;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-course-id\")"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private WebElement courseIdDropdown;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"add-session-name\")"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private WebElement sessionNameTextBox;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"instructions\")"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private WebElement instructionsEditor;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-date\")"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private WebElement startDateBox;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-start-time\")"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private WebElement startTimeDropdown;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-date\")"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private WebElement endDateBox;"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"submission-end-time\")"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private WebElement endTimeDropdown;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"grace-period\")"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private WebElement gracePeriodDropdown;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-visibility\")"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private WebElement changeVisibilityButton;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-custom\")"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private WebElement customSessionVisibleTimeButton;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-date\")"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityDateBox;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-time\")"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private WebElement sessionVisibilityTimeDropdown;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"session-visibility-at-open\")"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private WebElement openSessionVisibleTimeButton;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-custom\")"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private WebElement customResponseVisibleTimeButton;"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-date\")"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityDateBox;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-time\")"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private WebElement responseVisibilityTimeDropdown;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-immediately\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private WebElement immediateResponseVisibleTimeButton;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"response-visibility-manually\")"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private WebElement manualResponseVisibleTimeButton;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-change-email\")"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private WebElement changeEmailButton;"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-opening\")"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private WebElement openingSessionEmailCheckbox;"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-closing\")"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private WebElement closingSessionEmailCheckbox;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"email-published\")"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private WebElement publishedSessionEmailCheckbox;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-create-session\")"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private WebElement createSessionButton;"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"sessions-table\")"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private WebElement sessionsTable;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-heading\")"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private WebElement deleteTableHeading;"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-restore-all\")"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private WebElement restoreAllButton;"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"btn-delete-all\")"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private WebElement deleteAllButton;"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FindBy(id \u003d \"deleted-sessions-table\")"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private WebElement deletedSessionsTable;"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public InstructorFeedbackSessionsPage(Browser browser) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        super(browser);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    protected boolean containsExpectedPageContents() {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return getPageTitle().contains(\"Feedback Sessions\");"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void verifySessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSessionDetails(sessions[i]);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(sessionsTable, expectedValues);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void verifySessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String[] expectedValues \u003d getSessionDetails(session);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        verifyTableRowValues(sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId), expectedValues);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void verifySoftDeletedSessionsTable(FeedbackSessionAttributes[] sessions) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String[][] expectedValues \u003d new String[sessions.length][4];"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c sessions.length; i++) {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            expectedValues[i] \u003d getSoftDeletedSessionDetails(sessions[i]);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        verifyTableBodyValues(deletedSessionsTable, expectedValues);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void verifyNumSoftDeleted(int expected) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(getNumSoftDeletedFeedbackSessions(), expected);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void verifyResponseRate(FeedbackSessionAttributes session, String expectedResponseRate) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedResponseRate, getResponseRate(rowId));"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void addFeedbackSession(FeedbackSessionAttributes newSession, boolean isUsingTemplate) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.cssSelector(\"#instructions iframe\"));"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (isUsingTemplate) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session using template: team peer evaluation\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            selectDropdownOptionByText(sessionTypeDropdown, \"session with my own questions\");"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, newSession.getCourseId());"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        fillTextBox(sessionNameTextBox, newSession.getFeedbackSessionName());"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        setInstructions(newSession.getInstructions());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        setSessionStartDateTime(newSession.getStartTime(), newSession.getTimeZone());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        setSessionEndDateTime(newSession.getEndTime(), newSession.getTimeZone());"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        selectGracePeriod(newSession.getGracePeriodMinutes());"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        setVisibilitySettings(newSession);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        setEmailSettings(newSession);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        clickCreateSessionButton();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void addCopyOfSession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                                 String newSessionName) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        clickAddSessionButton();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-session\")));"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        selectCourseToCopy(copyToCourse.getId());"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        fillTextBox(browser.driver.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        selectSessionToCopy(sessionToCopy.getCourseId(), sessionToCopy.getFeedbackSessionName());"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        clickConfirmCopySessionButton();"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        waitForSessionEditPage();"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void copySession(FeedbackSessionAttributes sessionToCopy, CourseAttributes copyToCourse,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                            String newSessionName) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String copyFromCourse \u003d sessionToCopy.getCourseId();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String sessionName \u003d sessionToCopy.getFeedbackSessionName();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        WebElement copyFsModal \u003d clickCopyButtonInTable(copyFromCourse, sessionName);"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        fillTextBox(copyFsModal.findElement(By.id(\"copy-session-name\")), newSessionName);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        selectCourseToCopyToInModal(copyFsModal, copyToCourse.getId());"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy-course\")));"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void moveToRecycleBin(FeedbackSessionAttributes sessionToDelete) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToDelete.getCourseId(), sessionToDelete.getFeedbackSessionName());"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-soft-delete-\" + rowId)));"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void restoreSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-restore-\" + rowId)));"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void deleteSession(FeedbackSessionAttributes sessionToRestore) {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        showDeleteTable();"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        int rowId \u003d getSoftDeletedFeedbackSessionRowId(sessionToRestore.getCourseId(),"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                sessionToRestore.getFeedbackSessionName());"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        clickAndConfirm(browser.driver.findElement(By.id(\"btn-delete-\" + rowId)));"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void restoreAllSessions() {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        click(restoreAllButton);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void deleteAllSessions() {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        clickAndConfirm(deleteAllButton);"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        waitUntilAnimationFinish();"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void showDeleteTable() {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        if (!isElementVisible(By.id(\"sort-deleted-course-id\"))) {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            click(deleteTableHeading);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            waitUntilAnimationFinish();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public void sendReminderEmail(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-remind-\" + rowId)));"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.email);"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-send-reminder\")));"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void resendResultsLink(FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-resend-\" + rowId)));"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        selectStudentToEmail(student.email);"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-resend-results\")));"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"-"},"content":""},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void publishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-publish-\" + rowId)));"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void unpublishSessionResults(FeedbackSessionAttributes sessionToPublish) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(sessionToPublish.getCourseId(), sessionToPublish.getFeedbackSessionName());"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        clickAndConfirm(waitForElementPresence(By.id(\"btn-unpublish-\" + rowId)));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public void downloadResults(FeedbackSessionAttributes session) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(session.getCourseId(), session.getFeedbackSessionName());"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-results-\" + rowId)));"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"btn-download-\" + rowId)));"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"    public void sortBySessionsName() {"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-session-name\")));"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"    public void sortByCourseId() {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        click(waitForElementPresence(By.id(\"sort-course-id\")));"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"    private String[] getSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (session.isClosed()) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Closed\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        } else if (session.isVisible() \u0026\u0026 (session.isOpened() || session.isInGracePeriod())) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Open\";"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            details[2] \u003d \"Awaiting\";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        details[3] \u003d session.isPublished() ? \"Published\" : \"Not Published\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"-"},"content":"    private String[] getSoftDeletedSessionDetails(FeedbackSessionAttributes session) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        String[] details \u003d new String[4];"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        details[0] \u003d session.getCourseId();"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        details[1] \u003d session.getFeedbackSessionName();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        details[2] \u003d getSimpleDateString(session.getCreatedTime(), session.getTimeZone());"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        details[3] \u003d getSimpleDateString(session.getDeletedTime(), session.getTimeZone());"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        return details;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"    private String getDateString(Instant instant, ZoneId timeZone) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        return DateTimeFormatter"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .ofPattern(\"EE, dd MMM, yyyy\")"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                .format(instant.atZone(timeZone));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"    private String getSimpleDateString(Instant instant, ZoneId timeZone) {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        return DateTimeFormatter"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .ofPattern(\"dd MMM, yyyy\")"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                .format(instant.atZone(timeZone));"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"    private String getTimeString(Instant instant, ZoneId timeZone) {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        ZonedDateTime dateTime \u003d instant.atZone(timeZone);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        if (dateTime.getHour() \u003d\u003d 23 \u0026\u0026 dateTime.getMinute() \u003d\u003d 59) {"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            return \"23:59H\";"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        return DateTimeFormatter"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                .ofPattern(\"HH:00\")"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                .format(instant.atZone(timeZone)) + \"H\";"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"    private String getResponseRate(int rowId) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        By showButtonId \u003d By.id(\"show-response-rate-\" + rowId);"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        if (isElementPresent(showButtonId)) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"            click(showButtonId);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"response-rate-\" + rowId)).getText();"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    private void clickAddSessionButton() {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        click(addSessionButton);"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    private void setInstructions(String newInstructions) {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        writeToRichTextEditor(instructionsEditor, newInstructions);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"    private void setSessionStartDateTime(Instant startInstant, ZoneId timeZone) {"},{"lineNumber":350,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(startDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":351,"author":{"gitId":"daongochieu2810"},"content":"                startTimeDropdown, startInstant, timeZone);"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    private void setSessionEndDateTime(Instant endInstant, ZoneId timeZone) {"},{"lineNumber":355,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(endDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":356,"author":{"gitId":"daongochieu2810"},"content":"                endTimeDropdown, endInstant, timeZone);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":"    private void setVisibilityDateTime(Instant startInstant, ZoneId timeZone) {"},{"lineNumber":360,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(sessionVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":361,"author":{"gitId":"daongochieu2810"},"content":"                sessionVisibilityTimeDropdown, startInstant, timeZone);"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"    private void setResponseDateTime(Instant endInstant, ZoneId timeZone) {"},{"lineNumber":365,"author":{"gitId":"daongochieu2810"},"content":"        setDateTime(responseVisibilityDateBox.findElement(By.tagName(\"input\")),"},{"lineNumber":366,"author":{"gitId":"daongochieu2810"},"content":"                responseVisibilityTimeDropdown, endInstant, timeZone);"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"    private void setDateTime(WebElement dateBox, WebElement timeBox, Instant startInstant, ZoneId timeZone) {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"        fillTextBox(dateBox, getDateString(startInstant, timeZone));"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(timeBox.findElement(By.tagName(\"select\")), getTimeString(startInstant, timeZone));"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"    private void selectGracePeriod(long gracePeriodMinutes) {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(gracePeriodDropdown, gracePeriodMinutes + \" min\");"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":378,"author":{"gitId":"-"},"content":""},{"lineNumber":379,"author":{"gitId":"-"},"content":"    private void setVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        showVisibilitySettings();"},{"lineNumber":381,"author":{"gitId":"-"},"content":""},{"lineNumber":382,"author":{"gitId":"-"},"content":"        setSessionVisibilitySettings(newFeedbackSession);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        setResponseVisibilitySettings(newFeedbackSession);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"    private void setSessionVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        Instant sessionDateTime \u003d newFeedbackSession.getSessionVisibleFromTime();"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        if (sessionDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)) {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"            click(openSessionVisibleTimeButton);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"            click(customSessionVisibleTimeButton);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            setVisibilityDateTime(sessionDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"    private void setResponseVisibilitySettings(FeedbackSessionAttributes newFeedbackSession) {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        Instant responseDateTime \u003d newFeedbackSession.getResultsVisibleFromTime();"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        if (responseDateTime.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            click(immediateResponseVisibleTimeButton);"},{"lineNumber":400,"author":{"gitId":"-"},"content":"        } else if (responseDateTime.equals(Const.TIME_REPRESENTS_LATER)) {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            click(manualResponseVisibleTimeButton);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            click(customResponseVisibleTimeButton);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            setResponseDateTime(responseDateTime, newFeedbackSession.getTimeZone());"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"-"},"content":""},{"lineNumber":408,"author":{"gitId":"-"},"content":"    private void setEmailSettings(FeedbackSessionAttributes newFeedbackSessionDetails) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"        showEmailSettings();"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isOpeningEmailEnabled() !\u003d openingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            click(openingSessionEmailCheckbox);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isClosingEmailEnabled() !\u003d closingSessionEmailCheckbox.isSelected()) {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            click(closingSessionEmailCheckbox);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        if (newFeedbackSessionDetails.isPublishedEmailEnabled() !\u003d publishedSessionEmailCheckbox.isSelected()) {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            click(publishedSessionEmailCheckbox);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"    private void showVisibilitySettings() {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-visibility\"))) {"},{"lineNumber":423,"author":{"gitId":"-"},"content":"            click(changeVisibilityButton);"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    private void showEmailSettings() {"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        if (isElementPresent(By.id(\"btn-change-email\"))) {"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            click(changeEmailButton);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"    private void clickCreateSessionButton() {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        click(createSessionButton);"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"    private void selectCourseToCopy(String courseToCopyId) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        WebElement courseIdDropdown \u003d waitForElementPresence(By.id(\"copy-course-id\"));"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        selectDropdownOptionByText(courseIdDropdown, courseToCopyId);"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"    private void selectSessionToCopy(String copyFromCourse, String sessionNameToCopy) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"        WebElement table \u003d browser.driver.findElement(By.id(\"copy-selection-table\"));"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d table.findElements(By.tagName(\"tr\"));"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.tagName(\"td\"));"},{"lineNumber":448,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            if (cells.get(1).getText().equals(copyFromCourse) \u0026\u0026 cells.get(2).getText().equals(sessionNameToCopy)) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"    private void clickConfirmCopySessionButton() {"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-confirm-copy\")));"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":461,"author":{"gitId":"-"},"content":""},{"lineNumber":462,"author":{"gitId":"-"},"content":"    private WebElement clickCopyButtonInTable(String courseId, String sessionName) {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"        int rowId \u003d getFeedbackSessionRowId(courseId, sessionName);"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        click(browser.driver.findElement(By.id(\"btn-copy-\" + rowId)));"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        return waitForElementPresence(By.id(\"copy-course-modal\"));"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"    private void selectCourseToCopyToInModal(WebElement copyFsModal, String courseToCopyId) {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e options \u003d copyFsModal.findElements(By.className(\"form-check\"));"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        for (WebElement option : options) {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"            String courseId \u003d option.findElement(By.cssSelector(\"label span\")).getText();"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            if (courseId.equals(courseToCopyId)) {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                click(option.findElement(By.tagName(\"input\")));"},{"lineNumber":474,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"    private void selectStudentToEmail(String studentEmail) {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        WebElement studentList \u003d waitForElementPresence(By.id(\"student-list-table\"));"},{"lineNumber":481,"author":{"gitId":"-"},"content":""},{"lineNumber":482,"author":{"gitId":"-"},"content":"        List\u003cWebElement\u003e rows \u003d studentList.findElements(By.tagName(\"tr\"));"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        for (WebElement row : rows) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            List\u003cWebElement\u003e cells \u003d row.findElements(By.cssSelector(\"td\"));"},{"lineNumber":485,"author":{"gitId":"-"},"content":"            if (cells.isEmpty()) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            if (cells.get(4).getText().equals(studentEmail)) {"},{"lineNumber":489,"author":{"gitId":"-"},"content":"                click(cells.get(0).findElement(By.tagName(\"input\")));"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":491,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":494,"author":{"gitId":"-"},"content":""},{"lineNumber":495,"author":{"gitId":"-"},"content":"    private int getFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":496,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":497,"author":{"gitId":"-"},"content":"        while (i \u003c getNumFeedbackSessions()) {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"            if (getFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":501,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":503,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    private int getSoftDeletedFeedbackSessionRowId(String courseId, String sessionName) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        int i \u003d 0;"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"        while (i \u003c getNumSoftDeletedFeedbackSessions()) {"},{"lineNumber":511,"author":{"gitId":"-"},"content":"            if (getSoftDeletedFeedbackSessionCourseId(i).equals(courseId)"},{"lineNumber":512,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getSoftDeletedFeedbackSessionName(i).equals(sessionName)) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                return i;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            i++;"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        return -1;"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"    private int getNumFeedbackSessions() {"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        return sessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":""},{"lineNumber":524,"author":{"gitId":"-"},"content":"    private int getNumSoftDeletedFeedbackSessions() {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"        if (!isElementPresent(By.id(\"deleted-sessions-table\"))) {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            return 0;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        return deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).size();"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionCourseId(int rowId) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":535,"author":{"gitId":"-"},"content":""},{"lineNumber":536,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionCourseId(int rowId) {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":538,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(0).getText();"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":540,"author":{"gitId":"-"},"content":""},{"lineNumber":541,"author":{"gitId":"-"},"content":"    private String getFeedbackSessionName(int rowId) {"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        WebElement row \u003d sessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":""},{"lineNumber":546,"author":{"gitId":"-"},"content":"    private String getSoftDeletedFeedbackSessionName(int rowId) {"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        WebElement row \u003d deletedSessionsTable.findElements(By.cssSelector(\"tbody tr\")).get(rowId);"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        return row.findElements(By.tagName(\"td\")).get(1).getText();"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"    private void waitForSessionEditPage() {"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        waitForElementPresence(By.id(\"btn-fs-edit\"));"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":554,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":8,"-":546}},{"path":"src/lnp/java/teammates/lnp/cases/BaseLNPTestCase.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.lnp.cases;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.BufferedWriter;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.StringJoiner;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.apache.jmeter.engine.StandardJMeterEngine;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.apache.jmeter.report.config.ConfigurationException;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.apache.jmeter.report.dashboard.GenerationException;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.apache.jmeter.report.dashboard.ReportGenerator;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.jmeter.reporters.ResultCollector;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.jmeter.reporters.Summariser;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.jmeter.save.SaveService;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.jmeter.util.JMeterUtils;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.apache.jorphan.collections.HashTree;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.apache.jorphan.collections.ListedHashTree;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import com.google.gson.JsonObject;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import com.google.gson.stream.JsonReader;"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import teammates.common.exception.TeammatesException;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import teammates.lnp.util.BackDoor;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import teammates.lnp.util.LNPResultsStatistics;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import teammates.lnp.util.LNPSpecification;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import teammates.lnp.util.LNPTestData;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import teammates.lnp.util.TestProperties;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import teammates.test.FileHelper;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":47,"author":{"gitId":"-"},"content":" * Base class for all L\u0026P test cases."},{"lineNumber":48,"author":{"gitId":"-"},"content":" */"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public abstract class BaseLNPTestCase extends BaseTestCase {"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":"    protected static final Logger log \u003d Logger.getLogger();"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final BackDoor BACKDOOR \u003d BackDoor.getInstance();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final int RESULT_COUNT \u003d 3;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected String timeStamp;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected LNPSpecification specification;"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    protected abstract LNPTestData getTestData();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the JMeter test plan for the L\u0026P test case."},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return A nested tree structure that consists of the various elements that are used in the JMeter test."},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    protected abstract ListedHashTree getLnpTestPlan();"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Sets up the specification for this L\u0026P test case."},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    protected abstract void setupSpecification();"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns the path to the generated JSON data bundle file."},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    protected String getJsonDataPath() {"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return \"/\" + getClass().getSimpleName() + timeStamp + \".json\";"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns the path to the generated JMeter CSV config file."},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    protected String getCsvConfigPath() {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return \"/\" + getClass().getSimpleName() + \"Config\" + timeStamp + \".csv\";"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns the path to the generated JTL test results file."},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    protected String getJtlResultsPath() {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return \"/\" + getClass().getSimpleName() + timeStamp + \".jtl\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    protected String getTestDataFolder() {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return TestProperties.LNP_TEST_DATA_FOLDER;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the path to the data file, relative to the project root directory."},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected String getPathToTestDataFile(String fileName) {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return getTestDataFolder() + fileName;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Returns the path to the JSON test results statistics file, relative to the project root directory."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private String getPathToTestStatisticsResultsFile() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return String.format(\"%s/%sStatistics%s.json\", TestProperties.LNP_TEST_RESULTS_FOLDER,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                        this.getClass().getSimpleName(), this.timeStamp);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"daongochieu2810"},"content":"    protected String createFileAndDirectory(String directory, String fileName) throws IOException {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        File dir \u003d new File(directory);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!dir.exists()) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            dir.mkdir();"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String pathToFile \u003d directory + fileName;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        File file \u003d new File(pathToFile);"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Write data to the file; overwrite if it already exists"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (file.exists()) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            file.delete();"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        file.createNewFile();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return pathToFile;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Creates the JSON data and writes it to the file specified by {@link #getJsonDataPath()}."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"daongochieu2810"},"content":"    void createJsonDataFile(LNPTestData testData) throws IOException {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        DataBundle jsonData \u003d testData.generateJsonData();"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        String pathToResultFile \u003d createFileAndDirectory(TestProperties.LNP_TEST_DATA_FOLDER, getJsonDataPath());"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(Paths.get(pathToResultFile))) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            bw.write(JsonUtils.toJson(jsonData));"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            bw.flush();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Creates the CSV data and writes it to the file specified by {@link #getCsvConfigPath()}."},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void createCsvConfigDataFile(LNPTestData testData) throws IOException {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cString\u003e headers \u003d testData.generateCsvHeaders();"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cList\u003cString\u003e\u003e valuesList \u003d testData.generateCsvData();"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String pathToCsvFile \u003d createFileAndDirectory(TestProperties.LNP_TEST_DATA_FOLDER, getCsvConfigPath());"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(Paths.get(pathToCsvFile))) {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            // Write headers and data to the CSV file"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            bw.write(convertToCsv(headers));"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"            for (List\u003cString\u003e values : valuesList) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                bw.write(convertToCsv(values));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"            bw.flush();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Converts the list of {@code values} to a CSV row."},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @return A single string containing {@code values} separated by pipelines and ending with newline."},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":172,"author":{"gitId":"daongochieu2810"},"content":"    String convertToCsv(List\u003cString\u003e values) {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        StringJoiner csvRow \u003d new StringJoiner(\"|\", \"\", \"\\n\");"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        for (String value : values) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            csvRow.add(value);"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return csvRow.toString();"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Returns the L\u0026P test results statistics."},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @return The initialized result statistics from the L\u0026P test results."},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @throws IOException if there is an error when loading the result file."},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private LNPResultsStatistics getResultsStatistics() throws IOException {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Gson gson \u003d new Gson();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        JsonReader reader \u003d new JsonReader(Files.newBufferedReader(Paths.get(getPathToTestStatisticsResultsFile())));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        JsonObject jsonObject \u003d gson.fromJson(reader, JsonObject.class);"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"        JsonObject endpointStats \u003d jsonObject.getAsJsonObject(\"HTTP Request Sampler\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return gson.fromJson(endpointStats, LNPResultsStatistics.class);"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Renames the default results statistics file to the name of the test."},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void renameStatisticsFile() {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        File defaultFile \u003d new File(TestProperties.LNP_TEST_RESULTS_FOLDER + \"/statistics.json\");"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        File lnpStatisticsFile \u003d new File(getPathToTestStatisticsResultsFile());"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        if (lnpStatisticsFile.exists()) {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            lnpStatisticsFile.delete();"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        if (!defaultFile.renameTo(lnpStatisticsFile)) {"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            log.warning(\"Failed to rename generated statistics.json file.\");"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Setup and load the JMeter configuration and property files to run the Jmeter test."},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * @throws IOException if the save service properties file cannot be loaded."},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void setJmeterProperties() throws IOException {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        JMeterUtils.loadJMeterProperties(TestProperties.JMETER_PROPERTIES_PATH);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        JMeterUtils.setJMeterHome(TestProperties.JMETER_HOME);"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        JMeterUtils.initLocale();"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        SaveService.loadProperties();"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Creates the JSON test data and CSV config data files for the performance test from {@code testData}."},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    protected void createTestData() {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        LNPTestData testData \u003d getTestData();"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            createJsonDataFile(testData);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            persistTestData();"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            createCsvConfigDataFile(testData);"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } catch (IOException | HttpRequestFailedException ex) {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            log.severe(TeammatesException.toStringWithStackTrace(ex));"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Creates the entities in the datastore from the JSON data file."},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    protected void persistTestData() throws IOException, HttpRequestFailedException {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        DataBundle dataBundle \u003d loadDataBundle(getJsonDataPath());"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String responseBody \u003d BACKDOOR.removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String pathToResultFile \u003d createFileAndDirectory(TestProperties.LNP_TEST_DATA_FOLDER, getJsonDataPath());"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String jsonValue \u003d JsonUtils.parse(responseBody).getAsJsonObject().get(\"message\").getAsString();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        FileHelper.saveFile(pathToResultFile, jsonValue);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Display the L\u0026P results on the console."},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    protected void displayLnpResults() throws IOException {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        LNPResultsStatistics resultsStats \u003d getResultsStatistics();"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"        resultsStats.displayLnpResultsStatistics();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        specification.verifyLnpTestSuccess(resultsStats);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"-"},"content":""},{"lineNumber":256,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     * Runs the JMeter test."},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * @param shouldCreateJmxFile true if the generated test plan should be saved to a `.jmx` file which"},{"lineNumber":259,"author":{"gitId":"-"},"content":"     *                            can be opened in the JMeter GUI, and false otherwise."},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    protected void runJmeter(boolean shouldCreateJmxFile) throws IOException {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        StandardJMeterEngine jmeter \u003d new StandardJMeterEngine();"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        setJmeterProperties();"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"        HashTree testPlan \u003d getLnpTestPlan();"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (shouldCreateJmxFile) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            String pathToConfigFile \u003d createFileAndDirectory("},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    TestProperties.LNP_TEST_CONFIG_FOLDER, \"/\" + getClass().getSimpleName() + \".jmx\");"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            SaveService.saveTree(testPlan, Files.newOutputStream(Paths.get(pathToConfigFile)));"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        // Add result collector to the test plan for generating results file"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        Summariser summariser \u003d null;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        String summariserName \u003d JMeterUtils.getPropDefault(\"summariser.name\", \"summary\");"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        if (summariserName.length() \u003e 0) {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            summariser \u003d new Summariser(summariserName);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"        String resultsFile \u003d createFileAndDirectory(TestProperties.LNP_TEST_RESULTS_FOLDER, getJtlResultsPath());"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        ResultCollector resultCollector \u003d new ResultCollector(summariser);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        resultCollector.setFilename(resultsFile);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        testPlan.add(testPlan.getArray()[0], resultCollector);"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"-"},"content":"        // Run Jmeter Test"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        jmeter.configure(testPlan);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        jmeter.run();"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            ReportGenerator reportGenerator \u003d new ReportGenerator(resultsFile, null);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            reportGenerator.generate();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        } catch (ConfigurationException | GenerationException e) {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            log.warning(e.getMessage());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        renameStatisticsFile();"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * Deletes the data that was created in the datastore from the JSON data file."},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    protected void deleteTestData() {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        DataBundle dataBundle \u003d loadDataBundle(getJsonDataPath());"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        BACKDOOR.removeDataBundle(dataBundle);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     * Deletes the JSON and CSV data files that were created."},{"lineNumber":309,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    protected void deleteDataFiles() throws IOException {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        String pathToJsonFile \u003d getPathToTestDataFile(getJsonDataPath());"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        String pathToCsvFile \u003d getPathToTestDataFile(getCsvConfigPath());"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        Files.delete(Paths.get(pathToJsonFile));"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        Files.delete(Paths.get(pathToCsvFile));"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":319,"author":{"gitId":"-"},"content":"     * Deletes the oldest excess result .jtl file and the statistics file, if there are more than RESULT_COUNT."},{"lineNumber":320,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    protected void cleanupResults() throws IOException {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        File[] fileList \u003d new File(TestProperties.LNP_TEST_RESULTS_FOLDER)"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                .listFiles((d, s) -\u003e {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                    return s.contains(this.getClass().getSimpleName());"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        Arrays.sort(fileList, (a, b) -\u003e {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            return b.getName().compareTo(a.getName());"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"        int jtlCounter \u003d 0;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        int statisticsCounter \u003d 0;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        for (File file : fileList) {"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            if (file.getName().contains(\"Statistics\")) {"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                statisticsCounter++;"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                if (statisticsCounter \u003e RESULT_COUNT) {"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    Files.delete(file.toPath());"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                jtlCounter++;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                if (jtlCounter \u003e RESULT_COUNT) {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                    Files.delete(file.toPath());"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":348,"author":{"gitId":"-"},"content":"     * Sanitize the string to be CSV-safe string."},{"lineNumber":349,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    protected String sanitizeForCsv(String originalString) {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        return String.format(\"\\\"%s\\\"\", originalString.replace(System.lineSeparator(), \"\").replace(\"\\\"\", \"\\\"\\\"\"));"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":355,"author":{"gitId":"-"},"content":"     * Generates timestamp for generated statistics/CSV files in order to prevent concurrency issues."},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    protected void generateTimeStamp() {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        this.timeStamp \u003d ZonedDateTime.now().format(DateTimeFormatter.ofPattern(\"_uuuuMMddHHmmss\"));"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":4,"-":356}},{"path":"src/lnp/java/teammates/lnp/cases/InstructorStudentCascadingUpdateLNPTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.lnp.cases;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import java.io.BufferedWriter;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"import java.time.ZoneId;"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":"import java.util.HashMap;"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"import java.util.Map;"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"import org.apache.jmeter.protocol.http.control.HeaderManager;"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"import org.apache.jorphan.collections.HashTree;"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"import org.apache.jorphan.collections.ListedHashTree;"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.AfterClass;"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.BeforeClass;"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.Test;"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.DataBundle;"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.InstructorPrivileges;"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.exception.HttpRequestFailedException;"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.exception.TeammatesException;"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.util.Const;"},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"import teammates.lnp.util.JMeterElements;"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"import teammates.lnp.util.LNPSpecification;"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"import teammates.lnp.util.LNPTestData;"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"import teammates.lnp.util.TestProperties;"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"import teammates.ui.request.StudentsEnrollRequest;"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":" * L\u0026P Test Case for cascading batch updating students."},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"public class InstructorStudentCascadingUpdateLNPTest extends BaseLNPTestCase {"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"    private static final int NUM_INSTRUCTORS \u003d 1;"},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"    private static final int RAMP_UP_PERIOD \u003d NUM_INSTRUCTORS * 2;"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":"    private static final int NUM_STUDENTS \u003d 1000;"},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"    private static final int NUM_STUDENTS_PER_SECTION \u003d 50;"},{"lineNumber":48,"author":{"gitId":"daongochieu2810"},"content":"    private static final int NUMBER_OF_FEEDBACK_QUESTIONS \u003d 20;"},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"    private static final String INSTRUCTOR_NAME \u003d \"LnPInstructor\";"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    private static final String INSTRUCTOR_ID \u003d \"LnPInstructor_id\";"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"    private static final String INSTRUCTOR_EMAIL \u003d \"tmms.test@gmail.tmt\";"},{"lineNumber":53,"author":{"gitId":"daongochieu2810"},"content":"    private static final String COURSE_NAME \u003d \"tmms.test.gma-demo\";"},{"lineNumber":54,"author":{"gitId":"daongochieu2810"},"content":"    private static final String COURSE_ID \u003d \"tmms.test.gma-demo\";"},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":56,"author":{"gitId":"daongochieu2810"},"content":"    private static final String STUDENT_NAME_PREFIX \u003d \"LnPStudent\";"},{"lineNumber":57,"author":{"gitId":"daongochieu2810"},"content":"    private static final String STUDENT_ID_PREFIX \u003d \"LnPStudent.tmms\";"},{"lineNumber":58,"author":{"gitId":"daongochieu2810"},"content":"    private static final String STUDENT_EMAIL_SUBFIX \u003d \"@gmail.tmt\";"},{"lineNumber":59,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":60,"author":{"gitId":"daongochieu2810"},"content":"    private static final String FEEDBACK_RESPONSE_PREFIX \u003d \"LnPResponse\";"},{"lineNumber":61,"author":{"gitId":"daongochieu2810"},"content":"    private static final String FEEDBACK_SESSION_NAME \u003d \"LnPSession\";"},{"lineNumber":62,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":63,"author":{"gitId":"daongochieu2810"},"content":"    private static final double ERROR_RATE_LIMIT \u003d 0.01;"},{"lineNumber":64,"author":{"gitId":"daongochieu2810"},"content":"    private static final double MEAN_RESP_TIME_LIMIT \u003d 60;"},{"lineNumber":65,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":66,"author":{"gitId":"daongochieu2810"},"content":"    // To generate multiple csv files for multiple sections"},{"lineNumber":67,"author":{"gitId":"daongochieu2810"},"content":"    private static int csvTestDataIndex;"},{"lineNumber":68,"author":{"gitId":"daongochieu2810"},"content":"    private static LNPTestData testData;"},{"lineNumber":69,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":70,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"daongochieu2810"},"content":"    protected LNPTestData getTestData() {"},{"lineNumber":72,"author":{"gitId":"daongochieu2810"},"content":"        if (testData !\u003d null) {"},{"lineNumber":73,"author":{"gitId":"daongochieu2810"},"content":"            return testData;"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"        testData \u003d new LNPTestData() {"},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, AccountAttributes\u003e generateAccounts() {"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"                return new HashMap\u003c\u003e();"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, CourseAttributes\u003e generateCourses() {"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"                Map\u003cString, CourseAttributes\u003e courses \u003d new HashMap\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":85,"author":{"gitId":"daongochieu2810"},"content":"                courses.put(COURSE_ID, CourseAttributes.builder(COURSE_ID)"},{"lineNumber":86,"author":{"gitId":"daongochieu2810"},"content":"                        .withName(COURSE_NAME)"},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"                        .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"                        .build()"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":"                );"},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":91,"author":{"gitId":"daongochieu2810"},"content":"                return courses;"},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":94,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":95,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, StudentAttributes\u003e generateStudents() {"},{"lineNumber":96,"author":{"gitId":"daongochieu2810"},"content":"                Map\u003cString, StudentAttributes\u003e students \u003d new HashMap\u003c\u003e();"},{"lineNumber":97,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":98,"author":{"gitId":"daongochieu2810"},"content":"                for (int i \u003d 0; i \u003c NUM_STUDENTS; i++) {"},{"lineNumber":99,"author":{"gitId":"daongochieu2810"},"content":"                    students.put(STUDENT_NAME_PREFIX + i, StudentAttributes.builder(COURSE_ID,"},{"lineNumber":100,"author":{"gitId":"daongochieu2810"},"content":"                            STUDENT_NAME_PREFIX + i + STUDENT_EMAIL_SUBFIX)"},{"lineNumber":101,"author":{"gitId":"daongochieu2810"},"content":"                            .withGoogleId(STUDENT_ID_PREFIX + i)"},{"lineNumber":102,"author":{"gitId":"daongochieu2810"},"content":"                            .withName(STUDENT_NAME_PREFIX + i)"},{"lineNumber":103,"author":{"gitId":"daongochieu2810"},"content":"                            .withComment(\"This student\u0027s name is \" + STUDENT_NAME_PREFIX + i)"},{"lineNumber":104,"author":{"gitId":"daongochieu2810"},"content":"                            .withSectionName(String.valueOf(i / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":105,"author":{"gitId":"daongochieu2810"},"content":"                            .withTeamName(String.valueOf(i / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":106,"author":{"gitId":"daongochieu2810"},"content":"                            .build());"},{"lineNumber":107,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":108,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":109,"author":{"gitId":"daongochieu2810"},"content":"                return students;"},{"lineNumber":110,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":112,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":113,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, FeedbackResponseAttributes\u003e generateFeedbackResponses() {"},{"lineNumber":114,"author":{"gitId":"daongochieu2810"},"content":"                Map\u003cString, FeedbackResponseAttributes\u003e feedbackResponses \u003d new HashMap\u003c\u003e();"},{"lineNumber":115,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":116,"author":{"gitId":"daongochieu2810"},"content":"                for (int i \u003d 1; i \u003c\u003d NUMBER_OF_FEEDBACK_QUESTIONS; i++) {"},{"lineNumber":117,"author":{"gitId":"daongochieu2810"},"content":"                    for (int j \u003d 0; j \u003c\u003d NUM_STUDENTS; j++) {"},{"lineNumber":118,"author":{"gitId":"daongochieu2810"},"content":"                        String responseText \u003d FEEDBACK_RESPONSE_PREFIX"},{"lineNumber":119,"author":{"gitId":"daongochieu2810"},"content":"                                + \" some random text to make the response has a reasonable length \" + j;"},{"lineNumber":120,"author":{"gitId":"daongochieu2810"},"content":"                        FeedbackTextResponseDetails details \u003d"},{"lineNumber":121,"author":{"gitId":"daongochieu2810"},"content":"                                new FeedbackTextResponseDetails(responseText);"},{"lineNumber":122,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":123,"author":{"gitId":"daongochieu2810"},"content":"                        feedbackResponses.put(responseText,"},{"lineNumber":124,"author":{"gitId":"daongochieu2810"},"content":"                                FeedbackResponseAttributes.builder(String.valueOf(i),"},{"lineNumber":125,"author":{"gitId":"daongochieu2810"},"content":"                                        STUDENT_ID_PREFIX + j,"},{"lineNumber":126,"author":{"gitId":"daongochieu2810"},"content":"                                        STUDENT_ID_PREFIX + j)"},{"lineNumber":127,"author":{"gitId":"daongochieu2810"},"content":"                                        .withCourseId(COURSE_ID)"},{"lineNumber":128,"author":{"gitId":"daongochieu2810"},"content":"                                        .withFeedbackSessionName(FEEDBACK_SESSION_NAME)"},{"lineNumber":129,"author":{"gitId":"daongochieu2810"},"content":"                                        .withGiverSection(String.valueOf(j / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":130,"author":{"gitId":"daongochieu2810"},"content":"                                        .withRecipientSection(String.valueOf(j / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":131,"author":{"gitId":"daongochieu2810"},"content":"                                        .withResponseDetails(details)"},{"lineNumber":132,"author":{"gitId":"daongochieu2810"},"content":"                                        .build());"},{"lineNumber":133,"author":{"gitId":"daongochieu2810"},"content":"                    }"},{"lineNumber":134,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":135,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":136,"author":{"gitId":"daongochieu2810"},"content":"                return feedbackResponses;"},{"lineNumber":137,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":139,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":140,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, FeedbackResponseCommentAttributes\u003e generateFeedbackResponseComments() {"},{"lineNumber":141,"author":{"gitId":"daongochieu2810"},"content":"                Map\u003cString, FeedbackResponseCommentAttributes\u003e feedbackResponseComments \u003d new HashMap\u003c\u003e();"},{"lineNumber":142,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":143,"author":{"gitId":"daongochieu2810"},"content":"                for (int i \u003d 1; i \u003c\u003d NUMBER_OF_FEEDBACK_QUESTIONS; i++) {"},{"lineNumber":144,"author":{"gitId":"daongochieu2810"},"content":"                    for (int j \u003d 0; j \u003c\u003d NUM_STUDENTS; j++) {"},{"lineNumber":145,"author":{"gitId":"daongochieu2810"},"content":"                        String responseText \u003d \"This is a comment \" + j;"},{"lineNumber":146,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":147,"author":{"gitId":"daongochieu2810"},"content":"                        feedbackResponseComments.put(responseText,"},{"lineNumber":148,"author":{"gitId":"daongochieu2810"},"content":"                                FeedbackResponseCommentAttributes.builder()"},{"lineNumber":149,"author":{"gitId":"daongochieu2810"},"content":"                                        .withCourseId(COURSE_ID)"},{"lineNumber":150,"author":{"gitId":"daongochieu2810"},"content":"                                        .withFeedbackResponseId(String.valueOf(i))"},{"lineNumber":151,"author":{"gitId":"daongochieu2810"},"content":"                                        .withFeedbackSessionName(FEEDBACK_SESSION_NAME)"},{"lineNumber":152,"author":{"gitId":"daongochieu2810"},"content":"                                        .withGiverSection(String.valueOf(j / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":153,"author":{"gitId":"daongochieu2810"},"content":"                                        .withCommentGiver(String.valueOf(j / NUM_STUDENTS_PER_SECTION))"},{"lineNumber":154,"author":{"gitId":"daongochieu2810"},"content":"                                        .withCommentText(responseText)"},{"lineNumber":155,"author":{"gitId":"daongochieu2810"},"content":"                                        .build());"},{"lineNumber":156,"author":{"gitId":"daongochieu2810"},"content":"                    }"},{"lineNumber":157,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":158,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":159,"author":{"gitId":"daongochieu2810"},"content":"                return feedbackResponseComments;"},{"lineNumber":160,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":162,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":163,"author":{"gitId":"daongochieu2810"},"content":"            protected Map\u003cString, InstructorAttributes\u003e generateInstructors() {"},{"lineNumber":164,"author":{"gitId":"daongochieu2810"},"content":"                Map\u003cString, InstructorAttributes\u003e instructors \u003d new HashMap\u003c\u003e();"},{"lineNumber":165,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":166,"author":{"gitId":"daongochieu2810"},"content":"                instructors.put(INSTRUCTOR_ID,"},{"lineNumber":167,"author":{"gitId":"daongochieu2810"},"content":"                        InstructorAttributes.builder(COURSE_ID, INSTRUCTOR_EMAIL)"},{"lineNumber":168,"author":{"gitId":"daongochieu2810"},"content":"                                .withGoogleId(INSTRUCTOR_ID)"},{"lineNumber":169,"author":{"gitId":"daongochieu2810"},"content":"                                .withName(INSTRUCTOR_NAME)"},{"lineNumber":170,"author":{"gitId":"daongochieu2810"},"content":"                                .withRole(\"Co-owner\")"},{"lineNumber":171,"author":{"gitId":"daongochieu2810"},"content":"                                .withIsDisplayedToStudents(true)"},{"lineNumber":172,"author":{"gitId":"daongochieu2810"},"content":"                                .withDisplayedName(\"Co-owner\")"},{"lineNumber":173,"author":{"gitId":"daongochieu2810"},"content":"                                .withPrivileges(new InstructorPrivileges("},{"lineNumber":174,"author":{"gitId":"daongochieu2810"},"content":"                                        Const.InstructorPermissionRoleNames.INSTRUCTOR_PERMISSION_ROLE_COOWNER))"},{"lineNumber":175,"author":{"gitId":"daongochieu2810"},"content":"                                .build()"},{"lineNumber":176,"author":{"gitId":"daongochieu2810"},"content":"                );"},{"lineNumber":177,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":178,"author":{"gitId":"daongochieu2810"},"content":"                return instructors;"},{"lineNumber":179,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":181,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":182,"author":{"gitId":"daongochieu2810"},"content":"            public List\u003cString\u003e generateCsvHeaders() {"},{"lineNumber":183,"author":{"gitId":"daongochieu2810"},"content":"                List\u003cString\u003e headers \u003d new ArrayList\u003c\u003e();"},{"lineNumber":184,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":185,"author":{"gitId":"daongochieu2810"},"content":"                headers.add(\"loginId\");"},{"lineNumber":186,"author":{"gitId":"daongochieu2810"},"content":"                headers.add(\"isAdmin\");"},{"lineNumber":187,"author":{"gitId":"daongochieu2810"},"content":"                headers.add(\"courseId\");"},{"lineNumber":188,"author":{"gitId":"daongochieu2810"},"content":"                headers.add(\"enrollData\");"},{"lineNumber":189,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":190,"author":{"gitId":"daongochieu2810"},"content":"                return headers;"},{"lineNumber":191,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":193,"author":{"gitId":"daongochieu2810"},"content":"            @Override"},{"lineNumber":194,"author":{"gitId":"daongochieu2810"},"content":"            public List\u003cList\u003cString\u003e\u003e generateCsvData() {"},{"lineNumber":195,"author":{"gitId":"daongochieu2810"},"content":"                DataBundle dataBundle \u003d loadDataBundle(getJsonDataPath());"},{"lineNumber":196,"author":{"gitId":"daongochieu2810"},"content":"                List\u003cList\u003cString\u003e\u003e csvData \u003d new ArrayList\u003c\u003e();"},{"lineNumber":197,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":198,"author":{"gitId":"daongochieu2810"},"content":"                dataBundle.instructors.forEach((key, instructor) -\u003e {"},{"lineNumber":199,"author":{"gitId":"daongochieu2810"},"content":"                    List\u003cString\u003e csvRow \u003d new ArrayList\u003c\u003e();"},{"lineNumber":200,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":201,"author":{"gitId":"daongochieu2810"},"content":"                    csvRow.add(instructor.googleId);"},{"lineNumber":202,"author":{"gitId":"daongochieu2810"},"content":"                    csvRow.add(\"yes\");"},{"lineNumber":203,"author":{"gitId":"daongochieu2810"},"content":"                    csvRow.add(instructor.courseId);"},{"lineNumber":204,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":205,"author":{"gitId":"daongochieu2810"},"content":"                    // Create and add student enrollment data with a team number corresponding to each section number"},{"lineNumber":206,"author":{"gitId":"daongochieu2810"},"content":"                    List\u003cStudentsEnrollRequest.StudentEnrollRequest\u003e enrollRequests \u003d new ArrayList\u003c\u003e();"},{"lineNumber":207,"author":{"gitId":"daongochieu2810"},"content":"                    int startIndex \u003d csvTestDataIndex * NUM_STUDENTS_PER_SECTION;"},{"lineNumber":208,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":209,"author":{"gitId":"daongochieu2810"},"content":"                    for (int i \u003d startIndex; i \u003c startIndex + NUM_STUDENTS_PER_SECTION; i++) {"},{"lineNumber":210,"author":{"gitId":"daongochieu2810"},"content":"                        String name \u003d instructor.name + \".Student\" + (NUM_STUDENTS - i);"},{"lineNumber":211,"author":{"gitId":"daongochieu2810"},"content":"                        String email \u003d STUDENT_NAME_PREFIX + i + STUDENT_EMAIL_SUBFIX;"},{"lineNumber":212,"author":{"gitId":"daongochieu2810"},"content":"                        String team \u003d String.valueOf((NUM_STUDENTS - i) / NUM_STUDENTS_PER_SECTION);"},{"lineNumber":213,"author":{"gitId":"daongochieu2810"},"content":"                        String section \u003d String.valueOf((NUM_STUDENTS - i) / NUM_STUDENTS_PER_SECTION);"},{"lineNumber":214,"author":{"gitId":"daongochieu2810"},"content":"                        String comment \u003d \"no comment\";"},{"lineNumber":215,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":216,"author":{"gitId":"daongochieu2810"},"content":"                        enrollRequests.add("},{"lineNumber":217,"author":{"gitId":"daongochieu2810"},"content":"                                new StudentsEnrollRequest.StudentEnrollRequest(name, email, team, section, comment)"},{"lineNumber":218,"author":{"gitId":"daongochieu2810"},"content":"                        );"},{"lineNumber":219,"author":{"gitId":"daongochieu2810"},"content":"                    }"},{"lineNumber":220,"author":{"gitId":"daongochieu2810"},"content":"                    String enrollData \u003d sanitizeForCsv(JsonUtils.toJson(new StudentsEnrollRequest(enrollRequests)));"},{"lineNumber":221,"author":{"gitId":"daongochieu2810"},"content":"                    csvRow.add(enrollData);"},{"lineNumber":222,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":223,"author":{"gitId":"daongochieu2810"},"content":"                    csvData.add(csvRow);"},{"lineNumber":224,"author":{"gitId":"daongochieu2810"},"content":"                });"},{"lineNumber":225,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":226,"author":{"gitId":"daongochieu2810"},"content":"                return csvData;"},{"lineNumber":227,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":228,"author":{"gitId":"daongochieu2810"},"content":"        };"},{"lineNumber":229,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":230,"author":{"gitId":"daongochieu2810"},"content":"        return testData;"},{"lineNumber":231,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":232,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":233,"author":{"gitId":"daongochieu2810"},"content":"    private Map\u003cString, String\u003e getRequestHeaders() {"},{"lineNumber":234,"author":{"gitId":"daongochieu2810"},"content":"        Map\u003cString, String\u003e headers \u003d new HashMap\u003c\u003e();"},{"lineNumber":235,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":236,"author":{"gitId":"daongochieu2810"},"content":"        headers.put(\"X-CSRF-TOKEN\", \"${csrfToken}\");"},{"lineNumber":237,"author":{"gitId":"daongochieu2810"},"content":"        headers.put(\"Content-Type\", \"text/csv\");"},{"lineNumber":238,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":239,"author":{"gitId":"daongochieu2810"},"content":"        return headers;"},{"lineNumber":240,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":242,"author":{"gitId":"daongochieu2810"},"content":"    private String getTestEndpoint() {"},{"lineNumber":243,"author":{"gitId":"daongochieu2810"},"content":"        return Const.ResourceURIs.STUDENTS + \"?courseid\u003d${courseId}\";"},{"lineNumber":244,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":245,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":246,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":247,"author":{"gitId":"daongochieu2810"},"content":"    protected void createTestData() {"},{"lineNumber":248,"author":{"gitId":"daongochieu2810"},"content":"        LNPTestData testData \u003d getTestData();"},{"lineNumber":249,"author":{"gitId":"daongochieu2810"},"content":"        try {"},{"lineNumber":250,"author":{"gitId":"daongochieu2810"},"content":"            createJsonDataFile(testData);"},{"lineNumber":251,"author":{"gitId":"daongochieu2810"},"content":"            persistTestData();"},{"lineNumber":252,"author":{"gitId":"daongochieu2810"},"content":"        } catch (IOException | HttpRequestFailedException ex) {"},{"lineNumber":253,"author":{"gitId":"daongochieu2810"},"content":"            log.severe(TeammatesException.toStringWithStackTrace(ex));"},{"lineNumber":254,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":257,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":258,"author":{"gitId":"daongochieu2810"},"content":"    protected String getCsvConfigPath() {"},{"lineNumber":259,"author":{"gitId":"daongochieu2810"},"content":"        return \"/\" + getClass().getSimpleName() + \"Config_\" + csvTestDataIndex + timeStamp + \".csv\";"},{"lineNumber":260,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":262,"author":{"gitId":"daongochieu2810"},"content":"    /**"},{"lineNumber":263,"author":{"gitId":"daongochieu2810"},"content":"     * Generates csv data for each request, distinguished by csvTestDataIndex."},{"lineNumber":264,"author":{"gitId":"daongochieu2810"},"content":"     */"},{"lineNumber":265,"author":{"gitId":"daongochieu2810"},"content":"    protected void createCsvConfigDataFile() throws IOException {"},{"lineNumber":266,"author":{"gitId":"daongochieu2810"},"content":"        List\u003cString\u003e headers \u003d testData.generateCsvHeaders();"},{"lineNumber":267,"author":{"gitId":"daongochieu2810"},"content":"        List\u003cList\u003cString\u003e\u003e valuesList \u003d testData.generateCsvData();"},{"lineNumber":268,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":269,"author":{"gitId":"daongochieu2810"},"content":"        String pathToCsvFile \u003d createFileAndDirectory(TestProperties.LNP_TEST_DATA_FOLDER, getCsvConfigPath());"},{"lineNumber":270,"author":{"gitId":"daongochieu2810"},"content":"        try (BufferedWriter bw \u003d Files.newBufferedWriter(Paths.get(pathToCsvFile))) {"},{"lineNumber":271,"author":{"gitId":"daongochieu2810"},"content":"            // Write headers and data to the CSV file"},{"lineNumber":272,"author":{"gitId":"daongochieu2810"},"content":"            bw.write(convertToCsv(headers));"},{"lineNumber":273,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":274,"author":{"gitId":"daongochieu2810"},"content":"            for (List\u003cString\u003e values : valuesList) {"},{"lineNumber":275,"author":{"gitId":"daongochieu2810"},"content":"                bw.write(convertToCsv(values));"},{"lineNumber":276,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":277,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":278,"author":{"gitId":"daongochieu2810"},"content":"            bw.flush();"},{"lineNumber":279,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":280,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":282,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":283,"author":{"gitId":"daongochieu2810"},"content":"    protected ListedHashTree getLnpTestPlan() {"},{"lineNumber":284,"author":{"gitId":"daongochieu2810"},"content":"        ListedHashTree testPlan \u003d new ListedHashTree(JMeterElements.testPlan());"},{"lineNumber":285,"author":{"gitId":"daongochieu2810"},"content":"        HashTree threadGroup \u003d testPlan.add("},{"lineNumber":286,"author":{"gitId":"daongochieu2810"},"content":"                JMeterElements.threadGroup(NUM_INSTRUCTORS, RAMP_UP_PERIOD, 1));"},{"lineNumber":287,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":288,"author":{"gitId":"daongochieu2810"},"content":"        threadGroup.add(JMeterElements.cookieManager());"},{"lineNumber":289,"author":{"gitId":"daongochieu2810"},"content":"        threadGroup.add(JMeterElements.defaultSampler());"},{"lineNumber":290,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":291,"author":{"gitId":"daongochieu2810"},"content":"        threadGroup.add(JMeterElements.onceOnlyController())"},{"lineNumber":292,"author":{"gitId":"daongochieu2810"},"content":"                .add(JMeterElements.loginSampler())"},{"lineNumber":293,"author":{"gitId":"daongochieu2810"},"content":"                .add(JMeterElements.csrfExtractor(\"csrfToken\"));"},{"lineNumber":294,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":295,"author":{"gitId":"daongochieu2810"},"content":"        // Add HTTP sampler for test endpoint"},{"lineNumber":296,"author":{"gitId":"daongochieu2810"},"content":"        HeaderManager headerManager \u003d JMeterElements.headerManager(getRequestHeaders());"},{"lineNumber":297,"author":{"gitId":"daongochieu2810"},"content":"        // Mocks paginated calls from FE"},{"lineNumber":298,"author":{"gitId":"daongochieu2810"},"content":"        for (int i \u003d 0; i \u003c NUM_STUDENTS / NUM_STUDENTS_PER_SECTION; i++) {"},{"lineNumber":299,"author":{"gitId":"daongochieu2810"},"content":"            try {"},{"lineNumber":300,"author":{"gitId":"daongochieu2810"},"content":"                createCsvConfigDataFile();"},{"lineNumber":301,"author":{"gitId":"daongochieu2810"},"content":"            } catch (IOException e) {"},{"lineNumber":302,"author":{"gitId":"daongochieu2810"},"content":"                e.printStackTrace();"},{"lineNumber":303,"author":{"gitId":"daongochieu2810"},"content":"                break;"},{"lineNumber":304,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":305,"author":{"gitId":"daongochieu2810"},"content":"            threadGroup.add(JMeterElements.csvDataSet(getPathToTestDataFile(getCsvConfigPath())));"},{"lineNumber":306,"author":{"gitId":"daongochieu2810"},"content":"            threadGroup.add(JMeterElements.httpSampler(getTestEndpoint(), PUT, \"${enrollData}\"))"},{"lineNumber":307,"author":{"gitId":"daongochieu2810"},"content":"                    .add(headerManager);"},{"lineNumber":308,"author":{"gitId":"daongochieu2810"},"content":"            csvTestDataIndex++;"},{"lineNumber":309,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":310,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":311,"author":{"gitId":"daongochieu2810"},"content":"        return testPlan;"},{"lineNumber":312,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":314,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":315,"author":{"gitId":"daongochieu2810"},"content":"    protected void setupSpecification() {"},{"lineNumber":316,"author":{"gitId":"daongochieu2810"},"content":"        this.specification \u003d LNPSpecification.builder()"},{"lineNumber":317,"author":{"gitId":"daongochieu2810"},"content":"                .withErrorRateLimit(ERROR_RATE_LIMIT)"},{"lineNumber":318,"author":{"gitId":"daongochieu2810"},"content":"                .withMeanRespTimeLimit(MEAN_RESP_TIME_LIMIT)"},{"lineNumber":319,"author":{"gitId":"daongochieu2810"},"content":"                .build();"},{"lineNumber":320,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":321,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":322,"author":{"gitId":"daongochieu2810"},"content":"    @BeforeClass"},{"lineNumber":323,"author":{"gitId":"daongochieu2810"},"content":"    public void classSetup() {"},{"lineNumber":324,"author":{"gitId":"daongochieu2810"},"content":"        generateTimeStamp();"},{"lineNumber":325,"author":{"gitId":"daongochieu2810"},"content":"        createTestData();"},{"lineNumber":326,"author":{"gitId":"daongochieu2810"},"content":"        setupSpecification();"},{"lineNumber":327,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":328,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":329,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":330,"author":{"gitId":"daongochieu2810"},"content":"    public void runLnpTest() throws IOException {"},{"lineNumber":331,"author":{"gitId":"daongochieu2810"},"content":"        runJmeter(false);"},{"lineNumber":332,"author":{"gitId":"daongochieu2810"},"content":"        displayLnpResults();"},{"lineNumber":333,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":335,"author":{"gitId":"daongochieu2810"},"content":"    @Override"},{"lineNumber":336,"author":{"gitId":"daongochieu2810"},"content":"    protected void deleteDataFiles() throws IOException {"},{"lineNumber":337,"author":{"gitId":"daongochieu2810"},"content":"        String pathToJsonFile \u003d getPathToTestDataFile(getJsonDataPath());"},{"lineNumber":338,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":339,"author":{"gitId":"daongochieu2810"},"content":"        csvTestDataIndex \u003d 0;"},{"lineNumber":340,"author":{"gitId":"daongochieu2810"},"content":"        for (int i \u003d 0; i \u003c NUM_STUDENTS / NUM_STUDENTS_PER_SECTION; i++) {"},{"lineNumber":341,"author":{"gitId":"daongochieu2810"},"content":"            String pathToCsvFile \u003d getPathToTestDataFile(getCsvConfigPath());"},{"lineNumber":342,"author":{"gitId":"daongochieu2810"},"content":"            Files.delete(Paths.get(pathToCsvFile));"},{"lineNumber":343,"author":{"gitId":"daongochieu2810"},"content":"            csvTestDataIndex++;"},{"lineNumber":344,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":345,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":346,"author":{"gitId":"daongochieu2810"},"content":"        Files.delete(Paths.get(pathToJsonFile));"},{"lineNumber":347,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":348,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":349,"author":{"gitId":"daongochieu2810"},"content":"    /**"},{"lineNumber":350,"author":{"gitId":"daongochieu2810"},"content":"     * Removes the entities added for the instructors\u0027 student enrollment L\u0026P test."},{"lineNumber":351,"author":{"gitId":"daongochieu2810"},"content":"     */"},{"lineNumber":352,"author":{"gitId":"daongochieu2810"},"content":"    @AfterClass"},{"lineNumber":353,"author":{"gitId":"daongochieu2810"},"content":"    public void classTearDown() throws IOException {"},{"lineNumber":354,"author":{"gitId":"daongochieu2810"},"content":"        // There is no need to add the newly enrolled students to the JSON DataBundle#students. This is because the new"},{"lineNumber":355,"author":{"gitId":"daongochieu2810"},"content":"        // CourseStudent entities that were created are automatically deleted when the corresponding course is deleted."},{"lineNumber":356,"author":{"gitId":"daongochieu2810"},"content":"        deleteTestData();"},{"lineNumber":357,"author":{"gitId":"daongochieu2810"},"content":"        deleteDataFiles();"},{"lineNumber":358,"author":{"gitId":"daongochieu2810"},"content":"        cleanupResults();"},{"lineNumber":359,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":360}},{"path":"src/lnp/java/teammates/lnp/util/JMeterElements.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.lnp.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.apache.jmeter.config.Arguments;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.jmeter.config.CSVDataSet;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.jmeter.config.ConfigTestElement;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.ForeachController;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.GenericController;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.LoopController;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.OnceOnlyController;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.gui.LoopControlPanel;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.gui.OnceOnlyControllerGui;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.apache.jmeter.control.gui.TestPlanGui;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.apache.jmeter.extractor.RegexExtractor;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.apache.jmeter.extractor.gui.RegexExtractorGui;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.config.gui.HttpDefaultsGui;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.control.CookieManager;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.control.Header;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.control.HeaderManager;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.control.gui.HttpTestSampleGui;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.gui.CookiePanel;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.gui.HeaderPanel;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.sampler.HTTPSampler;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.sampler.HTTPSamplerProxy;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import org.apache.jmeter.protocol.http.util.HTTPArgument;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.apache.jmeter.testbeans.gui.TestBeanGUI;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.apache.jmeter.testelement.TestElement;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.apache.jmeter.testelement.TestPlan;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import org.apache.jmeter.testelement.property.StringProperty;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.apache.jmeter.testelement.property.TestElementProperty;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.apache.jmeter.threads.SetupThreadGroup;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.apache.jmeter.threads.ThreadGroup;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.apache.jmeter.threads.gui.ThreadGroupGui;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Creates the JMeter elements needed to build the L\u0026P test."},{"lineNumber":39,"author":{"gitId":"-"},"content":" *"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * \u003cp\u003e@see \u003ca href\u003d\"https://jmeter.apache.org/usermanual/component_reference.html\"\u003eApache JMeter: Component Reference\u003c/a\u003e\u003c/p\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public final class JMeterElements {"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private JMeterElements() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Utility class"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Intentional private constructor to prevent instantiation"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the top-level Test Plan element."},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static TestPlan testPlan() {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        TestPlan testPlan \u003d new TestPlan();"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"        testPlan.setName(\"L\u0026P Test Plan\");"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        testPlan.setUserDefinedVariables(new Arguments());"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        testPlan.setEnabled(true);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        testPlan.setProperty(TestElement.TEST_CLASS, TestPlan.class.getName());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        testPlan.setProperty(TestElement.GUI_CLASS, TestPlanGui.class.getName());"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return testPlan;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a Thread Group element."},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param numThreads The number of concurrent threads that will run the test plan and independently of the other threads"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param rampUpPeriod Time (in seconds) to take to \"ramp-up\" to the full number of threads"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param numLoops The number of times to execute the entire test plan"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static ThreadGroup threadGroup(int numThreads, int rampUpPeriod, int numLoops) {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ThreadGroup threadGroup \u003d new SetupThreadGroup();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        threadGroup.setName(\"Thread Group\");"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        threadGroup.setNumThreads(numThreads);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        threadGroup.setRampUp(rampUpPeriod);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        threadGroup.setProperty(new StringProperty(ThreadGroup.ON_SAMPLE_ERROR, ThreadGroup.ON_SAMPLE_ERROR_CONTINUE));"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        threadGroup.setSamplerController(loopController(numLoops));"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        threadGroup.setProperty(TestElement.TEST_CLASS, ThreadGroup.class.getName());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        threadGroup.setProperty(TestElement.GUI_CLASS, ThreadGroupGui.class.getName());"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return threadGroup;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a Loop Controller element that configures the number of times its sub-elements are iterated in a test run."},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param loopCount The number of iterations in a test run"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static LoopController loopController(int loopCount) {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        LoopController loopController \u003d new LoopController();"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"        loopController.setLoops(loopCount);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        loopController.setEnabled(true);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        loopController.setProperty(TestElement.TEST_CLASS, LoopController.class.getName());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        loopController.setProperty(TestElement.GUI_CLASS, LoopControlPanel.class.getName());"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return loopController;"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a CSV Data Set Config element that reads lines from a file and splits them into variables."},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param configFilePath Path to the CSV config file"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static CSVDataSet csvDataSet(String configFilePath) {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CSVDataSet csvDataSet \u003d new CSVDataSet();"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        csvDataSet.setName(\"CSV Data Config\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(new StringProperty(\"filename\", configFilePath));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(new StringProperty(\"delimiter\", \"|\"));"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(new StringProperty(\"shareMode\", \"shareMode.all\"));"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(\"ignoreFirstLine\", true);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(\"quoted\", true);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(\"quotedData\", true);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(\"recycle\", false);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(\"stopThread\", true);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(TestElement.TEST_CLASS, CSVDataSet.class.getName());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        csvDataSet.setProperty(TestElement.GUI_CLASS, TestBeanGUI.class.getName());"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return csvDataSet;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a HTTP Cookie Manager element."},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static CookieManager cookieManager() {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CookieManager cookieManager \u003d new CookieManager();"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        cookieManager.setName(\"HTTP Cookie Manager\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        cookieManager.setClearEachIteration(false);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        cookieManager.setCookiePolicy(\"standard\");"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        cookieManager.setProperty(TestElement.TEST_CLASS, CookieManager.class.getName());"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        cookieManager.setProperty(TestElement.GUI_CLASS, CookiePanel.class.getName());"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return cookieManager;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a HTTP Request Defaults element that sets the default values for the HTTP Request elements."},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @param domain Domain name of the server"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @param port Port that the server is listening to"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static ConfigTestElement defaultSampler(String domain, String port) {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        ConfigTestElement defaultSampler \u003d new ConfigTestElement();"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        defaultSampler.setName(\"HTTP Request Defaults\");"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(new TestElementProperty(HTTPSampler.ARGUMENTS, new Arguments()));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(HTTPSampler.DOMAIN, domain);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(HTTPSampler.PORT, port);"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        defaultSampler.setEnabled(true);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(TestElement.TEST_CLASS, ConfigTestElement.class.getName());"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(TestElement.GUI_CLASS, HttpDefaultsGui.class.getName());"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return defaultSampler;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns a HTTP Request Defaults element that sets the default values for the HTTP Request elements."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param argumentsMap parameters of the request"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static ConfigTestElement defaultSampler(Map\u003cString, String\u003e argumentsMap) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        ConfigTestElement defaultSampler \u003d new ConfigTestElement();"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"        defaultSampler.setName(\"HTTP Request Defaults\");"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Arguments arguments \u003d new Arguments();"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        argumentsMap.forEach((String k, String v) -\u003e {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            arguments.addArgument(new HTTPArgument(k, v));"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(new TestElementProperty(HTTPSampler.ARGUMENTS, arguments));"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        defaultSampler.setEnabled(true);"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(TestElement.TEST_CLASS, ConfigTestElement.class.getName());"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        defaultSampler.setProperty(TestElement.GUI_CLASS, HttpDefaultsGui.class.getName());"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return defaultSampler;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Overloaded method that returns a HTTP Request Defaults element that listens to the server at \"localhost:8080\"."},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public static ConfigTestElement defaultSampler() {"},{"lineNumber":182,"author":{"gitId":"daongochieu2810"},"content":"        return defaultSampler(TestProperties.TEAMMATES_DOMAIN, TestProperties.TEAMMATES_PORT);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns a HTTP Request element that is configured to login to a TEAMMATES instance."},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * \u003cp\u003eThis element uses data from the \"loginId\" and \"isAdmin\" fields of the CSV config file.\u003c/p\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static HTTPSamplerProxy loginSampler() {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        HTTPSamplerProxy loginSampler \u003d new HTTPSamplerProxy();"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        loginSampler.setName(\"Login\");"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        loginSampler.setPath("},{"lineNumber":195,"author":{"gitId":"daongochieu2810"},"content":"                \"_ah/login?action\u003dLog+In\u0026email\u003d${loginId}\u0026isAdmin\u003d${isAdmin}\u0026continue\u003d\""},{"lineNumber":196,"author":{"gitId":"daongochieu2810"},"content":"                        + TestProperties.TEAMMATES_URL + \"/webapi/auth\");"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        loginSampler.setMethod(\"POST\");"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        loginSampler.setFollowRedirects(true);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        loginSampler.setUseKeepAlive(true);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        loginSampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        loginSampler.setProperty(TestElement.GUI_CLASS, HttpTestSampleGui.class.getName());"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        return loginSampler;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns a Generic Controller element that processes the controller(s) inside it without additional effects."},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static GenericController genericController() {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        GenericController genericController \u003d new GenericController();"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"        genericController.setName(\"Generic Controller\");"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        genericController.setProperty(TestElement.TEST_CLASS, GenericController.class.getName());"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        genericController.setProperty(TestElement.GUI_CLASS, GenericController.class.getName());"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"        return genericController;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Returns a Once Only Controller element that processes the controller(s) inside it only once per thread."},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public static OnceOnlyController onceOnlyController() {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        OnceOnlyController onceOnlyController \u003d new OnceOnlyController();"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        onceOnlyController.setName(\"Once Only Controller\");"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        onceOnlyController.setProperty(TestElement.TEST_CLASS, OnceOnlyController.class.getName());"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        onceOnlyController.setProperty(TestElement.GUI_CLASS, OnceOnlyControllerGui.class.getName());"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return onceOnlyController;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * Returns a For Each Controller element that processes the controller(s) inside it for each list variables."},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public static ForeachController foreachController(String inputVarible, String returnVal) {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        ForeachController foreachController \u003d new ForeachController();"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"        foreachController.setName(\"For Each Controller\");"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        foreachController.setProperty(TestElement.TEST_CLASS, GenericController.class.getName());"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        foreachController.setProperty(TestElement.GUI_CLASS, GenericController.class.getName());"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        foreachController.setInputVal(inputVarible);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        foreachController.setReturnVal(returnVal);"},{"lineNumber":243,"author":{"gitId":"-"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        return foreachController;"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * Returns a Regular Expression Extractor element that extracts values from a server response header."},{"lineNumber":249,"author":{"gitId":"-"},"content":"     * @param varName Name of the variable in which the result is stored"},{"lineNumber":250,"author":{"gitId":"-"},"content":"     * @param regex The regular expression used to parse the response data"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public static RegexExtractor regexExtractor(String varName, String regex) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        RegexExtractor regexExtractor \u003d new RegexExtractor();"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        regexExtractor.setName(\"Regular Expression Extractor\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        regexExtractor.setUseField(\"true\"); // Find regex matches in response headers"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        regexExtractor.setRefName(varName);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        regexExtractor.setRegex(regex);"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        regexExtractor.setTemplate(\"$1$\");"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        regexExtractor.setProperty(TestElement.TEST_CLASS, RegexExtractor.class.getName());"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        regexExtractor.setProperty(TestElement.GUI_CLASS, RegexExtractorGui.class.getName());"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return regexExtractor;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     * Returns a Regular Expression Extractor element that extracts the CSRF token from a server response header."},{"lineNumber":268,"author":{"gitId":"-"},"content":"     * @param varName Name of the variable which stores the value of the extracted CSRF token"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public static RegexExtractor csrfExtractor(String varName) {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        return regexExtractor(varName, \"CSRF-TOKEN\u003d(.+?);\");"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":273,"author":{"gitId":"-"},"content":""},{"lineNumber":274,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * Returns a HTTP Header Manager element."},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * @param headers A map consisting of {header name -\u003e header value} pairs (eg. {\"Content-Type\" -\u003e \"application/json\"})"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    public static HeaderManager headerManager(Map\u003cString, String\u003e headers) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        HeaderManager headerManager \u003d new HeaderManager();"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"-"},"content":"        headerManager.setName(\"HTTP Header Manager\");"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        headers.forEach((key, value) -\u003e {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            headerManager.add(new Header(key, value));"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        headerManager.setProperty(TestElement.TEST_CLASS, HeaderManager.class.getName());"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        headerManager.setProperty(TestElement.GUI_CLASS, HeaderPanel.class.getName());"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"        return headerManager;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     * Return a HTTP Request element."},{"lineNumber":293,"author":{"gitId":"-"},"content":"     * @param path The path to the resource with the query string parameters (eg. /webapi/student?courseid\u003dcs101)"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     * @param method HTTP request method type (eg. GET, POST, PUT)"},{"lineNumber":295,"author":{"gitId":"-"},"content":"     * @param body The HTTP request body for methods like POST, PUT, PATCH"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    public static HTTPSamplerProxy httpSampler(String path, String method, String body) {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        HTTPSamplerProxy httpSampler \u003d new HTTPSamplerProxy();"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        httpSampler.setName(\"HTTP Request Sampler\");"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        httpSampler.setPath(path);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        httpSampler.setMethod(method);"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"        if (body !\u003d null) {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            httpSampler.addNonEncodedArgument(\"\", body, \"\");"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            httpSampler.setPostBodyRaw(true);"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"        httpSampler.setEnabled(true);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        httpSampler.setProperty(TestElement.TEST_CLASS, HTTPSamplerProxy.class.getName());"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        httpSampler.setProperty(TestElement.GUI_CLASS, HttpTestSampleGui.class.getName());"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        return httpSampler;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     * Returns a HTTP Request element with a GET method to the endpoint specified by {@code path}."},{"lineNumber":318,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    public static HTTPSamplerProxy httpGetSampler(String path) {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        return httpSampler(path, HttpGet.METHOD_NAME, null);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":3,"-":320}},{"path":"src/lnp/java/teammates/lnp/util/TestProperties.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.lnp.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.InputStream;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Properties;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents properties in test.properties file."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public final class TestProperties {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** The directory where the L\u0026P test data files are stored. */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String LNP_TEST_DATA_FOLDER \u003d \"src/lnp/resources/data\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The directory where the L\u0026P test configuration files are stored. */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String LNP_TEST_CONFIG_FOLDER \u003d \"src/lnp/resources/tests\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The directory where the L\u0026P test results are stored. */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String LNP_TEST_RESULTS_FOLDER \u003d \"src/lnp/resources/results\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** The value of \"test.jmeter.home\" in test.properties file. */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String JMETER_HOME;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /** The value of \"test.jmeter.properties\" in test.properties file. */"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String JMETER_PROPERTIES_PATH;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /** The value of \"test.app.url\" in test.properties file. */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String TEAMMATES_URL;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    /** The value of \"test.app.domain\" in test.properties file. */"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"    public static final String TEAMMATES_DOMAIN;"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"    /** The value of \"test.app.port\" in test.properties file. */"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"    public static final String TEAMMATES_PORT;"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** The value of \"test.csrf.key\" in test.properties file. */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String CSRF_KEY;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /** The value of \"test.backdoor.key\" in test.properties file. */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String BACKDOOR_KEY;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Properties prop \u003d new Properties();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            try (InputStream testPropStream \u003d Files.newInputStream(Paths.get(\"src/lnp/resources/test.properties\"))) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                prop.load(testPropStream);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            TEAMMATES_URL \u003d prop.getProperty(\"test.app.url\");"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"            TEAMMATES_DOMAIN \u003d prop.getProperty(\"test.app.domain\");"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"            TEAMMATES_PORT \u003d prop.getProperty(\"test.app.port\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            CSRF_KEY \u003d prop.getProperty(\"test.csrf.key\");"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            BACKDOOR_KEY \u003d prop.getProperty(\"test.backdoor.key\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"            JMETER_HOME \u003d prop.getProperty(\"test.jmeter.home\").toLowerCase();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            JMETER_PROPERTIES_PATH \u003d prop.getProperty(\"test.jmeter.properties\", \"\").toLowerCase();"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        } catch (IOException e) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private TestProperties() {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // access static fields directly"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":8,"-":60}},{"path":"src/main/java/teammates/common/datatransfer/FeedbackSessionLogEntry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.common.datatransfer;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":" * Represents a log entry of a feedback session."},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"public class FeedbackSessionLogEntry {"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"    private final StudentAttributes student;"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"    private final FeedbackSessionAttributes feedbackSession;"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"    private final String feedbackSessionLogType;"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    private final long timestamp;"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogEntry(StudentAttributes student, FeedbackSessionAttributes feedbackSession,"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"            String feedbackSessionLogType, long timestamp) {"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"        this.student \u003d student;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSession \u003d feedbackSession;"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionLogType \u003d feedbackSessionLogType;"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"        this.timestamp \u003d timestamp;"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    public StudentAttributes getStudent() {"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"        return this.student;"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionAttributes getFeedbackSession() {"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"        return this.feedbackSession;"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    public String getFeedbackSessionLogType() {"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"        return this.feedbackSessionLogType;"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"    public long getTimestamp() {"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        return this.timestamp;"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":38}},{"path":"src/main/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetails.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"import teammates.common.util.Assumption;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FeedbackTextQuestionDetails extends FeedbackQuestionDetails {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"    static final String TEXT_ERROR_INVALID_RECOMMENDED_LENGTH \u003d \"Recommended length must be 1 or greater\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Nullable"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Integer recommendedLength;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"    private Boolean shouldAllowRichText;"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FeedbackTextQuestionDetails() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this(null);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FeedbackTextQuestionDetails(String questionText) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(FeedbackQuestionType.TEXT, questionText);"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        recommendedLength \u003d null;"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"        shouldAllowRichText \u003d true;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean shouldChangesRequireResponseDeletion(FeedbackQuestionDetails newDetails) {"},{"lineNumber":32,"author":{"gitId":"moziliar"},"content":"        Assumption.assertTrue(newDetails instanceof FeedbackTextQuestionDetails);"},{"lineNumber":33,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":34,"author":{"gitId":"moziliar"},"content":"        // delete the existing response upon change from rich text allowed to disallowed"},{"lineNumber":35,"author":{"gitId":"moziliar"},"content":"        // due to the effort to cleanup of HTML tags from the respondents"},{"lineNumber":36,"author":{"gitId":"moziliar"},"content":"        return !((FeedbackTextQuestionDetails) newDetails).shouldAllowRichText \u0026\u0026 shouldAllowRichText;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateQuestionDetails() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e errors \u003d new ArrayList\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (recommendedLength !\u003d null \u0026\u0026 recommendedLength \u003c 1) {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            errors.add(TEXT_ERROR_INVALID_RECOMMENDED_LENGTH);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return errors;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e validateResponsesDetails(List\u003cFeedbackResponseDetails\u003e responses, int numRecipients) {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isFeedbackParticipantCommentsOnResponsesAllowed() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String validateGiverRecipientVisibility(FeedbackQuestionAttributes feedbackQuestionAttributes) {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \"\";"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Integer getRecommendedLength() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return recommendedLength;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setRecommendedLength(Integer recommendedLength) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.recommendedLength \u003d recommendedLength;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":71,"author":{"gitId":"moziliar"},"content":"    public boolean getShouldAllowRichText() {"},{"lineNumber":72,"author":{"gitId":"moziliar"},"content":"        return shouldAllowRichText;"},{"lineNumber":73,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":75,"author":{"gitId":"moziliar"},"content":"    public void setShouldAllowRichText(Boolean shouldAllowRichText) {"},{"lineNumber":76,"author":{"gitId":"moziliar"},"content":"        this.shouldAllowRichText \u003d shouldAllowRichText;"},{"lineNumber":77,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":17,"-":61}},{"path":"src/main/java/teammates/common/exception/LogServiceException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.common.exception;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":" * Exception thrown when the logs service fails to create or retrieve logs."},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"@SuppressWarnings(\"serial\")"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"public class LogServiceException extends Exception {"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"    public LogServiceException(String message) {"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"        super(message);"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    public LogServiceException(Throwable cause) {"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"        super(cause);"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":17}},{"path":"src/main/java/teammates/common/util/Const.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Stores constants that are widely used across classes."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * this class contains several nested classes, each containing a specific"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * category of constants."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public final class Const {"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This section holds constants that are defined as constants primarily"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * because they are repeated in many places."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String USER_NOBODY_TEXT \u003d \"-\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String USER_TEAM_FOR_INSTRUCTOR \u003d \"Instructors\";"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DISPLAYED_NAME_FOR_ANONYMOUS_PARTICIPANT \u003d \"Anonymous\";"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final int SECTION_SIZE_LIMIT \u003d 100;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_SECTION \u003d \"None\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final ZoneId DEFAULT_TIME_ZONE \u003d ZoneId.of(\"UTC\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String ENCODING \u003d \"UTF8\";"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Duration FEEDBACK_SESSIONS_SEARCH_WINDOW \u003d Duration.ofDays(30);"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"    public static final Duration LOGS_RETENTION_PERIOD \u003d Duration.ofDays(30);"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * These constants are used as variable values to mean that the variable"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * is in a \u0027special\u0027 state."},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final int INT_UNINITIALIZED \u003d -9999;"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final int MAX_POSSIBLE_RECIPIENTS \u003d -100;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final int POINTS_EQUAL_SHARE \u003d 100;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SURE \u003d -101;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final int POINTS_NOT_SUBMITTED \u003d -999;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final int POINTS_NO_VALUE \u003d Integer.MIN_VALUE;"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String GENERAL_QUESTION \u003d \"%GENERAL%\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_OPENING;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_FOLLOW_VISIBLE;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_LATER;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_NOW;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Instant TIME_REPRESENTS_DEFAULT_TIMESTAMP;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_OPENING \u003d TimeHelper.parseInstant(\"1970-12-31T00:00:00Z\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_FOLLOW_VISIBLE \u003d TimeHelper.parseInstant(\"1970-06-22T00:00:00Z\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_LATER \u003d TimeHelper.parseInstant(\"1970-01-01T00:00:00Z\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_NOW \u003d TimeHelper.parseInstant(\"1970-02-14T00:00:00Z\");"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        TIME_REPRESENTS_DEFAULT_TIMESTAMP \u003d TimeHelper.parseInstant(\"2011-01-01T00:00:00Z\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TEST_EMAIL_DOMAIN \u003d \"@gmail.tmt\";"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /*"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Other Constants"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private Const() {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Utility class containing constants"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static class InstructorPermissionRoleNames {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_COOWNER \u003d \"Co-owner\";"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_MANAGER \u003d \"Manager\";"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_OBSERVER \u003d \"Observer\";"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_TUTOR \u003d \"Tutor\";"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PERMISSION_ROLE_CUSTOM \u003d \"Custom\";"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static class InstructorPermissions {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_COURSE \u003d \"canmodifycourse\";"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_INSTRUCTOR \u003d \"canmodifyinstructor\";"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION \u003d \"canmodifysession\";"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_STUDENT \u003d \"canmodifystudent\";"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_STUDENT_IN_SECTIONS \u003d \"canviewstudentinsection\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public static final String CAN_VIEW_SESSION_IN_SECTIONS \u003d \"canviewsessioninsection\";"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public static final String CAN_SUBMIT_SESSION_IN_SECTIONS \u003d \"cansubmitsessioninsection\";"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public static final String CAN_MODIFY_SESSION_COMMENT_IN_SECTIONS \u003d \"canmodifysessioncommentinsection\";"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static class ParamsNames {"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public static final String IS_IN_RECYCLE_BIN \u003d \"isinrecyclebin\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public static final String IS_STUDENT_REJOINING \u003d \"isstudentrejoining\";"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public static final String IS_INSTRUCTOR_REJOINING \u003d \"isinstructorrejoining\";"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseid\";"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public static final String COURSE_STATUS \u003d \"coursestatus\";"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ID \u003d \"instructorid\";"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_EMAIL \u003d \"instructoremail\";"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_INSTITUTION \u003d \"instructorinstitution\";"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public static final String INSTITUTION_MAC \u003d \"mac\";"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_ROLE_NAME \u003d \"instructorrole\";"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public static final String LOCAL_DATE_TIME \u003d \"localdatetime\";"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public static final String TIME_ZONE \u003d \"timezone\";"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_NAME \u003d \"fsname\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_STARTTIME \u003d \"starttime\";"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_ENDTIME \u003d \"endtime\";"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_MODERATED_PERSON \u003d \"moderatedperson\";"},{"lineNumber":116,"author":{"gitId":"halfwhole"},"content":"        public static final String FEEDBACK_SESSION_LOG_TYPE \u003d \"fsltype\";"},{"lineNumber":117,"author":{"gitId":"AdithyaNarayan"},"content":"        public static final String FEEDBACK_SESSION_LOG_STARTTIME \u003d \"fslstarttime\";"},{"lineNumber":118,"author":{"gitId":"AdithyaNarayan"},"content":"        public static final String FEEDBACK_SESSION_LOG_ENDTIME \u003d \"fslendtime\";"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_QUESTION_ID \u003d \"questionid\";"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_ID \u003d \"responseid\";"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESPONSE_COMMENT_ID \u003d \"responsecommentid\";"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_RESULTS_GROUPBYSECTION \u003d \"frgroupbysection\";"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public static final String PREVIEWAS \u003d \"previewas\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public static final String STUDENT_ID \u003d \"googleid\";"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public static final String INVITER_ID \u003d \"invitergoogleid\";"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public static final String REGKEY \u003d \"key\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public static final String STUDENT_EMAIL \u003d \"studentemail\";"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public static final String SECTION_NAME \u003d \"sectionname\";"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public static final String TEAM_NAME \u003d \"teamname\";"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public static final String ERROR \u003d \"error\";"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public static final String USER_ID \u003d \"user\";"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public static final String SEARCH_KEY \u003d \"searchkey\";"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public static final String USER_CAPTCHA_RESPONSE \u003d \"captcharesponse\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public static final String EMAIL_TYPE \u003d \"emailtype\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public static final String ENTITY_TYPE \u003d \"entitytype\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public static final String INTENT \u003d \"intent\";"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static class SearchIndex {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static class SearchDocumentField {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public static final String SEARCHABLE_TEXT \u003d \"searchableText\";"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public static final String COURSE_ID \u003d \"courseId\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * The course status respect to the instructor\u0027s point of view."},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * This parameter is used to get a course list for instructor."},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static class CourseStatus {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public static final String ACTIVE \u003d \"active\";"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public static final String ARCHIVED \u003d \"archived\";"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public static final String SOFT_DELETED \u003d \"softDeleted\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static class EntityType {"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d \"student\";"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d \"instructor\";"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public static final String ADMIN \u003d \"admin\";"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static class CsrfConfig {"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public static final String TOKEN_HEADER_NAME \u003d \"X-CSRF-TOKEN\";"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public static final String TOKEN_COOKIE_NAME \u003d \"CSRF-TOKEN\";"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"halfwhole"},"content":"    public static class FeedbackSessionLogTypes {"},{"lineNumber":190,"author":{"gitId":"halfwhole"},"content":"        public static final String ACCESS \u003d \"access\";"},{"lineNumber":191,"author":{"gitId":"halfwhole"},"content":"        public static final String SUBMISSION \u003d \"submission\";"},{"lineNumber":192,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Deprecated"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public static class LegacyURIs {"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN \u003d \"/page/instructorCourseJoin\";"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN \u003d \"/page/studentCourseJoin\";"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_NEW \u003d \"/page/studentCourseJoinAuthentication\";"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d \"/page/instructorHomePage\";"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d \"/page/studentHomePage\";"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/studentFeedbackSubmissionEditPage\";"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public static final String STUDENT_FEEDBACK_RESULTS_PAGE \u003d \"/page/studentFeedbackResultsPage\";"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_SUBMISSION_EDIT_PAGE \u003d \"/page/instructorFeedbackSubmissionEditPage\";"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_FEEDBACK_RESULTS_PAGE \u003d \"/page/instructorFeedbackResultsPage\";"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static class WebPageURIs {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public static final String LOGOUT \u003d \"/logout\";"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/web\";"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        private static final String STUDENT_PAGE \u003d URI_PREFIX + \"/\" + EntityType.STUDENT;"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        private static final String INSTRUCTOR_PAGE \u003d URI_PREFIX + \"/\" + EntityType.INSTRUCTOR;"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        private static final String ADMIN_PAGE \u003d URI_PREFIX + \"/\" + EntityType.ADMIN;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        private static final String FRONT_PAGE \u003d URI_PREFIX + \"/front\";"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public static final String JOIN_PAGE \u003d URI_PREFIX + \"/join\";"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public static final String ADMIN_HOME_PAGE \u003d ADMIN_PAGE + \"/home\";"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public static final String ADMIN_ACCOUNTS_PAGE \u003d ADMIN_PAGE + \"/accounts\";"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SEARCH_PAGE \u003d ADMIN_PAGE + \"/search\";"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public static final String ADMIN_SESSIONS_PAGE \u003d ADMIN_PAGE + \"/sessions\";"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public static final String ADMIN_TIMEZONE_PAGE \u003d ADMIN_PAGE + \"/timezone\";"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_HOME_PAGE \u003d INSTRUCTOR_PAGE + \"/home\";"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SEARCH_PAGE \u003d INSTRUCTOR_PAGE + \"/search\";"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSIONS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions\";"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_SUBMISSION_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/submission\";"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/edit\";"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_SESSION_RESULTS_PAGE \u003d INSTRUCTOR_PAGE + \"/sessions/result\";"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSES_PAGE \u003d INSTRUCTOR_PAGE + \"/courses\";"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/details\";"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/edit\";"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_ENROLL_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/enroll\";"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/details\";"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_STUDENT_DETAILS_EDIT_PAGE \u003d INSTRUCTOR_PAGE + \"/courses/student/edit\";"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_LIST_PAGE \u003d INSTRUCTOR_PAGE + \"/students\";"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_STUDENT_RECORDS_PAGE \u003d INSTRUCTOR_PAGE + \"/students/records\";"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public static final String STUDENT_HOME_PAGE \u003d STUDENT_PAGE + \"/home\";"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_DETAILS_PAGE \u003d STUDENT_PAGE + \"/course\";"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PAGE \u003d STUDENT_PAGE + \"/profile\";"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_SUBMISSION_PAGE \u003d STUDENT_PAGE + \"/sessions/submission\";"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public static final String STUDENT_SESSION_RESULTS_PAGE \u003d STUDENT_PAGE + \"/sessions/result\";"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public static final String SESSION_RESULTS_PAGE \u003d URI_PREFIX + \"/sessions/result\";"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMISSION_PAGE \u003d URI_PREFIX + \"/sessions/submission\";"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_LINK_RECOVERY_PAGE \u003d FRONT_PAGE + \"/help/session-links-recovery\";"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public static class ResourceURIs {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/webapi\";"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE \u003d URI_PREFIX + \"/databundle\";"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public static final String DATABUNDLE_DOCUMENTS \u003d URI_PREFIX + \"/databundle/documents\";"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public static final String EXCEPTION \u003d URI_PREFIX + \"/exception\";"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public static final String ERROR_REPORT \u003d URI_PREFIX + \"/errorreport\";"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public static final String AUTH \u003d URI_PREFIX + \"/auth\";"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public static final String AUTH_REGKEY \u003d URI_PREFIX + \"/auth/regkey\";"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT \u003d URI_PREFIX + \"/account\";"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_RESET \u003d URI_PREFIX + \"/account/reset\";"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public static final String ACCOUNT_DOWNGRADE \u003d URI_PREFIX + \"/account/downgrade\";"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public static final String RESPONSE_COMMENT \u003d URI_PREFIX + \"/responsecomment\";"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public static final String COURSE \u003d URI_PREFIX + \"/course\";"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public static final String COURSE_ARCHIVE \u003d URI_PREFIX + \"/course/archive\";"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public static final String BIN_COURSE \u003d URI_PREFIX + \"/bin/course\";"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        public static final String COURSE_SECTIONS \u003d URI_PREFIX + \"/course/sections\";"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public static final String COURSES \u003d URI_PREFIX + \"/courses\";"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTORS \u003d URI_PREFIX + \"/instructors\";"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR \u003d URI_PREFIX + \"/instructor\";"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_PRIVILEGE \u003d URI_PREFIX + \"/instructor/privilege\";"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        public static final String RESULT \u003d URI_PREFIX + \"/result\";"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public static final String STUDENTS \u003d URI_PREFIX + \"/students\";"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public static final String STUDENT \u003d URI_PREFIX + \"/student\";"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public static final String SESSIONS_ONGOING \u003d URI_PREFIX + \"/sessions/ongoing\";"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public static final String SESSION \u003d URI_PREFIX + \"/session\";"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public static final String SESSION_PUBLISH \u003d URI_PREFIX + \"/session/publish\";"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_SUBMISSION \u003d URI_PREFIX + \"/session/remind/submission\";"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        public static final String SESSION_REMIND_RESULT \u003d URI_PREFIX + \"/session/remind/result\";"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public static final String SESSION_STATS \u003d URI_PREFIX + \"/session/stats\";"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public static final String SESSION_SUBMITTED_GIVER_SET \u003d URI_PREFIX + \"/session/submitted/giverset\";"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public static final String SESSIONS \u003d URI_PREFIX + \"/sessions\";"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public static final String SEARCH_INSTRUCTORS \u003d URI_PREFIX + \"/search/instructors\";"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public static final String SEARCH_STUDENTS \u003d URI_PREFIX + \"/search/students\";"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public static final String BIN_SESSION \u003d URI_PREFIX + \"/bin/session\";"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        public static final String QUESTIONS \u003d URI_PREFIX + \"/questions\";"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        public static final String QUESTION \u003d URI_PREFIX + \"/question\";"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        public static final String QUESTION_RECIPIENTS \u003d URI_PREFIX + \"/question/recipients\";"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public static final String RESPONSES \u003d URI_PREFIX + \"/responses\";"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        public static final String HAS_RESPONSES \u003d URI_PREFIX + \"/hasResponses\";"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        public static final String JOIN \u003d URI_PREFIX + \"/join\";"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public static final String JOIN_REMIND \u003d URI_PREFIX + \"/join/remind\";"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public static final String TIMEZONE \u003d URI_PREFIX + \"/timezone\";"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public static final String LOCAL_DATE_TIME \u003d URI_PREFIX + \"/localdatetime\";"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        public static final String SESSION_LINKS_RECOVERY \u003d URI_PREFIX + \"/sessionlinksrecovery\";"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        public static final String NATIONALITIES \u003d URI_PREFIX + \"/nationalities\";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public static final String EMAIL \u003d URI_PREFIX + \"/email\";"},{"lineNumber":298,"author":{"gitId":"AdithyaNarayan"},"content":"        public static final String SESSION_LOGS \u003d URI_PREFIX + \"/logs/session\";"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE_PICTURE \u003d URI_PREFIX + \"/student/profilePic\";"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public static final String STUDENT_PROFILE \u003d URI_PREFIX + \"/student/profile\";"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_LINKS_REGENERATION \u003d URI_PREFIX + \"/student/courselinks/regeneration\";"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    public static class CronJobURIs {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        private static final String URI_PREFIX \u003d \"/auto\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_LOG_COMPILATION \u003d URI_PREFIX + \"/compileLogs\";"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_DATASTORE_BACKUP \u003d URI_PREFIX + \"/datastoreBackup\";"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_OPENING_REMINDERS \u003d"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionOpeningReminders\";"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSED_REMINDERS \u003d"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosedReminders\";"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_CLOSING_REMINDERS \u003d"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionClosingReminders\";"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        public static final String AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS \u003d"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedReminders\";"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Configurations for task queue."},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    public static class TaskQueue {"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        public static final String URI_PREFIX \u003d \"/worker\";"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                \"feedback-session-published-email-queue\";"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionPublishedEmail\";"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                \"feedback-session-resend-published-email-queue\";"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionResendPublishedEmail\";"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_QUEUE_NAME \u003d \"feedback-session-remind-email-queue\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/feedbackSessionRemindEmail\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                \"feedback-session-remind-particular-users-email-queue\";"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL \u003d"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionRemindParticularUsersEmail\";"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_QUEUE_NAME \u003d"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                \"feedback-session-unpublished-email-queue\";"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        public static final String FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL \u003d"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                URI_PREFIX + \"/feedbackSessionUnpublishedEmail\";"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"instructor-course-join-email-queue\";"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        public static final String INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/instructorCourseJoinEmail\";"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_QUEUE_NAME \u003d \"send-email-queue\";"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        public static final String SEND_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/sendEmail\";"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_QUEUE_NAME \u003d \"student-course-join-email-queue\";"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        public static final String STUDENT_COURSE_JOIN_EMAIL_WORKER_URL \u003d URI_PREFIX + \"/studentCourseJoinEmail\";"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":1,"halfwhole":6,"AdithyaNarayan":3,"-":350}},{"path":"src/main/java/teammates/common/util/JsonUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.lang.reflect.Type;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.google.gson.Gson;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.google.gson.GsonBuilder;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.gson.JsonDeserializationContext;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.gson.JsonDeserializer;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.gson.JsonElement;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.gson.JsonParser;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.gson.JsonPrimitive;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializationContext;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.gson.JsonSerializer;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionDetails;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackResponseDetails;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Provides means to handle, manipulate, and convert JSON objects to/from strings."},{"lineNumber":25,"author":{"gitId":"-"},"content":" */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public final class JsonUtils {"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private JsonUtils() {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // utility class"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * This creates a Gson object that can handle the Date format we use in the"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Json file and also reformat the Json string in pretty-print format."},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static Gson getGsonInstance(boolean prettyPrint) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        GsonBuilder builder \u003d new GsonBuilder()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(Instant.class, new InstantAdapter())"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(ZoneId.class, new ZoneIdAdapter())"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(Duration.class, new DurationMinutesAdapter())"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(FeedbackQuestionDetails.class, new FeedbackQuestionDetailsAdapter())"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .registerTypeAdapter(FeedbackResponseDetails.class, new FeedbackResponseDetailsAdapter())"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .disableHtmlEscaping();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (prettyPrint) {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            builder.setPrettyPrinting();"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return builder.create();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Serializes and pretty-prints the specified object into its equivalent JSON string."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @see Gson#toJson(Object, Type)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String toJson(Object src, Type typeOfSrc) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return getGsonInstance(true).toJson(src, typeOfSrc);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Serializes and pretty-prints the specified object into its equivalent JSON string."},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @see Gson#toJson(Object)"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static String toJson(Object src) {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return getGsonInstance(true).toJson(src);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Serializes the specified object into its equivalent JSON string."},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @see Gson#toJson(Object)"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String toCompactJson(Object src) {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return getGsonInstance(false).toJson(src);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"moziliar"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"moziliar"},"content":"     * Serializes the specified object into its equivalent JSON string and stream into a writer."},{"lineNumber":79,"author":{"gitId":"moziliar"},"content":"     * This is done to reduce the memory consumption when creating object across call stack."},{"lineNumber":80,"author":{"gitId":"moziliar"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"moziliar"},"content":"     * @see Gson#toJson(Object, Appendable)"},{"lineNumber":82,"author":{"gitId":"moziliar"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"moziliar"},"content":"    public static void toCompactJson(Object src, Appendable writer) {"},{"lineNumber":84,"author":{"gitId":"moziliar"},"content":"        getGsonInstance(false).toJson(src, writer);"},{"lineNumber":85,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Deserializes the specified JSON string into an object of the specified type."},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @see Gson#fromJson(String, Type)"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJson(String json, Type typeOfT) {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return getGsonInstance(false).fromJson(json, typeOfT);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses the specified JSON string into a {@link JsonElement} object."},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see JsonParser#parseString(String)"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static JsonElement parse(String json) {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return JsonParser.parseString(json);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private static class InstantAdapter implements JsonSerializer\u003cInstant\u003e, JsonDeserializer\u003cInstant\u003e {"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public JsonElement serialize(Instant instant, Type type, JsonSerializationContext context) {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                return new JsonPrimitive(DateTimeFormatter.ISO_INSTANT.format(instant));"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Instant deserialize(JsonElement element, Type type, JsonDeserializationContext context) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                return Instant.parse(element.getAsString());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private static class ZoneIdAdapter implements JsonSerializer\u003cZoneId\u003e, JsonDeserializer\u003cZoneId\u003e {"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public JsonElement serialize(ZoneId zoneId, Type type, JsonSerializationContext context) {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                return new JsonPrimitive(zoneId.getId());"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public ZoneId deserialize(JsonElement element, Type type, JsonDeserializationContext context) {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                return ZoneId.of(element.getAsString());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static class DurationMinutesAdapter implements JsonSerializer\u003cDuration\u003e, JsonDeserializer\u003cDuration\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public JsonElement serialize(Duration duration, Type type, JsonSerializationContext context) {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                return new JsonPrimitive(duration.toMinutes());"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public Duration deserialize(JsonElement element, Type type, JsonDeserializationContext context) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            synchronized (this) {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                return Duration.ofMinutes(element.getAsLong());"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class FeedbackResponseDetailsAdapter implements JsonSerializer\u003cFeedbackResponseDetails\u003e,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            JsonDeserializer\u003cFeedbackResponseDetails\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public JsonElement serialize(FeedbackResponseDetails src, Type typeOfSrc, JsonSerializationContext context) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return context.serialize(src, src.getQuestionType().getResponseDetailsClass());"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public FeedbackResponseDetails deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            FeedbackQuestionType questionType \u003d"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    FeedbackQuestionType.valueOf(json.getAsJsonObject().get(\"questionType\").getAsString());"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return context.deserialize(json, questionType.getResponseDetailsClass());"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private static class FeedbackQuestionDetailsAdapter implements JsonSerializer\u003cFeedbackQuestionDetails\u003e,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            JsonDeserializer\u003cFeedbackQuestionDetails\u003e {"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public JsonElement serialize(FeedbackQuestionDetails src, Type typeOfSrc, JsonSerializationContext context) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return context.serialize(src, src.getQuestionType().getQuestionDetailsClass());"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public FeedbackQuestionDetails deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            FeedbackQuestionType questionType \u003d"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    FeedbackQuestionType.valueOf(json.getAsJsonObject().get(\"questionType\").getAsString());"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return context.deserialize(json, questionType.getQuestionDetailsClass());"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":10,"-":178}},{"path":"src/main/java/teammates/common/util/TimeHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.lang.reflect.Field;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.time.OffsetDateTime;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.ZonedDateTime;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.time.zone.ZoneRulesProvider;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.exception.TeammatesException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A helper class to hold time-related functions (e.g., converting dates to strings etc.)."},{"lineNumber":17,"author":{"gitId":"-"},"content":" *"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * \u003cp\u003eTime zone is assumed as UTC unless specifically mentioned."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public final class TimeHelper {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private TimeHelper() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // utility class"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Registers the zone rules loaded from resources via {@link TzdbResourceZoneRulesProvider}."},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Some manipulation of the system class loader is required to enable loading of a custom"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * {@link ZoneRulesProvider} in GAE."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void registerResourceZoneRules() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            ClassLoader originalScl \u003d ClassLoader.getSystemClassLoader();"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"            // ZoneRulesProvider uses the system class loader for loading a custom provider as the default provider."},{"lineNumber":38,"author":{"gitId":"-"},"content":"            // However, GAE\u0027s system class loader includes only the Java runtime and not the application. Hence, we"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            // use reflection to temporarily replace the system class loader with the class loader for the current context."},{"lineNumber":40,"author":{"gitId":"-"},"content":"            Field scl \u003d ClassLoader.class.getDeclaredField(\"scl\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            scl.setAccessible(true);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            scl.set(null, Thread.currentThread().getContextClassLoader());"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"            // ZoneRulesProvider reads this system property to determine which provider to use as the default."},{"lineNumber":45,"author":{"gitId":"-"},"content":"            System.setProperty(\"java.time.zone.DefaultZoneRulesProvider\","},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    TzdbResourceZoneRulesProvider.class.getCanonicalName());"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"            // This first reference to ZoneRulesProvider executes the class\u0027s static initialization block,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            // performing the actual registration of our custom provider named in the system property above."},{"lineNumber":50,"author":{"gitId":"-"},"content":"            // The system class loader is used to load the class from the name."},{"lineNumber":51,"author":{"gitId":"-"},"content":"            // If any exceptions occur, an Error is thrown."},{"lineNumber":52,"author":{"gitId":"-"},"content":"            log.info(\"Registered zone rules version \" + ZoneRulesProvider.getVersions(\"UTC\").firstKey());"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"            // Restore the original system class loader."},{"lineNumber":55,"author":{"gitId":"-"},"content":"            scl.set(null, originalScl);"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (ReflectiveOperationException | Error e) {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            log.severe(\"Failed to register zone rules: \" + TeammatesException.toStringWithStackTrace(e));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an Instant that is offset by a number of days from now."},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param offsetInDays integer number of days to offset by"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @return an Instant offset by {@code offsetInDays} days"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Instant getInstantDaysOffsetFromNow(long offsetInDays) {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Instant.now().plus(Duration.ofDays(offsetInDays));"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":"     * Returns an Instant that is offset by a number of days before now."},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"     * @param offsetInDays integer number of days to offset by"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"     * @return an Instant offset by {@code offsetInDays} days"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"    public static Instant getInstantDaysOffsetBeforeNow(long offsetInDays) {"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":"        return Instant.now().minus(Duration.ofDays(offsetInDays));"},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Formats a datetime stamp from an {@code instant} using a formatting pattern."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * \u003cp\u003eNote: a formatting pattern containing \u0027a\u0027 (for the period; AM/PM) is treated differently at noon/midday."},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Using that pattern with a datetime whose time falls on \"12:00 PM\" will cause it to be formatted as \"12:00 NOON\".\u003c/p\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param instant  the instant to be formatted"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param timeZone the time zone to compute local datetime"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param pattern  formatting pattern, see Oracle docs for DateTimeFormatter for pattern table"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @return the formatted datetime stamp string"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static String formatInstant(Instant instant, ZoneId timeZone, String pattern) {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (instant \u003d\u003d null || timeZone \u003d\u003d null || pattern \u003d\u003d null) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return \"\";"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ZonedDateTime zonedDateTime \u003d instant.atZone(timeZone);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String processedPattern \u003d pattern;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (zonedDateTime.getHour() \u003d\u003d 12 \u0026\u0026 zonedDateTime.getMinute() \u003d\u003d 0) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            processedPattern \u003d pattern.replace(\"a\", \"\u0027NOON\u0027\");"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(processedPattern);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return zonedDateTime.format(formatter);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns whether the given {@code instant} is being used as a special representation, signifying its face value"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * should not be used without proper processing."},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * \u003cp\u003eA {@code null} instant is not a special time.\u003c/p\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @param instant the instant to test"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @return {@code true} if the given instant is used as a special representation, {@code false} otherwise"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static boolean isSpecialTime(Instant instant) {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (instant \u003d\u003d null) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return instant.equals(Const.TIME_REPRESENTS_FOLLOW_OPENING)"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                || instant.equals(Const.TIME_REPRESENTS_FOLLOW_VISIBLE)"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                || instant.equals(Const.TIME_REPRESENTS_LATER)"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || instant.equals(Const.TIME_REPRESENTS_NOW);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses an {@code Instant} object from a datetime string in the ISO 8601 format."},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return the parsed {@code Instant} object"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @throws AssertionError if there is a parsing error"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://www.w3.org/TR/NOTE-datetime\"\u003ehttps://www.w3.org/TR/NOTE-datetime\u003c/a\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Instant parseInstant(String dateTimeString) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return OffsetDateTime.parse(dateTimeString).toInstant();"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Assumption.fail(\"Date in String is in wrong format.\");"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":10,"-":132}},{"path":"src/main/java/teammates/logic/api/EmailGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.AppUrl;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates.EmailTemplates;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Handles operations related to generating emails to be sent from provided templates."},{"lineNumber":36,"author":{"gitId":"-"},"content":" *"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * @see EmailTemplates"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * @see EmailType"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * @see EmailWrapper"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EmailGenerator {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // status-related strings"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_OPEN \u003d \"is still open for submissions\";"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_OPENING \u003d \"is now open\";"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_CLOSING \u003d \"is closing soon\";"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_STATUS_SESSION_CLOSED \u003d"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \"is now closed. You can still view your submission by going to the link sent earlier, \""},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"but you will not be able to edit existing responses or submit new responses\";"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // feedback action strings"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW \u003d \"submit, edit or view\";"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String FEEDBACK_ACTION_VIEW \u003d \"view\";"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String HTML_NO_ACTION_REQUIRED \u003d"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \"\u003cp\u003eNo action is required if you have already submitted.\u003c/p\u003e\" + System.lineSeparator();"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String DATETIME_DISPLAY_FORMAT \u003d \"EEE, dd MMM yyyy, hh:mm a z\";"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Generates the feedback session opening emails for the given {@code session}."},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionOpeningEmails(FeedbackSessionAttributes session) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION;"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionForStudentsToAnswer(session);"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                                                      EmailType.FEEDBACK_OPENING.getSubject());"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            email.setContent(email.getContent().replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPENING));"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Generates the feedback session reminder emails for the given {@code session} for {@code students}"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * and {@code instructorsToRemind}. In addition, the emails will also be forwarded to {@code instructorsToNotify}."},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionReminderEmails("},{"lineNumber":93,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorsToRemind, InstructorAttributes instructorToNotify) {"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPEN);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructorToNotifyAsList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        instructorToNotifyAsList.add(instructorToNotify);"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                generateFeedbackSessionEmailBasesForInstructorReminders(course, session, instructorsToRemind, template,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                        EmailType.FEEDBACK_SESSION_REMINDER.getSubject(), additionalContactInformation);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        emails.addAll(generateFeedbackSessionEmailBases(course, session, students, instructorToNotifyAsList, template,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                                                        EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                                                        FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation));"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Generates the feedback session reminder emails for the given {@code student}."},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public EmailWrapper generateFeedbackSessionStudentReminderEmail("},{"lineNumber":116,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes session, StudentAttributes student) {"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_OPEN);"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBaseForStudents(course, session, student, template,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Generates the email containing the summary of the feedback sessions"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * email for the given {@code courseId} for {@code student}."},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @param courseId - ID of the course"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @param studentEmail - Email of student to send feedback session summary to"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @param resendLinksTemplate - The email template including the reason behind why the links are being resent"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public EmailWrapper generateFeedbackSessionSummaryOfCourse("},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String courseId, String studentEmail, String resendLinksTemplate) {"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(courseId);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, studentEmail);"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e sessions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e fsInCourse \u003d fsLogic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : fsInCourse) {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            if (fsa.isSentOpenEmail() || fsa.isSentPublishedEmail()) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                sessions.add(fsa);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        StringBuffer linksFragmentValue \u003d new StringBuffer(1000);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String joinFragmentValue \u003d isYetToJoinCourse(student)"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                                   ? Templates.populateTemplate(EmailTemplates.FRAGMENT_STUDENT_COURSE_JOIN,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                                           \"${joinUrl}\", joinUrl,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                                           \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                                           \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()))"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                   : \"\";"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes fsa : sessions) {"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"            String submitUrlHtml \u003d \"(Feedback session is not yet opened)\";"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String reportUrlHtml \u003d \"(Feedback session is not yet published)\";"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"            if (fsa.isOpened() || fsa.isClosed()) {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                        .withSessionName(fsa.getFeedbackSessionName())"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                submitUrlHtml \u003d \"\u003ca href\u003d\\\"\" + submitUrl + \"\\\"\u003e\" + submitUrl + \"\u003c/a\u003e\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"            if (fsa.isPublished()) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                        .withSessionName(fsa.getFeedbackSessionName())"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                reportUrlHtml \u003d \"\u003ca href\u003d\\\"\" + reportUrl + \"\\\"\u003e\" + reportUrl + \"\u003c/a\u003e\";"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(Templates.populateTemplate("},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    EmailTemplates.FRAGMENT_SINGLE_FEEDBACK_SESSION_LINKS,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    \"${feedbackSessionName}\", fsa.getFeedbackSessionName(),"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                    \"${deadline}\", TimeHelper.formatInstant(fsa.getEndTime(), fsa.getTimeZone(), DATETIME_DISPLAY_FORMAT)"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                            + (fsa.isClosed() ? \" (Passed)\" : \"\"),"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    \"${submitUrl}\", submitUrlHtml,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \"${reportUrl}\", reportUrlHtml));"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (linksFragmentValue.length() \u003d\u003d 0) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(\"No links found.\");"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(resendLinksTemplate,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \"${userEmail}\", student.email,"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \"${courseId}\", course.getId(),"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", joinFragmentValue,"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \"${linksFragment}\", linksFragmentValue.toString(),"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // Set appropriate email subject, depending on the email template"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (resendLinksTemplate.equals(Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS)) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            email.setSubject(String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId()));"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } else if (resendLinksTemplate.equals(Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS)) {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            email.setSubject(String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(),"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                                                                                    course.getName(), course.getId()));"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Generates for the student an recovery email listing the links to submit/view responses for all feedback sessions"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * under {@code recoveryEmailAddress} in the past 180 days. If no student with {@code recoveryEmailAddress} is"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * found, generate an email stating that there is no such student in the system. If no feedback sessions are found,"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * generate an email stating no feedback sessions found."},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public EmailWrapper generateSessionLinksRecoveryEmailForStudent(String recoveryEmailAddress) {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentsForEmail \u003d studentsLogic.getAllStudentsForEmail(recoveryEmailAddress);"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (studentsForEmail.isEmpty()) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return generateSessionLinksRecoveryEmailForNonExistentStudent(recoveryEmailAddress);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return generateSessionLinksRecoveryEmailForExistingStudent(recoveryEmailAddress, studentsForEmail);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":237,"author":{"gitId":"-"},"content":""},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBasesForInstructorReminders("},{"lineNumber":239,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cInstructorAttributes\u003e instructors,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            String template, String subject, String additionalContactInformation) {"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new ArrayList\u003c\u003e();"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForInstructorReminders(course, session, instructor,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    template, subject, additionalContactInformation));"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private EmailWrapper generateSessionLinksRecoveryEmailForNonExistentStudent(String recoveryEmailAddress) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        String emailBody;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        String recoveryUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSIONS_LINK_RECOVERY_PAGE).toAbsoluteString();"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        emailBody \u003d Templates.populateTemplate("},{"lineNumber":255,"author":{"gitId":"-"},"content":"                EmailTemplates.SESSION_LINKS_RECOVERY_EMAIL_NOT_FOUND,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(recoveryEmailAddress);"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        email.setSubject(subject);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"    private EmailWrapper generateSessionLinksRecoveryEmailForExistingStudent(String recoveryEmailAddress,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                                                                             List\u003cStudentAttributes\u003e studentsForEmail) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        String emailBody;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Instant endTime \u003d Instant.now();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        Instant startTime \u003d endTime.minus(Duration.ofDays(180));"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        Map\u003cString, StringBuilder\u003e linkFragmentsMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        String studentName \u003d null;"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        List\u003cFeedbackSessionAttributes\u003e sessions \u003d fsLogic.getAllFeedbackSessionsWithinTimeRange(startTime, endTime);"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        for (FeedbackSessionAttributes session : sessions) {"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            String courseId \u003d session.getCourseId();"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            CourseAttributes course \u003d coursesLogic.getCourse(courseId);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students \u003d studentsForEmail.stream().filter("},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    each -\u003e each.course.equals(courseId)).collect(Collectors.toList());"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            StringBuilder linksFragmentValue;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            if (linkFragmentsMap.containsKey(courseId)) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                linksFragmentValue \u003d linkFragmentsMap.get(courseId);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                linksFragmentValue \u003d new StringBuilder(5000);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":289,"author":{"gitId":"-"},"content":""},{"lineNumber":290,"author":{"gitId":"-"},"content":"            if (students.size() !\u003d 1) {"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                continue;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"            StudentAttributes student \u003d students.get(0);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            studentName \u003d student.getName();"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            String submitUrlHtml \u003d \"\";"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            String reportUrlHtml \u003d \"\";"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"            if (session.isOpened() || session.isClosed()) {"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                        .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                submitUrlHtml \u003d \"[\u003ca href\u003d\\\"\" + submitUrl + \"\\\"\u003esubmission link\u003c/a\u003e]\";"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (session.isPublished()) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                        .withCourseId(course.getId())"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                        .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                        .withStudentEmail(student.email)"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        .toAbsoluteString();"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                reportUrlHtml \u003d \"[\u003ca href\u003d\\\"\" + reportUrl + \"\\\"\u003eresult link\u003c/a\u003e]\";"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"            linksFragmentValue.append(Templates.populateTemplate("},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    EmailTemplates.FRAGMENT_SESSION_LINKS_RECOVERY_ACCESS_LINKS_BY_SESSION,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    \"${sessionName}\", session.getFeedbackSessionName(),"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    \"${submitUrl}\", submitUrlHtml,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                    \"${reportUrl}\", reportUrlHtml));"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"            linkFragmentsMap.putIfAbsent(courseId, linksFragmentValue);"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        String recoveryUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSIONS_LINK_RECOVERY_PAGE).toAbsoluteString();"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        if (linkFragmentsMap.isEmpty()) {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            emailBody \u003d Templates.populateTemplate("},{"lineNumber":331,"author":{"gitId":"-"},"content":"                    EmailTemplates.SESSION_LINKS_RECOVERY_ACCESS_LINKS_NONE,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                    \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                    \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":337,"author":{"gitId":"-"},"content":"            StringBuilder courseFragments \u003d new StringBuilder(10000);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            linkFragmentsMap.forEach((courseId, linksFragments) -\u003e {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                String courseBody \u003d Templates.populateTemplate("},{"lineNumber":340,"author":{"gitId":"-"},"content":"                        EmailTemplates.FRAGMENT_SESSION_LINKS_RECOVERY_ACCESS_LINKS_BY_COURSE,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                        \"${sessionFragment}\", linksFragments.toString(),"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                        \"${courseName}\", coursesLogic.getCourse(courseId).getName());"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                courseFragments.append(courseBody);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":345,"author":{"gitId":"-"},"content":"            emailBody \u003d Templates.populateTemplate("},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    EmailTemplates.SESSION_LINKS_RECOVERY_ACCESS_LINKS,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    \"${userName}\", SanitizationHelper.sanitizeForHtml(studentName),"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                    \"${linksFragment}\", courseFragments.toString(),"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                    \"${userEmail}\", SanitizationHelper.sanitizeForHtml(recoveryEmailAddress),"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                    \"${teammateHomePageLink}\", Config.getFrontEndAppUrl(\"/\").toAbsoluteString(),"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                    \"${supportEmail}\", Config.SUPPORT_EMAIL,"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                    \"${sessionsRecoveryLink}\", recoveryUrl);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(recoveryEmailAddress);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        email.setSubject(subject);"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForInstructorReminders("},{"lineNumber":362,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, InstructorAttributes instructor,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            String template, String subject, String additionalContactInformation) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"        String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_SUBMISSION_PAGE)"},{"lineNumber":366,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_SESSION_RESULTS_PAGE)"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":373,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":374,"author":{"gitId":"-"},"content":""},{"lineNumber":375,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.name),"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":381,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", \"\","},{"lineNumber":383,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", submitUrl,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", reportUrl,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.email);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":396,"author":{"gitId":"-"},"content":"     * Generates the feedback session closing emails for the given {@code session}."},{"lineNumber":397,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionClosingEmails(FeedbackSessionAttributes session) {"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d new ArrayList\u003c\u003e();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionForStudentsToAnswer(session);"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"        if (isEmailNeeded) {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentsForCourse \u003d studentsLogic.getStudentsForCourse(session.getCourseId());"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsForCourse) {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                    if (!fsLogic.isFeedbackSessionAttemptedByStudent(session.getFeedbackSessionName(),"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                            session.getCourseId(), student.email)) {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                        students.add(student);"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                    }"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                } catch (EntityDoesNotExistException e) {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                    log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":414,"author":{"gitId":"-"},"content":"                               + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    // Course or session cannot be found for one student \u003d\u003e it will be the case for all students"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                    // Do not waste time looping through all students"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                    break;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"-"},"content":""},{"lineNumber":422,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_CLOSING);"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":427,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d HTML_NO_ACTION_REQUIRED + getAdditionalContactInformationFragment(course);"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_CLOSING.getSubject(), FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":433,"author":{"gitId":"-"},"content":"     * Generates the feedback session closed emails for the given {@code session}."},{"lineNumber":434,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionClosedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":436,"author":{"gitId":"-"},"content":""},{"lineNumber":437,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        boolean isEmailNeededForStudents \u003d false;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            isEmailNeededForStudents \u003d fsLogic.isFeedbackSessionHasQuestionForStudents("},{"lineNumber":441,"author":{"gitId":"-"},"content":"                    session.getFeedbackSessionName(), session.getCourseId());"},{"lineNumber":442,"author":{"gitId":"-"},"content":"        } catch (EntityDoesNotExistException e) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":444,"author":{"gitId":"-"},"content":"                    + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeededForStudents"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":449,"author":{"gitId":"daongochieu2810"},"content":"        List\u003cStudentAttributes\u003e studentsForCourse \u003d isEmailNeededForStudents"},{"lineNumber":450,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":451,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":452,"author":{"gitId":"daongochieu2810"},"content":"        ArrayList\u003cStudentAttributes\u003e studentsToEmail \u003d new ArrayList\u003c\u003e();"},{"lineNumber":453,"author":{"gitId":"daongochieu2810"},"content":"        for (StudentAttributes student : studentsForCourse) {"},{"lineNumber":454,"author":{"gitId":"daongochieu2810"},"content":"            try {"},{"lineNumber":455,"author":{"gitId":"daongochieu2810"},"content":"                if (!fsLogic.isFeedbackSessionAttemptedByStudent(session.getFeedbackSessionName(),"},{"lineNumber":456,"author":{"gitId":"daongochieu2810"},"content":"                        session.getCourseId(), student.email)) {"},{"lineNumber":457,"author":{"gitId":"daongochieu2810"},"content":"                    studentsToEmail.add(student);"},{"lineNumber":458,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":459,"author":{"gitId":"daongochieu2810"},"content":"            } catch (EntityDoesNotExistException e) {"},{"lineNumber":460,"author":{"gitId":"daongochieu2810"},"content":"                log.severe(\"Course \" + session.getCourseId() + \" does not exist or \""},{"lineNumber":461,"author":{"gitId":"daongochieu2810"},"content":"                        + \"session \" + session.getFeedbackSessionName() + \" does not exist\");"},{"lineNumber":462,"author":{"gitId":"daongochieu2810"},"content":"                // Course or session cannot be found for one student \u003d\u003e it will be the case for all students"},{"lineNumber":463,"author":{"gitId":"daongochieu2810"},"content":"                // Do not waste time looping through all students"},{"lineNumber":464,"author":{"gitId":"daongochieu2810"},"content":"                break;"},{"lineNumber":465,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":466,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION.replace(\"${status}\", FEEDBACK_STATUS_SESSION_CLOSED);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":470,"author":{"gitId":"daongochieu2810"},"content":"        return generateFeedbackSessionEmailBases(course, session, studentsToEmail, instructors, template,"},{"lineNumber":471,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_CLOSED.getSubject(), FEEDBACK_ACTION_VIEW, additionalContactInformation);"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":475,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code session}."},{"lineNumber":476,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionPublishedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionViewableToStudents(session);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":481,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":483,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":485,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionPublishedEmails(session, students, instructors);"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":490,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code students} and"},{"lineNumber":491,"author":{"gitId":"-"},"content":"     * {@code instructors} in {@code session}."},{"lineNumber":492,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":493,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionPublishedEmails(FeedbackSessionAttributes session,"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students, List\u003cInstructorAttributes\u003e instructors) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION_PUBLISHED;"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_PUBLISHED.getSubject(), FEEDBACK_ACTION_VIEW, additionalContactInformation);"},{"lineNumber":503,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":506,"author":{"gitId":"-"},"content":"     * Generates the feedback session published emails for the given {@code session}."},{"lineNumber":507,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    public List\u003cEmailWrapper\u003e generateFeedbackSessionUnpublishedEmails(FeedbackSessionAttributes session) {"},{"lineNumber":509,"author":{"gitId":"-"},"content":""},{"lineNumber":510,"author":{"gitId":"-"},"content":"        String template \u003d EmailTemplates.USER_FEEDBACK_SESSION_UNPUBLISHED;"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        boolean isEmailNeeded \u003d fsLogic.isFeedbackSessionViewableToStudents(session);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d isEmailNeeded"},{"lineNumber":515,"author":{"gitId":"-"},"content":"                                                 ? instructorsLogic.getInstructorsForCourse(session.getCourseId())"},{"lineNumber":516,"author":{"gitId":"-"},"content":"                                                 : new ArrayList\u003c\u003e();"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d isEmailNeeded"},{"lineNumber":518,"author":{"gitId":"-"},"content":"                                           ? studentsLogic.getStudentsForCourse(session.getCourseId())"},{"lineNumber":519,"author":{"gitId":"-"},"content":"                                           : new ArrayList\u003c\u003e();"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"                EmailType.FEEDBACK_UNPUBLISHED.getSubject());"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBases("},{"lineNumber":526,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructors, String template, String subject) {"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        String additionalContactInformation \u003d getAdditionalContactInformationFragment(course);"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        return generateFeedbackSessionEmailBases(course, session, students, instructors, template, subject,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"                FEEDBACK_ACTION_SUBMIT_EDIT_OR_VIEW, additionalContactInformation);"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":532,"author":{"gitId":"-"},"content":""},{"lineNumber":533,"author":{"gitId":"-"},"content":"    private List\u003cEmailWrapper\u003e generateFeedbackSessionEmailBases("},{"lineNumber":534,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, List\u003cStudentAttributes\u003e students,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructors, String template, String subject, String feedbackAction,"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            String additionalContactInformation) {"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new ArrayList\u003c\u003e();"},{"lineNumber":539,"author":{"gitId":"-"},"content":"        for (StudentAttributes student : students) {"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForStudents(course, session, student,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                    template, subject, feedbackAction, additionalContactInformation));"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        for (InstructorAttributes instructor : instructors) {"},{"lineNumber":544,"author":{"gitId":"-"},"content":"            emails.add(generateFeedbackSessionEmailBaseForInstructors(course, session, instructor,"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                    template, subject, feedbackAction, additionalContactInformation));"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        return emails;"},{"lineNumber":548,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForStudents("},{"lineNumber":551,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, StudentAttributes student, String template,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            String subject, String feedbackAction, String additionalContactInformation) {"},{"lineNumber":553,"author":{"gitId":"-"},"content":""},{"lineNumber":554,"author":{"gitId":"-"},"content":"        String submitUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_SUBMISSION_PAGE)"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":557,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":558,"author":{"gitId":"-"},"content":"                .withStudentEmail(student.email)"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"        String reportUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.SESSION_RESULTS_PAGE)"},{"lineNumber":562,"author":{"gitId":"-"},"content":"                .withCourseId(course.getId())"},{"lineNumber":563,"author":{"gitId":"-"},"content":"                .withSessionName(session.getFeedbackSessionName())"},{"lineNumber":564,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(student.key))"},{"lineNumber":565,"author":{"gitId":"-"},"content":"                .withStudentEmail(student.email)"},{"lineNumber":566,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":570,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":571,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":572,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":573,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":574,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", \"\","},{"lineNumber":576,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", submitUrl,"},{"lineNumber":578,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", reportUrl,"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", feedbackAction,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":581,"author":{"gitId":"-"},"content":""},{"lineNumber":582,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":587,"author":{"gitId":"-"},"content":""},{"lineNumber":588,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":589,"author":{"gitId":"-"},"content":"     * Generates the preamble for emails that are sent to students of course {@code courseId}"},{"lineNumber":590,"author":{"gitId":"-"},"content":"     * to be shown in the email copies that are sent to the instructors of the same course."},{"lineNumber":591,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    private String generateInstructorPreamble(String courseId, String courseName) {"},{"lineNumber":593,"author":{"gitId":"-"},"content":""},{"lineNumber":594,"author":{"gitId":"-"},"content":"        String courseIdentifier \u003d \"[\" + SanitizationHelper.sanitizeForHtml(courseId) + \"] \""},{"lineNumber":595,"author":{"gitId":"-"},"content":"                + SanitizationHelper.sanitizeForHtml(courseName);"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"        return \"\u003cp\u003eThe email below has been sent to students of course: \""},{"lineNumber":598,"author":{"gitId":"-"},"content":"            + courseIdentifier + \".\u003cbr\u003e\" + System.lineSeparator()"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            + \"\u003cbr\u003e\" + System.lineSeparator()"},{"lineNumber":600,"author":{"gitId":"-"},"content":"            + \"\u003d\u003d\u003d Email message as seen by the students \u003d\u003d\u003d\u003c/p\u003e\" + System.lineSeparator();"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":602,"author":{"gitId":"-"},"content":""},{"lineNumber":603,"author":{"gitId":"-"},"content":"    private EmailWrapper generateFeedbackSessionEmailBaseForInstructors("},{"lineNumber":604,"author":{"gitId":"-"},"content":"            CourseAttributes course, FeedbackSessionAttributes session, InstructorAttributes instructor,"},{"lineNumber":605,"author":{"gitId":"-"},"content":"            String template, String subject, String feedbackAction, String additionalContactInformation) {"},{"lineNumber":606,"author":{"gitId":"-"},"content":""},{"lineNumber":607,"author":{"gitId":"-"},"content":"        String instructorFragment \u003d generateInstructorPreamble(course.getId(), course.getName());"},{"lineNumber":608,"author":{"gitId":"-"},"content":""},{"lineNumber":609,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(template,"},{"lineNumber":610,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.name),"},{"lineNumber":611,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                \"${feedbackSessionName}\", SanitizationHelper.sanitizeForHtml(session.getFeedbackSessionName()),"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                \"${deadline}\", SanitizationHelper.sanitizeForHtml("},{"lineNumber":615,"author":{"gitId":"-"},"content":"                        TimeHelper.formatInstant(session.getEndTime(), session.getTimeZone(), DATETIME_DISPLAY_FORMAT)),"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                \"${instructorFragment}\", instructorFragment,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                \"${sessionInstructions}\", session.getInstructionsString(),"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                \"${submitUrl}\", \"{in the actual email sent to the students, this will be the unique link}\","},{"lineNumber":619,"author":{"gitId":"-"},"content":"                \"${reportUrl}\", \"{in the actual email sent to the students, this will be the unique link}\","},{"lineNumber":620,"author":{"gitId":"-"},"content":"                \"${feedbackAction}\", feedbackAction,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                \"${additionalContactInformation}\", additionalContactInformation);"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.email);"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(subject, course.getName(), session.getFeedbackSessionName()));"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":628,"author":{"gitId":"-"},"content":""},{"lineNumber":629,"author":{"gitId":"-"},"content":"    private boolean isYetToJoinCourse(StudentAttributes student) {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        return student.googleId \u003d\u003d null || student.googleId.isEmpty();"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":632,"author":{"gitId":"-"},"content":""},{"lineNumber":633,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":634,"author":{"gitId":"-"},"content":"     * Generates the new instructor account join email for the given {@code instructor}."},{"lineNumber":635,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    public EmailWrapper generateNewInstructorAccountJoinEmail("},{"lineNumber":637,"author":{"gitId":"-"},"content":"            String instructorEmail, String instructorName, String joinUrl) {"},{"lineNumber":638,"author":{"gitId":"-"},"content":""},{"lineNumber":639,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(EmailTemplates.NEW_INSTRUCTOR_ACCOUNT_WELCOME,"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructorName),"},{"lineNumber":641,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructorEmail);"},{"lineNumber":644,"author":{"gitId":"-"},"content":"        email.setBcc(Config.SUPPORT_EMAIL);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(),"},{"lineNumber":646,"author":{"gitId":"-"},"content":"                SanitizationHelper.sanitizeForHtml(instructorName)));"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":652,"author":{"gitId":"-"},"content":"     * Generates the course join email for the given {@code student} in {@code course}."},{"lineNumber":653,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    public EmailWrapper generateStudentCourseJoinEmail(CourseAttributes course, StudentAttributes student) {"},{"lineNumber":655,"author":{"gitId":"-"},"content":""},{"lineNumber":656,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":657,"author":{"gitId":"-"},"content":"                fillUpStudentJoinFragment(student, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":658,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":659,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":664,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(),"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":669,"author":{"gitId":"-"},"content":""},{"lineNumber":670,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":671,"author":{"gitId":"-"},"content":"     * Generates the course re-join email for the given {@code student} in {@code course}."},{"lineNumber":672,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    public EmailWrapper generateStudentCourseRejoinEmailAfterGoogleIdReset("},{"lineNumber":674,"author":{"gitId":"-"},"content":"            CourseAttributes course, StudentAttributes student) {"},{"lineNumber":675,"author":{"gitId":"-"},"content":""},{"lineNumber":676,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":677,"author":{"gitId":"-"},"content":"                fillUpStudentRejoinAfterGoogleIdResetFragment(student, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":678,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(student.name),"},{"lineNumber":679,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":680,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":681,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":682,"author":{"gitId":"-"},"content":""},{"lineNumber":683,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(student.email);"},{"lineNumber":684,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":685,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":691,"author":{"gitId":"-"},"content":"     * Generates the course join email for the given {@code instructor} in {@code course}."},{"lineNumber":692,"author":{"gitId":"-"},"content":"     * Also specifies contact information of {@code inviter}."},{"lineNumber":693,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    public EmailWrapper generateInstructorCourseJoinEmail(AccountAttributes inviter,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, CourseAttributes course) {"},{"lineNumber":696,"author":{"gitId":"-"},"content":""},{"lineNumber":697,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":698,"author":{"gitId":"-"},"content":"                fillUpInstructorJoinFragment(instructor, EmailTemplates.USER_COURSE_JOIN),"},{"lineNumber":699,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.getName()),"},{"lineNumber":700,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":701,"author":{"gitId":"-"},"content":"                \"${inviterName}\", SanitizationHelper.sanitizeForHtml(inviter.getName()),"},{"lineNumber":702,"author":{"gitId":"-"},"content":"                \"${inviterEmail}\", SanitizationHelper.sanitizeForHtml(inviter.getEmail()),"},{"lineNumber":703,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":704,"author":{"gitId":"-"},"content":""},{"lineNumber":705,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.getEmail());"},{"lineNumber":706,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(),"},{"lineNumber":707,"author":{"gitId":"-"},"content":"                                       course.getName(), course.getId()));"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":709,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":711,"author":{"gitId":"-"},"content":""},{"lineNumber":712,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":713,"author":{"gitId":"-"},"content":"     * Generates the course re-join email for the given {@code instructor} in {@code course}."},{"lineNumber":714,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":715,"author":{"gitId":"-"},"content":"    public EmailWrapper generateInstructorCourseRejoinEmailAfterGoogleIdReset("},{"lineNumber":716,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, CourseAttributes course, String institute) {"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate("},{"lineNumber":719,"author":{"gitId":"-"},"content":"                fillUpInstructorRejoinAfterGoogleIdResetFragment(instructor, EmailTemplates.USER_COURSE_JOIN, institute),"},{"lineNumber":720,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(instructor.getName()),"},{"lineNumber":721,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":722,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":723,"author":{"gitId":"-"},"content":""},{"lineNumber":724,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(instructor.getEmail());"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":726,"author":{"gitId":"-"},"content":"                course.getName(), course.getId()));"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":729,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":730,"author":{"gitId":"-"},"content":""},{"lineNumber":731,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":732,"author":{"gitId":"-"},"content":"     * Generates the course registered email for the user with the given details in {@code course}."},{"lineNumber":733,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    public EmailWrapper generateUserCourseRegisteredEmail("},{"lineNumber":735,"author":{"gitId":"-"},"content":"            String name, String emailAddress, String googleId, boolean isInstructor, CourseAttributes course) {"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        String emailBody \u003d Templates.populateTemplate(EmailTemplates.USER_COURSE_REGISTER,"},{"lineNumber":737,"author":{"gitId":"-"},"content":"                \"${userName}\", SanitizationHelper.sanitizeForHtml(name),"},{"lineNumber":738,"author":{"gitId":"-"},"content":"                \"${userType}\", isInstructor ? \"an instructor\" : \"a student\","},{"lineNumber":739,"author":{"gitId":"-"},"content":"                \"${courseId}\", SanitizationHelper.sanitizeForHtml(course.getId()),"},{"lineNumber":740,"author":{"gitId":"-"},"content":"                \"${courseName}\", SanitizationHelper.sanitizeForHtml(course.getName()),"},{"lineNumber":741,"author":{"gitId":"-"},"content":"                \"${googleId}\", SanitizationHelper.sanitizeForHtml(googleId),"},{"lineNumber":742,"author":{"gitId":"-"},"content":"                \"${appUrl}\", isInstructor"},{"lineNumber":743,"author":{"gitId":"-"},"content":"                        ? Config.getFrontEndAppUrl(Const.WebPageURIs.INSTRUCTOR_HOME_PAGE).toAbsoluteString()"},{"lineNumber":744,"author":{"gitId":"-"},"content":"                        : Config.getFrontEndAppUrl(Const.WebPageURIs.STUDENT_HOME_PAGE).toAbsoluteString(),"},{"lineNumber":745,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":746,"author":{"gitId":"-"},"content":""},{"lineNumber":747,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(emailAddress);"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":749,"author":{"gitId":"-"},"content":"                course.getName(), course.getId()));"},{"lineNumber":750,"author":{"gitId":"-"},"content":"        email.setContent(emailBody);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":752,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"    private String fillUpStudentJoinFragment(StudentAttributes student, String emailBody) {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":758,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_STUDENT_COURSE_JOIN,"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":761,"author":{"gitId":"-"},"content":""},{"lineNumber":762,"author":{"gitId":"-"},"content":"    private String fillUpStudentRejoinAfterGoogleIdResetFragment(StudentAttributes student, String emailBody) {"},{"lineNumber":763,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(student.getRegistrationUrl()).toAbsoluteString();"},{"lineNumber":764,"author":{"gitId":"-"},"content":""},{"lineNumber":765,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":766,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET,"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl,"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":769,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":770,"author":{"gitId":"-"},"content":""},{"lineNumber":771,"author":{"gitId":"-"},"content":"    private String fillUpInstructorJoinFragment(InstructorAttributes instructor, String emailBody) {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"        String joinUrl \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":773,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor.key))"},{"lineNumber":774,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":775,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":778,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_INSTRUCTOR_COURSE_JOIN,"},{"lineNumber":779,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl);"},{"lineNumber":780,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"    private String fillUpInstructorRejoinAfterGoogleIdResetFragment("},{"lineNumber":783,"author":{"gitId":"-"},"content":"            InstructorAttributes instructor, String emailBody, String institute) {"},{"lineNumber":784,"author":{"gitId":"-"},"content":"        AppUrl url \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":785,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor.key))"},{"lineNumber":786,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR);"},{"lineNumber":787,"author":{"gitId":"-"},"content":"        if (institute !\u003d null) {"},{"lineNumber":788,"author":{"gitId":"-"},"content":"            url \u003d url.withInstructorInstitution(institute);"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        String joinUrl \u003d url.toAbsoluteString();"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(emailBody,"},{"lineNumber":793,"author":{"gitId":"-"},"content":"                \"${joinFragment}\", EmailTemplates.FRAGMENT_INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET,"},{"lineNumber":794,"author":{"gitId":"-"},"content":"                \"${joinUrl}\", joinUrl,"},{"lineNumber":795,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":796,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":799,"author":{"gitId":"-"},"content":"     * Generates the logs compilation email for the given {@code logs}."},{"lineNumber":800,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    public EmailWrapper generateCompiledLogsEmail(List\u003cErrorLogEntry\u003e logs) {"},{"lineNumber":802,"author":{"gitId":"-"},"content":"        StringBuilder emailBody \u003d new StringBuilder();"},{"lineNumber":803,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c logs.size(); i++) {"},{"lineNumber":804,"author":{"gitId":"-"},"content":"            emailBody.append(generateSevereErrorLogLine(i, logs.get(i).message, logs.get(i).severity));"},{"lineNumber":805,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d getEmptyEmailAddressedToEmail(Config.SUPPORT_EMAIL);"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        email.setSubject(String.format(EmailType.SEVERE_LOGS_COMPILATION.getSubject(), Config.APP_VERSION));"},{"lineNumber":809,"author":{"gitId":"-"},"content":"        email.setContent(emailBody.toString());"},{"lineNumber":810,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":812,"author":{"gitId":"-"},"content":""},{"lineNumber":813,"author":{"gitId":"-"},"content":"    private String generateSevereErrorLogLine(int index, String logMessage, String logLevel) {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate("},{"lineNumber":815,"author":{"gitId":"-"},"content":"                EmailTemplates.SEVERE_ERROR_LOG_LINE,"},{"lineNumber":816,"author":{"gitId":"-"},"content":"                \"${index}\", String.valueOf(index),"},{"lineNumber":817,"author":{"gitId":"-"},"content":"                \"${errorType}\", logLevel,"},{"lineNumber":818,"author":{"gitId":"-"},"content":"                \"${errorMessage}\", logMessage);"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"    private EmailWrapper getEmptyEmailAddressedToEmail(String recipient) {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailWrapper();"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        email.setRecipient(recipient);"},{"lineNumber":824,"author":{"gitId":"-"},"content":"        email.setSenderEmail(Config.EMAIL_SENDEREMAIL);"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        email.setSenderName(Config.EMAIL_SENDERNAME);"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        email.setReplyTo(Config.EMAIL_REPLYTO);"},{"lineNumber":827,"author":{"gitId":"-"},"content":"        return email;"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":829,"author":{"gitId":"-"},"content":""},{"lineNumber":830,"author":{"gitId":"-"},"content":"    private String generateCoOwnersEmailsLine(String courseId) {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e coOwners \u003d instructorsLogic.getCoOwnersForCourse(courseId);"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        if (coOwners.isEmpty()) {"},{"lineNumber":833,"author":{"gitId":"-"},"content":"            return \"(No contactable instructors found)\";"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        StringBuilder coOwnersEmailsLine \u003d new StringBuilder();"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        for (InstructorAttributes coOwner : coOwners) {"},{"lineNumber":837,"author":{"gitId":"-"},"content":"            coOwnersEmailsLine"},{"lineNumber":838,"author":{"gitId":"-"},"content":"                    .append(SanitizationHelper.sanitizeForHtml(coOwner.getName()))"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                    .append(\" (\")"},{"lineNumber":840,"author":{"gitId":"-"},"content":"                    .append(coOwner.getEmail())"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                    .append(\"), \");"},{"lineNumber":842,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":843,"author":{"gitId":"-"},"content":"        return coOwnersEmailsLine.substring(0, coOwnersEmailsLine.length() - 2);"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":847,"author":{"gitId":"-"},"content":"     * Generates additional contact information for User Email Templates."},{"lineNumber":848,"author":{"gitId":"-"},"content":"     * @return The contact information after replacing the placeholders."},{"lineNumber":849,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    private String getAdditionalContactInformationFragment(CourseAttributes course) {"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        return Templates.populateTemplate(EmailTemplates.FRAGMENT_SESSION_ADDITIONAL_CONTACT_INFORMATION,"},{"lineNumber":852,"author":{"gitId":"-"},"content":"                \"${coOwnersEmails}\", generateCoOwnersEmailsLine(course.getId()),"},{"lineNumber":853,"author":{"gitId":"-"},"content":"                \"${supportEmail}\", Config.SUPPORT_EMAIL);"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":855,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":17,"-":838}},{"path":"src/main/java/teammates/logic/api/LogsProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.logic.core.GoogleCloudLoggingService;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.logic.core.LocalLoggingService;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.logic.core.LogService;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Handles operations related to logs reading/writing."},{"lineNumber":16,"author":{"gitId":"-"},"content":" *"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * \u003cp\u003eNote that while this interface should support writing logs, most of the application/system logs"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * should be written via the standard Logger class."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsProcessor {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final LogService service;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public LogsProcessor() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if (Config.isDevServer()) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            service \u003d new LocalLoggingService();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            service \u003d new GoogleCloudLoggingService();"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Gets the list of recent error- or higher level logs."},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return service.getRecentErrorLogs();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":"     * Creates a feedback session log."},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"            throws LogServiceException {"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"        service.createFeedbackSessionLog(courseId, email, fsName, fslType);"},{"lineNumber":45,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":47,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"halfwhole"},"content":"     * Gets the feedback session logs as filtered by the given parameters."},{"lineNumber":49,"author":{"gitId":"halfwhole"},"content":"     * @param email Can be null"},{"lineNumber":50,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":52,"author":{"gitId":"halfwhole"},"content":"            Instant startTime, Instant endTime) throws LogServiceException {"},{"lineNumber":53,"author":{"gitId":"halfwhole"},"content":"        return service.getFeedbackSessionLogs(courseId, email, startTime, endTime);"},{"lineNumber":54,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":20,"-":36}},{"path":"src/main/java/teammates/logic/core/FeedbackQuestionsLogic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javax.annotation.Nullable;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.CourseRoster;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionType;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.util.Assumption;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.util.Logger;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import teammates.storage.api.FeedbackQuestionsDb;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Handles operations related to feedback questions."},{"lineNumber":33,"author":{"gitId":"-"},"content":" *"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * @see FeedbackQuestionAttributes"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * @see FeedbackQuestionsDb"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public final class FeedbackQuestionsLogic {"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    static final String USER_NAME_FOR_SELF \u003d \"Myself\";"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger log \u003d Logger.getLogger();"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static FeedbackQuestionsLogic instance \u003d new FeedbackQuestionsLogic();"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final FeedbackQuestionsDb fqDb \u003d new FeedbackQuestionsDb();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FeedbackQuestionsLogic() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // prevent initialization"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static FeedbackQuestionsLogic inst() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return instance;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a new feedback question."},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @return the created question"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if the question is invalid"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes fqa)"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throws InvalidParametersException {"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questionsBefore \u003d"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                getFeedbackQuestionsForSession(fqa.getFeedbackSessionName(), fqa.getCourseId());"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes createdQuestion \u003d fqDb.putEntity(fqa);"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        adjustQuestionNumbers(questionsBefore.size() + 1, createdQuestion.getQuestionNumber(), questionsBefore);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return createdQuestion;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Gets a single question corresponding to the given parameters. \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * \u003cb\u003eNote:\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * *    This method should only be used if the question already exists in the\u003cbr\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * datastore and has an ID already generated."},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return fqDb.getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Gets a single question corresponding to the given parameters."},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes getFeedbackQuestion("},{"lineNumber":93,"author":{"gitId":"-"},"content":"            String feedbackSessionName,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            String courseId,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            int questionNumber) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return fqDb.getFeedbackQuestion(feedbackSessionName,"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                courseId, questionNumber);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Gets a {@link List} of every FeedbackQuestion in the given session."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession("},{"lineNumber":104,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                fqDb.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        questions.sort(null);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // check whether the question numbers are consistent"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (questions.size() \u003e 1 \u0026\u0026 !areQuestionNumbersConsistent(questions)) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            log.severe(courseId + \": \" + feedbackSessionName + \" has invalid question numbers\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    // TODO can be removed once we are sure that question numbers will be consistent"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private boolean areQuestionNumbersConsistent(List\u003cFeedbackQuestionAttributes\u003e questions) {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cInteger\u003e questionNumbersInSession \u003d new HashSet\u003c\u003e();"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : questions) {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (!questionNumbersInSession.add(question.questionNumber)) {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d questions.size(); i++) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            if (!questionNumbersInSession.contains(i)) {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                return false;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return true;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session for an"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * instructor to view/submit."},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructor("},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId, String userEmail)"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (fsLogic.getFeedbackSession(feedbackSessionName, courseId) \u003d\u003d null) {"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException("},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    \"Trying to get questions for a feedback session that does not exist.\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (fsLogic.isCreatorOfSession(feedbackSessionName, courseId, userEmail)) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return getFeedbackQuestionsForCreatorInstructor(feedbackSessionName, courseId);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d instructorsLogic.getInstructorForEmail(courseId, userEmail);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        boolean isInstructor \u003d instructor !\u003d null;"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (isInstructor) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            questions.addAll(fqDb.getFeedbackQuestionsForGiverType("},{"lineNumber":160,"author":{"gitId":"-"},"content":"                            feedbackSessionName, courseId, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        questions.sort(null);"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Filters through the given list of questions and returns a {@code List} of"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * questions that an instructor can view/submit."},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructor("},{"lineNumber":171,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e allQuestions, boolean isCreator) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : allQuestions) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            if (question.giverType \u003d\u003d FeedbackParticipantType.INSTRUCTORS"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    || question.giverType \u003d\u003d FeedbackParticipantType.SELF \u0026\u0026 isCreator) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                questions.add(question);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the list of questions that an"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * instructor who is the creator of the course can view/submit."},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForCreatorInstructor("},{"lineNumber":190,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId)"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    throws EntityDoesNotExistException {"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fsa \u003d fsLogic.getFeedbackSession(feedbackSessionName, courseId);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (fsa \u003d\u003d null) {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException("},{"lineNumber":196,"author":{"gitId":"-"},"content":"                    \"Trying to get questions for a feedback session that does not exist.\");"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return getFeedbackQuestionsForCreatorInstructor(fsa);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForCreatorInstructor("},{"lineNumber":203,"author":{"gitId":"-"},"content":"                                    FeedbackSessionAttributes fsa) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String feedbackSessionName \u003d fsa.getFeedbackSessionName();"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        String courseId \u003d fsa.getCourseId();"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"        questions.addAll(fqDb.getFeedbackQuestionsForGiverType("},{"lineNumber":211,"author":{"gitId":"-"},"content":"                                       feedbackSessionName, courseId, FeedbackParticipantType.INSTRUCTORS));"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // Return all self (creator) questions"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        questions.addAll(fqDb.getFeedbackQuestionsForGiverType(feedbackSessionName,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                courseId, FeedbackParticipantType.SELF));"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        questions.sort(null);"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     * Gets a {@code List} of all questions for the given session that"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * students can view/submit."},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":226,"author":{"gitId":"-"},"content":"            String feedbackSessionName, String courseId) {"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        questions.addAll("},{"lineNumber":231,"author":{"gitId":"-"},"content":"                fqDb.getFeedbackQuestionsForGiverType("},{"lineNumber":232,"author":{"gitId":"-"},"content":"                        feedbackSessionName, courseId, FeedbackParticipantType.STUDENTS));"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        questions.addAll("},{"lineNumber":234,"author":{"gitId":"-"},"content":"                fqDb.getFeedbackQuestionsForGiverType("},{"lineNumber":235,"author":{"gitId":"-"},"content":"                        feedbackSessionName, courseId, FeedbackParticipantType.TEAMS));"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        questions.sort(null);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Filters through the given list of questions and returns a {@code List} of"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * questions that students can view/submit."},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("},{"lineNumber":246,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e allQuestions) {"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : allQuestions) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (question.giverType \u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                    || question.giverType \u003d\u003d FeedbackParticipantType.TEAMS) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                questions.add(question);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"        return questions;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    Map\u003cString, String\u003e getRecipientsForQuestion(FeedbackQuestionAttributes question, String giver)"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorGiver \u003d instructorsLogic.getInstructorForEmail(question.courseId, giver);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        StudentAttributes studentGiver \u003d studentsLogic.getStudentForEmail(question.courseId, giver);"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e recipients \u003d new HashMap\u003c\u003e();"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"        FeedbackParticipantType recipientType \u003d question.recipientType;"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        String giverTeam \u003d getGiverTeam(giver, instructorGiver, studentGiver);"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"        switch (recipientType) {"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        case SELF:"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS) {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                recipients.put(studentGiver.team, studentGiver.team);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                recipients.put(giver, USER_NAME_FOR_SELF);"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentsInCourse \u003d studentsLogic.getStudentsForCourse(question.courseId);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                // Ensure student does not evaluate himself"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                if (!giver.equals(student.email)) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                    recipients.put(student.email, student.name);"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorsInCourse \u003d instructorsLogic.getInstructorsForCourse(question.courseId);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            for (InstructorAttributes instr : instructorsInCourse) {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                // Ensure instructor does not evaluate himself"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                if (!giver.equals(instr.email)) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                    recipients.put(instr.email, instr.name);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            List\u003cString\u003e teams \u003d coursesLogic.getTeamsForCourse(question.courseId);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            for (String team : teams) {"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                // Ensure student(\u0027s team) does not evaluate own team."},{"lineNumber":302,"author":{"gitId":"-"},"content":"                if (!giverTeam.equals(team)) {"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    // recipientEmail doubles as team name in this case."},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    recipients.put(team, team);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        case OWN_TEAM:"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            recipients.put(giverTeam, giverTeam);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        case OWN_TEAM_MEMBERS:"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForTeam(giverTeam, question.courseId);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : students) {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                if (!student.email.equals(giver)) {"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                    recipients.put(student.email, student.name);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        case OWN_TEAM_MEMBERS_INCLUDING_SELF:"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e teamMembers \u003d studentsLogic.getStudentsForTeam(giverTeam, question.courseId);"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : teamMembers) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                // accepts self feedback too"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                recipients.put(student.email, student.name);"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        case NONE:"},{"lineNumber":327,"author":{"gitId":"-"},"content":"            recipients.put(Const.GENERAL_QUESTION, Const.GENERAL_QUESTION);"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        return recipients;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Gets the recipients of a feedback question."},{"lineNumber":337,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":338,"author":{"gitId":"-"},"content":"     * @param question the feedback question"},{"lineNumber":339,"author":{"gitId":"-"},"content":"     * @param instructorGiver can be null for student giver"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * @param studentGiver can be null for instructor giver"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * @param courseRoster if provided, the function can be completed without touching database"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     * @return a map which keys are the identifiers of the recipients and values are the names of the recipients"},{"lineNumber":343,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    public Map\u003cString, String\u003e getRecipientsOfQuestion("},{"lineNumber":345,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes question,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            @Nullable InstructorAttributes instructorGiver, @Nullable StudentAttributes studentGiver,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"            @Nullable CourseRoster courseRoster) {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Assumption.assertTrue(instructorGiver !\u003d null || studentGiver !\u003d null);"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e recipients \u003d new HashMap\u003c\u003e();"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        boolean isStudentGiver \u003d studentGiver !\u003d null;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        boolean isInstructorGiver \u003d instructorGiver !\u003d null;"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        String giverEmail \u003d \"\";"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        String giverTeam \u003d \"\";"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        if (isStudentGiver) {"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            giverEmail \u003d studentGiver.email;"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            giverTeam \u003d studentGiver.team;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        } else if (isInstructorGiver) {"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            giverEmail \u003d instructorGiver.email;"},{"lineNumber":362,"author":{"gitId":"-"},"content":"            giverTeam \u003d Const.USER_TEAM_FOR_INSTRUCTOR;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"        FeedbackParticipantType recipientType \u003d question.recipientType;"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        switch (recipientType) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        case SELF:"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            if (question.giverType \u003d\u003d FeedbackParticipantType.TEAMS) {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                recipients.put(giverTeam, giverTeam);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                recipients.put(giverEmail, USER_NAME_FOR_SELF);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":374,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":376,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentsInCourse;"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            if (courseRoster \u003d\u003d null) {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                studentsInCourse \u003d studentsLogic.getStudentsForCourse(question.courseId);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"                studentsInCourse \u003d courseRoster.getStudents();"},{"lineNumber":381,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentsInCourse) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                if (isInstructorGiver \u0026\u0026 !instructorGiver.isAllowedForPrivilege("},{"lineNumber":384,"author":{"gitId":"-"},"content":"                        student.section, question.getFeedbackSessionName(),"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                        Const.InstructorPermissions.CAN_SUBMIT_SESSION_IN_SECTIONS)) {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                    // instructor can only see students in allowed sections for him/her"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                // Ensure student does not evaluate himself"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                if (!giverEmail.equals(student.email)) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                    recipients.put(student.email, student.name);"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorsInCourse;"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            if (courseRoster \u003d\u003d null) {"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                instructorsInCourse \u003d instructorsLogic.getInstructorsForCourse(question.courseId);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                instructorsInCourse \u003d courseRoster.getInstructors();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            for (InstructorAttributes instr : instructorsInCourse) {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                // remove hidden instructors for students"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                if (isStudentGiver \u0026\u0026 !instr.isDisplayedToStudents()) {"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                // Ensure instructor does not evaluate himself"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                if (!giverEmail.equals(instr.email)) {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                    recipients.put(instr.email, instr.name);"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":412,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":414,"author":{"gitId":"-"},"content":"            Map\u003cString, List\u003cStudentAttributes\u003e\u003e teamToTeamMembersTable;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"            if (courseRoster \u003d\u003d null) {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(question.courseId);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                teamToTeamMembersTable \u003d CourseRoster.buildTeamToMembersTable(students);"},{"lineNumber":418,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                teamToTeamMembersTable \u003d courseRoster.getTeamToMembersTable();"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            for (Map.Entry\u003cString, List\u003cStudentAttributes\u003e\u003e team : teamToTeamMembersTable.entrySet()) {"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                if (isInstructorGiver \u0026\u0026 !instructorGiver.isAllowedForPrivilege("},{"lineNumber":423,"author":{"gitId":"-"},"content":"                        team.getValue().iterator().next().getSection(),"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                        question.getFeedbackSessionName(),"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                        Const.InstructorPermissions.CAN_SUBMIT_SESSION_IN_SECTIONS)) {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                    // instructor can only see teams in allowed sections for him/her"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                    continue;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":429,"author":{"gitId":"-"},"content":"                // Ensure student(\u0027s team) does not evaluate own team."},{"lineNumber":430,"author":{"gitId":"-"},"content":"                if (!giverTeam.equals(team.getKey())) {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                    // recipientEmail doubles as team name in this case."},{"lineNumber":432,"author":{"gitId":"-"},"content":"                    recipients.put(team.getKey(), team.getKey());"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        case OWN_TEAM:"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            recipients.put(giverTeam, giverTeam);"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        case OWN_TEAM_MEMBERS:"},{"lineNumber":440,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e students;"},{"lineNumber":441,"author":{"gitId":"-"},"content":"            if (courseRoster \u003d\u003d null) {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                students \u003d studentsLogic.getStudentsForTeam(giverTeam, question.courseId);"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":444,"author":{"gitId":"-"},"content":"                students \u003d courseRoster.getTeamToMembersTable().getOrDefault(giverTeam, Collections.emptyList());"},{"lineNumber":445,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : students) {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"                if (!student.email.equals(giverEmail)) {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                    recipients.put(student.email, student.name);"},{"lineNumber":449,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":450,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":451,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        case OWN_TEAM_MEMBERS_INCLUDING_SELF:"},{"lineNumber":453,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e teamMembers;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"            if (courseRoster \u003d\u003d null) {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                teamMembers \u003d studentsLogic.getStudentsForTeam(giverTeam, question.courseId);"},{"lineNumber":456,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"                teamMembers \u003d courseRoster.getTeamToMembersTable().getOrDefault(giverTeam, Collections.emptyList());"},{"lineNumber":458,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":459,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : teamMembers) {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"                // accepts self feedback too"},{"lineNumber":461,"author":{"gitId":"-"},"content":"                recipients.put(student.email, student.name);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        case NONE:"},{"lineNumber":465,"author":{"gitId":"-"},"content":"            recipients.put(Const.GENERAL_QUESTION, Const.GENERAL_QUESTION);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":468,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        return recipients;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":472,"author":{"gitId":"-"},"content":""},{"lineNumber":473,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":474,"author":{"gitId":"-"},"content":"     * Builds a complete giver to recipient map for a {@code relatedQuestion}."},{"lineNumber":475,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":476,"author":{"gitId":"-"},"content":"     * @param feedbackSession The feedback session that contains the question"},{"lineNumber":477,"author":{"gitId":"-"},"content":"     * @param relatedQuestion The question to be considered"},{"lineNumber":478,"author":{"gitId":"-"},"content":"     * @param courseRoster the roster in the course"},{"lineNumber":479,"author":{"gitId":"-"},"content":"     * @return a map from giver to recipient for the question."},{"lineNumber":480,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":481,"author":{"gitId":"-"},"content":"    public Map\u003cString, Set\u003cString\u003e\u003e buildCompleteGiverRecipientMap("},{"lineNumber":482,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes feedbackSession, FeedbackQuestionAttributes relatedQuestion,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            CourseRoster courseRoster) {"},{"lineNumber":484,"author":{"gitId":"-"},"content":"        Map\u003cString, Set\u003cString\u003e\u003e completeGiverRecipientMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        List\u003cString\u003e possibleGivers \u003d getPossibleGivers(feedbackSession, relatedQuestion, courseRoster);"},{"lineNumber":487,"author":{"gitId":"-"},"content":"        for (String possibleGiver : possibleGivers) {"},{"lineNumber":488,"author":{"gitId":"-"},"content":"            switch (relatedQuestion.getGiverType()) {"},{"lineNumber":489,"author":{"gitId":"-"},"content":"            case STUDENTS:"},{"lineNumber":490,"author":{"gitId":"-"},"content":"                StudentAttributes studentGiver \u003d courseRoster.getStudentForEmail(possibleGiver);"},{"lineNumber":491,"author":{"gitId":"-"},"content":"                completeGiverRecipientMap"},{"lineNumber":492,"author":{"gitId":"-"},"content":"                        .computeIfAbsent(possibleGiver, key -\u003e new HashSet\u003c\u003e())"},{"lineNumber":493,"author":{"gitId":"-"},"content":"                        .addAll(getRecipientsOfQuestion("},{"lineNumber":494,"author":{"gitId":"-"},"content":"                                relatedQuestion, null, studentGiver, courseRoster).keySet());"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"            case TEAMS:"},{"lineNumber":497,"author":{"gitId":"-"},"content":"                StudentAttributes oneTeamMember \u003d"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                        courseRoster.getTeamToMembersTable().get(possibleGiver).iterator().next();"},{"lineNumber":499,"author":{"gitId":"-"},"content":"                completeGiverRecipientMap"},{"lineNumber":500,"author":{"gitId":"-"},"content":"                        .computeIfAbsent(possibleGiver, key -\u003e new HashSet\u003c\u003e())"},{"lineNumber":501,"author":{"gitId":"-"},"content":"                        .addAll(getRecipientsOfQuestion("},{"lineNumber":502,"author":{"gitId":"-"},"content":"                                relatedQuestion, null, oneTeamMember, courseRoster).keySet());"},{"lineNumber":503,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":504,"author":{"gitId":"-"},"content":"            case INSTRUCTORS:"},{"lineNumber":505,"author":{"gitId":"-"},"content":"            case SELF:"},{"lineNumber":506,"author":{"gitId":"-"},"content":"                InstructorAttributes instructorGiver \u003d courseRoster.getInstructorForEmail(possibleGiver);"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                completeGiverRecipientMap"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                        .computeIfAbsent(possibleGiver, key -\u003e new HashSet\u003c\u003e())"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                        .addAll(getRecipientsOfQuestion("},{"lineNumber":510,"author":{"gitId":"-"},"content":"                                relatedQuestion, instructorGiver, null, courseRoster).keySet());"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":513,"author":{"gitId":"-"},"content":"                log.severe(\"Invalid giver type specified\");"},{"lineNumber":514,"author":{"gitId":"-"},"content":"                break;"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":517,"author":{"gitId":"-"},"content":""},{"lineNumber":518,"author":{"gitId":"-"},"content":"        return completeGiverRecipientMap;"},{"lineNumber":519,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":522,"author":{"gitId":"-"},"content":"     * Gets possible giver identifiers for a feedback question."},{"lineNumber":523,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":524,"author":{"gitId":"-"},"content":"     * @param fqa the feedback question"},{"lineNumber":525,"author":{"gitId":"-"},"content":"     * @param courseRoster roster of all students and instructors"},{"lineNumber":526,"author":{"gitId":"-"},"content":"     * @return a list of giver identifier"},{"lineNumber":527,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    private List\u003cString\u003e getPossibleGivers("},{"lineNumber":529,"author":{"gitId":"-"},"content":"            FeedbackSessionAttributes feedbackSession,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"            FeedbackQuestionAttributes fqa, CourseRoster courseRoster) {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"        FeedbackParticipantType giverType \u003d fqa.giverType;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        List\u003cString\u003e possibleGivers \u003d new ArrayList\u003c\u003e();"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"        switch (giverType) {"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":536,"author":{"gitId":"-"},"content":"            possibleGivers \u003d courseRoster.getStudents()"},{"lineNumber":537,"author":{"gitId":"-"},"content":"                    .stream()"},{"lineNumber":538,"author":{"gitId":"-"},"content":"                    .map(StudentAttributes::getEmail)"},{"lineNumber":539,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":540,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":541,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":542,"author":{"gitId":"-"},"content":"            possibleGivers \u003d courseRoster.getInstructors()"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                    .stream()"},{"lineNumber":544,"author":{"gitId":"-"},"content":"                    .map(InstructorAttributes::getEmail)"},{"lineNumber":545,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList());"},{"lineNumber":546,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":547,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":548,"author":{"gitId":"-"},"content":"            possibleGivers \u003d new ArrayList\u003c\u003e(courseRoster.getTeamToMembersTable().keySet());"},{"lineNumber":549,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        case SELF:"},{"lineNumber":551,"author":{"gitId":"-"},"content":"            possibleGivers \u003d Collections.singletonList(feedbackSession.getCreatorEmail());"},{"lineNumber":552,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":554,"author":{"gitId":"-"},"content":"            log.severe(\"Invalid giver type specified\");"},{"lineNumber":555,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":556,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":557,"author":{"gitId":"-"},"content":""},{"lineNumber":558,"author":{"gitId":"-"},"content":"        return possibleGivers;"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":562,"author":{"gitId":"-"},"content":"     * Populates fields that need dynamic generation in a question."},{"lineNumber":563,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":564,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"},{"lineNumber":565,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":566,"author":{"gitId":"-"},"content":"     * @param feedbackQuestionAttributes the question to populate"},{"lineNumber":567,"author":{"gitId":"-"},"content":"     * @param emailOfEntityDoingQuestion the email of the entity doing the question"},{"lineNumber":568,"author":{"gitId":"-"},"content":"     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"     *                                  it can be {@code null}."},{"lineNumber":570,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        List\u003cString\u003e optionList;"},{"lineNumber":574,"author":{"gitId":"-"},"content":""},{"lineNumber":575,"author":{"gitId":"-"},"content":"        FeedbackParticipantType generateOptionsFor;"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"        if (feedbackQuestionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MCQ) {"},{"lineNumber":578,"author":{"gitId":"-"},"content":"            FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d"},{"lineNumber":579,"author":{"gitId":"-"},"content":"                    (FeedbackMcqQuestionDetails) feedbackQuestionAttributes.getQuestionDetails();"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            optionList \u003d feedbackMcqQuestionDetails.getMcqChoices();"},{"lineNumber":581,"author":{"gitId":"-"},"content":"            generateOptionsFor \u003d feedbackMcqQuestionDetails.getGenerateOptionsFor();"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        } else if (feedbackQuestionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MSQ) {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            FeedbackMsqQuestionDetails feedbackMsqQuestionDetails \u003d"},{"lineNumber":584,"author":{"gitId":"-"},"content":"                    (FeedbackMsqQuestionDetails) feedbackQuestionAttributes.getQuestionDetails();"},{"lineNumber":585,"author":{"gitId":"-"},"content":"            optionList \u003d feedbackMsqQuestionDetails.getMsqChoices();"},{"lineNumber":586,"author":{"gitId":"-"},"content":"            generateOptionsFor \u003d feedbackMsqQuestionDetails.getGenerateOptionsFor();"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            // other question types"},{"lineNumber":589,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":591,"author":{"gitId":"-"},"content":""},{"lineNumber":592,"author":{"gitId":"-"},"content":"        switch (generateOptionsFor) {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        case NONE:"},{"lineNumber":594,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":595,"author":{"gitId":"-"},"content":"        case STUDENTS:"},{"lineNumber":596,"author":{"gitId":"-"},"content":"        case STUDENTS_EXCLUDING_SELF:"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentList \u003d"},{"lineNumber":598,"author":{"gitId":"-"},"content":"                    studentsLogic.getStudentsForCourse(feedbackQuestionAttributes.getCourseId());"},{"lineNumber":599,"author":{"gitId":"-"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"            if (generateOptionsFor \u003d\u003d FeedbackParticipantType.STUDENTS_EXCLUDING_SELF) {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"                studentList.removeIf(studentInList -\u003e studentInList.email.equals(emailOfEntityDoingQuestion));"},{"lineNumber":602,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"            for (StudentAttributes student : studentList) {"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                optionList.add(student.name + \" (\" + student.team + \")\");"},{"lineNumber":606,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"            optionList.sort(null);"},{"lineNumber":609,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        case TEAMS:"},{"lineNumber":611,"author":{"gitId":"-"},"content":"        case TEAMS_EXCLUDING_SELF:"},{"lineNumber":612,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                List\u003cString\u003e teams \u003d coursesLogic.getTeamsForCourse(feedbackQuestionAttributes.getCourseId());"},{"lineNumber":614,"author":{"gitId":"-"},"content":""},{"lineNumber":615,"author":{"gitId":"-"},"content":"                if (generateOptionsFor \u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF) {"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                    teams.removeIf(team -\u003e team.equals(teamOfEntityDoingQuestion));"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":618,"author":{"gitId":"-"},"content":""},{"lineNumber":619,"author":{"gitId":"-"},"content":"                for (String team : teams) {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                    optionList.add(team);"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"                optionList.sort(null);"},{"lineNumber":624,"author":{"gitId":"-"},"content":"            } catch (EntityDoesNotExistException e) {"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                Assumption.fail(\"Course disappeared\");"},{"lineNumber":626,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":627,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":628,"author":{"gitId":"daongochieu2810"},"content":"        case OWN_TEAM_MEMBERS_INCLUDING_SELF:"},{"lineNumber":629,"author":{"gitId":"daongochieu2810"},"content":"        case OWN_TEAM_MEMBERS:"},{"lineNumber":630,"author":{"gitId":"daongochieu2810"},"content":"            if (teamOfEntityDoingQuestion !\u003d null) {"},{"lineNumber":631,"author":{"gitId":"daongochieu2810"},"content":"                List\u003cStudentAttributes\u003e teamMembers \u003d studentsLogic.getStudentsForTeam(teamOfEntityDoingQuestion,"},{"lineNumber":632,"author":{"gitId":"daongochieu2810"},"content":"                        feedbackQuestionAttributes.getCourseId());"},{"lineNumber":633,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":634,"author":{"gitId":"daongochieu2810"},"content":"                if (generateOptionsFor \u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS) {"},{"lineNumber":635,"author":{"gitId":"daongochieu2810"},"content":"                    teamMembers.removeIf(teamMember -\u003e teamMember.getEmail().equals(emailOfEntityDoingQuestion));"},{"lineNumber":636,"author":{"gitId":"daongochieu2810"},"content":"                }"},{"lineNumber":637,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":638,"author":{"gitId":"daongochieu2810"},"content":"                teamMembers.forEach(teamMember -\u003e optionList.add(teamMember.getName()));"},{"lineNumber":639,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":640,"author":{"gitId":"daongochieu2810"},"content":"                optionList.sort(null);"},{"lineNumber":641,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":642,"author":{"gitId":"daongochieu2810"},"content":"            break;"},{"lineNumber":643,"author":{"gitId":"-"},"content":"        case INSTRUCTORS:"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList \u003d"},{"lineNumber":645,"author":{"gitId":"-"},"content":"                    instructorsLogic.getInstructorsForCourse(feedbackQuestionAttributes.getCourseId());"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"            for (InstructorAttributes instructor : instructorList) {"},{"lineNumber":648,"author":{"gitId":"-"},"content":"                optionList.add(instructor.getName());"},{"lineNumber":649,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":650,"author":{"gitId":"-"},"content":""},{"lineNumber":651,"author":{"gitId":"-"},"content":"            optionList.sort(null);"},{"lineNumber":652,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            Assumption.fail(\"Trying to generate options for neither students, teams nor instructors\");"},{"lineNumber":655,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":657,"author":{"gitId":"-"},"content":""},{"lineNumber":658,"author":{"gitId":"-"},"content":"        if (feedbackQuestionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MCQ) {"},{"lineNumber":659,"author":{"gitId":"-"},"content":"            FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                    (FeedbackMcqQuestionDetails) feedbackQuestionAttributes.getQuestionDetails();"},{"lineNumber":661,"author":{"gitId":"-"},"content":"            feedbackMcqQuestionDetails.setMcqChoices(optionList);"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            feedbackQuestionAttributes.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":663,"author":{"gitId":"-"},"content":"        } else if (feedbackQuestionAttributes.getQuestionType() \u003d\u003d FeedbackQuestionType.MSQ) {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            FeedbackMsqQuestionDetails feedbackMsqQuestionDetails \u003d"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                    (FeedbackMsqQuestionDetails) feedbackQuestionAttributes.getQuestionDetails();"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            feedbackMsqQuestionDetails.setMsqChoices(optionList);"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            feedbackQuestionAttributes.setQuestionDetails(feedbackMsqQuestionDetails);"},{"lineNumber":668,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":""},{"lineNumber":671,"author":{"gitId":"-"},"content":"    private String getGiverTeam(String defaultTeam, InstructorAttributes instructorGiver,"},{"lineNumber":672,"author":{"gitId":"-"},"content":"            StudentAttributes studentGiver) {"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        String giverTeam \u003d defaultTeam;"},{"lineNumber":674,"author":{"gitId":"-"},"content":"        boolean isStudentGiver \u003d studentGiver !\u003d null;"},{"lineNumber":675,"author":{"gitId":"-"},"content":"        boolean isInstructorGiver \u003d instructorGiver !\u003d null;"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        if (isStudentGiver) {"},{"lineNumber":677,"author":{"gitId":"-"},"content":"            giverTeam \u003d studentGiver.team;"},{"lineNumber":678,"author":{"gitId":"-"},"content":"        } else if (isInstructorGiver) {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"            giverTeam \u003d Const.USER_TEAM_FOR_INSTRUCTOR;"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        return giverTeam;"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"    public boolean isQuestionFullyAnsweredByUser(FeedbackQuestionAttributes question, String email)"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            throws EntityDoesNotExistException {"},{"lineNumber":686,"author":{"gitId":"-"},"content":""},{"lineNumber":687,"author":{"gitId":"-"},"content":"        int numberOfResponsesGiven \u003d"},{"lineNumber":688,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesFromGiverForQuestion(question.getId(), email).size();"},{"lineNumber":689,"author":{"gitId":"-"},"content":"        int numberOfResponsesNeeded \u003d"},{"lineNumber":690,"author":{"gitId":"-"},"content":"                question.numberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":691,"author":{"gitId":"-"},"content":""},{"lineNumber":692,"author":{"gitId":"-"},"content":"        if (numberOfResponsesNeeded \u003d\u003d Const.MAX_POSSIBLE_RECIPIENTS) {"},{"lineNumber":693,"author":{"gitId":"-"},"content":"            numberOfResponsesNeeded \u003d getRecipientsForQuestion(question, email).size();"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":695,"author":{"gitId":"-"},"content":""},{"lineNumber":696,"author":{"gitId":"-"},"content":"        return numberOfResponsesGiven \u003e\u003d numberOfResponsesNeeded;"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":698,"author":{"gitId":"-"},"content":""},{"lineNumber":699,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":700,"author":{"gitId":"-"},"content":"     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."},{"lineNumber":701,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":702,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the question number of questions in the same session."},{"lineNumber":703,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":704,"author":{"gitId":"-"},"content":"     * \u003cp\u003eCascade adjust the existing response of the question."},{"lineNumber":705,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":706,"author":{"gitId":"-"},"content":"     * @return updated feedback question"},{"lineNumber":707,"author":{"gitId":"-"},"content":"     * @throws InvalidParametersException if attributes to update are not valid"},{"lineNumber":708,"author":{"gitId":"-"},"content":"     * @throws EntityDoesNotExistException if the feedback question cannot be found"},{"lineNumber":709,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"},{"lineNumber":711,"author":{"gitId":"-"},"content":"            throws InvalidParametersException, EntityDoesNotExistException {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes oldQuestion \u003d fqDb.getFeedbackQuestion(updateOptions.getFeedbackQuestionId());"},{"lineNumber":713,"author":{"gitId":"-"},"content":"        if (oldQuestion \u003d\u003d null) {"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            throw new EntityDoesNotExistException(\"Trying to update a feedback question that does not exist.\");"},{"lineNumber":715,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":716,"author":{"gitId":"-"},"content":""},{"lineNumber":717,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes newQuestion \u003d oldQuestion.getCopy();"},{"lineNumber":718,"author":{"gitId":"-"},"content":"        newQuestion.update(updateOptions);"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        int oldQuestionNumber \u003d oldQuestion.questionNumber;"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        int newQuestionNumber \u003d newQuestion.questionNumber;"},{"lineNumber":721,"author":{"gitId":"-"},"content":""},{"lineNumber":722,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e previousQuestionsInSession \u003d new ArrayList\u003c\u003e();"},{"lineNumber":723,"author":{"gitId":"-"},"content":"        if (oldQuestionNumber !\u003d newQuestionNumber) {"},{"lineNumber":724,"author":{"gitId":"-"},"content":"            // get questions in session before update"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            String feedbackSessionName \u003d oldQuestion.feedbackSessionName;"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            String courseId \u003d oldQuestion.courseId;"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            previousQuestionsInSession \u003d getFeedbackQuestionsForSession(feedbackSessionName, courseId);"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":729,"author":{"gitId":"-"},"content":""},{"lineNumber":730,"author":{"gitId":"-"},"content":"        // update question"},{"lineNumber":731,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes updatedQuestion \u003d fqDb.updateFeedbackQuestion(updateOptions);"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"-"},"content":"        if (oldQuestionNumber !\u003d newQuestionNumber) {"},{"lineNumber":734,"author":{"gitId":"-"},"content":"            // shift other feedback questions (generate an empty \"slot\")"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            adjustQuestionNumbers(oldQuestionNumber, newQuestionNumber, previousQuestionsInSession);"},{"lineNumber":736,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"        // adjust responses"},{"lineNumber":739,"author":{"gitId":"-"},"content":"        if (oldQuestion.areResponseDeletionsRequiredForChanges(updatedQuestion)) {"},{"lineNumber":740,"author":{"gitId":"-"},"content":"            frLogic.deleteFeedbackResponsesForQuestionCascade(oldQuestion.getId());"},{"lineNumber":741,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"        return updatedQuestion;"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":747,"author":{"gitId":"-"},"content":"     * Adjust questions between the old and new number,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"     * if the new number is smaller, then shift up (increase qn#) all questions in between."},{"lineNumber":749,"author":{"gitId":"-"},"content":"     * if the new number is bigger, then shift down(decrease qn#) all questions in between."},{"lineNumber":750,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":751,"author":{"gitId":"-"},"content":"    private void adjustQuestionNumbers(int oldQuestionNumber,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"            int newQuestionNumber, List\u003cFeedbackQuestionAttributes\u003e questions) {"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":754,"author":{"gitId":"-"},"content":"            if (oldQuestionNumber \u003e newQuestionNumber \u0026\u0026 oldQuestionNumber \u003e\u003d 1) {"},{"lineNumber":755,"author":{"gitId":"-"},"content":"                for (int i \u003d oldQuestionNumber - 1; i \u003e\u003d newQuestionNumber; i--) {"},{"lineNumber":756,"author":{"gitId":"-"},"content":"                    FeedbackQuestionAttributes question \u003d questions.get(i - 1);"},{"lineNumber":757,"author":{"gitId":"-"},"content":"                    fqDb.updateFeedbackQuestion("},{"lineNumber":758,"author":{"gitId":"-"},"content":"                            FeedbackQuestionAttributes.updateOptionsBuilder(question.getId())"},{"lineNumber":759,"author":{"gitId":"-"},"content":"                                    .withQuestionNumber(question.questionNumber + 1)"},{"lineNumber":760,"author":{"gitId":"-"},"content":"                                    .build());"},{"lineNumber":761,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":762,"author":{"gitId":"-"},"content":"            } else if (oldQuestionNumber \u003c newQuestionNumber \u0026\u0026 oldQuestionNumber \u003c questions.size()) {"},{"lineNumber":763,"author":{"gitId":"-"},"content":"                for (int i \u003d oldQuestionNumber + 1; i \u003c\u003d newQuestionNumber; i++) {"},{"lineNumber":764,"author":{"gitId":"-"},"content":"                    FeedbackQuestionAttributes question \u003d questions.get(i - 1);"},{"lineNumber":765,"author":{"gitId":"-"},"content":"                    fqDb.updateFeedbackQuestion("},{"lineNumber":766,"author":{"gitId":"-"},"content":"                            FeedbackQuestionAttributes.updateOptionsBuilder(question.getId())"},{"lineNumber":767,"author":{"gitId":"-"},"content":"                                    .withQuestionNumber(question.questionNumber - 1)"},{"lineNumber":768,"author":{"gitId":"-"},"content":"                                    .build());"},{"lineNumber":769,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":770,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":771,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException | EntityDoesNotExistException e) {"},{"lineNumber":772,"author":{"gitId":"-"},"content":"            Assumption.fail(\"Adjusting question number should not cause: \" + e.getMessage());"},{"lineNumber":773,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":774,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":777,"author":{"gitId":"-"},"content":"     * Deletes a feedback question cascade its responses and comments."},{"lineNumber":778,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":779,"author":{"gitId":"-"},"content":"     * \u003cp\u003eSilently fail if question does not exist."},{"lineNumber":780,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":781,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestionCascade(String feedbackQuestionId) {"},{"lineNumber":782,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToDelete \u003d"},{"lineNumber":783,"author":{"gitId":"-"},"content":"                        getFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":784,"author":{"gitId":"-"},"content":""},{"lineNumber":785,"author":{"gitId":"-"},"content":"        if (questionToDelete \u003d\u003d null) {"},{"lineNumber":786,"author":{"gitId":"-"},"content":"            return; // Silently fail if question does not exist."},{"lineNumber":787,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":788,"author":{"gitId":"-"},"content":""},{"lineNumber":789,"author":{"gitId":"-"},"content":"        // cascade delete responses for question."},{"lineNumber":790,"author":{"gitId":"-"},"content":"        frLogic.deleteFeedbackResponsesForQuestionCascade(questionToDelete.getId());"},{"lineNumber":791,"author":{"gitId":"-"},"content":""},{"lineNumber":792,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questionsToShiftQnNumber \u003d"},{"lineNumber":793,"author":{"gitId":"-"},"content":"                getFeedbackQuestionsForSession(questionToDelete.getFeedbackSessionName(), questionToDelete.getCourseId());"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"        // delete question"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        fqDb.deleteFeedbackQuestion(feedbackQuestionId);"},{"lineNumber":797,"author":{"gitId":"-"},"content":""},{"lineNumber":798,"author":{"gitId":"-"},"content":"        // adjust question numbers"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        if (questionToDelete.questionNumber \u003c questionsToShiftQnNumber.size()) {"},{"lineNumber":800,"author":{"gitId":"-"},"content":"            shiftQuestionNumbersDown(questionToDelete.questionNumber, questionsToShiftQnNumber);"},{"lineNumber":801,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":803,"author":{"gitId":"-"},"content":""},{"lineNumber":804,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":805,"author":{"gitId":"-"},"content":"     * Deletes questions using {@link AttributesDeletionQuery}."},{"lineNumber":806,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    public void deleteFeedbackQuestions(AttributesDeletionQuery query) {"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        fqDb.deleteFeedbackQuestions(query);"},{"lineNumber":809,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":810,"author":{"gitId":"-"},"content":""},{"lineNumber":811,"author":{"gitId":"-"},"content":"    // Shifts all question numbers after questionNumberToShiftFrom down by one."},{"lineNumber":812,"author":{"gitId":"-"},"content":"    private void shiftQuestionNumbersDown(int questionNumberToShiftFrom,"},{"lineNumber":813,"author":{"gitId":"-"},"content":"            List\u003cFeedbackQuestionAttributes\u003e questionsToShift) {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"        for (FeedbackQuestionAttributes question : questionsToShift) {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"            if (question.questionNumber \u003e questionNumberToShiftFrom) {"},{"lineNumber":816,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":817,"author":{"gitId":"-"},"content":"                    fqDb.updateFeedbackQuestion("},{"lineNumber":818,"author":{"gitId":"-"},"content":"                            FeedbackQuestionAttributes.updateOptionsBuilder(question.getId())"},{"lineNumber":819,"author":{"gitId":"-"},"content":"                            .withQuestionNumber(question.questionNumber - 1)"},{"lineNumber":820,"author":{"gitId":"-"},"content":"                            .build());"},{"lineNumber":821,"author":{"gitId":"-"},"content":"                } catch (InvalidParametersException | EntityDoesNotExistException e) {"},{"lineNumber":822,"author":{"gitId":"-"},"content":"                    Assumption.fail(\"Shifting question number should not cause: \" + e.getMessage());"},{"lineNumber":823,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":824,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":825,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":826,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":827,"author":{"gitId":"-"},"content":""},{"lineNumber":828,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":829,"author":{"gitId":"-"},"content":"     * Gets the number of generated options for MCQ-type and MSQ-type question."},{"lineNumber":830,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    public int getNumOfGeneratedChoicesForParticipantType(String courseId, FeedbackParticipantType participantType) {"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        if (participantType \u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":833,"author":{"gitId":"-"},"content":"                || participantType \u003d\u003d FeedbackParticipantType.STUDENTS_EXCLUDING_SELF) {"},{"lineNumber":834,"author":{"gitId":"-"},"content":"            List\u003cStudentAttributes\u003e studentList \u003d studentsLogic.getStudentsForCourse(courseId);"},{"lineNumber":835,"author":{"gitId":"-"},"content":"            return studentList.size() - (participantType \u003d\u003d FeedbackParticipantType.STUDENTS ? 0 : 1);"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":837,"author":{"gitId":"-"},"content":""},{"lineNumber":838,"author":{"gitId":"-"},"content":"        if (participantType \u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                || participantType \u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF) {"},{"lineNumber":840,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                List\u003cString\u003e teams \u003d coursesLogic.getTeamsForCourse(courseId);"},{"lineNumber":842,"author":{"gitId":"-"},"content":"                return teams.size() - (participantType \u003d\u003d FeedbackParticipantType.TEAMS ? 0 : 1);"},{"lineNumber":843,"author":{"gitId":"-"},"content":"            } catch (EntityDoesNotExistException e) {"},{"lineNumber":844,"author":{"gitId":"-"},"content":"                Assumption.fail(\"Course disappeared\");"},{"lineNumber":845,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":846,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":847,"author":{"gitId":"-"},"content":""},{"lineNumber":848,"author":{"gitId":"-"},"content":"        if (participantType \u003d\u003d FeedbackParticipantType.INSTRUCTORS) {"},{"lineNumber":849,"author":{"gitId":"-"},"content":"            List\u003cInstructorAttributes\u003e instructorList \u003d instructorsLogic.getInstructorsForCourse(courseId);"},{"lineNumber":850,"author":{"gitId":"-"},"content":"            return instructorList.size();"},{"lineNumber":851,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":852,"author":{"gitId":"-"},"content":""},{"lineNumber":853,"author":{"gitId":"-"},"content":"        return 0;"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":15,"-":841}},{"path":"src/main/java/teammates/logic/core/GoogleCloudLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import java.util.Collections;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import java.util.HashMap;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import java.util.Map;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.google.api.gax.paging.Page;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.LogLine;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.RequestLog;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.SourceLocation;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.google.appengine.logging.v1.SourceReference;"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"import com.google.cloud.MonitoredResource;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LogEntry;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.Logging;"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"import com.google.cloud.logging.Logging.EntryListOption;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.google.cloud.logging.LoggingOptions;"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"import com.google.cloud.logging.Payload.StringPayload;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import com.google.logging.type.LogSeverity;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import com.google.protobuf.Any;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import com.google.protobuf.InvalidProtocolBufferException;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import com.google.protobuf.util.JsonFormat;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"import teammates.common.util.Const;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Holds functions for operations related to Google Cloud Logging."},{"lineNumber":36,"author":{"gitId":"-"},"content":" */"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class GoogleCloudLoggingService implements LogService {"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"    private static final String REQUEST_LOG_NAME \u003d \"appengine.googleapis.com%2Frequest_log\";"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"    private static final String REQUEST_LOG_RESOURCE_TYPE \u003d \"gae_app\";"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"    private static final String REQUEST_LOG_MODULE_ID_LABEL \u003d \"module_id\";"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"    private static final String REQUEST_LOG_MODULE_ID_LABEL_VALUE \u003d \"default\";"},{"lineNumber":45,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":46,"author":{"gitId":"halfwhole"},"content":"    private static final String FEEDBACK_SESSION_LOG_NAME \u003d \"feedback-session-logs\";"},{"lineNumber":47,"author":{"gitId":"halfwhole"},"content":"    private static final String FEEDBACK_SESSION_LOG_COURSE_ID_LABEL \u003d \"courseId\";"},{"lineNumber":48,"author":{"gitId":"halfwhole"},"content":"    private static final String FEEDBACK_SESSION_LOG_EMAIL_LABEL \u003d \"email\";"},{"lineNumber":49,"author":{"gitId":"halfwhole"},"content":"    private static final String FEEDBACK_SESSION_LOG_NAME_LABEL \u003d \"fsName\";"},{"lineNumber":50,"author":{"gitId":"halfwhole"},"content":"    private static final String FEEDBACK_SESSION_LOG_TYPE_LABEL \u003d \"fslType\";"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Instant endTime \u003d Instant.now();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Sets the range to 6 minutes to slightly overlap the 5 minute email timer"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        long queryRange \u003d 1000 * 60 * 6;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Instant startTime \u003d endTime.minusMillis(queryRange);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"halfwhole"},"content":"        LogSearchParams logSearchParams \u003d new LogSearchParams()"},{"lineNumber":60,"author":{"gitId":"halfwhole"},"content":"                .setLogName(REQUEST_LOG_NAME)"},{"lineNumber":61,"author":{"gitId":"halfwhole"},"content":"                .setResourceType(REQUEST_LOG_RESOURCE_TYPE)"},{"lineNumber":62,"author":{"gitId":"halfwhole"},"content":"                .addResourceLabel(REQUEST_LOG_MODULE_ID_LABEL, REQUEST_LOG_MODULE_ID_LABEL_VALUE)"},{"lineNumber":63,"author":{"gitId":"halfwhole"},"content":"                .setMinSeverity(LogSeverity.ERROR)"},{"lineNumber":64,"author":{"gitId":"halfwhole"},"content":"                .setStartTime(startTime)"},{"lineNumber":65,"author":{"gitId":"halfwhole"},"content":"                .setEndTime(endTime);"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"halfwhole"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"halfwhole"},"content":"        List\u003cErrorLogEntry\u003e errorLogs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"halfwhole"},"content":"        try {"},{"lineNumber":71,"author":{"gitId":"halfwhole"},"content":"            logEntries \u003d getLogEntries(logSearchParams);"},{"lineNumber":72,"author":{"gitId":"halfwhole"},"content":"        } catch (LogServiceException e) {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            // TODO"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"halfwhole"},"content":"        for (LogEntry logEntry : logEntries) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Any entry \u003d (Any) logEntry.getPayload().getData();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"            JsonFormat.TypeRegistry tr \u003d JsonFormat.TypeRegistry.newBuilder()"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                    .add(RequestLog.getDescriptor())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                    .add(LogLine.getDescriptor())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                    .add(SourceLocation.getDescriptor())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                    .add(SourceReference.getDescriptor())"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"            List\u003cLogLine\u003e logLines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            try {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                String logContentAsJson \u003d JsonFormat.printer().usingTypeRegistry(tr).print(entry);"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                RequestLog.Builder builder \u003d RequestLog.newBuilder();"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                JsonFormat.parser().ignoringUnknownFields().usingTypeRegistry(tr).merge(logContentAsJson, builder);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                RequestLog reconvertedLog \u003d builder.build();"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                logLines \u003d reconvertedLog.getLineList();"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } catch (InvalidProtocolBufferException e) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                // TODO"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"            for (LogLine line : logLines) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                if (line.getSeverity() \u003d\u003d LogSeverity.ERROR || line.getSeverity() \u003d\u003d LogSeverity.CRITICAL) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    errorLogs.add(new ErrorLogEntry("},{"lineNumber":102,"author":{"gitId":"-"},"content":"                            line.getLogMessage().replaceAll(\"\\n\", \"\\n\u003cbr\u003e\"),"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                            line.getSeverity().toString())"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    );"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return errorLogs;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":112,"author":{"gitId":"halfwhole"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)"},{"lineNumber":113,"author":{"gitId":"halfwhole"},"content":"            throws LogServiceException {"},{"lineNumber":114,"author":{"gitId":"halfwhole"},"content":"        String payload \u003d \"Feedback session log: course ID\u003d\" + courseId + \", email\u003d\" + email"},{"lineNumber":115,"author":{"gitId":"halfwhole"},"content":"                + \", feedback session name\u003d\" + fsName + \", log type\u003d\" + fslType;"},{"lineNumber":116,"author":{"gitId":"halfwhole"},"content":"        LogEntry entry \u003d LogEntry.newBuilder(StringPayload.of(payload))"},{"lineNumber":117,"author":{"gitId":"halfwhole"},"content":"                .setLogName(FEEDBACK_SESSION_LOG_NAME)"},{"lineNumber":118,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_COURSE_ID_LABEL, courseId)"},{"lineNumber":119,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_EMAIL_LABEL, email)"},{"lineNumber":120,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_NAME_LABEL, fsName)"},{"lineNumber":121,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_TYPE_LABEL, fslType)"},{"lineNumber":122,"author":{"gitId":"halfwhole"},"content":"                .setResource(MonitoredResource.newBuilder(\"global\").build())"},{"lineNumber":123,"author":{"gitId":"halfwhole"},"content":"                .build();"},{"lineNumber":124,"author":{"gitId":"halfwhole"},"content":"        createLogEntry(entry);"},{"lineNumber":125,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":127,"author":{"gitId":"halfwhole"},"content":"    private void createLogEntry(LogEntry entry) throws LogServiceException {"},{"lineNumber":128,"author":{"gitId":"halfwhole"},"content":"        try (Logging logging \u003d LoggingOptions.getDefaultInstance().getService()) {"},{"lineNumber":129,"author":{"gitId":"halfwhole"},"content":"            logging.write(Collections.singleton(entry));"},{"lineNumber":130,"author":{"gitId":"halfwhole"},"content":"        } catch (Exception e) {"},{"lineNumber":131,"author":{"gitId":"halfwhole"},"content":"            throw new LogServiceException(e);"},{"lineNumber":132,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":135,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":136,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":137,"author":{"gitId":"halfwhole"},"content":"            Instant startTime, Instant endTime) throws LogServiceException {"},{"lineNumber":138,"author":{"gitId":"halfwhole"},"content":"        LogSearchParams logSearchParams \u003d new LogSearchParams()"},{"lineNumber":139,"author":{"gitId":"halfwhole"},"content":"                .setLogName(FEEDBACK_SESSION_LOG_NAME)"},{"lineNumber":140,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_COURSE_ID_LABEL, courseId)"},{"lineNumber":141,"author":{"gitId":"halfwhole"},"content":"                .addLabel(FEEDBACK_SESSION_LOG_EMAIL_LABEL, email)"},{"lineNumber":142,"author":{"gitId":"halfwhole"},"content":"                .setStartTime(startTime)"},{"lineNumber":143,"author":{"gitId":"halfwhole"},"content":"                .setEndTime(endTime);"},{"lineNumber":144,"author":{"gitId":"halfwhole"},"content":"        List\u003cLogEntry\u003e logEntries \u003d getLogEntries(logSearchParams);"},{"lineNumber":145,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":146,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogEntry\u003e fsLogEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":147,"author":{"gitId":"halfwhole"},"content":"        for (LogEntry entry : logEntries) {"},{"lineNumber":148,"author":{"gitId":"halfwhole"},"content":"            String fslType \u003d entry.getLabels().get(FEEDBACK_SESSION_LOG_TYPE_LABEL);"},{"lineNumber":149,"author":{"gitId":"halfwhole"},"content":"            long timestamp \u003d entry.getTimestamp();"},{"lineNumber":150,"author":{"gitId":"halfwhole"},"content":"            String entryEmail \u003d entry.getLabels().get(FEEDBACK_SESSION_LOG_EMAIL_LABEL);"},{"lineNumber":151,"author":{"gitId":"halfwhole"},"content":"            String entryFsName \u003d entry.getLabels().get(FEEDBACK_SESSION_LOG_NAME_LABEL);"},{"lineNumber":152,"author":{"gitId":"halfwhole"},"content":"            StudentAttributes student \u003d studentsLogic.getStudentForEmail(courseId, entryEmail);"},{"lineNumber":153,"author":{"gitId":"halfwhole"},"content":"            FeedbackSessionAttributes fs \u003d fsLogic.getFeedbackSession(entryFsName, courseId);"},{"lineNumber":154,"author":{"gitId":"halfwhole"},"content":"            if (student \u003d\u003d null || fs \u003d\u003d null) {"},{"lineNumber":155,"author":{"gitId":"halfwhole"},"content":"                // If the student email or feedback session retrieved from the logs are invalid, discard it"},{"lineNumber":156,"author":{"gitId":"halfwhole"},"content":"                continue;"},{"lineNumber":157,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"halfwhole"},"content":"            if (!fslType.equals(Const.FeedbackSessionLogTypes.ACCESS)"},{"lineNumber":159,"author":{"gitId":"halfwhole"},"content":"                    \u0026\u0026 !fslType.equals(Const.FeedbackSessionLogTypes.SUBMISSION)) {"},{"lineNumber":160,"author":{"gitId":"halfwhole"},"content":"                // If the feedback session log type retrieved from the logs is invalid, discard it"},{"lineNumber":161,"author":{"gitId":"halfwhole"},"content":"                continue;"},{"lineNumber":162,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":164,"author":{"gitId":"halfwhole"},"content":"            FeedbackSessionLogEntry fslEntry \u003d new FeedbackSessionLogEntry(student, fs, fslType, timestamp);"},{"lineNumber":165,"author":{"gitId":"halfwhole"},"content":"            fsLogEntries.add(fslEntry);"},{"lineNumber":166,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":168,"author":{"gitId":"halfwhole"},"content":"        return fsLogEntries;"},{"lineNumber":169,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":171,"author":{"gitId":"halfwhole"},"content":"    private List\u003cLogEntry\u003e getLogEntries(LogSearchParams s) throws LogServiceException {"},{"lineNumber":172,"author":{"gitId":"halfwhole"},"content":"        List\u003cLogEntry\u003e logEntries \u003d new ArrayList\u003c\u003e();"},{"lineNumber":173,"author":{"gitId":"halfwhole"},"content":"        LoggingOptions options \u003d LoggingOptions.getDefaultInstance();"},{"lineNumber":174,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":175,"author":{"gitId":"halfwhole"},"content":"        List\u003cString\u003e logFilters \u003d new ArrayList\u003c\u003e();"},{"lineNumber":176,"author":{"gitId":"halfwhole"},"content":"        if (s.logName !\u003d null) {"},{"lineNumber":177,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"logName\u003d\\\"projects/\" + options.getProjectId() + \"/logs/\" + s.logName + \"\\\"\");"},{"lineNumber":178,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"halfwhole"},"content":"        if (s.resourceType !\u003d null) {"},{"lineNumber":180,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"resource.type\u003d\\\"\" + s.resourceType + \"\\\"\");"},{"lineNumber":181,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"halfwhole"},"content":"        if (s.startTime !\u003d null) {"},{"lineNumber":183,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"timestamp\u003e\\\"\" + s.startTime.toString() + \"\\\"\");"},{"lineNumber":184,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"halfwhole"},"content":"        if (s.endTime !\u003d null) {"},{"lineNumber":186,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"timestamp\u003c\u003d\\\"\" + s.endTime.toString() + \"\\\"\");"},{"lineNumber":187,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"halfwhole"},"content":"        if (s.minSeverity !\u003d null) {"},{"lineNumber":189,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"severity\u003e\u003d\" + s.minSeverity.toString());"},{"lineNumber":190,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"halfwhole"},"content":"        for (Map.Entry\u003cString, String\u003e entry : s.labels.entrySet()) {"},{"lineNumber":192,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"labels.\" + entry.getKey() + \"\u003d\\\"\" + entry.getValue() + \"\\\"\");"},{"lineNumber":193,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"halfwhole"},"content":"        for (Map.Entry\u003cString, String\u003e entry : s.resourceLabels.entrySet()) {"},{"lineNumber":195,"author":{"gitId":"halfwhole"},"content":"            logFilters.add(\"resource.labels.\" + entry.getKey() + \"\u003d\\\"\" + entry.getValue() + \"\\\"\");"},{"lineNumber":196,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"halfwhole"},"content":"        String logFilter \u003d logFilters.stream().collect(Collectors.joining(\"\\n\"));"},{"lineNumber":198,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":199,"author":{"gitId":"halfwhole"},"content":"        try (Logging logging \u003d LoggingOptions.getDefaultInstance().getService()) {"},{"lineNumber":200,"author":{"gitId":"halfwhole"},"content":"            Page\u003cLogEntry\u003e entries \u003d logging.listLogEntries(EntryListOption.filter(logFilter));"},{"lineNumber":201,"author":{"gitId":"halfwhole"},"content":"            for (LogEntry entry : entries.iterateAll()) {"},{"lineNumber":202,"author":{"gitId":"halfwhole"},"content":"                logEntries.add(entry);"},{"lineNumber":203,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"halfwhole"},"content":"        } catch (Exception e) {"},{"lineNumber":205,"author":{"gitId":"halfwhole"},"content":"            throw new LogServiceException(e);"},{"lineNumber":206,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"halfwhole"},"content":"        return logEntries;"},{"lineNumber":208,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":210,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"halfwhole"},"content":"     * Contains params to be used for the searching of logs."},{"lineNumber":212,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"halfwhole"},"content":"    private static class LogSearchParams {"},{"lineNumber":214,"author":{"gitId":"halfwhole"},"content":"        private String logName;"},{"lineNumber":215,"author":{"gitId":"halfwhole"},"content":"        private String resourceType;"},{"lineNumber":216,"author":{"gitId":"halfwhole"},"content":"        private Instant startTime;"},{"lineNumber":217,"author":{"gitId":"halfwhole"},"content":"        private Instant endTime;"},{"lineNumber":218,"author":{"gitId":"halfwhole"},"content":"        private LogSeverity minSeverity;"},{"lineNumber":219,"author":{"gitId":"halfwhole"},"content":"        private Map\u003cString, String\u003e labels \u003d new HashMap\u003c\u003e();"},{"lineNumber":220,"author":{"gitId":"halfwhole"},"content":"        private Map\u003cString, String\u003e resourceLabels \u003d new HashMap\u003c\u003e();"},{"lineNumber":221,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":222,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams setLogName(String logName) {"},{"lineNumber":223,"author":{"gitId":"halfwhole"},"content":"            this.logName \u003d logName;"},{"lineNumber":224,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":225,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":227,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams setResourceType(String resourceType) {"},{"lineNumber":228,"author":{"gitId":"halfwhole"},"content":"            this.resourceType \u003d resourceType;"},{"lineNumber":229,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":230,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":232,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams setStartTime(Instant startTime) {"},{"lineNumber":233,"author":{"gitId":"halfwhole"},"content":"            this.startTime \u003d startTime;"},{"lineNumber":234,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":235,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":237,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams setEndTime(Instant endTime) {"},{"lineNumber":238,"author":{"gitId":"halfwhole"},"content":"            this.endTime \u003d endTime;"},{"lineNumber":239,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":240,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":242,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams setMinSeverity(LogSeverity minSeverity) {"},{"lineNumber":243,"author":{"gitId":"halfwhole"},"content":"            this.minSeverity \u003d minSeverity;"},{"lineNumber":244,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":245,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":247,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams addLabel(String key, String value) {"},{"lineNumber":248,"author":{"gitId":"halfwhole"},"content":"            if (key !\u003d null \u0026\u0026 value !\u003d null) {"},{"lineNumber":249,"author":{"gitId":"halfwhole"},"content":"                this.labels.put(key, value);"},{"lineNumber":250,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":251,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":252,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":253,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":254,"author":{"gitId":"halfwhole"},"content":"        public LogSearchParams addResourceLabel(String key, String value) {"},{"lineNumber":255,"author":{"gitId":"halfwhole"},"content":"            if (key !\u003d null \u0026\u0026 value !\u003d null) {"},{"lineNumber":256,"author":{"gitId":"halfwhole"},"content":"                this.resourceLabels.put(key, value);"},{"lineNumber":257,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":258,"author":{"gitId":"halfwhole"},"content":"            return this;"},{"lineNumber":259,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":260,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":1,"halfwhole":187,"-":74}},{"path":"src/main/java/teammates/logic/core/LocalLoggingService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Holds functions for operations related to logs reading/writing in local dev environment."},{"lineNumber":13,"author":{"gitId":"-"},"content":" *"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * \u003cp\u003eIt is expected that most the implementation will be no-op or returning null/empty list"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as there is no logs retention locally."},{"lineNumber":16,"author":{"gitId":"-"},"content":" *"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * \u003cp\u003eWriting a local logs ingestion service is possible, but is an overkill at this point of time."},{"lineNumber":18,"author":{"gitId":"-"},"content":" */"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class LocalLoggingService implements LogService {"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // Not supported in dev server"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType)"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"            throws LogServiceException {"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"        // Not supported in dev server"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"            Instant startTime, Instant endTime) throws LogServiceException {"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        // Not supported in dev server"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":16,"-":24}},{"path":"src/main/java/teammates/logic/core/LogService.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * An interface used for logs operations such as reading/writing."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface LogService {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    List\u003cErrorLogEntry\u003e getRecentErrorLogs();"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"    void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) throws LogServiceException;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"    List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email, Instant startTime, Instant endTime)"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"            throws LogServiceException;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":7,"-":14}},{"path":"src/main/java/teammates/ui/constants/ApiConst.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Special constants used by the back-end."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public enum ApiConst {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    // CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    COURSE_ID_MAX_LENGTH(FieldValidator.COURSE_ID_MAX_LENGTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    COURSE_NAME_MAX_LENGTH(FieldValidator.COURSE_NAME_MAX_LENGTH),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    STUDENT_NAME_MAX_LENGTH(FieldValidator.PERSON_NAME_MAX_LENGTH),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    SECTION_NAME_MAX_LENGTH(FieldValidator.SECTION_NAME_MAX_LENGTH),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    TEAM_NAME_MAX_LENGTH(FieldValidator.TEAM_NAME_MAX_LENGTH),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    EMAIL_MAX_LENGTH(FieldValidator.EMAIL_MAX_LENGTH),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    FEEDBACK_SESSION_NAME_MAX_LENGTH(FieldValidator.FEEDBACK_SESSION_NAME_MAX_LENGTH),"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_INITIALIZED(Const.INT_UNINITIALIZED),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_NOT_SURE(Const.POINTS_NOT_SURE),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CONTRIBUTION_POINT_EQUAL_SHARE(Const.POINTS_EQUAL_SHARE),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_ANSWER_NOT_SUBMITTED(Const.POINTS_NOT_SUBMITTED),"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":"    NO_VALUE(Const.POINTS_NO_VALUE),"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":"    LOGS_RETENTION_PERIOD(Const.LOGS_RETENTION_PERIOD.toDays());"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Object value;"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ApiConst(Object value) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.value \u003d value;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Object getValue() {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":2,"-":41}},{"path":"src/main/java/teammates/ui/constants/LogType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":" * Constant values for all the different log types."},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"public enum LogType {"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"    // CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"    FEEDBACK_SESSION_ACCESS(Const.FeedbackSessionLogTypes.ACCESS),"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    FEEDBACK_SESSION_SUBMISSION(Const.FeedbackSessionLogTypes.SUBMISSION);"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"    // CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"    @JsonValue"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"    private final String label;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"    LogType(String label) {"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"        this.label \u003d label;"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    public String getLabel() {"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"        return label;"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"     * Returns the enum value of a log type given its label."},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"    public static LogType valueOfLabel(String label) {"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"        for (LogType logType : values()) {"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"            if (logType.label.equals(label)) {"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"                return logType;"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        return null;"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":39}},{"path":"src/main/java/teammates/ui/constants/ResourceEndpoints.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.constants;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * API endpoints for resources."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public enum ResourceEndpoints {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.OFF:JavadocVariable"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    AUTH(ResourceURIs.AUTH),"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    AUTH_REGKEY(ResourceURIs.AUTH_REGKEY),"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ACCOUNT(ResourceURIs.ACCOUNT),"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    COURSE(ResourceURIs.COURSE),"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    BIN_COURSE(ResourceURIs.BIN_COURSE),"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    COURSES(ResourceURIs.COURSES),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    RESULT(ResourceURIs.RESULT),"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    STUDENTS(ResourceURIs.STUDENTS),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    STUDENT(ResourceURIs.STUDENT),"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    SESSION(ResourceURIs.SESSION),"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"    SESSION_LOGS(ResourceURIs.SESSION_LOGS),"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    SESSION_STATS(ResourceURIs.SESSION_STATS),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    SESSIONS(ResourceURIs.SESSIONS),"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    BIN_SESSION(ResourceURIs.BIN_SESSION),"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    QUESTIONS(ResourceURIs.QUESTIONS),"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    QUESTION(ResourceURIs.QUESTION),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    RESPONSES(ResourceURIs.RESPONSES),"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    JOIN(ResourceURIs.JOIN),"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    TIMEZONE(ResourceURIs.TIMEZONE),"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    LOCAL_DATE_TIME(ResourceURIs.LOCAL_DATE_TIME),"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    NATIONALITIES(ResourceURIs.NATIONALITIES),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    EMAIL(ResourceURIs.EMAIL),"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    STUDENT_COURSE_LINKS_REGENERATION(ResourceURIs.STUDENT_COURSE_LINKS_REGENERATION),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    SEARCH_INSTRUCTORS(ResourceURIs.SEARCH_INSTRUCTORS),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    SEARCH_STUDENTS(ResourceURIs.SEARCH_STUDENTS);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //CHECKSTYLE.ON:JavadocVariable"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final String url;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ResourceEndpoints(String s) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.url \u003d s;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @JsonValue"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String getUrl() {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return url;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":1,"-":68}},{"path":"src/main/java/teammates/ui/output/EnrollStudentsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":" * The API output wrapper for enroll results."},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"public class EnrollStudentsData extends ApiOutput {"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"    private StudentsData studentsData;"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"    private List\u003cEnrollErrorResults\u003e unsuccessfulEnrolls;"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    public EnrollStudentsData(StudentsData studentsData, List\u003cEnrollErrorResults\u003e unsuccessfulEnrolls) {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        this.studentsData \u003d studentsData;"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        this.unsuccessfulEnrolls \u003d unsuccessfulEnrolls;"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"    public List\u003cEnrollErrorResults\u003e getUnsuccessfulEnrolls() {"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"        return unsuccessfulEnrolls;"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    public void setUnsuccessfulEnrolls(List\u003cEnrollErrorResults\u003e unsuccessfulEnrolls) {"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"        this.unsuccessfulEnrolls \u003d unsuccessfulEnrolls;"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"    public StudentsData getStudentsData() {"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"        return studentsData;"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"    public void setStudentsData(StudentsData studentsData) {"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":"        this.studentsData \u003d studentsData;"},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"     * Wrapper class for fail to enroll students."},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"    public static class EnrollErrorResults {"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"        private String studentEmail;"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"        private String errorMessage;"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"        public EnrollErrorResults(String studentEmail, String errorMessage) {"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"            this.studentEmail \u003d studentEmail;"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"            this.errorMessage \u003d errorMessage;"},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":"        public String getErrorMessage() {"},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"            return errorMessage;"},{"lineNumber":48,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"        public void setErrorMessage(String errorMessage) {"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"            this.errorMessage \u003d errorMessage;"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":54,"author":{"gitId":"daongochieu2810"},"content":"        public String getStudentEmail() {"},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":"            return studentEmail;"},{"lineNumber":56,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":58,"author":{"gitId":"daongochieu2810"},"content":"        public void setStudentEmail(String studentEmail) {"},{"lineNumber":59,"author":{"gitId":"daongochieu2810"},"content":"            this.studentEmail \u003d studentEmail;"},{"lineNumber":60,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":62}},{"path":"src/main/java/teammates/ui/output/FeedbackSessionLogData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":" * The response log of a single feedback session."},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"public class FeedbackSessionLogData {"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    private final FeedbackSessionData feedbackSessionData;"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"    private final List\u003cFeedbackSessionLogEntryData\u003e feedbackSessionLogEntries;"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogData(FeedbackSessionData feedbackSessionData,"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"                              List\u003cFeedbackSessionLogEntryData\u003e feedbackSessionLogEntries) {"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionData \u003d feedbackSessionData;"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionLogEntries \u003d feedbackSessionLogEntries;"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogData(FeedbackSessionAttributes feedbackSession, List\u003cFeedbackSessionLogEntry\u003e logEntries) {"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionData fsData \u003d new FeedbackSessionData(feedbackSession);"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogEntryData\u003e fsLogEntryDatas \u003d logEntries.stream()"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"                .map(FeedbackSessionLogEntryData::new)"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"                .collect(Collectors.toList());"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionData \u003d fsData;"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionLogEntries \u003d fsLogEntryDatas;"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionData getFeedbackSessionData() {"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"        return feedbackSessionData;"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"     * Returns all feedback session log entries."},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogEntryData\u003e getFeedbackSessionLogEntries() {"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"        return feedbackSessionLogEntries;"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":41}},{"path":"src/main/java/teammates/ui/output/FeedbackSessionLogEntryData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.constants.LogType;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":" * The session log of a student for a single feedback session."},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"public class FeedbackSessionLogEntryData {"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"    private final StudentData studentData;"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"    private final LogType feedbackSessionLogType;"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    private final long timestamp;"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogEntryData(FeedbackSessionLogEntry logEntry) {"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student \u003d logEntry.getStudent();"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"        StudentData studentData \u003d new StudentData(student);"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"        LogType logType \u003d LogType.valueOfLabel(logEntry.getFeedbackSessionLogType());"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"        long timestamp \u003d logEntry.getTimestamp();"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"        this.studentData \u003d studentData;"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionLogType \u003d logType;"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"        this.timestamp \u003d timestamp;"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"    public StudentData getStudentData() {"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"        return studentData;"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"    public LogType getFeedbackSessionLogType() {"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"        return feedbackSessionLogType;"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"    public long getTimestamp() {"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"        return timestamp;"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":36}},{"path":"src/main/java/teammates/ui/output/FeedbackSessionLogsData.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdithyaNarayan"},"content":"package teammates.ui.output;"},{"lineNumber":2,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":3,"author":{"gitId":"AdithyaNarayan"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import java.util.stream.Collectors;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":" * The API output format for logs on all feedback sessions in a course."},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":" */"},{"lineNumber":13,"author":{"gitId":"AdithyaNarayan"},"content":"public class FeedbackSessionLogsData extends ApiOutput {"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"    private final List\u003cFeedbackSessionLogData\u003e feedbackSessionLogs;"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogsData(List\u003cFeedbackSessionLogData\u003e feedbackSessionLogs) {"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"        this.feedbackSessionLogs \u003d feedbackSessionLogs;"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"    public FeedbackSessionLogsData(Map\u003cFeedbackSessionAttributes, List\u003cFeedbackSessionLogEntry\u003e\u003e groupedEntries) {"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogData\u003e fsLogDatas \u003d groupedEntries.entrySet().stream()"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"                .map(entry -\u003e {"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"                    FeedbackSessionAttributes feedbackSession \u003d entry.getKey();"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"                    List\u003cFeedbackSessionLogEntry\u003e logEntries \u003d entry.getValue();"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"                    return new FeedbackSessionLogData(feedbackSession, logEntries);"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"                })"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"                .collect(Collectors.toList());"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"        this.feedbackSessionLogs \u003d fsLogDatas;"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogData\u003e getFeedbackSessionLogs() {"},{"lineNumber":33,"author":{"gitId":"AdithyaNarayan"},"content":"        return feedbackSessionLogs;"},{"lineNumber":34,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"AdithyaNarayan"},"content":"}"}],"authorContributionMap":{"halfwhole":19,"AdithyaNarayan":16}},{"path":"src/main/java/teammates/ui/webapi/ActionFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashMap;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletRequest;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpDelete;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpGet;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPost;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.apache.http.client.methods.HttpPut;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.exception.ActionMappingException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.exception.TeammatesException;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Assumption;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.CronJobURIs;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.ResourceURIs;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.Const.TaskQueue;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Generates the matching {@link Action} for a given URI and request method."},{"lineNumber":23,"author":{"gitId":"-"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ActionFactory {"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String GET \u003d HttpGet.METHOD_NAME;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String POST \u003d HttpPost.METHOD_NAME;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String PUT \u003d HttpPut.METHOD_NAME;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DELETE \u003d HttpDelete.METHOD_NAME;"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Map\u003cString, Map\u003cString, Class\u003c? extends Action\u003e\u003e\u003e ACTION_MAPPINGS \u003d new HashMap\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    static {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, POST, PutDataBundleAction.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // Even though this is a DELETE action, PUT is used as DELETE does not allow usage of response body"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE, PUT, DeleteDataBundleAction.class);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        map(ResourceURIs.DATABUNDLE_DOCUMENTS, PUT, PutDataBundleDocumentsAction.class);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EXCEPTION, GET, AdminExceptionTestAction.class);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ERROR_REPORT, POST, SendErrorReportAction.class);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        map(ResourceURIs.TIMEZONE, GET, GetTimeZonesAction.class);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        map(ResourceURIs.NATIONALITIES, GET, GetNationalitiesAction.class);"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH, GET, GetAuthInfoAction.class);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        map(ResourceURIs.AUTH_REGKEY, GET, GetRegkeyValidityAction.class);"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, GET, GetAccountAction.class);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, POST, CreateAccountAction.class);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT, DELETE, DeleteAccountAction.class);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_DOWNGRADE, PUT, DowngradeAccountAction.class);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        map(ResourceURIs.ACCOUNT_RESET, PUT, ResetAccountAction.class);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, GET, GetCourseAction.class);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, DELETE, DeleteCourseAction.class);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, POST, CreateCourseAction.class);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE, PUT, UpdateCourseAction.class);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_ARCHIVE, PUT, ArchiveCourseAction.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, PUT, BinCourseAction.class);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_COURSE, DELETE, RestoreCourseAction.class);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSES, GET, GetCoursesAction.class);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        map(ResourceURIs.COURSE_SECTIONS, GET, GetCourseSectionNamesAction.class);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTORS, GET, GetInstructorsAction.class);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, GET, GetInstructorAction.class);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, DELETE, DeleteInstructorAction.class);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, GET, GetInstructorPrivilegeAction.class);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR_PRIVILEGE, PUT, UpdateInstructorPrivilegeAction.class);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, POST, CreateFeedbackResponseCommentAction.class);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, GET, GetFeedbackResponseCommentAction.class);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, PUT, UpdateFeedbackResponseCommentAction.class);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSE_COMMENT, DELETE, DeleteFeedbackResponseCommentAction.class);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESULT, GET, GetSessionResultsAction.class);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        //STUDENTS APIs"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, GET, GetStudentsAction.class);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, PUT, EnrollStudentsAction.class);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENTS, DELETE, DeleteStudentsAction.class);"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"        //STUDENT APIs"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, DELETE, DeleteStudentAction.class);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, GET, GetStudentAction.class);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT, PUT, UpdateStudentAction.class);"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"        //SEARCH APIs"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_INSTRUCTORS, GET, SearchInstructorsAction.class);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SEARCH_STUDENTS, GET, SearchStudentsAction.class);"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        map(ResourceURIs.EMAIL, GET, GenerateEmailAction.class);"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS_ONGOING, GET, GetOngoingSessionsAction.class);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_STATS, GET, GetSessionResponseStatsAction.class);"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, GET, GetFeedbackSessionAction.class);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, PUT, UpdateFeedbackSessionAction.class);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, POST, CreateFeedbackSessionAction.class);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION, DELETE, DeleteFeedbackSessionAction.class);"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, POST, PublishFeedbackSessionAction.class);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_PUBLISH, DELETE, UnpublishFeedbackSessionAction.class);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_SUBMITTED_GIVER_SET, GET, GetFeedbackSessionSubmittedGiverSetAction.class);"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_SUBMISSION, POST, RemindFeedbackSessionSubmissionAction.class);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_REMIND_RESULT, POST, RemindFeedbackSessionResultAction.class);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSIONS, GET, GetFeedbackSessionsAction.class);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, PUT, BinFeedbackSessionAction.class);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        map(ResourceURIs.BIN_SESSION, DELETE, RestoreFeedbackSessionAction.class);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_COURSE_LINKS_REGENERATION, POST, RegenerateStudentCourseLinksAction.class);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTIONS, GET, GetFeedbackQuestionsAction.class);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, POST, CreateFeedbackQuestionAction.class);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, PUT, UpdateFeedbackQuestionAction.class);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION, DELETE, DeleteFeedbackQuestionAction.class);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        map(ResourceURIs.QUESTION_RECIPIENTS, GET, GetFeedbackQuestionRecipientsAction.class);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, GET, GetFeedbackResponsesAction.class);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        map(ResourceURIs.RESPONSES, PUT, SubmitFeedbackResponsesAction.class);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        map(ResourceURIs.HAS_RESPONSES, GET, GetHasResponsesAction.class);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        map(ResourceURIs.LOCAL_DATE_TIME, GET, GetLocalDateTimeInfoAction.class);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        map(ResourceURIs.SESSION_LINKS_RECOVERY, POST, SessionLinksRecoveryAction.class);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, GET, GetCourseJoinStatusAction.class);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN, PUT, JoinCourseAction.class);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        map(ResourceURIs.JOIN_REMIND, POST, SendJoinReminderEmailAction.class);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, GET, GetStudentProfileAction.class);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE, PUT, UpdateStudentProfileAction.class);"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, GET, GetStudentProfilePictureAction.class);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, POST, PostStudentProfilePictureAction.class);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        map(ResourceURIs.STUDENT_PROFILE_PICTURE, DELETE, DeleteStudentProfilePictureAction.class);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, PUT, UpdateInstructorAction.class);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        map(ResourceURIs.INSTRUCTOR, POST, CreateInstructorAction.class);"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"halfwhole"},"content":"        // Logging and tracking"},{"lineNumber":121,"author":{"gitId":"halfwhole"},"content":"        map(ResourceURIs.SESSION_LOGS, POST, CreateFeedbackSessionLogAction.class);"},{"lineNumber":122,"author":{"gitId":"AdithyaNarayan"},"content":"        map(ResourceURIs.SESSION_LOGS, GET, GetFeedbackSessionLogsAction.class);"},{"lineNumber":123,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Cron jobs; use GET request"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java/config/cron"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_LOG_COMPILATION, GET, CompileLogsAction.class);"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_DATASTORE_BACKUP, GET, DatastoreBackupAction.class);"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_OPENING_REMINDERS, GET, FeedbackSessionOpeningRemindersAction.class);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS, GET, FeedbackSessionClosedRemindersAction.class);"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_CLOSING_REMINDERS, GET, FeedbackSessionClosingRemindersAction.class);"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        map(CronJobURIs.AUTOMATED_FEEDBACK_PUBLISHED_REMINDERS, GET, FeedbackSessionPublishedRemindersAction.class);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Task queue workers; use POST request"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Reference: https://cloud.google.com/appengine/docs/standard/java/taskqueue/"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_PUBLISHED_EMAIL_WORKER_URL, POST, FeedbackSessionPublishedEmailWorkerAction.class);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_RESEND_PUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                FeedbackSessionResendPublishedEmailWorkerAction.class);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_EMAIL_WORKER_URL, POST, FeedbackSessionRemindEmailWorkerAction.class);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_REMIND_PARTICULAR_USERS_EMAIL_WORKER_URL, POST,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                FeedbackSessionRemindParticularUsersEmailWorkerAction.class);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        map(TaskQueue.FEEDBACK_SESSION_UNPUBLISHED_EMAIL_WORKER_URL, POST,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                FeedbackSessionUnpublishedEmailWorkerAction.class);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        map(TaskQueue.INSTRUCTOR_COURSE_JOIN_EMAIL_WORKER_URL, POST, InstructorCourseJoinEmailWorkerAction.class);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        map(TaskQueue.SEND_EMAIL_WORKER_URL, POST, SendEmailWorkerAction.class);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        map(TaskQueue.STUDENT_COURSE_JOIN_EMAIL_WORKER_URL, POST, StudentCourseJoinEmailWorkerAction.class);"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static void map(String uri, String method, Class\u003c? extends Action\u003e actionClass) {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ACTION_MAPPINGS.computeIfAbsent(uri, k -\u003e new HashMap\u003c\u003e()).put(method, actionClass);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns the matching {@link Action} object for the URI and method in {@code req}."},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public Action getAction(HttpServletRequest req, String method) throws ActionMappingException {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String uri \u003d req.getRequestURI();"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (uri.contains(\";\")) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            uri \u003d uri.split(\";\")[0];"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return getAction(uri, method);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private Action getAction(String uri, String method) throws ActionMappingException {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!ACTION_MAPPINGS.containsKey(uri)) {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Resource with URI \" + uri + \" is not found.\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Class\u003c? extends Action\u003e controllerClass \u003d"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                ACTION_MAPPINGS.getOrDefault(uri, new HashMap\u003c\u003e()).get(method);"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (controllerClass \u003d\u003d null) {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new ActionMappingException(\"Method [\" + method + \"] is not allowed for URI \" + uri + \".\","},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    HttpStatus.SC_METHOD_NOT_ALLOWED);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return controllerClass.newInstance();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (Exception e) {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            Assumption.fail(\"Could not create the action for \" + uri + \": \""},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    + TeammatesException.toStringWithStackTrace(e));"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return null;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":3,"AdithyaNarayan":1,"-":184}},{"path":"src/main/java/teammates/ui/webapi/CreateCourseAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.exception.UnauthorizedAccessException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.ui.output.CourseData;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.ui.request.CourseCreateRequest;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Create a new course for an instructor."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class CreateCourseAction extends Action {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!userInfo.isInstructor) {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new UnauthorizedAccessException(\"Instructor privilege is required to access this resource.\");"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    JsonResult execute() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        CourseCreateRequest courseCreateRequest \u003d getAndValidateRequestBody(CourseCreateRequest.class);"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String newCourseTimeZone \u003d courseCreateRequest.getTimeZone();"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String timeZoneErrorMessage \u003d FieldValidator.getInvalidityInfoForTimeZone(newCourseTimeZone);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!timeZoneErrorMessage.isEmpty()) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new JsonResult(timeZoneErrorMessage, HttpStatus.SC_BAD_REQUEST);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String newCourseId \u003d courseCreateRequest.getCourseId();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String newCourseName \u003d courseCreateRequest.getCourseName();"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CourseAttributes courseAttributes \u003d"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                CourseAttributes.builder(newCourseId)"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        .withName(newCourseName)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        .withTimezone(ZoneId.of(newCourseTimeZone))"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            logic.createCourseAndInstructor(userInfo.getId(), courseAttributes);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (EntityAlreadyExistsException e) {"},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":"            return new JsonResult(\"The course ID \" + courseAttributes.getId()"},{"lineNumber":56,"author":{"gitId":"daongochieu2810"},"content":"                    + \" has been used by another course, possibly by some other user.\""},{"lineNumber":57,"author":{"gitId":"daongochieu2810"},"content":"                    + \" Please try again with a different course ID.\", HttpStatus.SC_CONFLICT);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (InvalidParametersException e) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_BAD_REQUEST);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new JsonResult(new CourseData(logic.getCourse(newCourseId)));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":3,"-":61}},{"path":"src/main/java/teammates/ui/webapi/CreateFeedbackSessionLogAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":" * Action: creates a feedback session log for the purposes of tracking and auditing."},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"class CreateFeedbackSessionLogAction extends Action {"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"        return AuthType.PUBLIC;"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"        // No specific access control restrictions on creating feedback session logs"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"    JsonResult execute() {"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"        String fslType \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE);"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"        if (!fslType.equals(Const.FeedbackSessionLogTypes.ACCESS)"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"                \u0026\u0026 !fslType.equals(Const.FeedbackSessionLogTypes.SUBMISSION)) {"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(\"Invalid log type\", HttpStatus.SC_BAD_REQUEST);"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"        String fsName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"        String studentEmail \u003d getNonNullRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"        // Skip rigorous validations to avoid incurring extra db reads and to keep the endpoint light"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"            logsProcessor.createFeedbackSessionLog(courseId, studentEmail, fsName, fslType);"},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"        } catch (LogServiceException e) {"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"        return new JsonResult(\"Successful\");"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":44}},{"path":"src/main/java/teammates/ui/webapi/EnrollStudentsAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.exception.EnrollException;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityAlreadyExistsException;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidHttpRequestBodyException;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.exception.UnauthorizedAccessException;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"import teammates.ui.output.EnrollStudentsData;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.ui.output.StudentsData;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.ui.request.StudentsEnrollRequest;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Enroll a list of students."},{"lineNumber":23,"author":{"gitId":"-"},"content":" *"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * \u003cp\u003eCreate the students who are not in the course."},{"lineNumber":25,"author":{"gitId":"-"},"content":" *"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * \u003cp\u003eUpdate the students who are already existed."},{"lineNumber":27,"author":{"gitId":"-"},"content":" *"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * \u003cp\u003eReturn all students who are successfully enrolled."},{"lineNumber":29,"author":{"gitId":"-"},"content":" */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class EnrollStudentsAction extends Action {"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return authType.LOGGED_IN;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!userInfo.isInstructor) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new UnauthorizedAccessException(\"Instructor privilege is required to access this resource.\");"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String courseId \u003d getRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForGoogleId(courseId, userInfo.id);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        gateKeeper.verifyAccessible("},{"lineNumber":46,"author":{"gitId":"-"},"content":"                instructor, logic.getCourse(courseId), Const.InstructorPermissions.CAN_MODIFY_STUDENT);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    JsonResult execute() {"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest enrollRequests \u003d getAndValidateRequestBody(StudentsEnrollRequest.class);"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentsToEnroll \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        enrollRequests.getStudentEnrollRequests().forEach(studentEnrollRequest -\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            studentsToEnroll.add(StudentAttributes.builder(courseId, studentEnrollRequest.getEmail())"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                    .withName(studentEnrollRequest.getName())"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                    .withSectionName(studentEnrollRequest.getSection())"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    .withTeamName(studentEnrollRequest.getTeam())"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                    .withComment(studentEnrollRequest.getComments())"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    .build());"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            logic.validateSectionsAndTeams(studentsToEnroll, courseId);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (EnrollException e) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new InvalidHttpRequestBodyException(e.getMessage(), e);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e existingStudents \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e existingStudentsEmail \u003d"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                existingStudents.stream().map(StudentAttributes::getEmail).collect(Collectors.toSet());"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e enrolledStudents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"        List\u003cEnrollStudentsData.EnrollErrorResults\u003e failToEnrollStudents \u003d new ArrayList\u003c\u003e();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        studentsToEnroll.forEach(student -\u003e {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            if (existingStudentsEmail.contains(student.email)) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                // The student has been enrolled in the course."},{"lineNumber":79,"author":{"gitId":"-"},"content":"                StudentAttributes.UpdateOptions updateOptions \u003d"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        StudentAttributes.updateOptionsBuilder(student.getCourse(), student.getEmail())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                                .withName(student.getName())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                .withSectionName(student.getSection())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                                .withTeamName(student.getTeam())"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                .withComment(student.getComments())"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                                .build();"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    StudentAttributes updatedStudent \u003d logic.updateStudentCascade(updateOptions);"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    enrolledStudents.add(updatedStudent);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                } catch (InvalidParametersException | EntityDoesNotExistException"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        | EntityAlreadyExistsException exception) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                    // Unsuccessfully enrolled students will not be returned."},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"                    failToEnrollStudents.add(new EnrollStudentsData.EnrollErrorResults(student.email,"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":"                            exception.getMessage()));"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                // The student is new."},{"lineNumber":97,"author":{"gitId":"-"},"content":"                try {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    StudentAttributes newStudent \u003d logic.createStudent(student);"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    enrolledStudents.add(newStudent);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                } catch (InvalidParametersException | EntityAlreadyExistsException exception) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    // Unsuccessfully enrolled students will not be returned."},{"lineNumber":102,"author":{"gitId":"daongochieu2810"},"content":"                    failToEnrollStudents.add(new EnrollStudentsData.EnrollErrorResults(student.email,"},{"lineNumber":103,"author":{"gitId":"daongochieu2810"},"content":"                            exception.getMessage()));"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":107,"author":{"gitId":"daongochieu2810"},"content":"        return new JsonResult(new EnrollStudentsData(new StudentsData(enrolledStudents), failToEnrollStudents));"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":7,"-":102}},{"path":"src/main/java/teammates/ui/webapi/GetFeedbackSessionLogsAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AdithyaNarayan"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":"import java.util.HashMap;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import java.util.Map;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":"import teammates.common.exception.EntityNotFoundException;"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"import teammates.common.exception.InvalidHttpParameterException;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.LogServiceException;"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"import teammates.common.exception.UnauthorizedAccessException;"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"import teammates.common.util.Const;"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.output.FeedbackSessionLogsData;"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":" * Action: gets the feedback session logs of feedback sessions of a course."},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":" */"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"public class GetFeedbackSessionLogsAction extends Action {"},{"lineNumber":28,"author":{"gitId":"AdithyaNarayan"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"AdithyaNarayan"},"content":"    AuthType getMinAuthLevel() {"},{"lineNumber":30,"author":{"gitId":"AdithyaNarayan"},"content":"        return AuthType.LOGGED_IN;"},{"lineNumber":31,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":33,"author":{"gitId":"AdithyaNarayan"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"AdithyaNarayan"},"content":"    void checkSpecificAccessControl() {"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"        if (!userInfo.isInstructor) {"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"            throw new UnauthorizedAccessException(\"Instructor privilege is required to access this resource.\");"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":40,"author":{"gitId":"AdithyaNarayan"},"content":"        CourseAttributes courseAttributes \u003d logic.getCourse(courseId);"},{"lineNumber":41,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":42,"author":{"gitId":"AdithyaNarayan"},"content":"        if (courseAttributes \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"AdithyaNarayan"},"content":"            throw new EntityNotFoundException(new EntityDoesNotExistException(\"Course is not found\"));"},{"lineNumber":44,"author":{"gitId":"AdithyaNarayan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":46,"author":{"gitId":"AdithyaNarayan"},"content":"        InstructorAttributes instructor \u003d logic.getInstructorForGoogleId(courseId, userInfo.getId());"},{"lineNumber":47,"author":{"gitId":"AdithyaNarayan"},"content":"        gateKeeper.verifyAccessible(instructor, courseAttributes);"},{"lineNumber":48,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":50,"author":{"gitId":"AdithyaNarayan"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"halfwhole"},"content":"    JsonResult execute() {"},{"lineNumber":52,"author":{"gitId":"halfwhole"},"content":"        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"},{"lineNumber":53,"author":{"gitId":"halfwhole"},"content":"        if (logic.getCourse(courseId) \u003d\u003d null) {"},{"lineNumber":54,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(\"Course not found\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":55,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"halfwhole"},"content":"        String email \u003d getRequestParamValue(Const.ParamsNames.STUDENT_EMAIL);"},{"lineNumber":57,"author":{"gitId":"halfwhole"},"content":"        if (email !\u003d null \u0026\u0026 logic.getStudentForEmail(courseId, email) \u003d\u003d null) {"},{"lineNumber":58,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(\"Student not found\", HttpStatus.SC_NOT_FOUND);"},{"lineNumber":59,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"halfwhole"},"content":"        String startTimeStr \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME);"},{"lineNumber":61,"author":{"gitId":"halfwhole"},"content":"        String endTimeStr \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME);"},{"lineNumber":62,"author":{"gitId":"halfwhole"},"content":"        Instant startTime;"},{"lineNumber":63,"author":{"gitId":"halfwhole"},"content":"        Instant endTime;"},{"lineNumber":64,"author":{"gitId":"halfwhole"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"halfwhole"},"content":"            startTime \u003d Instant.ofEpochMilli(Long.parseLong(startTimeStr));"},{"lineNumber":66,"author":{"gitId":"halfwhole"},"content":"            endTime \u003d Instant.ofEpochMilli(Long.parseLong(endTimeStr));"},{"lineNumber":67,"author":{"gitId":"halfwhole"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":68,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(\"Invalid start or end time\", HttpStatus.SC_BAD_REQUEST);"},{"lineNumber":69,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"halfwhole"},"content":"        // TODO: we might want to impose limits on the time range from startTime to endTime"},{"lineNumber":71,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"        if (endTime.toEpochMilli() \u003c startTime.toEpochMilli()) {"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":"            throw new InvalidHttpParameterException(\"The end time should be after the start time.\");"},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"        Instant earliestSearchTime \u003d TimeHelper.getInstantDaysOffsetBeforeNow(Const.LOGS_RETENTION_PERIOD.toDays());"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"        if (startTime.isBefore(earliestSearchTime) || endTime.isBefore(earliestSearchTime)) {"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"            throw new InvalidHttpParameterException("},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":"                    \"The earliest date you can search for is \" + Const.LOGS_RETENTION_PERIOD.toDays() + \" days before today.\""},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"            );"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":83,"author":{"gitId":"halfwhole"},"content":"        try {"},{"lineNumber":84,"author":{"gitId":"halfwhole"},"content":"            List\u003cFeedbackSessionLogEntry\u003e fsLogEntries \u003d"},{"lineNumber":85,"author":{"gitId":"halfwhole"},"content":"                    logsProcessor.getFeedbackSessionLogs(courseId, email, startTime, endTime);"},{"lineNumber":86,"author":{"gitId":"halfwhole"},"content":"            Map\u003cFeedbackSessionAttributes, List\u003cFeedbackSessionLogEntry\u003e\u003e groupedEntries \u003d"},{"lineNumber":87,"author":{"gitId":"halfwhole"},"content":"                    groupFeedbackSessionLogEntries(courseId, fsLogEntries);"},{"lineNumber":88,"author":{"gitId":"halfwhole"},"content":"            FeedbackSessionLogsData fslData \u003d new FeedbackSessionLogsData(groupedEntries);"},{"lineNumber":89,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(fslData);"},{"lineNumber":90,"author":{"gitId":"halfwhole"},"content":"        } catch (LogServiceException e) {"},{"lineNumber":91,"author":{"gitId":"halfwhole"},"content":"            return new JsonResult(e.getMessage(), HttpStatus.SC_INTERNAL_SERVER_ERROR);"},{"lineNumber":92,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":95,"author":{"gitId":"halfwhole"},"content":"    private Map\u003cFeedbackSessionAttributes, List\u003cFeedbackSessionLogEntry\u003e\u003e groupFeedbackSessionLogEntries("},{"lineNumber":96,"author":{"gitId":"halfwhole"},"content":"            String courseId, List\u003cFeedbackSessionLogEntry\u003e fsLogEntries) {"},{"lineNumber":97,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionAttributes\u003e feedbackSessions \u003d logic.getFeedbackSessionsForCourse(courseId);"},{"lineNumber":98,"author":{"gitId":"halfwhole"},"content":"        Map\u003cFeedbackSessionAttributes, List\u003cFeedbackSessionLogEntry\u003e\u003e groupedEntries \u003d new HashMap\u003c\u003e();"},{"lineNumber":99,"author":{"gitId":"halfwhole"},"content":"        for (FeedbackSessionAttributes feedbackSession : feedbackSessions) {"},{"lineNumber":100,"author":{"gitId":"halfwhole"},"content":"            groupedEntries.put(feedbackSession, new ArrayList\u003c\u003e());"},{"lineNumber":101,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"halfwhole"},"content":"        for (FeedbackSessionLogEntry fsLogEntry : fsLogEntries) {"},{"lineNumber":103,"author":{"gitId":"halfwhole"},"content":"            FeedbackSessionAttributes fs \u003d fsLogEntry.getFeedbackSession();"},{"lineNumber":104,"author":{"gitId":"halfwhole"},"content":"            if (groupedEntries.get(fs) !\u003d null) {"},{"lineNumber":105,"author":{"gitId":"halfwhole"},"content":"                groupedEntries.get(fs).add(fsLogEntry);"},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"        return groupedEntries;"},{"lineNumber":109,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"AdithyaNarayan"},"content":"}"}],"authorContributionMap":{"t-cheepeng":13,"halfwhole":64,"AdithyaNarayan":33}},{"path":"src/main/java/teammates/ui/webapi/JsonResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javax.servlet.http.Cookie;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javax.servlet.http.HttpServletResponse;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.JsonUtils;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.ui.output.ApiOutput;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Action result in form of JSON object."},{"lineNumber":20,"author":{"gitId":"-"},"content":" *"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * \u003cp\u003eThis is the most common format for REST-ful back-end API response."},{"lineNumber":22,"author":{"gitId":"-"},"content":" */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonResult extends ActionResult {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final ApiOutput output;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private List\u003cCookie\u003e cookies;"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    JsonResult(ApiOutput output) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(HttpStatus.SC_OK);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.output \u003d output;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.cookies \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    JsonResult(ApiOutput output, List\u003cCookie\u003e cookies) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(output);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.cookies \u003d cookies;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    JsonResult(String message) {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(message, HttpStatus.SC_OK);"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    JsonResult(String message, int statusCode) {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(statusCode);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.output \u003d new MessageOutput(message);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.cookies \u003d new ArrayList\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    ApiOutput getOutput() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return output;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void send(HttpServletResponse resp) throws IOException {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        output.setRequestId(Config.getRequestId());"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Cookie cookie : cookies) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            cookie.setSecure(!Config.isDevServer());"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            resp.addCookie(cookie);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        resp.setStatus(getStatusCode());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        resp.setContentType(\"application/json\");"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PrintWriter pw \u003d resp.getWriter();"},{"lineNumber":63,"author":{"gitId":"moziliar"},"content":"        JsonUtils.toCompactJson(output, pw);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    List\u003cCookie\u003e getCookies() {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return cookies;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":1,"-":69}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackRankQuestionDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":" * SUT: {@link FeedbackRankQuestionDetails}."},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"public class FeedbackRankQuestionDetailsTest extends BaseTestCase {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetMinOptionsToBeRanked_sameValidValues_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        int testValue \u003d 100;"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, Const.POINTS_NO_VALUE);"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setMinOptionsToBeRanked(testValue);"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackRankQuestionDetails.minOptionsToBeRanked, testValue);"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetMaxOptionsToBeRanked_sameValidValues_shouldReturnTrue() {"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"        int testValue \u003d 100;"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, Const.POINTS_NO_VALUE);"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setMaxOptionsToBeRanked(testValue);"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackRankQuestionDetails.maxOptionsToBeRanked, testValue);"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetDuplicatesAllowed_validValues_shouldReturnTrue() {"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"        assertFalse(feedbackRankQuestionDetails.areDuplicatesAllowed);"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"        feedbackRankQuestionDetails.setAreDuplicatesAllowed(true);"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"        assertTrue(feedbackRankQuestionDetails.areDuplicatesAllowed);"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateDefaultValue_sameValues_shouldReturnTrue() {"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackRankQuestionDetails feedbackRankQuestionDetails \u003d new FeedbackRankOptionsQuestionDetails();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.getMaxOptionsToBeRanked(), Const.POINTS_NO_VALUE);"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(feedbackRankQuestionDetails.getMinOptionsToBeRanked(), Const.POINTS_NO_VALUE);"},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":42,"-":5}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackTextQuestionDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackTextQuestionDetails}."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FeedbackTextQuestionDetailsTest extends BaseTestCase {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void testIsInstructorCommentsOnResponsesAllowed_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(feedbackQuestionDetails.isInstructorCommentsOnResponsesAllowed());"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void testIsFeedbackParticipantCommentsOnResponsesAllowed_shouldReturnFalse() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(feedbackQuestionDetails.isFeedbackParticipantCommentsOnResponsesAllowed());"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"    public void testIsRichTextOptionTrueByDefault_shouldReturnTrue() {"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"        FeedbackTextQuestionDetails feedbackQuestionDetails \u003d new FeedbackTextQuestionDetails();"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"        assertTrue(feedbackQuestionDetails.getShouldAllowRichText());"},{"lineNumber":28,"author":{"gitId":"moziliar"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":6,"-":23}},{"path":"src/test/java/teammates/common/datatransfer/questions/FeedbackTextResponseDetailsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"package teammates.common.datatransfer.questions;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":" * SUT: {@link FeedbackTextResponseDetails}."},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"public class FeedbackTextResponseDetailsTest extends BaseTestCase {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateArgumentConstructor_sameValues_shouldReturnTrue() {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        String testAnswer \u003d \"Hello World\";"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(testAnswer);"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswer(), \"Hello World\");"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateAttributesOfAnswer_nullValue_shouldReturnNull() {"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(null);"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"        assertNull(feedbackTextResponseDetails.getAnswer());"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSanitizedAnswerString_nullValues_shouldReturnTrue() {"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(null);"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSanitizedAnswerString_validValues_shouldReturnTrue() {"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"        String testValue \u003d \"Hello World\";"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails(testValue);"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(feedbackTextResponseDetails.getAnswer()));"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"    public void testValidateSetAnswer_sameValues_shouldReturnTrue() {"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"        String testValue \u003d \"Hello World\";"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":"        FeedbackTextResponseDetails feedbackTextResponseDetails \u003d new FeedbackTextResponseDetails();"},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"        assertNotEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(testValue));"},{"lineNumber":46,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"        feedbackTextResponseDetails.setAnswer(testValue);"},{"lineNumber":48,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(feedbackTextResponseDetails.getAnswerString(),"},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"                SanitizationHelper.sanitizeForRichText(testValue));"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":52}},{"path":"src/test/java/teammates/common/util/JsonUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.common.util;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextResponseDetails;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.test.BaseTestCase;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * SUT: {@link JsonUtils}."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonUtilsTest extends BaseTestCase {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void testFeedbackQuestionDetailsAdaptor_withComposedQuestionDetails_shouldSerializeToConcreteClass() {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        FeedbackTextQuestionDetails questionDetails \u003d new FeedbackTextQuestionDetails(\"Question text.\");"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArrayList\u003cFeedbackParticipantType\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        participants.add(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        participants.add(FeedbackParticipantType.RECEIVER);"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                .withCourseId(\"testingCourse\")"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(\"testFeedbackSession\")"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                .withGiverType(FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                .withRecipientType(FeedbackParticipantType.SELF)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(Const.MAX_POSSIBLE_RECIPIENTS)"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                .withQuestionNumber(1)"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .withQuestionDetails(questionDetails)"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(participants)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(participants)"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(participants)"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\n\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackSessionName\\\": \\\"testFeedbackSession\\\",\\n\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                + \"  \\\"courseId\\\": \\\"testingCourse\\\",\\n\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                + \"  \\\"questionDetails\\\": {\\n\""},{"lineNumber":44,"author":{"gitId":"moziliar"},"content":"                + \"    \\\"shouldAllowRichText\\\": true,\\n\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"                + \"    \\\"questionType\\\": \\\"TEXT\\\",\\n\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                + \"    \\\"questionText\\\": \\\"Question text.\\\"\\n\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                + \"  },\\n\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"  \\\"questionNumber\\\": 1,\\n\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"  \\\"giverType\\\": \\\"INSTRUCTORS\\\",\\n\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"  \\\"recipientType\\\": \\\"SELF\\\",\\n\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"  \\\"numberOfEntitiesToGiveFeedbackTo\\\": -100,\\n\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + \"  \\\"showResponsesTo\\\": [\\n\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + \"  ],\\n\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"  \\\"showGiverNameTo\\\": [\\n\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \"  ],\\n\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"  \\\"showRecipientNameTo\\\": [\\n\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + \"    \\\"RECEIVER\\\"\\n\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \"  ]\\n\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + \"}\", JsonUtils.toJson(fqa));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\\"feedbackSessionName\\\":\\\"testFeedbackSession\\\",\""},{"lineNumber":64,"author":{"gitId":"moziliar"},"content":"                + \"\\\"courseId\\\":\\\"testingCourse\\\",\\\"questionDetails\\\":{\\\"shouldAllowRichText\\\":true,\\\"questionType\\\":\""},{"lineNumber":65,"author":{"gitId":"moziliar"},"content":"                + \"\\\"TEXT\\\",\""},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + \"\\\"questionText\\\":\\\"Question text.\\\"},\\\"questionNumber\\\":1,\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + \"\\\"giverType\\\":\\\"INSTRUCTORS\\\",\\\"recipientType\\\":\\\"SELF\\\",\\\"numberOfEntitiesToGiveFeedbackTo\\\":-100,\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + \"\\\"showResponsesTo\\\":[\\\"RECEIVER\\\"],\\\"showGiverNameTo\\\":[\\\"RECEIVER\\\"],\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + \"\\\"showRecipientNameTo\\\":[\\\"RECEIVER\\\"]}\","},{"lineNumber":70,"author":{"gitId":"-"},"content":"                JsonUtils.toCompactJson(fqa));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void testFeedbackResponseDetailsAdaptor_withComposedResponseDetails_shouldSerializeToConcreteClass() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FeedbackResponseAttributes.builder("},{"lineNumber":77,"author":{"gitId":"-"},"content":"                        \"questionId\", \"giver@email.com\", \"recipient@email.com\")"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(\"Session1\")"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withCourseId(\"CS3281\")"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withGiverSection(\"giverSection\")"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withRecipientSection(\"recipientSection\")"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withResponseDetails(new FeedbackTextResponseDetails(\"My answer\"))"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\n\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackQuestionId\\\": \\\"questionId\\\",\\n\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + \"  \\\"giver\\\": \\\"giver@email.com\\\",\\n\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"                + \"  \\\"recipient\\\": \\\"recipient@email.com\\\",\\n\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackSessionName\\\": \\\"Session1\\\",\\n\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + \"  \\\"courseId\\\": \\\"CS3281\\\",\\n\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + \"  \\\"responseDetails\\\": {\\n\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                + \"    \\\"answer\\\": \\\"My answer\\\",\\n\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + \"    \\\"questionType\\\": \\\"TEXT\\\"\\n\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                + \"  },\\n\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                + \"  \\\"giverSection\\\": \\\"giverSection\\\",\\n\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                + \"  \\\"recipientSection\\\": \\\"recipientSection\\\",\\n\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + \"  \\\"feedbackResponseId\\\": \\\"questionId%giver@email.com%recipient@email.com\\\"\\n\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + \"}\", JsonUtils.toJson(fra));"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(\"{\\\"feedbackQuestionId\\\":\\\"questionId\\\",\\\"giver\\\":\\\"giver@email.com\\\",\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                + \"\\\"recipient\\\":\\\"recipient@email.com\\\",\\\"feedbackSessionName\\\":\\\"Session1\\\",\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                + \"\\\"courseId\\\":\\\"CS3281\\\",\\\"responseDetails\\\":{\\\"answer\\\":\\\"My answer\\\",\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                + \"\\\"questionType\\\":\\\"TEXT\\\"},\\\"giverSection\\\":\\\"giverSection\\\",\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                + \"\\\"recipientSection\\\":\\\"recipientSection\\\",\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                + \"\\\"feedbackResponseId\\\":\\\"questionId%giver@email.com%recipient@email.com\\\"}\","},{"lineNumber":106,"author":{"gitId":"-"},"content":"                JsonUtils.toCompactJson(fra));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":3,"-":105}},{"path":"src/test/java/teammates/logic/api/EmailGeneratorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.api;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.AccountAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.util.SanitizationHelper;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.util.StringHelper;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.util.Templates;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.logic.core.CoursesLogic;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.logic.core.FeedbackSessionsLogic;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.logic.core.InstructorsLogic;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.logic.core.StudentsLogic;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.test.EmailChecker;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * SUT: {@link EmailGenerator}."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EmailGeneratorTest extends BaseLogicTest {"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prepareTestData() {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        dataBundle \u003d loadDataBundle(\"/EmailGeneratorTest.json\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1InCourse3 \u003d dataBundle.feedbackSessions.get(\"session1InCourse3\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2InCourse3 \u003d dataBundle.feedbackSessions.get(\"session2InCourse3\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1InCourse4 \u003d dataBundle.feedbackSessions.get(\"session1InCourse4\");"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2InCourse4 \u003d dataBundle.feedbackSessions.get(\"session2InCourse4\");"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // opened and unpublished."},{"lineNumber":49,"author":{"gitId":"-"},"content":"        session1InCourse3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-20));"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session1InCourse3\", session1InCourse3);"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // closed and unpublished"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        session2InCourse3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-19));"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        session2InCourse3.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        session2InCourse3.setDeletedTime(null);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session2InCourse3\", session2InCourse3);"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // opened and published."},{"lineNumber":59,"author":{"gitId":"-"},"content":"        session1InCourse4.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-19));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        session1InCourse4.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session1InCourse4\", session1InCourse4);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // closed and published"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        session2InCourse4.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-18));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        session2InCourse4.setEndTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        session2InCourse4.setResultsVisibleFromTime(TimeHelper.getInstantDaysOffsetFromNow(-1));"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        dataBundle.feedbackSessions.put(\"session2InCourse4\", session2InCourse4);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        removeAndRestoreDataBundle(dataBundle);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void testGenerateSessionLinksRecoveryEmail() throws IOException {"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ______TS(\"invalid email address\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \"non-existing-student\");"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"        verifyEmail(email, \"non-existing-student\", subject,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryNonExistingStudentEmail.html\");"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ______TS(\"no sessions found\");"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse1 \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":89,"author":{"gitId":"-"},"content":"                student1InCourse1.getEmail());"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse1.email, subject,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryNoSessionsFoundEmail.html\");"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: found opened or closed but unpublished Sessions\");"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse3 \u003d dataBundle.students.get(\"student1InCourse3\");"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":100,"author":{"gitId":"-"},"content":"                student1InCourse3.getEmail());"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse3.email, subject,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryOpenedOrClosedButUnpublishedSessions.html\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case: found opened or closed and  published Sessions\");"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"        StudentAttributes student1InCourse4 \u003d dataBundle.students.get(\"student1InCourse4\");"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateSessionLinksRecoveryEmailForStudent("},{"lineNumber":112,"author":{"gitId":"-"},"content":"                student1InCourse4.getEmail());"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"        subject \u003d EmailType.SESSION_LINKS_RECOVERY.getSubject();"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1InCourse4.email, subject,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \"/sessionLinksRecoveryOpenedOrClosedAndpublishedSessions.html\");"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionEmails() throws IOException {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d fsLogic.getFeedbackSession(\"First feedback session\", \"idOfTypicalCourse1\");"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"student1InCourse1@gmail.tmt\");"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StudentAttributes unregisteredStudent \u003d studentsLogic.getStudentForEmail(\"idOfTypicalCourse1\","},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \"student1UnregisteredInCourse1@gmail.tmt\");"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(course.getId(), \"instructor1@course1.tmt\");"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d studentsLogic.getStudentsForCourse(session.getCourseId());"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cInstructorAttributes\u003e instructors \u003d instructorsLogic.getInstructorsForCourse(session.getCourseId());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorToNotify \u003d instructorsLogic.getInstructorForGoogleId(session.getCourseId(),"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                instructor1.getGoogleId());"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session opening emails\");"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(session);"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.FEEDBACK_OPENING.getSubject(),"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                                       course.getName(), session.getFeedbackSessionName());"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionOpeningEmailForStudent.html\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionOpeningEmailForInstructor.html\");"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session reminders\");"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionReminderEmails(session, students, instructors,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                instructorToNotify);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // (5 instructors, 6 students reminded) and (1 instructor to be notified)"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(12, emails.size());"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_SESSION_REMINDER.getSubject(),"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String lineInEmailCopyToInstructor \u003d \"The email below has been sent to students of course:\";"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Verify the student reminder email"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionReminderEmailForStudent.html\");"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Verify the Student email copy send to the instructor"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \"/sessionReminderEmailCopyToInstructor.html\", lineInEmailCopyToInstructor);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Verify the instructor reminder email"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String lineInEmailToInstructor \u003d"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \"/web/instructor/sessions/submission?courseid\u003didOfTypicalCourse1\u0026fsname\u003dFirst%20feedback%20session\";"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \"/sessionReminderEmailForInstructor.html\", lineInEmailToInstructor);"},{"lineNumber":170,"author":{"gitId":"-"},"content":""},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closing alerts\");"},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosingEmails(session);"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(8, emails.size());"},{"lineNumber":175,"author":{"gitId":"-"},"content":""},{"lineNumber":176,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSING.getSubject(),"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // student1 has completed the feedback session and closing alert is only sent for those who are"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // yet to complete, so we resort to student5"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        StudentAttributes student5 \u003d studentsLogic.getStudentForEmail(course.getId(), \"student5InCourse1@gmail.tmt\");"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : emails) {"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            if (email.getRecipient().equals(student1.email)) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                fail(\"student1 has completed the session and are not supposed to receive email\");"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student5.email, subject, \"/sessionClosingEmailForStudent.html\");"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionClosingEmailForInstructor.html\");"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closed alerts\");"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(session);"},{"lineNumber":194,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(8, emails.size());"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSED.getSubject(),"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionClosedEmailForInstructor.html\");"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session published alerts\");"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionPublishedEmails(session);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_PUBLISHED.getSubject(),"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionPublishedEmailForStudent.html\");"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionPublishedEmailForInstructor.html\");"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session unpublished alerts\");"},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionUnpublishedEmails(session);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(11, emails.size());"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_UNPUBLISHED.getSubject(),"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject, \"/sessionUnpublishedEmailForStudent.html\");"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject, \"/sessionUnpublishedEmailForInstructor.html\");"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":224,"author":{"gitId":"-"},"content":"                + \"Edited student has joined the course\");"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":227,"author":{"gitId":"-"},"content":"                session.getCourseId(), student1.email, Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/summaryOfFeedbackSessionsOfCourseEmailForStudent.html\");"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":233,"author":{"gitId":"-"},"content":"                + \"Edited student has not joined the course\");"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":236,"author":{"gitId":"-"},"content":"                session.getCourseId(), unregisteredStudent.email,"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"        verifyEmail(email, unregisteredStudent.email, subject,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailForUnregisteredStudent.html\");"},{"lineNumber":242,"author":{"gitId":"-"},"content":""},{"lineNumber":243,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":244,"author":{"gitId":"-"},"content":"                + \"Student has joined the course\");"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), student1.email,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                                            Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/summaryOfFeedbackSessionsOfCourseEmailForRegeneratedStudent.html\");"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":253,"author":{"gitId":"-"},"content":"                + \"Student has not joined the course\");"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), unregisteredStudent.email,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                                            Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":258,"author":{"gitId":"-"},"content":""},{"lineNumber":259,"author":{"gitId":"-"},"content":"        verifyEmail(email, unregisteredStudent.email, subject,"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailForRegeneratedUnregisteredStudent.html\");"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"        ______TS(\"no email alerts sent for sessions not answerable/viewable for students\");"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes notAnswerableSession \u003d"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                fsLogic.getFeedbackSession(\"Not answerable feedback session\", \"idOfTypicalCourse2\");"},{"lineNumber":266,"author":{"gitId":"-"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(notAnswerableSession);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosingEmails(notAnswerableSession);"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(notAnswerableSession);"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":275,"author":{"gitId":"-"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionPublishedEmails(notAnswerableSession);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionUnpublishedEmails(notAnswerableSession);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertTrue(emails.isEmpty());"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionEmails_testSanitization() throws IOException {"},{"lineNumber":286,"author":{"gitId":"-"},"content":""},{"lineNumber":287,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d fsLogic.getFeedbackSession(\"Normal feedback session name\","},{"lineNumber":288,"author":{"gitId":"-"},"content":"                                                                       \"idOfTestingSanitizationCourse\");"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"normal@sanitization.tmt\");"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(course.getId(), \"instructor1@sanitization.tmt\");"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session opening emails: sanitization required\");"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"        List\u003cEmailWrapper\u003e emails \u003d new EmailGenerator().generateFeedbackSessionOpeningEmails(session);"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertEquals(2, emails.size());"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.FEEDBACK_OPENING.getSubject(),"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                \"/sessionOpeningEmailTestingSanitzationForStudent.html\");"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                \"/sessionOpeningEmailTestingSanitizationForInstructor.html\");"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"        ______TS(\"feedback session closed alerts: sanitization required\");"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"        emails \u003d new EmailGenerator().generateFeedbackSessionClosedEmails(session);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        assertEquals(2, emails.size());"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.FEEDBACK_CLOSED.getSubject(),"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                course.getName(), session.getFeedbackSessionName());"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, student1.email, subject,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \"/sessionClosedEmailTestingSanitizationForStudent.html\");"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(emails, instructor1.email, subject,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \"/sessionClosedEmailTestingSanitizationForInstructor.html\");"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"        ______TS(\"feedback sessions summary of course email: sanitization required\");"},{"lineNumber":322,"author":{"gitId":"-"},"content":""},{"lineNumber":323,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":324,"author":{"gitId":"-"},"content":"                session.getCourseId(), student1.email, Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                \"/summaryOfFeedbackSessionsOfCourseEmailTestingSanitizationForStudent.html\");"},{"lineNumber":328,"author":{"gitId":"-"},"content":""},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":330,"author":{"gitId":"-"},"content":""},{"lineNumber":331,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public void testGenerateInstructorJoinEmail() throws IOException {"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"        ______TS(\"instructor new account email\");"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"        String instructorEmail \u003d \"instructor@email.tmt\";"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        String instructorName \u003d \"Instr\";"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        String regkey \u003d \"skxxxxxxxxxks\";"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor \u003d InstructorAttributes"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                .builder(\"courseId\", instructorEmail)"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                .withGoogleId(\"googleId\")"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                .withName(\"Instructor Name\")"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        instructor.key \u003d regkey;"},{"lineNumber":346,"author":{"gitId":"-"},"content":""},{"lineNumber":347,"author":{"gitId":"-"},"content":"        AccountAttributes inviter \u003d AccountAttributes.builder(\"otherGoogleId\")"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                .withEmail(\"instructor-joe@gmail.com\")"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                .withName(\"Joe Wilson\")"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":351,"author":{"gitId":"-"},"content":""},{"lineNumber":352,"author":{"gitId":"-"},"content":"        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(regkey))"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                .withInstructorInstitution(\"Test Institute\")"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator()"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                .generateNewInstructorAccountJoinEmail(instructorEmail, instructorName, joinLink);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(), instructorName);"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructorEmail, subject, \"/instructorNewAccountEmail.html\");"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        assertEquals(email.getBcc(), Config.SUPPORT_EMAIL);"},{"lineNumber":364,"author":{"gitId":"-"},"content":""},{"lineNumber":365,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email\");"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                .builder(\"course-id\")"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":372,"author":{"gitId":"-"},"content":""},{"lineNumber":373,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseJoinEmail(inviter, instructor, course);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor.email, subject, \"/instructorCourseJoinEmail.html\");"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    public void testGenerateFeedbackSessionSummaryOfCourse_noSessionLinksFound() throws IOException {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session \u003d"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                fsLogic.getFeedbackSession(\"Feedback session with no emails sent\", \"idOfTestingNoEmailsSentCourse\");"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(session.getCourseId());"},{"lineNumber":386,"author":{"gitId":"-"},"content":""},{"lineNumber":387,"author":{"gitId":"-"},"content":"        StudentAttributes noLinksStudent \u003d studentsLogic.getStudentForEmail(course.getId(), \"student1@noemailssent.tmt\");"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all feedback sessions of course email to new student. \""},{"lineNumber":390,"author":{"gitId":"-"},"content":"                + \"No feedback session opening or published emails have been sent\");"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse("},{"lineNumber":393,"author":{"gitId":"-"},"content":"                                                            session.getCourseId(), noLinksStudent.email,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                                                            Templates.EmailTemplates.USER_FEEDBACK_SESSION_RESEND_ALL_LINKS);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_EMAIL_CHANGED.getSubject(), course.getName(), course.getId());"},{"lineNumber":396,"author":{"gitId":"-"},"content":""},{"lineNumber":397,"author":{"gitId":"-"},"content":"        verifyEmail(email, noLinksStudent.email, subject,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                    \"/summaryOfFeedbackSessionsOfCourseEmailForNoLinksStudent.html\");"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"        ______TS(\"send summary of all regenerated feedback session links of course email to student. \""},{"lineNumber":401,"author":{"gitId":"-"},"content":"                + \"No feedback session opening or published emails have been sent\");"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateFeedbackSessionSummaryOfCourse(session.getCourseId(), noLinksStudent.email,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                Templates.EmailTemplates.USER_REGKEY_REGENERATION_RESEND_ALL_COURSE_LINKS);"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_LINKS_REGENERATED.getSubject(), course.getName(), course.getId());"},{"lineNumber":406,"author":{"gitId":"-"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"        verifyEmail(email, noLinksStudent.email, subject,"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                    \"/summaryOfFeedbackSessionsOfCourseEmailForNoLinksRegeneratedStudent.html\");"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public void testGenerateInstructorJoinEmail_testSanitization() throws IOException {"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        ______TS(\"instructor new account email: sanitization required\");"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1 \u003d"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorForEmail(\"idOfTestingSanitizationCourse\", \"instructor1@sanitization.tmt\");"},{"lineNumber":416,"author":{"gitId":"-"},"content":""},{"lineNumber":417,"author":{"gitId":"-"},"content":"        String joinLink \u003d Config.getFrontEndAppUrl(Const.WebPageURIs.JOIN_PAGE)"},{"lineNumber":418,"author":{"gitId":"-"},"content":"                .withRegistrationKey(StringHelper.encrypt(instructor1.key))"},{"lineNumber":419,"author":{"gitId":"-"},"content":"                .withInstructorInstitution(\"Test Institute\")"},{"lineNumber":420,"author":{"gitId":"-"},"content":"                .withEntityType(Const.EntityType.INSTRUCTOR)"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                .toAbsoluteString();"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator()"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                .generateNewInstructorAccountJoinEmail(instructor1.email, instructor1.name, joinLink);"},{"lineNumber":425,"author":{"gitId":"-"},"content":"        // InstructorAttributes sanitizes name before saving"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.NEW_INSTRUCTOR_ACCOUNT.getSubject(),"},{"lineNumber":427,"author":{"gitId":"-"},"content":"                SanitizationHelper.sanitizeForHtml(instructor1.name));"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject, \"/instructorNewAccountEmailTestingSanitization.html\");"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        assertEquals(email.getBcc(), Config.SUPPORT_EMAIL);"},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email: sanitization required\");"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        AccountAttributes inviter \u003d dataBundle.accounts.get(\"instructor1OfTestingSanitizationCourse\");"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(\"idOfTestingSanitizationCourse\");"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseJoinEmail(inviter, instructor1, course);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject, \"/instructorCourseJoinEmailTestingSanitization.html\");"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email after Google ID reset\");"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateInstructorCourseRejoinEmailAfterGoogleIdReset(instructor1, course, null);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":445,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":446,"author":{"gitId":"-"},"content":""},{"lineNumber":447,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject,"},{"lineNumber":448,"author":{"gitId":"-"},"content":"                \"/instructorCourseRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course join email after Google ID reset (with institute name set)\");"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator()"},{"lineNumber":453,"author":{"gitId":"-"},"content":"                .generateInstructorCourseRejoinEmailAfterGoogleIdReset(instructor1, course, \"Test Institute\");"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.INSTRUCTOR_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":455,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"        verifyEmail(email, instructor1.email, subject,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"                \"/instructorCourseRejoinAfterGoogleIdResetEmailWithInstitute.html\");"},{"lineNumber":459,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    public void testGenerateStudentCourseJoinEmail() throws IOException {"},{"lineNumber":463,"author":{"gitId":"-"},"content":""},{"lineNumber":464,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email\");"},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":467,"author":{"gitId":"-"},"content":"                .builder(\"idOfTypicalCourse1\")"},{"lineNumber":468,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":469,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":470,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        StudentAttributes student \u003d"},{"lineNumber":473,"author":{"gitId":"-"},"content":"                StudentAttributes.builder(\"\", \"student@email.tmt\")"},{"lineNumber":474,"author":{"gitId":"-"},"content":"                        .withName(\"Student Name\")"},{"lineNumber":475,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        student.key \u003d \"skxxxxxxxxxks\";"},{"lineNumber":477,"author":{"gitId":"-"},"content":""},{"lineNumber":478,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student);"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":480,"author":{"gitId":"-"},"content":""},{"lineNumber":481,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithCoOwnersJoinEmail.html\");"},{"lineNumber":482,"author":{"gitId":"-"},"content":""},{"lineNumber":483,"author":{"gitId":"-"},"content":"        ______TS(\"student course with co-owners join email after Google ID reset\");"},{"lineNumber":484,"author":{"gitId":"-"},"content":""},{"lineNumber":485,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                                course.getName(), course.getId());"},{"lineNumber":488,"author":{"gitId":"-"},"content":""},{"lineNumber":489,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithCoOwnersRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        ______TS(\"student course (without co-owners) join email\");"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"        course \u003d CourseAttributes.builder(\"course-id\")"},{"lineNumber":494,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":495,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":496,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":497,"author":{"gitId":"-"},"content":""},{"lineNumber":498,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithoutCoOwnersJoinEmail.html\");"},{"lineNumber":502,"author":{"gitId":"-"},"content":""},{"lineNumber":503,"author":{"gitId":"-"},"content":"        ______TS(\"student course (without-co-owners) join email after Google ID reset\");"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student);"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":507,"author":{"gitId":"-"},"content":"                                course.getName(), course.getId());"},{"lineNumber":508,"author":{"gitId":"-"},"content":""},{"lineNumber":509,"author":{"gitId":"-"},"content":"        verifyEmail(email, student.email, subject, \"/studentCourseWithoutCoOwnersRejoinAfterGoogleIdResetEmail.html\");"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":511,"author":{"gitId":"-"},"content":""},{"lineNumber":512,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    public void testGenerateStudentCourseJoinEmail_testSanitization() throws IOException {"},{"lineNumber":514,"author":{"gitId":"-"},"content":""},{"lineNumber":515,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email: sanitization required\");"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d coursesLogic.getCourse(\"idOfTestingSanitizationCourse\");"},{"lineNumber":518,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d studentsLogic.getStudentForEmail(course.getId(), \"normal@sanitization.tmt\");"},{"lineNumber":519,"author":{"gitId":"-"},"content":""},{"lineNumber":520,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateStudentCourseJoinEmail(course, student1);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.STUDENT_COURSE_JOIN.getSubject(), course.getName(), course.getId());"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/studentCourseJoinEmailTestingSanitization.html\");"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"        ______TS(\"student course join email after Google ID reset: sanitization required\");"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateStudentCourseRejoinEmailAfterGoogleIdReset(course, student1);"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.STUDENT_COURSE_REJOIN_AFTER_GOOGLE_ID_RESET.getSubject(),"},{"lineNumber":529,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"        verifyEmail(email, student1.email, subject, \"/studentCourseRejoinAfterGoogleIdResetEmailTestingSanitization.html\");"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    public void testGenerateUserCourseRegisterEmail() throws IOException {"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"        ______TS(\"student course register email\");"},{"lineNumber":538,"author":{"gitId":"-"},"content":""},{"lineNumber":539,"author":{"gitId":"-"},"content":"        CourseAttributes course \u003d CourseAttributes"},{"lineNumber":540,"author":{"gitId":"-"},"content":"                .builder(\"idOfTypicalCourse1\")"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                .withName(\"Course Name\")"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                .withTimezone(ZoneId.of(\"UTC\"))"},{"lineNumber":543,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        String name \u003d \"User Name\";"},{"lineNumber":545,"author":{"gitId":"-"},"content":"        String emailAddress \u003d \"user@email.tmt\";"},{"lineNumber":546,"author":{"gitId":"-"},"content":"        String googleId \u003d \"user.googleid\";"},{"lineNumber":547,"author":{"gitId":"-"},"content":""},{"lineNumber":548,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d"},{"lineNumber":549,"author":{"gitId":"-"},"content":"                new EmailGenerator().generateUserCourseRegisteredEmail(name, emailAddress, googleId, false, course);"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":551,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":552,"author":{"gitId":"-"},"content":""},{"lineNumber":553,"author":{"gitId":"-"},"content":"        verifyEmail(email, emailAddress, subject, \"/studentCourseRegisterEmail.html\");"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"        ______TS(\"instructor course register email\");"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"        email \u003d new EmailGenerator().generateUserCourseRegisteredEmail(name, emailAddress, googleId, true, course);"},{"lineNumber":558,"author":{"gitId":"-"},"content":"        subject \u003d String.format(EmailType.USER_COURSE_REGISTER.getSubject(),"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                course.getName(), course.getId());"},{"lineNumber":560,"author":{"gitId":"-"},"content":""},{"lineNumber":561,"author":{"gitId":"-"},"content":"        verifyEmail(email, emailAddress, subject, \"/instructorCourseRegisterEmail.html\");"},{"lineNumber":562,"author":{"gitId":"-"},"content":""},{"lineNumber":563,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    public void testGenerateCompiledLogsEmail() throws IOException {"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        List\u003cErrorLogEntry\u003e errorLogs \u003d Arrays.asList("},{"lineNumber":568,"author":{"gitId":"-"},"content":"                new ErrorLogEntry(\"Typical log message\", \"ERROR\"),"},{"lineNumber":569,"author":{"gitId":"-"},"content":"                new ErrorLogEntry(\"Log line \u003cbr\u003e with line break \u003cbr\u003e and also HTML br tag\", \"ERROR\")"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":571,"author":{"gitId":"-"},"content":""},{"lineNumber":572,"author":{"gitId":"-"},"content":"        EmailWrapper email \u003d new EmailGenerator().generateCompiledLogsEmail(errorLogs);"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"        String subject \u003d String.format(EmailType.SEVERE_LOGS_COMPILATION.getSubject(), Config.APP_VERSION);"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"        verifyEmail(email, Config.SUPPORT_EMAIL, subject, \"/severeLogsCompilationEmail.html\");"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"    private void verifyEmail(EmailWrapper email, String recipient, String subject, String emailContentFilePath)"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        // check recipient"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        assertEquals(recipient, email.getRecipient());"},{"lineNumber":583,"author":{"gitId":"-"},"content":""},{"lineNumber":584,"author":{"gitId":"-"},"content":"        // check subject"},{"lineNumber":585,"author":{"gitId":"-"},"content":"        assertEquals(subject, email.getSubject());"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"        // check sender name"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_SENDERNAME, email.getSenderName());"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"        // check sender email"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_SENDEREMAIL, email.getSenderEmail());"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"        // check reply to address"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        assertEquals(Config.EMAIL_REPLYTO, email.getReplyTo());"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"        String emailContent \u003d email.getContent();"},{"lineNumber":597,"author":{"gitId":"-"},"content":""},{"lineNumber":598,"author":{"gitId":"-"},"content":"        // check email body for expected content"},{"lineNumber":599,"author":{"gitId":"-"},"content":"        EmailChecker.verifyEmailContent(emailContent, emailContentFilePath);"},{"lineNumber":600,"author":{"gitId":"-"},"content":""},{"lineNumber":601,"author":{"gitId":"-"},"content":"        // check email body for no left placeholders"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        assertFalse(emailContent.contains(\"${\"));"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":604,"author":{"gitId":"-"},"content":""},{"lineNumber":605,"author":{"gitId":"-"},"content":"    private void verifyEmailReceivedCorrectly("},{"lineNumber":606,"author":{"gitId":"-"},"content":"            List\u003cEmailWrapper\u003e actualEmails, String recipient, String subject, String emailContentFilePath)"},{"lineNumber":607,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":608,"author":{"gitId":"-"},"content":"        verifyEmailReceivedCorrectly(actualEmails, recipient, subject, emailContentFilePath, \"\");"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"    private void verifyEmailReceivedCorrectly("},{"lineNumber":612,"author":{"gitId":"-"},"content":"            List\u003cEmailWrapper\u003e actualEmails, String recipient, String subject,"},{"lineNumber":613,"author":{"gitId":"-"},"content":"            String emailContentFilePath, String containsString)"},{"lineNumber":614,"author":{"gitId":"-"},"content":"            throws IOException {"},{"lineNumber":615,"author":{"gitId":"-"},"content":"        boolean hasReceivedEmailCorrectly \u003d false;"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        for (EmailWrapper email : actualEmails) {"},{"lineNumber":617,"author":{"gitId":"-"},"content":"            if (email.getRecipient().equals(recipient) \u0026\u0026 email.getContent().contains(containsString)) {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                verifyEmail(email, recipient, subject, emailContentFilePath);"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                hasReceivedEmailCorrectly \u003d true;"},{"lineNumber":620,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        assertTrue(hasReceivedEmailCorrectly);"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":624,"author":{"gitId":"-"},"content":""},{"lineNumber":625,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":1,"-":624}},{"path":"src/test/java/teammates/logic/core/FeedbackQuestionsLogicTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.logic.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.LinkedList;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Map;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.testng.annotations.BeforeMethod;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.AttributesDeletionQuery;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.CourseRoster;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.FeedbackParticipantType;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackMsqQuestionDetails;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackQuestionDetails;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.questions.FeedbackTextQuestionDetails;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import teammates.common.exception.EntityDoesNotExistException;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidParametersException;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import teammates.common.util.FieldValidator;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackQuestionsLogic}."},{"lineNumber":32,"author":{"gitId":"-"},"content":" */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class FeedbackQuestionsLogicTest extends BaseLogicTest {"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static AccountsLogic accountsLogic \u003d AccountsLogic.inst();"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static FeedbackQuestionsLogic fqLogic \u003d FeedbackQuestionsLogic.inst();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static FeedbackResponsesLogic frLogic \u003d FeedbackResponsesLogic.inst();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static FeedbackResponseCommentsLogic frcLogic \u003d FeedbackResponseCommentsLogic.inst();"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static FeedbackSessionsLogic fsLogic \u003d FeedbackSessionsLogic.inst();"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static StudentsLogic studentsLogic \u003d StudentsLogic.inst();"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected void prepareTestData() {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // see beforeMethod()"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeMethod"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void beforeMethod() {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        dataBundle \u003d getTypicalDataBundle();"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        removeAndRestoreTypicalDataBundle();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackQuestions_byCourseIdAndSessionName_shouldDeleteQuestions() {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes fsa \u003d dataBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":58,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes anotherFsa \u003d dataBundle.feedbackSessions.get(\"session2InCourse1\");"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":61,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(anotherFsa.getFeedbackSessionName(), anotherFsa.getCourseId())"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        .isEmpty());"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestions(AttributesDeletionQuery.builder()"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withCourseId(fsa.getCourseId())"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(fsa.getFeedbackSessionName())"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .build());"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":70,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(fsa.getFeedbackSessionName(), fsa.getCourseId()).isEmpty());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // other sessions are not affected"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":73,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(anotherFsa.getFeedbackSessionName(), anotherFsa.getCourseId())"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                        .isEmpty());"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void allTests() throws Exception {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        testGetRecipientsForQuestion();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        testGetFeedbackQuestionsForInstructor();"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        testGetFeedbackQuestionsForStudents();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        testIsQuestionAnswered();"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        testAddQuestion();"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void testGetRecipientsForQuestion() throws Exception {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String email;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e recipients;"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ______TS(\"response to students, total 5\");"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student1InCourse1\").email;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 4); // 5 students minus giver himself"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.instructors.get(\"instructor1OfCourse1\").email;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 5); // instructor is not student so he can respond to all 5."},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ______TS(\"response to instructors, total 3\");"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn2InSession1InCourse2\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.instructors.get(\"instructor1OfCourse2\").email;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 2); // 3 - giver \u003d 2"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ______TS(\"empty case: response to team members, but alone\");"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"team.members.feedback\");"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student5InCourse1\").email;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 0);"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"        ______TS(\"response from team to itself\");"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"graceperiod.session.feedbackFromTeamToSelf\");"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student1InCourse1\").email;"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String teamName \u003d dataBundle.students.get(\"student1InCourse1\").team;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(recipients.containsKey(teamName));"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(teamName), teamName);"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ______TS(\"special case: response to other team, instructor is also student\");"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"team.feedback\");"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student1InCourse1\").email;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(dataBundle.students.get(\"student1InCourse1\").googleId);"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ______TS(\"to nobody (general feedback)\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student1InCourse1\").email;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(dataBundle.students.get(\"student1InCourse1\").googleId);"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(Const.GENERAL_QUESTION), Const.GENERAL_QUESTION);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ______TS(\"to self\");"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        email \u003d dataBundle.students.get(\"student1InCourse1\").email;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(dataBundle.students.get(\"student1InCourse1\").googleId);"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsForQuestion(question, email);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(email), FeedbackQuestionsLogic.USER_NAME_FOR_SELF);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void testGetRecipientsOfQuestion() throws Exception {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question;"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        StudentAttributes studentGiver;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        InstructorAttributes instructorGiver;"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        CourseRoster courseRoster;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e recipients;"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"        ______TS(\"response to students, total 5\");"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":169,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 4); // 5 students minus giver himself"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 4); // should produce the same answer"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"        instructorGiver \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":179,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(instructorGiver.courseId),"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(instructorGiver.courseId));"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, null);"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 5); // instructor is not student so he can respond to all 5."},{"lineNumber":184,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, courseRoster);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 5); // should produce the same answer"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"        ______TS(\"response to instructors, total 3\");"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn2InSession1InCourse2\");"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        instructorGiver \u003d dataBundle.instructors.get(\"instructor1OfCourse2\");"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":192,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(instructorGiver.courseId),"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(instructorGiver.courseId));"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, null);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 2); // 3 - giver \u003d 2"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, courseRoster);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 2); // should produce the same answer"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ______TS(\"empty case: response to team members, but alone\");"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"team.members.feedback\");"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student5InCourse1\");"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":205,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":207,"author":{"gitId":"-"},"content":""},{"lineNumber":208,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 0);"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 0); // should produce the same answer"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        ______TS(\"response from team to itself\");"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"graceperiod.session.feedbackFromTeamToSelf\");"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":218,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertTrue(recipients.containsKey(studentGiver.getTeam()));"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(studentGiver.getTeam()), studentGiver.getTeam());"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertTrue(recipients.containsKey(studentGiver.getTeam()));"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(studentGiver.getTeam()), studentGiver.getTeam());"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ______TS(\"response to other teams from instructor\");"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"team.instructor.feedback\");"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        instructorGiver \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":234,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, null);"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 2);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, instructorGiver, null, courseRoster);"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 2);"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"        ______TS(\"special case: response to other team, instructor is also student\");"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"team.feedback\");"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(studentGiver.getGoogleId());"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":247,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"        ______TS(\"to nobody (general feedback)\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(studentGiver.getGoogleId());"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":260,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(Const.GENERAL_QUESTION), Const.GENERAL_QUESTION);"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(Const.GENERAL_QUESTION), Const.GENERAL_QUESTION);"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"        ______TS(\"to self\");"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        studentGiver \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        accountsLogic.makeAccountInstructor(studentGiver.getGoogleId());"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        courseRoster \u003d new CourseRoster("},{"lineNumber":275,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(studentGiver.getCourse()),"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(studentGiver.getCourse()));"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, null);"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(studentGiver.getEmail()), FeedbackQuestionsLogic.USER_NAME_FOR_SELF);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        recipients \u003d fqLogic.getRecipientsOfQuestion(question, null, studentGiver, courseRoster);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertEquals(recipients.get(studentGiver.getEmail()), FeedbackQuestionsLogic.USER_NAME_FOR_SELF);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        assertEquals(recipients.size(), 1);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    public void testUpdateQuestionCascade_shouldShiftQuestionNumberCorrectly() throws Exception {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        ______TS(\"shift question up\");"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e expectedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q1 \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        q1.questionNumber \u003d 2;"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q2 \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        q2.questionNumber \u003d 3;"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q3 \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        q3.questionNumber \u003d 1;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q4 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        q4.questionNumber \u003d 4;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q5 \u003d getQuestionFromDatastore(\"qn5InSession1InCourse1\");"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        q5.questionNumber \u003d 5;"},{"lineNumber":300,"author":{"gitId":"-"},"content":""},{"lineNumber":301,"author":{"gitId":"-"},"content":"        expectedList.add(q3);"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        expectedList.add(q1);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        expectedList.add(q2);"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        expectedList.add(q4);"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        expectedList.add(q5);"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToUpdate \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        questionToUpdate.questionNumber \u003d 1;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":310,"author":{"gitId":"-"},"content":"                FeedbackQuestionAttributes.updateOptionsBuilder(questionToUpdate.getId())"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                        .withQuestionNumber(questionToUpdate.questionNumber)"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e actualList \u003d"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(questionToUpdate.feedbackSessionName, questionToUpdate.courseId);"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            assertEquals(actualList.get(i), expectedList.get(i));"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":321,"author":{"gitId":"-"},"content":""},{"lineNumber":322,"author":{"gitId":"-"},"content":"        ______TS(\"shift question down\");"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        expectedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        q1 \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        q1.questionNumber \u003d 1;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        q2 \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        q2.questionNumber \u003d 2;"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        q3 \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        q3.questionNumber \u003d 3;"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        q4 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        q4.questionNumber \u003d 4;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        q5 \u003d getQuestionFromDatastore(\"qn5InSession1InCourse1\");"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        q5.questionNumber \u003d 5;"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"        expectedList.add(q1);"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        expectedList.add(q2);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        expectedList.add(q3);"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        expectedList.add(q4);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        expectedList.add(q5);"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        questionToUpdate.questionNumber \u003d 3;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":344,"author":{"gitId":"-"},"content":"                FeedbackQuestionAttributes.updateOptionsBuilder(questionToUpdate.getId())"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                        .withQuestionNumber(questionToUpdate.questionNumber)"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"        actualList \u003d fqLogic.getFeedbackQuestionsForSession(questionToUpdate.feedbackSessionName, questionToUpdate.courseId);"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), actualList.get(i));"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":354,"author":{"gitId":"-"},"content":""},{"lineNumber":355,"author":{"gitId":"-"},"content":"        ______TS(\"try to shift question up, invalid attributes, questions order remains\");"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        questionToUpdate.questionNumber \u003d 1;"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String questionId \u003d questionToUpdate.getId();"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        assertThrows(InvalidParametersException.class, () -\u003e {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"            fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":361,"author":{"gitId":"-"},"content":"                            FeedbackQuestionAttributes.updateOptionsBuilder(questionId)"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                                    .withQuestionNumber(1)"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                                    .withGiverType(FeedbackParticipantType.TEAMS)"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                                    .withRecipientType(FeedbackParticipantType.RECEIVER_TEAM_MEMBERS)"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                                    .build());"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"        actualList \u003d fqLogic.getFeedbackQuestionsForSession(questionToUpdate.feedbackSessionName, questionToUpdate.courseId);"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"            assertEquals(expectedList.get(i), actualList.get(i));"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"    private void testAddQuestion() throws Exception {"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"        ______TS(\"Add questions sequentially\");"},{"lineNumber":379,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e expectedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q1 \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        q1.questionNumber \u003d 1;"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q2 \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        q2.questionNumber \u003d 2;"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q3 \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        q3.questionNumber \u003d 3;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q4 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        q4.questionNumber \u003d 4;"},{"lineNumber":388,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q5 \u003d getQuestionFromDatastore(\"qn5InSession1InCourse1\");"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        q5.questionNumber \u003d 5;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q6 \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        q6.questionNumber \u003d 6;"},{"lineNumber":392,"author":{"gitId":"-"},"content":""},{"lineNumber":393,"author":{"gitId":"-"},"content":"        expectedList.add(q1);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        expectedList.add(q2);"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        expectedList.add(q3);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        expectedList.add(q4);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        expectedList.add(q5);"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        expectedList.add(q6);"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"        //Appends a question to the back of the current question list"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes newQuestion \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        newQuestion.questionNumber \u003d 6;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        newQuestion.setId(null); //new question should not have an ID."},{"lineNumber":404,"author":{"gitId":"-"},"content":"        fqLogic.createFeedbackQuestion(newQuestion);"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e actualList \u003d"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(q1.feedbackSessionName, q1.courseId);"},{"lineNumber":408,"author":{"gitId":"-"},"content":""},{"lineNumber":409,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"            assertEquals(actualList.get(i), expectedList.get(i));"},{"lineNumber":412,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"        ______TS(\"add new question to the front of the list\");"},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q7 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"        q7.questionNumber \u003d 1;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        q1.questionNumber \u003d 2;"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        q2.questionNumber \u003d 3;"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        q3.questionNumber \u003d 4;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        q4.questionNumber \u003d 5;"},{"lineNumber":423,"author":{"gitId":"-"},"content":"        q5.questionNumber \u003d 6;"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        q6.questionNumber \u003d 7;"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"        expectedList.add(0, q7);"},{"lineNumber":427,"author":{"gitId":"-"},"content":""},{"lineNumber":428,"author":{"gitId":"-"},"content":"        //Add a question to session1course1 and sets its number to 1"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        newQuestion \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":430,"author":{"gitId":"-"},"content":"        newQuestion.questionNumber \u003d 1;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"        newQuestion.setId(null); //new question should not have an ID."},{"lineNumber":432,"author":{"gitId":"-"},"content":"        fqLogic.createFeedbackQuestion(newQuestion);"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"        actualList \u003d fqLogic.getFeedbackQuestionsForSession(q1.feedbackSessionName, q1.courseId);"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            assertEquals(actualList.get(i), expectedList.get(i));"},{"lineNumber":439,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"        ______TS(\"add new question inbetween 2 existing questions\");"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes q8 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":444,"author":{"gitId":"-"},"content":"        q8.questionNumber \u003d 3;"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        q2.questionNumber \u003d 4;"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        q3.questionNumber \u003d 5;"},{"lineNumber":447,"author":{"gitId":"-"},"content":"        q4.questionNumber \u003d 6;"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        q5.questionNumber \u003d 7;"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        q6.questionNumber \u003d 8;"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"        expectedList.add(2, q8);"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"        //Add a question to session1course1 and place it between existing question 2 and 3"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        newQuestion \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        newQuestion.questionNumber \u003d 3;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        newQuestion.setId(null); //new question should not have an ID."},{"lineNumber":457,"author":{"gitId":"-"},"content":"        fqLogic.createFeedbackQuestion(newQuestion);"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"        actualList \u003d fqLogic.getFeedbackQuestionsForSession(q1.feedbackSessionName, q1.courseId);"},{"lineNumber":460,"author":{"gitId":"-"},"content":""},{"lineNumber":461,"author":{"gitId":"-"},"content":"        assertEquals(actualList.size(), expectedList.size());"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c actualList.size(); i++) {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            assertEquals(actualList.get(i), expectedList.get(i));"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":465,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":466,"author":{"gitId":"-"},"content":""},{"lineNumber":467,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    public void testUpdateQuestionCascade() throws Exception {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        ______TS(\"standard update, no existing responses\");"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes questionToUpdate \u003d getQuestionFromDatastore(\"qn2InSession1InCourse2\");"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"        FeedbackQuestionDetails fqd \u003d new FeedbackTextQuestionDetails(\"new question text\");"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        questionToUpdate.setQuestionDetails(fqd);"},{"lineNumber":474,"author":{"gitId":"-"},"content":"        questionToUpdate.questionNumber \u003d 3;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"        List\u003cFeedbackParticipantType\u003e newVisibility \u003d new LinkedList\u003c\u003e();"},{"lineNumber":476,"author":{"gitId":"-"},"content":"        newVisibility.add(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        questionToUpdate.showResponsesTo \u003d newVisibility;"},{"lineNumber":478,"author":{"gitId":"-"},"content":""},{"lineNumber":479,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes updatedQuestion \u003d fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":480,"author":{"gitId":"-"},"content":"                FeedbackQuestionAttributes.updateOptionsBuilder(questionToUpdate.getId())"},{"lineNumber":481,"author":{"gitId":"-"},"content":"                        .withQuestionDetails(fqd)"},{"lineNumber":482,"author":{"gitId":"-"},"content":"                        .withQuestionNumber(questionToUpdate.questionNumber)"},{"lineNumber":483,"author":{"gitId":"-"},"content":"                        .withShowResponsesTo(questionToUpdate.showResponsesTo)"},{"lineNumber":484,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":485,"author":{"gitId":"-"},"content":""},{"lineNumber":486,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes actualQuestion \u003d"},{"lineNumber":487,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestion(questionToUpdate.getId());"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        assertEquals(questionToUpdate.toString(), actualQuestion.toString());"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        assertEquals(questionToUpdate.toString(), updatedQuestion.toString());"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        ______TS(\"cascading update, non-destructive changes, existing responses are preserved\");"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":493,"author":{"gitId":"-"},"content":"        fqd \u003d new FeedbackTextQuestionDetails(\"new question text 2\");"},{"lineNumber":494,"author":{"gitId":"-"},"content":"        questionToUpdate.setQuestionDetails(fqd);"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        questionToUpdate.numberOfEntitiesToGiveFeedbackTo \u003d 2;"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"-"},"content":"        int numberOfResponses \u003d"},{"lineNumber":498,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForQuestion("},{"lineNumber":499,"author":{"gitId":"-"},"content":"                        questionToUpdate.getId()).size();"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"        fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":502,"author":{"gitId":"-"},"content":"                FeedbackQuestionAttributes.updateOptionsBuilder(questionToUpdate.getId())"},{"lineNumber":503,"author":{"gitId":"-"},"content":"                        .withQuestionDetails(fqd)"},{"lineNumber":504,"author":{"gitId":"-"},"content":"                        .withNumberOfEntitiesToGiveFeedbackTo(questionToUpdate.numberOfEntitiesToGiveFeedbackTo)"},{"lineNumber":505,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        updatedQuestion \u003d fqLogic.getFeedbackQuestion(questionToUpdate.getId());"},{"lineNumber":507,"author":{"gitId":"-"},"content":""},{"lineNumber":508,"author":{"gitId":"-"},"content":"        assertEquals(updatedQuestion.toString(), questionToUpdate.toString());"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        assertEquals("},{"lineNumber":510,"author":{"gitId":"-"},"content":"                frLogic.getFeedbackResponsesForQuestion("},{"lineNumber":511,"author":{"gitId":"-"},"content":"                        questionToUpdate.getId()).size(), numberOfResponses);"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"        ______TS(\"cascading update, destructive changes, delete all existing responses\");"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn2InSession1InCourse1\");"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        fqd \u003d new FeedbackTextQuestionDetails(\"new question text 3\");"},{"lineNumber":516,"author":{"gitId":"-"},"content":"        questionToUpdate.setQuestionDetails(fqd);"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        questionToUpdate.recipientType \u003d FeedbackParticipantType.INSTRUCTORS;"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForQuestion(questionToUpdate.getId()).isEmpty());"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"        fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":522,"author":{"gitId":"-"},"content":"                FeedbackQuestionAttributes.updateOptionsBuilder(questionToUpdate.getId())"},{"lineNumber":523,"author":{"gitId":"-"},"content":"                        .withQuestionDetails(fqd)"},{"lineNumber":524,"author":{"gitId":"-"},"content":"                        .withRecipientType(questionToUpdate.recipientType)"},{"lineNumber":525,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        updatedQuestion \u003d fqLogic.getFeedbackQuestion(questionToUpdate.getId());"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"        assertEquals(updatedQuestion.toString(), questionToUpdate.toString());"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        assertEquals(frLogic.getFeedbackResponsesForQuestion("},{"lineNumber":530,"author":{"gitId":"-"},"content":"                questionToUpdate.getId()).size(), 0);"},{"lineNumber":531,"author":{"gitId":"-"},"content":""},{"lineNumber":532,"author":{"gitId":"-"},"content":"        ______TS(\"failure: question does not exist\");"},{"lineNumber":533,"author":{"gitId":"-"},"content":""},{"lineNumber":534,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":535,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes[] finalFq \u003d new FeedbackQuestionAttributes[] { questionToUpdate };"},{"lineNumber":536,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestionCascade(questionToUpdate.getId());"},{"lineNumber":537,"author":{"gitId":"-"},"content":""},{"lineNumber":538,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"                () -\u003e fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":540,"author":{"gitId":"-"},"content":"                        FeedbackQuestionAttributes.updateOptionsBuilder(finalFq[0].getId())"},{"lineNumber":541,"author":{"gitId":"-"},"content":"                                .withQuestionDetails(new FeedbackTextQuestionDetails(\"test\"))"},{"lineNumber":542,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":543,"author":{"gitId":"-"},"content":"        assertEquals(\"Trying to update a feedback question that does not exist.\", ednee.getMessage());"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"        ______TS(\"failure: invalid parameters\");"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"        questionToUpdate \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":548,"author":{"gitId":"-"},"content":"        questionToUpdate.giverType \u003d FeedbackParticipantType.TEAMS;"},{"lineNumber":549,"author":{"gitId":"-"},"content":"        questionToUpdate.recipientType \u003d FeedbackParticipantType.OWN_TEAM_MEMBERS;"},{"lineNumber":550,"author":{"gitId":"-"},"content":"        finalFq[0] \u003d questionToUpdate;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"        InvalidParametersException ipe \u003d assertThrows(InvalidParametersException.class,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"                () -\u003e fqLogic.updateFeedbackQuestionCascade("},{"lineNumber":553,"author":{"gitId":"-"},"content":"                        FeedbackQuestionAttributes.updateOptionsBuilder(finalFq[0].getId())"},{"lineNumber":554,"author":{"gitId":"-"},"content":"                                .withGiverType(finalFq[0].giverType)"},{"lineNumber":555,"author":{"gitId":"-"},"content":"                                .withRecipientType(finalFq[0].recipientType)"},{"lineNumber":556,"author":{"gitId":"-"},"content":"                                .build()));"},{"lineNumber":557,"author":{"gitId":"-"},"content":"        assertEquals("},{"lineNumber":558,"author":{"gitId":"-"},"content":"                String.format(FieldValidator.PARTICIPANT_TYPE_TEAM_ERROR_MESSAGE,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"                        \"Giver\u0027s team members\","},{"lineNumber":560,"author":{"gitId":"-"},"content":"                        \"Teams in this course\"),"},{"lineNumber":561,"author":{"gitId":"-"},"content":"                ipe.getMessage());"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackQuestionCascade_existentQuestion_shouldDoCascadeDeletion() {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes typicalQuestion \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":567,"author":{"gitId":"-"},"content":"        assertEquals(3, typicalQuestion.getQuestionNumber());"},{"lineNumber":568,"author":{"gitId":"-"},"content":"        assertEquals(4, getQuestionFromDatastore(\"qn4InSession1InCourse1\").getQuestionNumber());"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"        // the question has some responses and comments"},{"lineNumber":571,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getFeedbackResponsesForQuestion(typicalQuestion.getId()).isEmpty());"},{"lineNumber":572,"author":{"gitId":"-"},"content":"        assertFalse("},{"lineNumber":573,"author":{"gitId":"-"},"content":"                frcLogic.getFeedbackResponseCommentForSessionInSection("},{"lineNumber":574,"author":{"gitId":"-"},"content":"                        typicalQuestion.getCourseId(), typicalQuestion.getFeedbackSessionName(), null).stream()"},{"lineNumber":575,"author":{"gitId":"-"},"content":"                        .noneMatch(comment -\u003e comment.feedbackQuestionId.equals(typicalQuestion.getId())));"},{"lineNumber":576,"author":{"gitId":"-"},"content":""},{"lineNumber":577,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestionCascade(typicalQuestion.getId());"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"-"},"content":"        assertNull(fqLogic.getFeedbackQuestion(typicalQuestion.getId()));"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        // the responses and comments should gone"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.getFeedbackResponsesForQuestion(typicalQuestion.getId()).isEmpty());"},{"lineNumber":582,"author":{"gitId":"-"},"content":"        assertTrue("},{"lineNumber":583,"author":{"gitId":"-"},"content":"                frcLogic.getFeedbackResponseCommentForSessionInSection("},{"lineNumber":584,"author":{"gitId":"-"},"content":"                        typicalQuestion.getCourseId(), typicalQuestion.getFeedbackSessionName(), null).stream()"},{"lineNumber":585,"author":{"gitId":"-"},"content":"                        .noneMatch(comment -\u003e comment.feedbackQuestionId.equals(typicalQuestion.getId())));"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"        // verify that questions are shifted"},{"lineNumber":588,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questionsOfSessions \u003d"},{"lineNumber":589,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession("},{"lineNumber":590,"author":{"gitId":"-"},"content":"                        typicalQuestion.getFeedbackSessionName(), typicalQuestion.getCourseId());"},{"lineNumber":591,"author":{"gitId":"-"},"content":"        for (int i \u003d 1; i \u003c\u003d questionsOfSessions.size(); i++) {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"            assertEquals(i, questionsOfSessions.get(i - 1).getQuestionNumber());"},{"lineNumber":593,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":595,"author":{"gitId":"-"},"content":""},{"lineNumber":596,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackQuestionCascade_nonExistentQuestion_shouldFailSilently() {"},{"lineNumber":598,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestionCascade(\"non-existent-question-id\");"},{"lineNumber":599,"author":{"gitId":"-"},"content":""},{"lineNumber":600,"author":{"gitId":"-"},"content":"        // other questions not get affected"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        assertNotNull(getQuestionFromDatastore(\"qn3InSession1InCourse1\"));"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackQuestionCascade_cascadeDeleteResponseOfStudent_shouldUpdateRespondents() throws Exception {"},{"lineNumber":606,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes fra \u003d dataBundle.feedbackResponses.get(\"response1ForQ1S1C1\");"},{"lineNumber":607,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestion(fra.feedbackSessionName, fra.courseId, Integer.parseInt(fra.feedbackQuestionId));"},{"lineNumber":609,"author":{"gitId":"-"},"content":"        FeedbackResponseAttributes responseInDb \u003d frLogic.getFeedbackResponse(fqa.getId(), fra.giver, fra.recipient);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"        assertNotNull(responseInDb);"},{"lineNumber":611,"author":{"gitId":"-"},"content":""},{"lineNumber":612,"author":{"gitId":"-"},"content":"        // the student only gives this response for the session"},{"lineNumber":613,"author":{"gitId":"-"},"content":"        assertEquals(1, frLogic.getFeedbackResponsesFromGiverForCourse(responseInDb.courseId, responseInDb.giver).stream()"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                .filter(response -\u003e response.feedbackSessionName.equals(responseInDb.feedbackSessionName))"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                .count());"},{"lineNumber":616,"author":{"gitId":"-"},"content":"        // he is in the giver set"},{"lineNumber":617,"author":{"gitId":"-"},"content":"        assertTrue(frLogic.getGiverSetThatAnswerFeedbackSession(fqa.getCourseId(), fqa.getFeedbackSessionName())"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                .contains(responseInDb.giver));"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"-"},"content":"        // after deletion the question"},{"lineNumber":621,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestionCascade(responseInDb.feedbackQuestionId);"},{"lineNumber":622,"author":{"gitId":"-"},"content":""},{"lineNumber":623,"author":{"gitId":"-"},"content":"        // the student should not in the giver set"},{"lineNumber":624,"author":{"gitId":"-"},"content":"        assertFalse(frLogic.getGiverSetThatAnswerFeedbackSession(fqa.getCourseId(), fqa.getFeedbackSessionName())"},{"lineNumber":625,"author":{"gitId":"-"},"content":"                .contains(responseInDb.giver));"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":627,"author":{"gitId":"-"},"content":""},{"lineNumber":628,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    public void testDeleteFeedbackQuestions_byCourseId_shouldDeleteQuestions() {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"        String courseId \u003d \"idOfTypicalCourse2\";"},{"lineNumber":631,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes deletedQuestion \u003d getQuestionFromDatastore(\"qn1InSession1InCourse2\");"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        assertNotNull(deletedQuestion);"},{"lineNumber":633,"author":{"gitId":"-"},"content":""},{"lineNumber":634,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e questions \u003d"},{"lineNumber":635,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForSession(\"Instructor feedback session\", courseId);"},{"lineNumber":636,"author":{"gitId":"-"},"content":"        assertFalse(questions.isEmpty());"},{"lineNumber":637,"author":{"gitId":"-"},"content":""},{"lineNumber":638,"author":{"gitId":"-"},"content":"        fqLogic.deleteFeedbackQuestions(AttributesDeletionQuery.builder()"},{"lineNumber":639,"author":{"gitId":"-"},"content":"                .withCourseId(courseId)"},{"lineNumber":640,"author":{"gitId":"-"},"content":"                .build());"},{"lineNumber":641,"author":{"gitId":"-"},"content":"        deletedQuestion \u003d getQuestionFromDatastore(\"qn1InSession1InCourse2\");"},{"lineNumber":642,"author":{"gitId":"-"},"content":"        assertNull(deletedQuestion);"},{"lineNumber":643,"author":{"gitId":"-"},"content":""},{"lineNumber":644,"author":{"gitId":"-"},"content":"        questions \u003d fqLogic.getFeedbackQuestionsForSession(\"Instructor feedback session\", courseId);"},{"lineNumber":645,"author":{"gitId":"-"},"content":"        assertEquals(0, questions.size());"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"        // test that questions in other courses are unaffected"},{"lineNumber":648,"author":{"gitId":"-"},"content":"        assertNotNull(getQuestionFromDatastore(\"qn1InSessionInArchivedCourse\"));"},{"lineNumber":649,"author":{"gitId":"-"},"content":"        assertNotNull(getQuestionFromDatastore(\"qn1InSession4InCourse1\"));"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    public void testPopulateFieldsToGenerateInQuestion_mcqQuestionDifferentGenerateOptions_shouldPopulateCorrectly() {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        StudentAttributes typicalStudent \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":655,"author":{"gitId":"-"},"content":"        InstructorAttributes typicalInstructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":656,"author":{"gitId":"-"},"content":""},{"lineNumber":657,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d dataBundle.feedbackQuestions.get(\"qn1InSession1InCourse1\");"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        // construct a typical question"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        fqa \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":660,"author":{"gitId":"-"},"content":"                        .withCourseId(fqa.getCourseId())"},{"lineNumber":661,"author":{"gitId":"-"},"content":"                        .withFeedbackSessionName(fqa.getFeedbackSessionName())"},{"lineNumber":662,"author":{"gitId":"-"},"content":"                        .withNumberOfEntitiesToGiveFeedbackTo(2)"},{"lineNumber":663,"author":{"gitId":"-"},"content":"                        .withQuestionDescription(\"test\")"},{"lineNumber":664,"author":{"gitId":"-"},"content":"                        .withQuestionNumber(fqa.getQuestionNumber())"},{"lineNumber":665,"author":{"gitId":"-"},"content":"                        .withGiverType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":666,"author":{"gitId":"-"},"content":"                        .withRecipientType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":667,"author":{"gitId":"-"},"content":"                        .withQuestionDetails(new FeedbackMcqQuestionDetails())"},{"lineNumber":668,"author":{"gitId":"-"},"content":"                        .withShowResponsesTo(new ArrayList\u003c\u003e())"},{"lineNumber":669,"author":{"gitId":"-"},"content":"                        .withShowGiverNameTo(new ArrayList\u003c\u003e())"},{"lineNumber":670,"author":{"gitId":"-"},"content":"                        .withShowRecipientNameTo(new ArrayList\u003c\u003e())"},{"lineNumber":671,"author":{"gitId":"-"},"content":"                        .build();"},{"lineNumber":672,"author":{"gitId":"-"},"content":""},{"lineNumber":673,"author":{"gitId":"-"},"content":"        FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d new FeedbackMcqQuestionDetails();"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"        // NONE"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        List\u003cString\u003e expected \u003d Arrays.asList(\"test\");"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(Arrays.asList(\"test\"));"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.NONE);"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":681,"author":{"gitId":"-"},"content":""},{"lineNumber":682,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":683,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":684,"author":{"gitId":"-"},"content":""},{"lineNumber":685,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(Arrays.asList(\"test\"));"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.NONE);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":688,"author":{"gitId":"-"},"content":""},{"lineNumber":689,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":691,"author":{"gitId":"-"},"content":""},{"lineNumber":692,"author":{"gitId":"-"},"content":"        // STUDENTS"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        expected \u003d Arrays.asList(\"student1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\" (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":694,"author":{"gitId":"-"},"content":"                        \"student2 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":695,"author":{"gitId":"-"},"content":"                        \"student3 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":696,"author":{"gitId":"-"},"content":"                        \"student4 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":697,"author":{"gitId":"-"},"content":"                        \"student5 In Course1 (Team 1.2)\");"},{"lineNumber":698,"author":{"gitId":"-"},"content":""},{"lineNumber":699,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":700,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.STUDENTS);"},{"lineNumber":701,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":702,"author":{"gitId":"-"},"content":""},{"lineNumber":703,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":704,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":705,"author":{"gitId":"-"},"content":""},{"lineNumber":706,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":707,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.STUDENTS);"},{"lineNumber":708,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":711,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"        // STUDENTS_EXCLUDING_SELF"},{"lineNumber":714,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":715,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF);"},{"lineNumber":716,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":717,"author":{"gitId":"-"},"content":""},{"lineNumber":718,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":719,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"student2 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":720,"author":{"gitId":"-"},"content":"                \"student3 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":721,"author":{"gitId":"-"},"content":"                \"student4 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":722,"author":{"gitId":"-"},"content":"                \"student5 In Course1 (Team 1.2)\"),"},{"lineNumber":723,"author":{"gitId":"-"},"content":"                ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":724,"author":{"gitId":"-"},"content":""},{"lineNumber":725,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.STUDENTS_EXCLUDING_SELF);"},{"lineNumber":727,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":728,"author":{"gitId":"-"},"content":""},{"lineNumber":729,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"student1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\" (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":731,"author":{"gitId":"-"},"content":"                \"student2 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":732,"author":{"gitId":"-"},"content":"                \"student3 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":733,"author":{"gitId":"-"},"content":"                \"student4 In Course1 (Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\")\","},{"lineNumber":734,"author":{"gitId":"-"},"content":"                \"student5 In Course1 (Team 1.2)\"), ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":735,"author":{"gitId":"-"},"content":""},{"lineNumber":736,"author":{"gitId":"daongochieu2810"},"content":"        // TEAM MEMBERS"},{"lineNumber":737,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":738,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF);"},{"lineNumber":739,"author":{"gitId":"daongochieu2810"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":740,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":741,"author":{"gitId":"daongochieu2810"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":742,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(Arrays.asList(\"student1 In Course1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\","},{"lineNumber":743,"author":{"gitId":"daongochieu2810"},"content":"                \"student2 In Course1\","},{"lineNumber":744,"author":{"gitId":"daongochieu2810"},"content":"                \"student3 In Course1\","},{"lineNumber":745,"author":{"gitId":"daongochieu2810"},"content":"                \"student4 In Course1\"),"},{"lineNumber":746,"author":{"gitId":"daongochieu2810"},"content":"                ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":747,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":748,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":749,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF);"},{"lineNumber":750,"author":{"gitId":"daongochieu2810"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":751,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":752,"author":{"gitId":"daongochieu2810"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":753,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(new ArrayList\u003c\u003e(), ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":754,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":755,"author":{"gitId":"daongochieu2810"},"content":"        // TEAM MEMBERS EXCLUDING SELF"},{"lineNumber":756,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":757,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":758,"author":{"gitId":"daongochieu2810"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":759,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":760,"author":{"gitId":"daongochieu2810"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":761,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(Arrays.asList(\"student2 In Course1\","},{"lineNumber":762,"author":{"gitId":"daongochieu2810"},"content":"                \"student3 In Course1\","},{"lineNumber":763,"author":{"gitId":"daongochieu2810"},"content":"                \"student4 In Course1\"),"},{"lineNumber":764,"author":{"gitId":"daongochieu2810"},"content":"                ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":765,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":766,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":767,"author":{"gitId":"daongochieu2810"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.OWN_TEAM_MEMBERS);"},{"lineNumber":768,"author":{"gitId":"daongochieu2810"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":769,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":770,"author":{"gitId":"daongochieu2810"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":771,"author":{"gitId":"daongochieu2810"},"content":"        assertEquals(new ArrayList\u003c\u003e(), ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":772,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":773,"author":{"gitId":"-"},"content":"        // TEAMS"},{"lineNumber":774,"author":{"gitId":"-"},"content":"        expected \u003d Arrays.asList(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\", \"Team 1.2\");"},{"lineNumber":775,"author":{"gitId":"-"},"content":""},{"lineNumber":776,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":777,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"},{"lineNumber":778,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":779,"author":{"gitId":"-"},"content":""},{"lineNumber":780,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":781,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":782,"author":{"gitId":"-"},"content":""},{"lineNumber":783,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":784,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"},{"lineNumber":785,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":788,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":789,"author":{"gitId":"-"},"content":""},{"lineNumber":790,"author":{"gitId":"-"},"content":"        // TEAMS_EXCLUDING_SELF"},{"lineNumber":791,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":792,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS_EXCLUDING_SELF);"},{"lineNumber":793,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":794,"author":{"gitId":"-"},"content":""},{"lineNumber":795,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":796,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"Team 1.2\"),"},{"lineNumber":797,"author":{"gitId":"-"},"content":"                ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":798,"author":{"gitId":"-"},"content":""},{"lineNumber":799,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS_EXCLUDING_SELF);"},{"lineNumber":801,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":802,"author":{"gitId":"-"},"content":""},{"lineNumber":803,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\", \"Team 1.2\"),"},{"lineNumber":805,"author":{"gitId":"-"},"content":"                ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":806,"author":{"gitId":"-"},"content":""},{"lineNumber":807,"author":{"gitId":"-"},"content":"        // INSTRUCTORS"},{"lineNumber":808,"author":{"gitId":"-"},"content":"        expected \u003d Arrays.asList(\"Helper Course1\","},{"lineNumber":809,"author":{"gitId":"-"},"content":"                \"Instructor Not Yet Joined Course 1\","},{"lineNumber":810,"author":{"gitId":"-"},"content":"                \"Instructor1 Course1\","},{"lineNumber":811,"author":{"gitId":"-"},"content":"                \"Instructor2 Course1\","},{"lineNumber":812,"author":{"gitId":"-"},"content":"                \"Instructor3 Course1\");"},{"lineNumber":813,"author":{"gitId":"-"},"content":""},{"lineNumber":814,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":816,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":817,"author":{"gitId":"-"},"content":""},{"lineNumber":818,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":820,"author":{"gitId":"-"},"content":""},{"lineNumber":821,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setMcqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":822,"author":{"gitId":"-"},"content":"        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.INSTRUCTORS);"},{"lineNumber":823,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMcqQuestionDetails);"},{"lineNumber":824,"author":{"gitId":"-"},"content":""},{"lineNumber":825,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":826,"author":{"gitId":"-"},"content":"        assertEquals(expected, ((FeedbackMcqQuestionDetails) fqa.getQuestionDetails()).getMcqChoices());"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":828,"author":{"gitId":"-"},"content":""},{"lineNumber":829,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":830,"author":{"gitId":"-"},"content":"    public void testPopulateFieldsToGenerateInQuestion_msqQuestionDifferentGenerateOptions_shouldPopulateCorrectly() {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"        StudentAttributes typicalStudent \u003d dataBundle.students.get(\"student1InCourse1\");"},{"lineNumber":832,"author":{"gitId":"-"},"content":"        InstructorAttributes typicalInstructor \u003d dataBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":833,"author":{"gitId":"-"},"content":""},{"lineNumber":834,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes fqa \u003d dataBundle.feedbackQuestions.get(\"qn1InSession1InCourse1\");"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        // construct a typical question"},{"lineNumber":836,"author":{"gitId":"-"},"content":"        fqa \u003d FeedbackQuestionAttributes.builder()"},{"lineNumber":837,"author":{"gitId":"-"},"content":"                .withCourseId(fqa.getCourseId())"},{"lineNumber":838,"author":{"gitId":"-"},"content":"                .withFeedbackSessionName(fqa.getFeedbackSessionName())"},{"lineNumber":839,"author":{"gitId":"-"},"content":"                .withNumberOfEntitiesToGiveFeedbackTo(2)"},{"lineNumber":840,"author":{"gitId":"-"},"content":"                .withQuestionDescription(\"test\")"},{"lineNumber":841,"author":{"gitId":"-"},"content":"                .withQuestionNumber(fqa.getQuestionNumber())"},{"lineNumber":842,"author":{"gitId":"-"},"content":"                .withGiverType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":843,"author":{"gitId":"-"},"content":"                .withRecipientType(FeedbackParticipantType.STUDENTS)"},{"lineNumber":844,"author":{"gitId":"-"},"content":"                .withQuestionDetails(new FeedbackMsqQuestionDetails())"},{"lineNumber":845,"author":{"gitId":"-"},"content":"                .withShowResponsesTo(new ArrayList\u003c\u003e())"},{"lineNumber":846,"author":{"gitId":"-"},"content":"                .withShowGiverNameTo(new ArrayList\u003c\u003e())"},{"lineNumber":847,"author":{"gitId":"-"},"content":"                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"},{"lineNumber":848,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":849,"author":{"gitId":"-"},"content":""},{"lineNumber":850,"author":{"gitId":"-"},"content":"        FeedbackMsqQuestionDetails feedbackMsqQuestionDetails \u003d new FeedbackMsqQuestionDetails();"},{"lineNumber":851,"author":{"gitId":"-"},"content":""},{"lineNumber":852,"author":{"gitId":"-"},"content":"        // TEAMS_EXCLUDING_SELF"},{"lineNumber":853,"author":{"gitId":"-"},"content":"        feedbackMsqQuestionDetails.setMsqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":854,"author":{"gitId":"-"},"content":"        feedbackMsqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS_EXCLUDING_SELF);"},{"lineNumber":855,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMsqQuestionDetails);"},{"lineNumber":856,"author":{"gitId":"-"},"content":""},{"lineNumber":857,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalStudent.getEmail(), typicalStudent.getTeam());"},{"lineNumber":858,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"Team 1.2\"),"},{"lineNumber":859,"author":{"gitId":"-"},"content":"                ((FeedbackMsqQuestionDetails) fqa.getQuestionDetails()).getMsqChoices());"},{"lineNumber":860,"author":{"gitId":"-"},"content":""},{"lineNumber":861,"author":{"gitId":"-"},"content":"        feedbackMsqQuestionDetails.setMsqChoices(new ArrayList\u003c\u003e());"},{"lineNumber":862,"author":{"gitId":"-"},"content":"        feedbackMsqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS_EXCLUDING_SELF);"},{"lineNumber":863,"author":{"gitId":"-"},"content":"        fqa.setQuestionDetails(feedbackMsqQuestionDetails);"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"-"},"content":"        fqLogic.populateFieldsToGenerateInQuestion(fqa, typicalInstructor.getEmail(), null);"},{"lineNumber":866,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\", \"Team 1.2\"),"},{"lineNumber":867,"author":{"gitId":"-"},"content":"                ((FeedbackMsqQuestionDetails) fqa.getQuestionDetails()).getMsqChoices());"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":869,"author":{"gitId":"-"},"content":""},{"lineNumber":870,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    public void testBuildCompleteGiverRecipientMap_studentQuestion_shouldBuildMapCorrectly() {"},{"lineNumber":872,"author":{"gitId":"-"},"content":"        CourseRoster courseRoster \u003d new CourseRoster("},{"lineNumber":873,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(\"idOfTypicalCourse1\"),"},{"lineNumber":874,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(\"idOfTypicalCourse1\"));"},{"lineNumber":875,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes qn1InSession1InCourse1 \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":876,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1 \u003d fsLogic.getFeedbackSession("},{"lineNumber":877,"author":{"gitId":"-"},"content":"                qn1InSession1InCourse1.getFeedbackSessionName(), qn1InSession1InCourse1.getCourseId());"},{"lineNumber":878,"author":{"gitId":"-"},"content":""},{"lineNumber":879,"author":{"gitId":"-"},"content":"        Map\u003cString, Set\u003cString\u003e\u003e completeGiverRecipientMap \u003d"},{"lineNumber":880,"author":{"gitId":"-"},"content":"                fqLogic.buildCompleteGiverRecipientMap(session1, qn1InSession1InCourse1, courseRoster);"},{"lineNumber":881,"author":{"gitId":"-"},"content":""},{"lineNumber":882,"author":{"gitId":"-"},"content":"        assertEquals(5, completeGiverRecipientMap.size());"},{"lineNumber":883,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"student1InCourse1@gmail.tmt\").size());"},{"lineNumber":884,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"student1InCourse1@gmail.tmt\").contains(\"student1InCourse1@gmail.tmt\"));"},{"lineNumber":885,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"student2InCourse1@gmail.tmt\").size());"},{"lineNumber":886,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"student2InCourse1@gmail.tmt\").contains(\"student2InCourse1@gmail.tmt\"));"},{"lineNumber":887,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"student3InCourse1@gmail.tmt\").size());"},{"lineNumber":888,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"student3InCourse1@gmail.tmt\").contains(\"student3InCourse1@gmail.tmt\"));"},{"lineNumber":889,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"student4InCourse1@gmail.tmt\").size());"},{"lineNumber":890,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"student4InCourse1@gmail.tmt\").contains(\"student4InCourse1@gmail.tmt\"));"},{"lineNumber":891,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"student5InCourse1@gmail.tmt\").size());"},{"lineNumber":892,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"student5InCourse1@gmail.tmt\").contains(\"student5InCourse1@gmail.tmt\"));"},{"lineNumber":893,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":894,"author":{"gitId":"-"},"content":""},{"lineNumber":895,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    public void testBuildCompleteGiverRecipientMap_instructorQuestion_shouldBuildMapCorrectly() {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"        CourseRoster courseRoster \u003d new CourseRoster("},{"lineNumber":898,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(\"idOfTypicalCourse1\"),"},{"lineNumber":899,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(\"idOfTypicalCourse1\"));"},{"lineNumber":900,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes qn4InSession1InCourse1 \u003d getQuestionFromDatastore(\"qn4InSession1InCourse1\");"},{"lineNumber":901,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1 \u003d fsLogic.getFeedbackSession("},{"lineNumber":902,"author":{"gitId":"-"},"content":"                qn4InSession1InCourse1.getFeedbackSessionName(), qn4InSession1InCourse1.getCourseId());"},{"lineNumber":903,"author":{"gitId":"-"},"content":""},{"lineNumber":904,"author":{"gitId":"-"},"content":"        Map\u003cString, Set\u003cString\u003e\u003e completeGiverRecipientMap \u003d"},{"lineNumber":905,"author":{"gitId":"-"},"content":"                fqLogic.buildCompleteGiverRecipientMap(session1, qn4InSession1InCourse1, courseRoster);"},{"lineNumber":906,"author":{"gitId":"-"},"content":""},{"lineNumber":907,"author":{"gitId":"-"},"content":"        assertEquals(5, completeGiverRecipientMap.size());"},{"lineNumber":908,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"instructor1@course1.tmt\").size());"},{"lineNumber":909,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"instructor1@course1.tmt\").contains(Const.GENERAL_QUESTION));"},{"lineNumber":910,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"instructor2@course1.tmt\").size());"},{"lineNumber":911,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"instructor2@course1.tmt\").contains(Const.GENERAL_QUESTION));"},{"lineNumber":912,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"instructor3@course1.tmt\").size());"},{"lineNumber":913,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"instructor3@course1.tmt\").contains(Const.GENERAL_QUESTION));"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"helper@course1.tmt\").size());"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"helper@course1.tmt\").contains(Const.GENERAL_QUESTION));"},{"lineNumber":916,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"instructorNotYetJoinedCourse1@email.tmt\").size());"},{"lineNumber":917,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"instructorNotYetJoinedCourse1@email.tmt\")"},{"lineNumber":918,"author":{"gitId":"-"},"content":"                .contains(Const.GENERAL_QUESTION));"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":920,"author":{"gitId":"-"},"content":""},{"lineNumber":921,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    public void testBuildCompleteGiverRecipientMap_selfQuestion_shouldBuildMapCorrectly() {"},{"lineNumber":923,"author":{"gitId":"-"},"content":"        CourseRoster courseRoster \u003d new CourseRoster("},{"lineNumber":924,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(\"idOfTypicalCourse1\"),"},{"lineNumber":925,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(\"idOfTypicalCourse1\"));"},{"lineNumber":926,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes qn3InSession1InCourse1 \u003d getQuestionFromDatastore(\"qn3InSession1InCourse1\");"},{"lineNumber":927,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1 \u003d fsLogic.getFeedbackSession("},{"lineNumber":928,"author":{"gitId":"-"},"content":"                qn3InSession1InCourse1.getFeedbackSessionName(), qn3InSession1InCourse1.getCourseId());"},{"lineNumber":929,"author":{"gitId":"-"},"content":""},{"lineNumber":930,"author":{"gitId":"-"},"content":"        Map\u003cString, Set\u003cString\u003e\u003e completeGiverRecipientMap \u003d"},{"lineNumber":931,"author":{"gitId":"-"},"content":"                fqLogic.buildCompleteGiverRecipientMap(session1, qn3InSession1InCourse1, courseRoster);"},{"lineNumber":932,"author":{"gitId":"-"},"content":""},{"lineNumber":933,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.size());"},{"lineNumber":934,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(session1.getCreatorEmail()).size());"},{"lineNumber":935,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(session1.getCreatorEmail()).contains(Const.GENERAL_QUESTION));"},{"lineNumber":936,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":937,"author":{"gitId":"-"},"content":""},{"lineNumber":938,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":939,"author":{"gitId":"-"},"content":"    public void testBuildCompleteGiverRecipientMap_teamQuestion_shouldBuildMapCorrectly() {"},{"lineNumber":940,"author":{"gitId":"-"},"content":"        CourseRoster courseRoster \u003d new CourseRoster("},{"lineNumber":941,"author":{"gitId":"-"},"content":"                studentsLogic.getStudentsForCourse(\"idOfTypicalCourse1\"),"},{"lineNumber":942,"author":{"gitId":"-"},"content":"                instructorsLogic.getInstructorsForCourse(\"idOfTypicalCourse1\"));"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes teamFeedbackQuestion \u003d getQuestionFromDatastore(\"team.feedback\");"},{"lineNumber":944,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2 \u003d fsLogic.getFeedbackSession("},{"lineNumber":945,"author":{"gitId":"-"},"content":"                teamFeedbackQuestion.getFeedbackSessionName(), teamFeedbackQuestion.getCourseId());"},{"lineNumber":946,"author":{"gitId":"-"},"content":""},{"lineNumber":947,"author":{"gitId":"-"},"content":"        Map\u003cString, Set\u003cString\u003e\u003e completeGiverRecipientMap \u003d"},{"lineNumber":948,"author":{"gitId":"-"},"content":"                fqLogic.buildCompleteGiverRecipientMap(session2, teamFeedbackQuestion, courseRoster);"},{"lineNumber":949,"author":{"gitId":"-"},"content":""},{"lineNumber":950,"author":{"gitId":"-"},"content":"        assertEquals(2, completeGiverRecipientMap.size());"},{"lineNumber":951,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\").size());"},{"lineNumber":952,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\").contains(\"Team 1.2\"));"},{"lineNumber":953,"author":{"gitId":"-"},"content":"        assertEquals(1, completeGiverRecipientMap.get(\"Team 1.2\").size());"},{"lineNumber":954,"author":{"gitId":"-"},"content":"        assertTrue(completeGiverRecipientMap.get(\"Team 1.2\").contains(\"Team 1.1\u003c/td\u003e\u003c/div\u003e\u0027\\\"\"));"},{"lineNumber":955,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":956,"author":{"gitId":"-"},"content":""},{"lineNumber":957,"author":{"gitId":"-"},"content":"    private void testGetFeedbackQuestionsForInstructor() throws Exception {"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e expectedQuestions;"},{"lineNumber":959,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e actualQuestions;"},{"lineNumber":960,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e allQuestions;"},{"lineNumber":961,"author":{"gitId":"-"},"content":""},{"lineNumber":962,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for instructors and self\");"},{"lineNumber":963,"author":{"gitId":"-"},"content":""},{"lineNumber":964,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":965,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn3InSession1InCourse1\"));"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn4InSession1InCourse1\"));"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn5InSession1InCourse1\"));"},{"lineNumber":968,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":969,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForInstructor(\"First feedback session\", \"idOfTypicalCourse1\","},{"lineNumber":970,"author":{"gitId":"-"},"content":"                                                          \"instructor1@course1.tmt\");"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":973,"author":{"gitId":"-"},"content":""},{"lineNumber":974,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for instructors and self by another instructor\");"},{"lineNumber":975,"author":{"gitId":"-"},"content":""},{"lineNumber":976,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":977,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn4InSession1InCourse1\"));"},{"lineNumber":978,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":979,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForInstructor(\"First feedback session\", \"idOfTypicalCourse1\","},{"lineNumber":980,"author":{"gitId":"-"},"content":"                                                          \"instructor2@course1.tmt\");"},{"lineNumber":981,"author":{"gitId":"-"},"content":""},{"lineNumber":982,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":983,"author":{"gitId":"-"},"content":""},{"lineNumber":984,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for instructors by the creating instructor\");"},{"lineNumber":985,"author":{"gitId":"-"},"content":""},{"lineNumber":986,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn1InSession1InCourse2\"));"},{"lineNumber":988,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn2InSession1InCourse2\"));"},{"lineNumber":989,"author":{"gitId":"-"},"content":""},{"lineNumber":990,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":991,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForInstructor(\"Instructor feedback session\", \"idOfTypicalCourse2\","},{"lineNumber":992,"author":{"gitId":"-"},"content":"                                                          \"instructor1@course2.tmt\");"},{"lineNumber":993,"author":{"gitId":"-"},"content":""},{"lineNumber":994,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":995,"author":{"gitId":"-"},"content":""},{"lineNumber":996,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions for creator instructor, verifies that the two methods return the same questions\");"},{"lineNumber":997,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e(actualQuestions);"},{"lineNumber":998,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":999,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForCreatorInstructor(\"Instructor feedback session\", \"idOfTypicalCourse2\");"},{"lineNumber":1000,"author":{"gitId":"-"},"content":""},{"lineNumber":1001,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1002,"author":{"gitId":"-"},"content":""},{"lineNumber":1003,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for instructors not by the creating instructor\");"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForInstructor(\"Instructor feedback session\", \"idOfTypicalCourse2\","},{"lineNumber":1007,"author":{"gitId":"-"},"content":"                                                          \"instructor2@course2.tmt\");"},{"lineNumber":1008,"author":{"gitId":"-"},"content":""},{"lineNumber":1009,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for instructors by non-instructor of the course\");"},{"lineNumber":1012,"author":{"gitId":"-"},"content":""},{"lineNumber":1013,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"                fqLogic.getFeedbackQuestionsForInstructor(\"Instructor feedback session\", \"idOfTypicalCourse2\","},{"lineNumber":1016,"author":{"gitId":"-"},"content":"                                                          \"iwc@yahoo.tmt\");"},{"lineNumber":1017,"author":{"gitId":"-"},"content":""},{"lineNumber":1018,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1019,"author":{"gitId":"-"},"content":""},{"lineNumber":1020,"author":{"gitId":"-"},"content":"        ______TS(\"Failure: Getting questions for a non-existent session\");"},{"lineNumber":1021,"author":{"gitId":"-"},"content":""},{"lineNumber":1022,"author":{"gitId":"-"},"content":"        EntityDoesNotExistException ednee \u003d assertThrows(EntityDoesNotExistException.class,"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"                () -\u003e fqLogic.getFeedbackQuestionsForInstructor("},{"lineNumber":1024,"author":{"gitId":"-"},"content":"                        \"Instructor feedback session\", \"idOfTypicalCourse1\", \"instructor1@course1.tmt\"));"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"        assertEquals(\"Trying to get questions for a feedback session that does not exist.\", ednee.getMessage());"},{"lineNumber":1026,"author":{"gitId":"-"},"content":""},{"lineNumber":1027,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for self from list of all questions\");"},{"lineNumber":1028,"author":{"gitId":"-"},"content":""},{"lineNumber":1029,"author":{"gitId":"-"},"content":"        allQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn1InSession1InCourse1\"));"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn2InSession1InCourse1\"));"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn3InSession1InCourse1\"));"},{"lineNumber":1033,"author":{"gitId":"-"},"content":""},{"lineNumber":1034,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn3InSession1InCourse1\"));"},{"lineNumber":1036,"author":{"gitId":"-"},"content":""},{"lineNumber":1037,"author":{"gitId":"-"},"content":"        actualQuestions \u003d fqLogic.getFeedbackQuestionsForInstructor(allQuestions, true);"},{"lineNumber":1038,"author":{"gitId":"-"},"content":""},{"lineNumber":1039,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1041,"author":{"gitId":"-"},"content":""},{"lineNumber":1042,"author":{"gitId":"-"},"content":"    private void testGetFeedbackQuestionsForStudents() {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e expectedQuestions;"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e actualQuestions;"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"        List\u003cFeedbackQuestionAttributes\u003e allQuestions;"},{"lineNumber":1046,"author":{"gitId":"-"},"content":""},{"lineNumber":1047,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for students\");"},{"lineNumber":1048,"author":{"gitId":"-"},"content":""},{"lineNumber":1049,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn1InSession1InCourse1\"));"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn2InSession1InCourse1\"));"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"                    fqLogic.getFeedbackQuestionsForStudents(\"First feedback session\", \"idOfTypicalCourse1\");"},{"lineNumber":1054,"author":{"gitId":"-"},"content":""},{"lineNumber":1055,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1056,"author":{"gitId":"-"},"content":""},{"lineNumber":1057,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for students and teams\");"},{"lineNumber":1058,"author":{"gitId":"-"},"content":""},{"lineNumber":1059,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"team.feedback\"));"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"team.members.feedback\"));"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"        actualQuestions \u003d"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"                    fqLogic.getFeedbackQuestionsForStudents(\"Second feedback session\", \"idOfTypicalCourse1\");"},{"lineNumber":1064,"author":{"gitId":"-"},"content":""},{"lineNumber":1065,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1066,"author":{"gitId":"-"},"content":""},{"lineNumber":1067,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for students from list of all questions\");"},{"lineNumber":1068,"author":{"gitId":"-"},"content":""},{"lineNumber":1069,"author":{"gitId":"-"},"content":"        allQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn1InSession1InCourse1\"));"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn2InSession1InCourse1\"));"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"qn3InSession1InCourse1\"));"},{"lineNumber":1073,"author":{"gitId":"-"},"content":""},{"lineNumber":1074,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn1InSession1InCourse1\"));"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"qn2InSession1InCourse1\"));"},{"lineNumber":1077,"author":{"gitId":"-"},"content":""},{"lineNumber":1078,"author":{"gitId":"-"},"content":"        actualQuestions \u003d fqLogic.getFeedbackQuestionsForStudents(allQuestions);"},{"lineNumber":1079,"author":{"gitId":"-"},"content":""},{"lineNumber":1080,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1081,"author":{"gitId":"-"},"content":""},{"lineNumber":1082,"author":{"gitId":"-"},"content":"        ______TS(\"Get questions created for students and teams from list of all questions\");"},{"lineNumber":1083,"author":{"gitId":"-"},"content":""},{"lineNumber":1084,"author":{"gitId":"-"},"content":"        allQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"team.feedback\"));"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"        allQuestions.add(getQuestionFromDatastore(\"team.members.feedback\"));"},{"lineNumber":1087,"author":{"gitId":"-"},"content":""},{"lineNumber":1088,"author":{"gitId":"-"},"content":"        expectedQuestions \u003d new ArrayList\u003c\u003e();"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"team.feedback\"));"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"        expectedQuestions.add(getQuestionFromDatastore(\"team.members.feedback\"));"},{"lineNumber":1091,"author":{"gitId":"-"},"content":""},{"lineNumber":1092,"author":{"gitId":"-"},"content":"        actualQuestions \u003d fqLogic.getFeedbackQuestionsForStudents(allQuestions);"},{"lineNumber":1093,"author":{"gitId":"-"},"content":""},{"lineNumber":1094,"author":{"gitId":"-"},"content":"        assertEquals(actualQuestions, expectedQuestions);"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1096,"author":{"gitId":"-"},"content":""},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    private void testIsQuestionAnswered() throws Exception {"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question;"},{"lineNumber":1099,"author":{"gitId":"-"},"content":""},{"lineNumber":1100,"author":{"gitId":"-"},"content":"        ______TS(\"test question is fully answered by user\");"},{"lineNumber":1101,"author":{"gitId":"-"},"content":""},{"lineNumber":1102,"author":{"gitId":"-"},"content":"        question \u003d getQuestionFromDatastore(\"qn1InSession1InCourse1\");"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"        assertTrue(fqLogic.isQuestionFullyAnsweredByUser(question, \"student1InCourse1@gmail.tmt\"));"},{"lineNumber":1104,"author":{"gitId":"-"},"content":""},{"lineNumber":1105,"author":{"gitId":"-"},"content":"        assertFalse(fqLogic.isQuestionFullyAnsweredByUser(question, \"studentWithNoResponses@gmail.tmt\"));"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1107,"author":{"gitId":"-"},"content":""},{"lineNumber":1108,"author":{"gitId":"-"},"content":"    private FeedbackQuestionAttributes getQuestionFromDatastore(String questionKey) {"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"        FeedbackQuestionAttributes question \u003d dataBundle.feedbackQuestions.get(questionKey);"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"        question \u003d fqLogic.getFeedbackQuestion("},{"lineNumber":1111,"author":{"gitId":"-"},"content":"                question.feedbackSessionName, question.courseId, question.questionNumber);"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"        return question;"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":1114,"author":{"gitId":"-"},"content":""},{"lineNumber":1115,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":37,"-":1078}},{"path":"src/test/java/teammates/test/MockLogsProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.test;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.ErrorLogEntry;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.FeedbackSessionLogEntry;"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.logic.api.LogsProcessor;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Allows mocking of {@link LogsProcessor}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class MockLogsProcessor extends LogsProcessor {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private List\u003cErrorLogEntry\u003e errorLogs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"    private List\u003cFeedbackSessionLogEntry\u003e feedbackSessionLogs \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Simulates insertion of error logs."},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"    public void insertErrorLog(String message, String severity) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        errorLogs.add(new ErrorLogEntry(message, severity));"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"     * Simulates insertion of feedback session logs."},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    public void insertFeedbackSessionLog(StudentAttributes student, FeedbackSessionAttributes fs,"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"            String fslType, long timestamp) {"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"        feedbackSessionLogs.add(new FeedbackSessionLogEntry(student, fs, fslType, timestamp));"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public List\u003cErrorLogEntry\u003e getRecentErrorLogs() {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return errorLogs;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"    public void createFeedbackSessionLog(String courseId, String email, String fsName, String fslType) {"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"        // No-op"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":46,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"halfwhole"},"content":"    public List\u003cFeedbackSessionLogEntry\u003e getFeedbackSessionLogs(String courseId, String email,"},{"lineNumber":48,"author":{"gitId":"halfwhole"},"content":"            Instant startTime, Instant endTime) {"},{"lineNumber":49,"author":{"gitId":"halfwhole"},"content":"        return feedbackSessionLogs;"},{"lineNumber":50,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":25,"-":27}},{"path":"src/test/java/teammates/ui/webapi/CompileLogsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import teammates.common.util.Config;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * SUT: {@link CompileLogsAction}."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CompileLogsActionTest extends BaseActionTest\u003cCompileLogsAction\u003e {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Const.CronJobURIs.AUTOMATED_LOG_COMPILATION;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    protected void testExecute() {"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ______TS(\"No email should be sent if there are no logs\");"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        CompileLogsAction action \u003d getAction();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        verifyNoEmailsSent();"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ______TS(\"Email should be sent if there are logs\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // The class does not check for the log severity as it is assumed that the logs service"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // will filter them correctly"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertErrorLog(\"Test info message\", \"INFO\");"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertErrorLog(\"Test warning message\", \"WARNING\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        action \u003d getAction();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        verifyNumberOfEmailsSent(1);"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EmailWrapper emailSent \u003d mockEmailSender.getEmailsSent().get(0);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(String.format(EmailType.SEVERE_LOGS_COMPILATION.getSubject(), Config.APP_VERSION),"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                emailSent.getSubject());"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(Config.SUPPORT_EMAIL, emailSent.getRecipient());"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected void testAccessControl() {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":2,"-":59}},{"path":"src/test/java/teammates/ui/webapi/CreateCourseActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import teammates.test.AssertHelper;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.ui.output.CourseData;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.ui.output.MessageOutput;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.ui.request.CourseCreateRequest;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * SUT: {@link CreateCourseAction}."},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CreateCourseActionTest extends BaseActionTest\u003cCreateCourseAction\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.COURSE;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return POST;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void testExecute() throws Exception {"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ______TS(\"Not enough parameters\");"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"        verifyHttpParameterFailure();"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case with new course id\");"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String instructorId \u003d instructor1OfCourse1.googleId;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String courseId \u003d instructor1OfCourse1.courseId;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CourseCreateRequest courseCreateRequest \u003d new CourseCreateRequest();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseName(\"New Course\");"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        courseCreateRequest.setTimeZone(\"UTC\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseId(\"new-course\");"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (logic.getCourse(\"new-course\") !\u003d null) {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logic.deleteCourseCascade(\"new-course\");"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        loginAsInstructor(instructorId);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CreateCourseAction action \u003d getAction(courseCreateRequest);"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonResult result \u003d getJsonResult(action);"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CourseData courseData \u003d (CourseData) result.getOutput();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(courseData.getCourseId(), \"new-course\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(courseData.getCourseName(), \"New Course\");"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(courseData.getTimeZone(), \"UTC\");"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotNull(logic.getCourse(\"new-course\"));"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case with existing course id\");"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseName(\"Existing Course\");"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        courseCreateRequest.setTimeZone(\"UTC\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseId(courseId);"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"        action \u003d getAction(courseCreateRequest);"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(action);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        MessageOutput message \u003d (MessageOutput) result.getOutput();"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.SC_CONFLICT, result.getStatusCode());"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":"        AssertHelper.assertContains(\"has been used by another course, possibly by some other user.\", message.getMessage());"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ______TS(\"Typical case missing course id\");"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseName(\"New Course\");"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        courseCreateRequest.setTimeZone(\"UTC\");"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        courseCreateRequest.setCourseId(\"\");"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        action \u003d getAction(courseCreateRequest);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        result \u003d getJsonResult(action);"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(HttpStatus.SC_BAD_REQUEST, result.getStatusCode());"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String[] submissionParams \u003d new String[] {};"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"        verifyOnlyInstructorsCanAccess(submissionParams);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":1,"-":94}},{"path":"src/test/java/teammates/ui/webapi/CreateFeedbackSessionLogActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import org.testng.annotations.Test;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import teammates.common.util.Const;"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":" * SUT: {@link CreateFeedbackSessionLogAction}."},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"public class CreateFeedbackSessionLogActionTest extends BaseActionTest\u003cCreateFeedbackSessionLogAction\u003e {"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"    protected String getActionUri() {"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"        return Const.ResourceURIs.SESSION_LOGS;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"    protected String getRequestMethod() {"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"        return POST;"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"    protected void testExecute() throws Exception {"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"        JsonResult actionOutput;"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"        CourseAttributes course1 \u003d typicalBundle.courses.get(\"typicalCourse1\");"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"        String courseId1 \u003d course1.getId();"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionAttributes fsa1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionAttributes fsa2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student1 \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student2 \u003d typicalBundle.students.get(\"student2InCourse1\");"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student3 \u003d typicalBundle.students.get(\"student1InCourse3\");"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: not enough parameters\");"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, courseId1);"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName()"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":45,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":46,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":47,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1.getEmail()"},{"lineNumber":48,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":50,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: invalid log type\");"},{"lineNumber":51,"author":{"gitId":"halfwhole"},"content":"        String[] paramsInvalid \u003d {"},{"lineNumber":52,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":53,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":54,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, \"invalid log type\","},{"lineNumber":55,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1.getEmail(),"},{"lineNumber":56,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":57,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsInvalid));"},{"lineNumber":58,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_BAD_REQUEST, actionOutput.getStatusCode());"},{"lineNumber":59,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":60,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: typical access\");"},{"lineNumber":61,"author":{"gitId":"halfwhole"},"content":"        String[] paramsSuccessfulAccess \u003d {"},{"lineNumber":62,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":63,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":64,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.ACCESS,"},{"lineNumber":65,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1.getEmail(),"},{"lineNumber":66,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":67,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsSuccessfulAccess));"},{"lineNumber":68,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":69,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":70,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: typical submission\");"},{"lineNumber":71,"author":{"gitId":"halfwhole"},"content":"        String[] paramsSuccessfulSubmission \u003d {"},{"lineNumber":72,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":73,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa2.getFeedbackSessionName(),"},{"lineNumber":74,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":75,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student2.getEmail(),"},{"lineNumber":76,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":77,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsSuccessfulSubmission));"},{"lineNumber":78,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":79,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":80,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: should create even for invalid parameters\");"},{"lineNumber":81,"author":{"gitId":"halfwhole"},"content":"        String[] paramsNonExistentCourseId \u003d {"},{"lineNumber":82,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, \"non-existent-course-id\","},{"lineNumber":83,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":84,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":85,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1.getEmail(),"},{"lineNumber":86,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":87,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsNonExistentCourseId));"},{"lineNumber":88,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":89,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":90,"author":{"gitId":"halfwhole"},"content":"        String[] paramsNonExistentFsName \u003d {"},{"lineNumber":91,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":92,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, \"non-existent-feedback-session-name\","},{"lineNumber":93,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":94,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1.getEmail(),"},{"lineNumber":95,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":96,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsNonExistentFsName));"},{"lineNumber":97,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":98,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":99,"author":{"gitId":"halfwhole"},"content":"        String[] paramsNonExistentStudentEmail \u003d {"},{"lineNumber":100,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":101,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":102,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":103,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, \"non-existent-student@email.com\","},{"lineNumber":104,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":105,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsNonExistentStudentEmail));"},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: should create even when student cannot access feedback session in course\");"},{"lineNumber":109,"author":{"gitId":"halfwhole"},"content":"        String[] paramsWithoutAccess \u003d {"},{"lineNumber":110,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId1,"},{"lineNumber":111,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_NAME, fsa1.getFeedbackSessionName(),"},{"lineNumber":112,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_TYPE, Const.FeedbackSessionLogTypes.SUBMISSION,"},{"lineNumber":113,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student3.getEmail(),"},{"lineNumber":114,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":115,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsWithoutAccess));"},{"lineNumber":116,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":117,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":119,"author":{"gitId":"halfwhole"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":121,"author":{"gitId":"halfwhole"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":122,"author":{"gitId":"halfwhole"},"content":"        verifyAnyUserCanAccess();"},{"lineNumber":123,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":124}},{"path":"src/test/java/teammates/ui/webapi/EnrollStudentsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.exception.InvalidHttpRequestBodyException;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"import teammates.ui.output.EnrollStudentsData;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.ui.output.StudentData;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.request.StudentsEnrollRequest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link EnrollStudentsAction}."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EnrollStudentsActionTest extends BaseActionTest\u003cEnrollStudentsAction\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return Const.ResourceURIs.STUDENTS;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return PUT;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void testExecute() throws Exception {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // See test cases below."},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void testExecute_withNewStudent_shouldBeAddedToDatabase() {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.students.get(\"student1InCourse1\").getCourse();"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StudentAttributes newStudent \u003d getTypicalNewStudent(courseId);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(newStudent));"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(1, enrolledStudents.size());"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(newStudent, enrolledStudents.get(0).getCourseId(), enrolledStudents.get(0).getEmail());"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(0), enrolledStudents.get(0));"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void testExecute_withNewStudentWithEmptySectionName_shouldBeAddedToDatabaseWithDefaultSectionName() {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.students.get(\"student1InCourse1\").getCourse();"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StudentAttributes newStudent \u003d getTypicalNewStudent(courseId);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        newStudent.section \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(newStudent));"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(1, enrolledStudents.size());"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // verify student in database"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StudentAttributes actualStudent \u003d"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(enrolledStudents.get(0).getCourseId(), enrolledStudents.get(0).getEmail());"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(newStudent.getCourse(), actualStudent.getCourse());"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(newStudent.getName(), actualStudent.getName());"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(newStudent.getEmail(), actualStudent.getEmail());"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(newStudent.getTeam(), actualStudent.getTeam());"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(Const.DEFAULT_SECTION, actualStudent.getSection());"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(newStudent.getComments(), actualStudent.getComments());"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // verify response data is correct"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest.StudentEnrollRequest request \u003d req.getStudentEnrollRequests().get(0);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StudentData response \u003d enrolledStudents.get(0);"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(request.getEmail(), response.getEmail());"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(request.getName(), response.getName());"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(Const.DEFAULT_SECTION, response.getSectionName());"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(request.getTeam(), response.getTeamName());"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(request.getComments(), response.getComments());"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void testExecute_withExistingStudent_shouldBeUpdatedToDatabase() {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        StudentAttributes studentToUpdate \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String courseId \u003d studentToUpdate.getCourse();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        studentToUpdate.name \u003d \"new name\";"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(studentToUpdate));"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(1, enrolledStudents.size());"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(studentToUpdate, enrolledStudents.get(0).getCourseId(), enrolledStudents.get(0).getEmail());"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(0), enrolledStudents.get(0));"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void testExecute_withSectionFieldChanged_shouldBeUpdatedToDatabase() {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        StudentAttributes studentToUpdate \u003d typicalBundle.students.get(\"student5InCourse1\");"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String courseId \u003d studentToUpdate.getCourse();"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e students \u003d logic.getStudentsForCourse(courseId);"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Ensure that student5InCourse1 has a unique team name in the course."},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Otherwise, it will give a duplicate team name error when changing section name."},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(1, students.stream().filter(student -\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                student.section.equals(studentToUpdate.section)).count());"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"        studentToUpdate.section \u003d \"New Section\";"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(studentToUpdate));"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(1, enrolledStudents.size());"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(studentToUpdate, enrolledStudents.get(0).getCourseId(), enrolledStudents.get(0).getEmail());"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(0), enrolledStudents.get(0));"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void testExecute_withEmailFieldChanged_shouldCreateNewStudent() {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.students.get(\"student1InCourse1\").getCourse();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StudentAttributes originalStudent \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StudentAttributes newStudent \u003d originalStudent.getCopy();"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        newStudent.email \u003d \"newEmail@example.com\";"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(newStudent));"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(1, enrolledStudents.size());"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(newStudent, enrolledStudents.get(0).getCourseId(), enrolledStudents.get(0).getEmail());"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(originalStudent, originalStudent.getCourse(), originalStudent.getEmail());"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(0), enrolledStudents.get(0));"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void testExecute_withInvalidEnrollRequests_shouldNotBeEnrolled() {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.students.get(\"student1InCourse1\").getCourse();"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        StudentAttributes validNewStudent \u003d getTypicalNewStudent(courseId);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        StudentAttributes invalidNewStudent \u003d getTypicalNewStudent(courseId);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        invalidNewStudent.email \u003d \"invalidEmail\";"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        StudentAttributes validExistingStudent \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        validExistingStudent.name \u003d \"new name\";"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        StudentAttributes invalidExistingStudent \u003d typicalBundle.students.get(\"student2InCourse1\");"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        invalidExistingStudent.team \u003d \"invalid | team % name\";"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest("},{"lineNumber":151,"author":{"gitId":"-"},"content":"                Arrays.asList(validNewStudent, invalidNewStudent, validExistingStudent, invalidExistingStudent));"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cStudentData\u003e enrolledStudents \u003d executeActionAndReturnResults(courseId, req);"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(2, enrolledStudents.size());"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(validNewStudent, enrolledStudents.get(0).getCourseId(),"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                enrolledStudents.get(0).getEmail());"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        verifyStudentInDatabase(validExistingStudent, enrolledStudents.get(1).getCourseId(),"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                enrolledStudents.get(1).getEmail());"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(0), enrolledStudents.get(0));"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        verifyCorrectResponseData(req.getStudentEnrollRequests().get(2), enrolledStudents.get(1));"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void testExecute_withDuplicatedTeamNameAmongSectionsToExistingStudents_shouldThrowInvalidBodyException() {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.courses.get(\"typicalCourse1\").getId();"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        StudentAttributes studentInCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d getTypicalNewStudent(courseId);"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        student1.team \u003d studentInCourse1.getTeam();"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        student1.section \u003d \"random section 1\";"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(student1));"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        verifyDuplicatedTeamNameDetected(courseId, req, student1.team, student1.section, studentInCourse1.section);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void testExecute_withDuplicatedTeamNameAmongSectionsInInput_shouldThrowInvalidBodyException() {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.courses.get(\"typicalCourse1\").getId();"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        StudentAttributes student1 \u003d getTypicalNewStudent(courseId);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        student1.team \u003d \"typical random team\";"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        student1.section \u003d \"random section 1\";"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        StudentAttributes student2 \u003d getTypicalNewStudent(courseId);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        student2.team \u003d student1.team;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        student2.section \u003d \"random section 2\";"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        student2.email \u003d \"differentemail@test.com\";"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(Arrays.asList(student1, student2));"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        loginAsInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").getGoogleId());"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        verifyDuplicatedTeamNameDetected(courseId, req, student1.team, student1.section, student2.section);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void testExecute_withNumberOfStudentsMoreThanSectionLimit_shouldThrowInvalidHttpRequestBodyException() {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String courseId \u003d typicalBundle.students.get(\"student1InCourse1\").getCourse();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String randomSectionName \u003d \"randomSectionName\";"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        List\u003cStudentAttributes\u003e studentList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c Const.SECTION_SIZE_LIMIT; i++) {"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            StudentAttributes addedStudent \u003d StudentAttributes"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    .builder(courseId, i + \"email@test.com\")"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    .withName(\"Name \" + i)"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                    .withSectionName(randomSectionName)"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    .withTeamName(\"Team \" + i)"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                    .withComment(\"cmt\" + i)"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            studentList.add(addedStudent);"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // Enroll students up to but not exceeding limit."},{"lineNumber":214,"author":{"gitId":"-"},"content":"        StudentsEnrollRequest req \u003d prepareRequest(studentList);"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        getAction(req, params).execute();"},{"lineNumber":216,"author":{"gitId":"-"},"content":""},{"lineNumber":217,"author":{"gitId":"-"},"content":"        // Enroll one more student to exceed limit."},{"lineNumber":218,"author":{"gitId":"-"},"content":"        StudentAttributes oneMoreStudentToGoBeyondLimit \u003d StudentAttributes"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                .builder(courseId, \"email@test.com\")"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                .withName(\"Name\")"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                .withSectionName(randomSectionName)"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .withTeamName(\"Team\")"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                .withComment(\"cmt\")"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                .build();"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"        req \u003d prepareRequest(Arrays.asList(oneMoreStudentToGoBeyondLimit));"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        EnrollStudentsAction action \u003d getAction(req, params);"},{"lineNumber":228,"author":{"gitId":"-"},"content":""},{"lineNumber":229,"author":{"gitId":"-"},"content":"        InvalidHttpRequestBodyException ee \u003d assertThrows(InvalidHttpRequestBodyException.class,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                () -\u003e action.execute());"},{"lineNumber":231,"author":{"gitId":"-"},"content":""},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String expectedErrorMessage \u003d String.format("},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \"You are trying enroll more than %d students in section \\\"%s\\\".\","},{"lineNumber":234,"author":{"gitId":"-"},"content":"                Const.SECTION_SIZE_LIMIT, randomSectionName)"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + \" \""},{"lineNumber":236,"author":{"gitId":"-"},"content":"                + String.format(\"To avoid performance problems, \""},{"lineNumber":237,"author":{"gitId":"-"},"content":"                        + \"please do not enroll more than %d students in a single section.\", Const.SECTION_SIZE_LIMIT);"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertEquals(expectedErrorMessage, ee.getMessage());"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    private void verifyCorrectResponseData(StudentsEnrollRequest.StudentEnrollRequest request, StudentData response) {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertEquals(request.getEmail(), response.getEmail());"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertEquals(request.getName(), response.getName());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertEquals(request.getSection(), response.getSectionName());"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertEquals(request.getTeam(), response.getTeamName());"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertEquals(request.getComments(), response.getComments());"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private void verifyDuplicatedTeamNameDetected(String courseId, StudentsEnrollRequest req, String expectedTeam,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                                                  String expectedSectionOne, String expectedSectionTwo) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d \"Team \\\"%s\\\" is detected in both Section \\\"%s\\\" and Section \\\"%s\\\".\""},{"lineNumber":253,"author":{"gitId":"-"},"content":"                + \" Please use different team names in different sections.\";"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        EnrollStudentsAction action \u003d getAction(req, params);"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        InvalidHttpRequestBodyException actualException \u003d"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                assertThrows(InvalidHttpRequestBodyException.class, () -\u003e action.execute());"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertEquals(actualException.getMessage(),"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                String.format(expectedMessage, expectedTeam, expectedSectionOne, expectedSectionTwo));"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"-"},"content":""},{"lineNumber":264,"author":{"gitId":"-"},"content":"    private StudentsEnrollRequest prepareRequest(List\u003cStudentAttributes\u003e enrolledStudents) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        List\u003cStudentsEnrollRequest.StudentEnrollRequest\u003e requestList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        enrolledStudents.forEach(student -\u003e {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            requestList.add(new StudentsEnrollRequest.StudentEnrollRequest(student.getName(),"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    student.getEmail(), student.getTeam(), student.getSection(),"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    student.getComments()));"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"        return new StudentsEnrollRequest(requestList);"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    private List\u003cStudentData\u003e executeActionAndReturnResults(String courseId, StudentsEnrollRequest req) {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        String[] params \u003d new String[] {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        EnrollStudentsAction action \u003d getAction(req, params);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        JsonResult result \u003d action.execute();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertEquals(result.getStatusCode(), HttpStatus.SC_OK);"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"daongochieu2810"},"content":"        return ((EnrollStudentsData) result.getOutput()).getStudentsData().getStudents();"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    private void verifyStudentInDatabase(StudentAttributes expectedStudent,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                                         String actualStudentCourse, String actualStudentEmail) {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        StudentAttributes actualStudent \u003d"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                logic.getStudentForEmail(actualStudentCourse, actualStudentEmail);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getCourse(), actualStudent.getCourse());"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getName(), actualStudent.getName());"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getEmail(), actualStudent.getEmail());"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getTeam(), actualStudent.getTeam());"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getSection(), actualStudent.getSection());"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertEquals(expectedStudent.getComments(), actualStudent.getComments());"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"    private StudentAttributes getTypicalNewStudent(String courseId) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        return StudentAttributes"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    .builder(courseId, \"email@test.com\")"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    .withName(\"name\")"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .withComment(\"\")"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .withTeamName(\"team\")"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .withSectionName(\"section\")"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                    .build();"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"-"},"content":""},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"-"},"content":"        String[] submissionParams \u003d new String[] {"},{"lineNumber":314,"author":{"gitId":"-"},"content":"                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"        verifyOnlyInstructorsOfTheSameCourseWithCorrectCoursePrivilegeCanAccess("},{"lineNumber":318,"author":{"gitId":"-"},"content":"                Const.InstructorPermissions.CAN_MODIFY_STUDENT, submissionParams);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":2,"-":318}},{"path":"src/test/java/teammates/ui/webapi/FeedbackSessionClosedRemindersActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.time.ZoneId;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import teammates.common.util.Const;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailType;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import teammates.common.util.EmailWrapper;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import teammates.common.util.TaskWrapper;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelper;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import teammates.common.util.TimeHelperExtension;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import teammates.ui.request.SendEmailRequest;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * SUT: {@link FeedbackSessionClosedRemindersAction}."},{"lineNumber":20,"author":{"gitId":"-"},"content":" */"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class FeedbackSessionClosedRemindersActionTest"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        extends BaseActionTest\u003cFeedbackSessionClosedRemindersAction\u003e {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    protected String getActionUri() {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return Const.CronJobURIs.AUTOMATED_FEEDBACK_CLOSED_REMINDERS;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    protected String getRequestMethod() {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return GET;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        verifyOnlyAdminCanAccess();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void testExecute() throws Exception {"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ______TS(\"default state of typical data bundle: 0 sessions closed recently\");"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FeedbackSessionClosedRemindersAction action \u003d getAction();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ______TS(\"1 session closed recently, 1 session closed recently with disabled closed reminder, \""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                 + \"1 session closed recently but still in grace period\");"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Session is closed recently"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        session1.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        session1.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        session1.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":61,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        .withTimeZone(session1.getTimeZone())"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        .withStartTime(session1.getStartTime())"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        .withEndTime(session1.getEndTime())"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        session1.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session1);"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Ditto, but with disabled closed reminder"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        session2.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        session2.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        session2.setEndTime(TimeHelperExtension.getInstantHoursOffsetFromNow(-1));"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        session2.setClosingEmailEnabled(false);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session2.getFeedbackSessionName(), session2.getCourseId())"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                        .withTimeZone(session2.getTimeZone())"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                        .withStartTime(session2.getStartTime())"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        .withEndTime(session2.getEndTime())"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        .withIsClosingEmailEnabled(session2.isClosingEmailEnabled())"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        session2.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session2);"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Still in grace period; closed reminder should not be sent"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"        FeedbackSessionAttributes session3 \u003d typicalBundle.feedbackSessions.get(\"gracePeriodSession\");"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        session3.setTimeZone(ZoneId.of(\"UTC\"));"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        session3.setStartTime(TimeHelper.getInstantDaysOffsetFromNow(-2));"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        session3.setEndTime(Instant.now());"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":95,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session3.getFeedbackSessionName(), session3.getCourseId())"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                        .withTimeZone(session3.getTimeZone())"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        .withStartTime(session3.getStartTime())"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                        .withEndTime(session3.getEndTime())"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        session3.setSentOpenEmail(false); // fsLogic will set the flag to false"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        verifyPresentInDatastore(session3);"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"        action \u003d getAction();"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"daongochieu2810"},"content":"        // 5 students and 5 instructors in course1 and 4 students have submitted"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        verifySpecifiedTasksAdded(Const.TaskQueue.SEND_EMAIL_QUEUE_NAME, 6);"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String courseName \u003d logic.getCourse(session1.getCourseId()).getName();"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cTaskWrapper\u003e tasksAdded \u003d mockTaskQueuer.getTasksAdded();"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        for (TaskWrapper task : tasksAdded) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            SendEmailRequest requestBody \u003d (SendEmailRequest) task.getRequestBody();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            EmailWrapper email \u003d requestBody.getEmail();"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            assertEquals(String.format(EmailType.FEEDBACK_CLOSED.getSubject(), courseName,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                       session1.getFeedbackSessionName()),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                         email.getSubject());"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"        ______TS(\"1 session closed recently with closed emails sent\");"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"        session1.setSentClosedEmail(true);"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logic.updateFeedbackSession("},{"lineNumber":124,"author":{"gitId":"-"},"content":"                FeedbackSessionAttributes"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        .updateOptionsBuilder(session1.getFeedbackSessionName(), session1.getCourseId())"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                        .withSentClosedEmail(session1.isSentClosedEmail())"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                        .build());"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"        action \u003d getAction();"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        action.execute();"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        verifyNoTasksAdded();"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":1,"-":135}},{"path":"src/test/java/teammates/ui/webapi/GetFeedbackSessionLogsActionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"halfwhole"},"content":"package teammates.ui.webapi;"},{"lineNumber":2,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import java.time.Instant;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import org.apache.http.HttpStatus;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import org.testng.annotations.Test;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.CourseAttributes;"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.InstructorAttributes;"},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"import teammates.common.datatransfer.attributes.StudentAttributes;"},{"lineNumber":13,"author":{"gitId":"halfwhole"},"content":"import teammates.common.util.Const;"},{"lineNumber":14,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.constants.LogType;"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.output.FeedbackSessionLogData;"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.output.FeedbackSessionLogEntryData;"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"import teammates.ui.output.FeedbackSessionLogsData;"},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":" * SUT: {@link GetFeedbackSessionLogsAction}."},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":" */"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"public class GetFeedbackSessionLogsActionTest extends BaseActionTest\u003cGetFeedbackSessionLogsAction\u003e {"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"    protected String getActionUri() {"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"        return Const.ResourceURIs.SESSION_LOGS;"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"halfwhole"},"content":"    protected String getRequestMethod() {"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"        return GET;"},{"lineNumber":31,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":33,"author":{"gitId":"halfwhole"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"    protected void testExecute() throws Exception {"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"        JsonResult actionOutput;"},{"lineNumber":37,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":38,"author":{"gitId":"halfwhole"},"content":"        CourseAttributes course \u003d typicalBundle.courses.get(\"typicalCourse1\");"},{"lineNumber":39,"author":{"gitId":"halfwhole"},"content":"        String courseId \u003d course.getId();"},{"lineNumber":40,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionAttributes fsa1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"},{"lineNumber":41,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionAttributes fsa2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"},{"lineNumber":42,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student1 \u003d typicalBundle.students.get(\"student1InCourse1\");"},{"lineNumber":43,"author":{"gitId":"halfwhole"},"content":"        StudentAttributes student2 \u003d typicalBundle.students.get(\"student2InCourse1\");"},{"lineNumber":44,"author":{"gitId":"halfwhole"},"content":"        String student1Email \u003d student1.getEmail();"},{"lineNumber":45,"author":{"gitId":"halfwhole"},"content":"        String student2Email \u003d student2.getEmail();"},{"lineNumber":46,"author":{"gitId":"halfwhole"},"content":"        long endTime \u003d Instant.now().toEpochMilli();"},{"lineNumber":47,"author":{"gitId":"halfwhole"},"content":"        long startTime \u003d endTime - (Const.LOGS_RETENTION_PERIOD.toDays() - 1) * 24 * 60 * 60 * 1000;"},{"lineNumber":48,"author":{"gitId":"halfwhole"},"content":"        long invalidStartTime \u003d endTime - (Const.LOGS_RETENTION_PERIOD.toDays() + 1) * 24 * 60 * 60 * 1000;"},{"lineNumber":49,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":50,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertFeedbackSessionLog(student1, fsa1,"},{"lineNumber":51,"author":{"gitId":"halfwhole"},"content":"                Const.FeedbackSessionLogTypes.ACCESS, startTime);"},{"lineNumber":52,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertFeedbackSessionLog(student1, fsa2,"},{"lineNumber":53,"author":{"gitId":"halfwhole"},"content":"                Const.FeedbackSessionLogTypes.ACCESS, startTime + 1000);"},{"lineNumber":54,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertFeedbackSessionLog(student1, fsa2,"},{"lineNumber":55,"author":{"gitId":"halfwhole"},"content":"                Const.FeedbackSessionLogTypes.SUBMISSION, startTime + 2000);"},{"lineNumber":56,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertFeedbackSessionLog(student2, fsa1,"},{"lineNumber":57,"author":{"gitId":"halfwhole"},"content":"                Const.FeedbackSessionLogTypes.ACCESS, startTime + 3000);"},{"lineNumber":58,"author":{"gitId":"halfwhole"},"content":"        mockLogsProcessor.insertFeedbackSessionLog(student2, fsa1,"},{"lineNumber":59,"author":{"gitId":"halfwhole"},"content":"                Const.FeedbackSessionLogTypes.SUBMISSION, startTime + 4000);"},{"lineNumber":60,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":61,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: not enough parameters\");"},{"lineNumber":62,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":63,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId"},{"lineNumber":64,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":66,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":67,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime)"},{"lineNumber":68,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":70,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":71,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime)"},{"lineNumber":72,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":73,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":74,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: invalid course id\");"},{"lineNumber":75,"author":{"gitId":"halfwhole"},"content":"        String[] paramsInvalid1 \u003d {"},{"lineNumber":76,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, \"fake-course-id\","},{"lineNumber":77,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1Email,"},{"lineNumber":78,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":79,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime),"},{"lineNumber":80,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":81,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsInvalid1));"},{"lineNumber":82,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_NOT_FOUND, actionOutput.getStatusCode());"},{"lineNumber":83,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":84,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: invalid student email\");"},{"lineNumber":85,"author":{"gitId":"halfwhole"},"content":"        String[] paramsInvalid2 \u003d {"},{"lineNumber":86,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":87,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, \"fake-student-email@gmail.com\","},{"lineNumber":88,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":89,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime),"},{"lineNumber":90,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":91,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsInvalid2));"},{"lineNumber":92,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_NOT_FOUND, actionOutput.getStatusCode());"},{"lineNumber":93,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":94,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: invalid start or end times\");"},{"lineNumber":95,"author":{"gitId":"halfwhole"},"content":"        String[] paramsInvalid3 \u003d {"},{"lineNumber":96,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":97,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, \"abc\","},{"lineNumber":98,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime),"},{"lineNumber":99,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":100,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsInvalid3));"},{"lineNumber":101,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_BAD_REQUEST, actionOutput.getStatusCode());"},{"lineNumber":102,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":103,"author":{"gitId":"halfwhole"},"content":"        String[] paramsInvalid4 \u003d {"},{"lineNumber":104,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":105,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, \" \","},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsInvalid4));"},{"lineNumber":109,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_BAD_REQUEST, actionOutput.getStatusCode());"},{"lineNumber":110,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":111,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Failure case: start time is before earliest search time\");"},{"lineNumber":112,"author":{"gitId":"halfwhole"},"content":"        verifyHttpParameterFailure("},{"lineNumber":113,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":114,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(invalidStartTime),"},{"lineNumber":115,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime)"},{"lineNumber":116,"author":{"gitId":"halfwhole"},"content":"        );"},{"lineNumber":117,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":118,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: should group by feedback session\");"},{"lineNumber":119,"author":{"gitId":"halfwhole"},"content":"        String[] paramsSuccessful1 \u003d {"},{"lineNumber":120,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":121,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":122,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime),"},{"lineNumber":123,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":124,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsSuccessful1));"},{"lineNumber":125,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":126,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":127,"author":{"gitId":"halfwhole"},"content":"        // The filtering by the logs processor cannot be tested directly, assume that it filters correctly"},{"lineNumber":128,"author":{"gitId":"halfwhole"},"content":"        // Here, it simply returns all log entries"},{"lineNumber":129,"author":{"gitId":"halfwhole"},"content":"        FeedbackSessionLogsData fslData \u003d (FeedbackSessionLogsData) actionOutput.getOutput();"},{"lineNumber":130,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogData\u003e fsLogs \u003d fslData.getFeedbackSessionLogs();"},{"lineNumber":131,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":132,"author":{"gitId":"halfwhole"},"content":"        // Course has 6 feedback sessions, first 4 of which have no log entries"},{"lineNumber":133,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogs.size(), 6);"},{"lineNumber":134,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogs.get(0).getFeedbackSessionLogEntries().size(), 0);"},{"lineNumber":135,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogs.get(1).getFeedbackSessionLogEntries().size(), 0);"},{"lineNumber":136,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogs.get(2).getFeedbackSessionLogEntries().size(), 0);"},{"lineNumber":137,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogs.get(3).getFeedbackSessionLogEntries().size(), 0);"},{"lineNumber":138,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":139,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogEntryData\u003e fsLogEntries1 \u003d fsLogs.get(4).getFeedbackSessionLogEntries();"},{"lineNumber":140,"author":{"gitId":"halfwhole"},"content":"        List\u003cFeedbackSessionLogEntryData\u003e fsLogEntries2 \u003d fsLogs.get(5).getFeedbackSessionLogEntries();"},{"lineNumber":141,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":142,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.size(), 3);"},{"lineNumber":143,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(0).getStudentData().getEmail(), student1Email);"},{"lineNumber":144,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(0).getFeedbackSessionLogType(), LogType.FEEDBACK_SESSION_ACCESS);"},{"lineNumber":145,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(1).getStudentData().getEmail(), student2Email);"},{"lineNumber":146,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(1).getFeedbackSessionLogType(), LogType.FEEDBACK_SESSION_ACCESS);"},{"lineNumber":147,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(2).getStudentData().getEmail(), student2Email);"},{"lineNumber":148,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries1.get(2).getFeedbackSessionLogType(), LogType.FEEDBACK_SESSION_SUBMISSION);"},{"lineNumber":149,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":150,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries2.size(), 2);"},{"lineNumber":151,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries2.get(0).getStudentData().getEmail(), student1Email);"},{"lineNumber":152,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries2.get(0).getFeedbackSessionLogType(), LogType.FEEDBACK_SESSION_ACCESS);"},{"lineNumber":153,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries2.get(1).getStudentData().getEmail(), student1Email);"},{"lineNumber":154,"author":{"gitId":"halfwhole"},"content":"        assertEquals(fsLogEntries2.get(1).getFeedbackSessionLogType(), LogType.FEEDBACK_SESSION_SUBMISSION);"},{"lineNumber":155,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":156,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Success case: should accept optional email\");"},{"lineNumber":157,"author":{"gitId":"halfwhole"},"content":"        String[] paramsSuccessful2 \u003d {"},{"lineNumber":158,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":159,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.STUDENT_EMAIL, student1Email,"},{"lineNumber":160,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_STARTTIME, String.valueOf(startTime),"},{"lineNumber":161,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.FEEDBACK_SESSION_LOG_ENDTIME, String.valueOf(endTime),"},{"lineNumber":162,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":163,"author":{"gitId":"halfwhole"},"content":"        actionOutput \u003d getJsonResult(getAction(paramsSuccessful2));"},{"lineNumber":164,"author":{"gitId":"halfwhole"},"content":"        assertEquals(HttpStatus.SC_OK, actionOutput.getStatusCode());"},{"lineNumber":165,"author":{"gitId":"halfwhole"},"content":"        // No need to check output again here, it will be exactly the same as the previous case"},{"lineNumber":166,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":167,"author":{"gitId":"halfwhole"},"content":"        // TODO: if we restrict the range from start to end time, it should be tested here as well"},{"lineNumber":168,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":170,"author":{"gitId":"halfwhole"},"content":"    @Test"},{"lineNumber":171,"author":{"gitId":"halfwhole"},"content":"    @Override"},{"lineNumber":172,"author":{"gitId":"halfwhole"},"content":"    protected void testAccessControl() throws Exception {"},{"lineNumber":173,"author":{"gitId":"halfwhole"},"content":"        InstructorAttributes instructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"},{"lineNumber":174,"author":{"gitId":"halfwhole"},"content":"        String courseId \u003d instructor.getCourseId();"},{"lineNumber":175,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":176,"author":{"gitId":"halfwhole"},"content":"        ______TS(\"Only instructors of the same course can access\");"},{"lineNumber":177,"author":{"gitId":"halfwhole"},"content":"        String[] submissionParams \u003d new String[] {"},{"lineNumber":178,"author":{"gitId":"halfwhole"},"content":"                Const.ParamsNames.COURSE_ID, courseId,"},{"lineNumber":179,"author":{"gitId":"halfwhole"},"content":"        };"},{"lineNumber":180,"author":{"gitId":"halfwhole"},"content":"        verifyOnlyInstructorsOfTheSameCourseCanAccess(submissionParams);"},{"lineNumber":181,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":183,"author":{"gitId":"halfwhole"},"content":"}"}],"authorContributionMap":{"halfwhole":183}},{"path":"src/web/app/app.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientModule } from \u0027@angular/common/http\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule, Provider } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { BrowserModule } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { RouterModule, Routes, UrlSerializer } from \u0027@angular/router\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ServiceWorkerModule } from \u0027@angular/service-worker\u0027;"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"import { NgbDatepickerModule, NgbDropdownModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NgxPageScrollCoreModule } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { environment } from \u0027../environments/environment\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../types/api-request\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { AppComponent } from \u0027./app.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { ErrorReportModule } from \u0027./components/error-report/error-report.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { LoaderBarModule } from \u0027./components/loader-bar/loader-bar.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027./components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"import { SessionEditFormModule } from \u0027./components/session-edit-form/session-edit-form.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalModule } from \u0027./components/simple-modal/simple-modal.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027./components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { ToastModule } from \u0027./components/toast/toast.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { CustomUrlSerializer } from \u0027./custom-url-serializer\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { MaintenancePageComponent } from \u0027./maintenance-page.component\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { ClickOutsideDirective, PageComponent } from \u0027./page.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { AdminPageComponent } from \u0027./pages-admin/admin-page.component\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { InstructorPageComponent } from \u0027./pages-instructor/instructor-page.component\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { StaticPageComponent } from \u0027./pages-static/static-page.component\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { StudentPageComponent } from \u0027./pages-student/student-page.component\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { PublicPageComponent } from \u0027./public-page.component\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"const customUrlSerializer: CustomUrlSerializer \u003d new CustomUrlSerializer();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"const customUrlSerializerProvider: Provider \u003d {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  provide: UrlSerializer,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  useValue: customUrlSerializer,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"};"},{"lineNumber":34,"author":{"gitId":"-"},"content":"let routes: Routes \u003d ["},{"lineNumber":35,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    path: \u0027web\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    children: ["},{"lineNumber":38,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        path: \u0027front\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        component: StaticPageComponent,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./pages-static/static-pages.module\u0027).then((m: any) \u003d\u003e m.StaticPagesModule),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        path: \u0027join\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        component: PublicPageComponent,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./user-join-page.module\u0027).then((m: any) \u003d\u003e m.UserJoinPageModule),"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        path: \u0027sessions\u0027,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        component: PublicPageComponent,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        children: ["},{"lineNumber":52,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            path: \u0027result\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            loadChildren: () \u003d\u003e import(\u0027./pages-session/session-result-page/session-result-page.module\u0027)"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .then((m: any) \u003d\u003e m.SessionResultPageModule),"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            path: \u0027submission\u0027,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            loadChildren: () \u003d\u003e import(\u0027./pages-session/session-submission-page/session-submission-page.module\u0027)"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .then((m: any) \u003d\u003e m.SessionSubmissionPageModule),"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              pageTitle: \u0027Submit Feedback\u0027,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              intent: Intent.STUDENT_SUBMISSION,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        path: \u0027student\u0027,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        component: StudentPageComponent,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./pages-student/student-pages.module\u0027).then((m: any) \u003d\u003e m.StudentPagesModule),"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        path: \u0027instructor\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        component: InstructorPageComponent,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./pages-instructor/instructor-pages.module\u0027)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorPagesModule),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        path: \u0027admin\u0027,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        component: AdminPageComponent,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./pages-admin/admin-pages.module\u0027).then((m: any) \u003d\u003e m.AdminPagesModule),"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        path: \u0027**\u0027,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        pathMatch: \u0027full\u0027,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        redirectTo: \u0027front\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    pathMatch: \u0027full\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    redirectTo: \u0027web\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"];"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"if (environment.maintenance) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  routes \u003d ["},{"lineNumber":100,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      path: \u0027web\u0027,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      component: PublicPageComponent,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      children: ["},{"lineNumber":104,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          path: \u0027\u0027,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"          component: MaintenancePageComponent,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"          path: \u0027**\u0027,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          pathMatch: \u0027full\u0027,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          redirectTo: \u0027\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      path: \u0027**\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      pathMatch: \u0027full\u0027,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      redirectTo: \u0027web\u0027,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":124,"author":{"gitId":"-"},"content":" * Root module."},{"lineNumber":125,"author":{"gitId":"-"},"content":" */"},{"lineNumber":126,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":128,"author":{"gitId":"-"},"content":"    AppComponent,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    PageComponent,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ClickOutsideDirective,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    PublicPageComponent,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    StaticPageComponent,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    StudentPageComponent,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    InstructorPageComponent,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    AdminPageComponent,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    MaintenancePageComponent,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":139,"author":{"gitId":"-"},"content":"    SimpleModalModule,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    BrowserModule,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    BrowserAnimationsModule,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    HttpClientModule,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    NgbDropdownModule,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    RouterModule.forRoot(routes),"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ErrorReportModule,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    ToastModule,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    LoaderBarModule,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    NgxPageScrollCoreModule.forRoot(),"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    ServiceWorkerModule.register(\u0027ngsw-worker.js\u0027, {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      enabled: environment.production,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      registrationStrategy: \u0027registerImmediately\u0027,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }),"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    LoadingSpinnerModule,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    TeammatesRouterModule,"},{"lineNumber":155,"author":{"gitId":"daongochieu2810"},"content":"    FormsModule,"},{"lineNumber":156,"author":{"gitId":"daongochieu2810"},"content":"    NgbDatepickerModule,"},{"lineNumber":157,"author":{"gitId":"daongochieu2810"},"content":"    SessionEditFormModule,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  providers: [customUrlSerializerProvider],"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  bootstrap: [AppComponent],"},{"lineNumber":161,"author":{"gitId":"-"},"content":"})"},{"lineNumber":162,"author":{"gitId":"-"},"content":"export class AppModule {}"}],"authorContributionMap":{"daongochieu2810":6,"-":156}},{"path":"src/web/app/components/comment-box/comment-edit-form/comment-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { CommentVisibilityStateMachine } from \u0027../../../../services/comment-visibility-state-machine\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":4,"author":{"gitId":"halfwhole"},"content":"import { StringHelper } from \u0027../../../../services/string-helper\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  CommentVisibilityType,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  ResponseOutput,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { CommentVisibilityControl } from \u0027../../../../types/comment-visibility-control\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../teammates-common/collapse-anim\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { CommentRowMode } from \u0027../comment-row/comment-row.component\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Model for comment edit form."},{"lineNumber":17,"author":{"gitId":"-"},"content":" */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"export interface CommentEditFormModel {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  commentText: string;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  isUsingCustomVisibilities: boolean;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  showCommentTo: CommentVisibilityType[];"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  showGiverNameTo: CommentVisibilityType[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Comment edit form component"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  selector: \u0027tm-comment-edit-form\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./comment-edit-form.component.html\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./comment-edit-form.component.scss\u0027],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":"export class CommentEditFormComponent implements OnInit, OnChanges {"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  FeedbackParticipantType: typeof FeedbackParticipantType \u003d FeedbackParticipantType;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  CommentVisibilityType: typeof CommentVisibilityType \u003d CommentVisibilityType;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  CommentVisibilityControl: typeof CommentVisibilityControl \u003d CommentVisibilityControl;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  CommentRowMode: typeof CommentRowMode \u003d CommentRowMode;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  mode: CommentRowMode \u003d CommentRowMode.ADD;"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  model: CommentEditFormModel \u003d {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    commentText: \u0027\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    isUsingCustomVisibilities: false,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    showCommentTo: [],"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  isFeedbackParticipantComment: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  response?: ResponseOutput;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  questionShowResponsesTo: FeedbackVisibilityType[] \u003d [];"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  @Output() modelChange: EventEmitter\u003cCommentEditFormModel\u003e \u003d new EventEmitter\u003cCommentEditFormModel\u003e();"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  isDisabled: boolean \u003d false;"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  shouldHideSavingButton: boolean \u003d false;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  shouldHideClosingButton: boolean \u003d false;"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  isVisibilityOptionEnabled: boolean \u003d true;"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  closeCommentBoxEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  saveCommentEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter();"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  isVisibilityTableExpanded: boolean \u003d false;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  visibilityStateMachine: CommentVisibilityStateMachine;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  constructor(private commentService: FeedbackResponseCommentService) {"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d this.commentService.getNewVisibilityStateMachine(this.questionShowResponsesTo);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":92,"author":{"gitId":"halfwhole"},"content":"    if (this.response) {"},{"lineNumber":93,"author":{"gitId":"halfwhole"},"content":"      this.response.giver \u003d StringHelper.removeAnonymousHash(this.response.giver);"},{"lineNumber":94,"author":{"gitId":"halfwhole"},"content":"      this.response.recipient \u003d StringHelper.removeAnonymousHash(this.response.recipient);"},{"lineNumber":95,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  ngOnChanges(): void {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    this.visibilityStateMachine \u003d this.commentService.getNewVisibilityStateMachine(this.questionShowResponsesTo);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    if (this.model.isUsingCustomVisibilities) {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      const visibilitySetting: {[TKey in CommentVisibilityControl]: CommentVisibilityType[]} \u003d {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        SHOW_COMMENT: this.model.showCommentTo,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: this.model.showGiverNameTo,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      };"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.visibilityStateMachine.applyVisibilitySettings(visibilitySetting);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      // follow the question\u0027s visibilities settings"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      this.visibilityStateMachine.allowAllApplicableTypesToSee();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      // sync the two visibilities settings to follow question"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      // automatically change the isUsingCustomVisibilities flag to true"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      this.triggerModelChangeBatch({"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: true,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showCommentTo:"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            this.visibilityStateMachine.getVisibilityTypesUnderVisibilityControl(CommentVisibilityControl.SHOW_COMMENT),"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        showGiverNameTo:"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            this.visibilityStateMachine"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .getVisibilityTypesUnderVisibilityControl(CommentVisibilityControl.SHOW_GIVER_NAME),"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":123,"author":{"gitId":"-"},"content":"   * toggle the visibility table."},{"lineNumber":124,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  toggleVisibilityTable(): void {"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    this.isVisibilityTableExpanded \u003d !this.isVisibilityTableExpanded;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":130,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":131,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  triggerModelChange(field: string, data: any): void {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    this.modelChange.emit(Object.assign({}, this.model, { [field]: data }));"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  triggerModelChangeBatch(obj: {[key: string]: any}): void {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    this.modelChange.emit({"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      ...obj,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":147,"author":{"gitId":"-"},"content":"   * Triggers close comment box event."},{"lineNumber":148,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  triggerCloseCommentBoxEvent(): void {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    this.closeCommentBoxEvent.emit();"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   * Triggers save comment event."},{"lineNumber":155,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  triggerSaveCommentEvent(): void {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    this.saveCommentEvent.emit();"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Modifies visibility control of visibility type based on {@code isAllowed}."},{"lineNumber":162,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  modifyVisibilityControl("},{"lineNumber":164,"author":{"gitId":"-"},"content":"      isAllowed: boolean, visibilityType: CommentVisibilityType, visibilityControl: CommentVisibilityControl): void {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    if (isAllowed) {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      this.visibilityStateMachine.allowToSee(visibilityType, visibilityControl);"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      this.visibilityStateMachine.disallowToSee(visibilityType, visibilityControl);"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    this.triggerModelChangeBatch({"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      showCommentTo:"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          this.visibilityStateMachine.getVisibilityTypesUnderVisibilityControl(CommentVisibilityControl.SHOW_COMMENT),"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      showGiverNameTo:"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          this.visibilityStateMachine"},{"lineNumber":175,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(CommentVisibilityControl.SHOW_GIVER_NAME),"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":5,"-":174}},{"path":"src/web/app/components/datepicker/datepicker.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"\u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"  \u003cng-template #footer\u003e"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"    \u003cbutton class\u003d\"footer-button\" type\u003d\"button\""},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"            (click)\u003d\"selectTodayDate(timeDp)\"\u003e"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"      Today"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"    \u003c/button\u003e"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"  \u003cinput type\u003d\"text\" class\u003d\"form-control\" ngbDatepicker"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":"         [ngModel]\u003d\"date\" (ngModelChange)\u003d\"changeDate($event)\""},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"         [maxDate]\u003d\"maxDate\" [minDate]\u003d\"minDate\" #timeDp\u003d\"ngbDatepicker\" [disabled]\u003d\"disabled\" [footerTemplate]\u003d\"footer\"/\u003e"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"  \u003cdiv class\u003d\"input-group-append\" *ngIf\u003d\"!disabled\"\u003e"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    \u003cbutton class\u003d\"btn btn-light\" (click)\u003d\"timeDp.toggle()\" type\u003d\"button\"\u003e"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"      \u003ci class\u003d\"fas fa-calendar-alt\"\u003e\u003c/i\u003e"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"    \u003c/button\u003e"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"daongochieu2810":16}},{"path":"src/web/app/components/datepicker/datepicker.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":".footer-button {"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"  background: none !important;"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"  border: none;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"  float: right;"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"  padding: 20px !important;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"  color: cornflowerblue;"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"  text-decoration: none;"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"  cursor: pointer;"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":"  outline: none;"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":10}},{"path":"src/web/app/components/datepicker/datepicker.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import { NgbDatepickerModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"import { DatepickerComponent } from \u0027./datepicker.component\u0027;"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"describe(\u0027DatepickerComponent\u0027, () \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"  let component: DatepickerComponent;"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"  let fixture: ComponentFixture\u003cDatepickerComponent\u003e;"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"      declarations: [DatepickerComponent],"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"      imports: ["},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"        FormsModule,"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"        NgbDatepickerModule,"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"      ],"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    })"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"    .compileComponents();"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"  }));"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    fixture \u003d TestBed.createComponent(DatepickerComponent);"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"    fixture.detectChanges();"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"});"}],"authorContributionMap":{"daongochieu2810":30}},{"path":"src/web/app/components/datepicker/datepicker.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"import { NgbCalendar, NgbInputDatepicker } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import { DateFormat } from \u0027../session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":" * Datepicker with today button component"},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":"  selector: \u0027tm-datepicker\u0027,"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"  templateUrl: \u0027./datepicker.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"  styleUrls: [\u0027./datepicker.component.scss\u0027],"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"})"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"export class DatepickerComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"  @Input()"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"  date: DateFormat | undefined;"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"  @Input()"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"  disabled: boolean \u003d false;"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"  @Input()"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"  maxDate: DateFormat | undefined;"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"  @Input()"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"  minDate: DateFormat | undefined;"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"  @Output()"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"  dateChangeCallback: EventEmitter\u003cDateFormat\u003e \u003d new EventEmitter\u003cDateFormat\u003e();"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":"  constructor(public calendar: NgbCalendar) { }"},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"  ngOnInit(): void {"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":"  changeDate(date: DateFormat): void {"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"    this.dateChangeCallback.emit(date);"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"  selectTodayDate(dp: NgbInputDatepicker): void {"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":"    this.dateChangeCallback.emit(this.calendar.getToday());"},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"    dp.navigateTo(this.calendar.getToday());"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":43,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":44,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":44}},{"path":"src/web/app/components/datepicker/datepicker.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"daongochieu2810"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"import { NgbDatepickerModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"daongochieu2810"},"content":"import { DatepickerComponent } from \u0027./datepicker.component\u0027;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":7,"author":{"gitId":"daongochieu2810"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"daongochieu2810"},"content":" * Datepicker with today button module."},{"lineNumber":9,"author":{"gitId":"daongochieu2810"},"content":" */"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":"@NgModule({"},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"  declarations: [DatepickerComponent],"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"  imports: ["},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"    CommonModule,"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"    FormsModule,"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":"    NgbDatepickerModule,"},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"  ],"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"  exports: ["},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"    DatepickerComponent,"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"  ],"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":"})"},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"export class DatepickerModule { }"}],"authorContributionMap":{"daongochieu2810":21}},{"path":"src/web/app/components/error-report/error-report.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"container error-container\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2\u003eUh oh! Something went wrong.\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003chr\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-md-12\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \u003cp id\u003d\"error-message\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        The server returns the following error message: \"{{ errorMessage }}\"."},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"      \u003cdiv *ngIf\u003d\"errorReportEnabled\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cp\u003e"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"          We are sorry that this happened."},{"lineNumber":12,"author":{"gitId":"halfwhole"},"content":"          Please help us troubleshoot the problem by providing us some additional details using the form below:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"halfwhole"},"content":"      \u003cdiv *ngIf\u003d\"!errorReportEnabled\"\u003e"},{"lineNumber":16,"author":{"gitId":"halfwhole"},"content":"        \u003cp\u003e"},{"lineNumber":17,"author":{"gitId":"halfwhole"},"content":"          We are sorry that this happened."},{"lineNumber":18,"author":{"gitId":"halfwhole"},"content":"          It is likely that your browser could not create or access cookies for authorization."},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"          If cookies are disabled in your browser, please turn on your cookies before trying again."},{"lineNumber":20,"author":{"gitId":"halfwhole"},"content":"          Alternatively, you could also try emptying your browser\u0027s cache, or switching to a different browser."},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"        \u003c/p\u003e"},{"lineNumber":22,"author":{"gitId":"halfwhole"},"content":"        \u003cp\u003e"},{"lineNumber":23,"author":{"gitId":"halfwhole"},"content":"          For further support, please contact our email address at \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003e{{ supportEmail }}\u003c/a\u003e."},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"        \u003c/p\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":"  \u003cdiv id\u003d\"error-report\" *ngIf\u003d\"errorReportEnabled\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003clabel\u003eRequest ID:\u003c/label\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cbr\u003e\u003cem\u003eNote: This field is filled by the system and not modifiable.\u003c/em\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"text\" [(ngModel)]\u003d\"requestId\" class\u003d\"form-control\" [disabled]\u003d\"true\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003clabel\u003eSubject:\u003c/label\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cbr\u003e\u003cem\u003eNote: This field is pre-filled for convenience. Feel free to change it to suit your needs.\u003c/em\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cinput type\u003d\"text\" [(ngModel)]\u003d\"subject\" class\u003d\"form-control\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"form-group\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003clabel\u003eContent:\u003c/label\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003ctextarea [(ngModel)]\u003d\"content\" class\u003d\"form-control\" placeholder\u003d\"Tell us the steps you took that led you to this error page\"\u003e\u003c/textarea\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003cbutton class\u003d\"btn btn-success\" (click)\u003d\"sendErrorReport()\" [disabled]\u003d\"!sendButtonEnabled\" *ngIf\u003d\"!errorReportSubmitted\"\u003eSend Error Report\u003c/button\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"errorReportSubmitted\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      Your error report has been recorded. We will follow up with you in due course, usually, within 24 hours."},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"halfwhole":14,"-":34}},{"path":"src/web/app/components/error-report/error-report.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ErrorReportService } from \u0027../../../services/error-report.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { ErrorReportRequest } from \u0027../../../types/api-request\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Error report component."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027tm-error-report\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./error-report.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./error-report.component.scss\u0027],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class ErrorReportComponent implements OnInit {"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  errorMessage: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  subject: string \u003d \u0027User-submitted Error Report\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  content: string \u003d \u0027\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  requestId: string \u003d \u0027\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  sendButtonEnabled: boolean \u003d true;"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"  errorReportEnabled: boolean \u003d true;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  errorReportSubmitted: boolean \u003d false;"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"  csrfErrorMessages: string[] \u003d [\u0027Missing CSRF token.\u0027, \u0027Invalid CSRF token.\u0027];"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"  readonly supportEmail: string \u003d environment.supportEmail;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  constructor(private errorReportService: ErrorReportService,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"              private ngbActiveModal: NgbActiveModal,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService) {}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":34,"author":{"gitId":"halfwhole"},"content":"    if (this.csrfErrorMessages.includes(this.errorMessage)) {"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":"      this.errorReportEnabled \u003d false;"},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * Sends the error report."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  sendErrorReport(): void {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    const request: ErrorReportRequest \u003d {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      requestId: this.requestId,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      subject: this.subject,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      content: this.content,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"    this.sendButtonEnabled \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    this.errorReportService.sendErrorReport({ request }).subscribe(() \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      this.errorReportSubmitted \u003d true;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027Your error report has been successfully sent\u0027);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      this.ngbActiveModal.close();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }, (res: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      this.sendButtonEnabled \u003d true;"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(res.error.message);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":7,"-":53}},{"path":"src/web/app/components/loader-bar/loader-bar.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".loader-bar-visible {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  position: fixed;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  left: 0;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  opacity: 1;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  z-index: 2000;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/* stylelint-disable selector-pseudo-element-no-unknown */"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":":host ::ng-deep .progress {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  border-radius: 0;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  height: .25rem;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/* stylelint-enable */"}],"authorContributionMap":{"moziliar":1,"-":13}},{"path":"src/web/app/components/progress-bar/progress-bar.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  \u003cngb-progressbar type\u003d\"info\" height\u003d\"26px\" showValue\u003d\"true\" [value]\u003d\"progressPercentage\" [striped]\u003d\"true\" [animated]\u003d\"true\"\u003e\u003c/ngb-progressbar\u003e"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":3}},{"path":"src/web/app/components/progress-bar/progress-bar.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"import { NgbProgressbarModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import { ProgressBarComponent } from \u0027./progress-bar.component\u0027;"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"describe(\u0027ProgressBarComponent\u0027, () \u003d\u003e {"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"  let component: ProgressBarComponent;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"  let fixture: ComponentFixture\u003cProgressBarComponent\u003e;"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"      declarations: [ProgressBarComponent],"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"      imports: [NgbProgressbarModule],"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"    }).compileComponents();"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"  }));"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"    fixture \u003d TestBed.createComponent(ProgressBarComponent);"},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":"    fixture.detectChanges();"},{"lineNumber":20,"author":{"gitId":"moziliar"},"content":"  });"},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"});"}],"authorContributionMap":{"moziliar":25}},{"path":"src/web/app/components/progress-bar/progress-bar.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":" * Progress bar used to show download progress."},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":" */"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"@Component({"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"  selector: \u0027tm-progress-bar\u0027,"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"  templateUrl: \u0027./progress-bar.component.html\u0027,"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"})"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"export class ProgressBarComponent implements OnInit {"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"  progressPercentage: number \u003d 0;"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":"  constructor(private progressBarService: ProgressBarService) { }"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"  ngOnInit(): void {"},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"    this.getProgress();"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  getProgress(): void {"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"    this.progressBarService.progressPercentage.subscribe((progressPercentage: number) \u003d\u003e {"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"      this.progressPercentage \u003d progressPercentage;"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"    });"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":26}},{"path":"src/web/app/components/progress-bar/progress-bar.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import { NgbProgressbarModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"import { ProgressBarComponent } from \u0027./progress-bar.component\u0027;"},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":" * Module for progress bar used to show download progress."},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":" */"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"@NgModule({"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"  declarations: [ProgressBarComponent],"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"  imports: ["},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"    NgbProgressbarModule,"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"    CommonModule,"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"  ],"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":"  exports: ["},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"    ProgressBarComponent,"},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"  ],"},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"})"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":"export class ProgressBarModule { }"}],"authorContributionMap":{"moziliar":19}},{"path":"src/web/app/components/question-edit-form/feedback-path.pipe.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"daongochieu2810"},"content":"import { FeedbackParticipantType } from \u0027../../../types/api-output\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"describe(\u0027GiverTypeDescriptionPipe\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  const pipe: GiverTypeDescriptionPipe \u003d new GiverTypeDescriptionPipe();"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":10,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":11,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.SELF\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.SELF))"},{"lineNumber":13,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Feedback session creator (i.e., me)\u0027);"},{"lineNumber":14,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":15,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":16,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.STUDENTS\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.STUDENTS))"},{"lineNumber":18,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Students in this course\u0027);"},{"lineNumber":19,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":21,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.INSTRUCTORS\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Instructors in this course\u0027);"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS\u0027, () \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS))"},{"lineNumber":28,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Teams in this course\u0027);"},{"lineNumber":29,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":30,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":31,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM\u0027, () \u003d\u003e {"},{"lineNumber":32,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM))"},{"lineNumber":33,"author":{"gitId":"daongochieu2810"},"content":"        .toBe(\u0027Unknown\u0027);"},{"lineNumber":34,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform default\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(\u0027\u0027 as FeedbackParticipantType))"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Unknown\u0027);"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"});"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"describe(\u0027RecipientTypeDescriptionPipe\u0027, () \u003d\u003e {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  const pipe: RecipientTypeDescriptionPipe \u003d new RecipientTypeDescriptionPipe();"},{"lineNumber":45,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  it(\u0027create an instance\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    expect(pipe).toBeTruthy();"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":49,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":50,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.SELF\u0027, () \u003d\u003e {"},{"lineNumber":51,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.SELF))"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Giver (Self feedback)\u0027);"},{"lineNumber":53,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":55,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.STUDENTS\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.STUDENTS))"},{"lineNumber":57,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Other students in the course\u0027);"},{"lineNumber":58,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":59,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":60,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.INSTRUCTORS\u0027, () \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.INSTRUCTORS))"},{"lineNumber":62,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Instructors in the course\u0027);"},{"lineNumber":63,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":64,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":65,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS\u0027, () \u003d\u003e {"},{"lineNumber":66,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS))"},{"lineNumber":67,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Other teams in the course\u0027);"},{"lineNumber":68,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":70,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM))"},{"lineNumber":72,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team\");"},{"lineNumber":73,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM_MEMBERS\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM_MEMBERS))"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team members\");"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF))"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\"Giver\u0027s team members and Giver\");"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":84,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":85,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.NONE\u0027, () \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.NONE))"},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Nobody specific (For general class feedback)\u0027);"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform FeedbackParticipantType.TEAMS_EXCLUDING_SELF\u0027, () \u003d\u003e {"},{"lineNumber":91,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(FeedbackParticipantType.TEAMS_EXCLUDING_SELF))"},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"        .toBe(\u0027Unknown\u0027);"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":94,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":95,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027transform default\u0027, () \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"daongochieu2810"},"content":"    expect(pipe.transform(\u0027\u0027 as FeedbackParticipantType))"},{"lineNumber":97,"author":{"gitId":"daongochieu2810"},"content":"      .toBe(\u0027Unknown\u0027);"},{"lineNumber":98,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":99,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"daongochieu2810":85,"-":15}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".question-number-select {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  height: 32px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  width: auto;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  margin-left: 6px;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  margin-right: 5px;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":".background-color-light-blue {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  background-color: #EAEFF5;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":".padding-15px {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".question-basic-info {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  padding-left: 15px;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":".padding-left-15px {"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"  padding-left: 15px;"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":".background-color-light-green {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  background-color: #E0EEEE;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":".margin-top-15px {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  margin-top: 15px;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":".visibility-title,"},{"lineNumber":35,"author":{"gitId":"-"},"content":".feedback-path-title {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  color: #2AABD2;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":".background-color-white {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  background-color: white;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".visibility-message \u003e ul {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  margin-top: 5px;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  padding: 5px 25px;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":".visibility-message \u003e ul \u003e li {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  cursor: default;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":".background-color-warning {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  background-color: #FCF8E3;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":".collapse-caret {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  margin-right: 10px;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":".collapse-qn-description {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  font-weight: 300;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":".white-space-normal {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  white-space: normal;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":4,"-":67}},{"path":"src/web/app/components/question-edit-form/question-edit-form.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  QuestionEditDetailsFormModule,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-edit-details-form/question-edit-details-form.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { QuestionEditFormComponent } from \u0027./question-edit-form.component\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  VisibilityControlNamePipe,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  VisibilityTypeDescriptionPipe,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  VisibilityTypeNamePipe,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027./visibility-setting.pipe\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { mockTinyMceUuid } from \u0027../../../test-helpers/mock-tinymce-uuid\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"import { EXAMPLE_ESSAY_QUESTION_MODEL } from \u0027../../pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-data\u0027;"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"import { QuestionEditFormModel } from \u0027./question-edit-form-model\u0027;"},{"lineNumber":27,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"describe(\u0027QuestionEditFormComponent\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  let component: QuestionEditFormComponent;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionEditFormComponent\u003e;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  mockTinyMceUuid();"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"        QuestionEditFormComponent,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        GiverTypeDescriptionPipe,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        RecipientTypeDescriptionPipe,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        VisibilityControlNamePipe,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        VisibilityTypeDescriptionPipe,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        VisibilityTypeNamePipe,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":45,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FormsModule,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        RichTextEditorModule,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        QuestionEditDetailsFormModule,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        VisibilityMessagesModule,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        BrowserAnimationsModule,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        PanelChevronModule,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionEditFormComponent);"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027set up with EXAMPLE_ESSAY_QUESTION_MODEL\u0027, () \u003d\u003e {"},{"lineNumber":71,"author":{"gitId":"daongochieu2810"},"content":"    component.formModel \u003d EXAMPLE_ESSAY_QUESTION_MODEL;"},{"lineNumber":72,"author":{"gitId":"daongochieu2810"},"content":"    const model: QuestionEditFormModel \u003d component.model;"},{"lineNumber":73,"author":{"gitId":"daongochieu2810"},"content":"    expect(model).toBe(EXAMPLE_ESSAY_QUESTION_MODEL);"},{"lineNumber":74,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isUsingOtherFeedbackPath).toBeFalsy();"},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.commonVisibilitySettingName).toBeTruthy();"},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isUsingOtherVisibilitySetting).toBeFalsy();"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"    expect(component.isCustomFeedbackVisibilitySettingAllowed).toBeTruthy();"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":"  it(\u0027triggerModelChange with EXAMPLE_ESSAY_QUESTION_MODEL\u0027, () \u003d\u003e {"},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"    component.formModel \u003d EXAMPLE_ESSAY_QUESTION_MODEL;"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"    component.formModelChange.subscribe((data: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"      component.formModel \u003d data;"},{"lineNumber":84,"author":{"gitId":"daongochieu2810"},"content":"    });"},{"lineNumber":85,"author":{"gitId":"daongochieu2810"},"content":"    const testStr: string \u003d \u0027Hello World\u0027;"},{"lineNumber":86,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionNumber\u0027, 2);"},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionBrief\u0027, testStr);"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027questionDescription\u0027, testStr);"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":"    component.triggerModelChange(\u0027isQuestionHasResponses\u0027, true);"},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":91,"author":{"gitId":"daongochieu2810"},"content":"    const model: QuestionEditFormModel \u003d component.model;"},{"lineNumber":92,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionNumber).toBe(2);"},{"lineNumber":93,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionBrief).toBe(testStr);"},{"lineNumber":94,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.questionDescription).toBe(testStr);"},{"lineNumber":95,"author":{"gitId":"daongochieu2810"},"content":"    expect(model.isQuestionHasResponses).toBeTruthy();"},{"lineNumber":96,"author":{"gitId":"daongochieu2810"},"content":"  });"},{"lineNumber":97,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default view\u0027, () \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":101,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"daongochieu2810":31,"-":70}},{"path":"src/web/app/components/question-text-with-info/question-text-with-info.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { By } from \u0027@angular/platform-browser\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  QuestionAdditionalInfoModule,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"} from \u0027../question-types/question-additional-info/question-additional-info.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../teammates-router/teammates-router.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { QuestionTextWithInfoComponent } from \u0027./question-text-with-info.component\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"describe(\u0027QuestionTextWithInfoComponent\u0027, () \u003d\u003e {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  let component: QuestionTextWithInfoComponent;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cQuestionTextWithInfoComponent\u003e;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      declarations: [QuestionTextWithInfoComponent],"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":25,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        QuestionAdditionalInfoModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(QuestionTextWithInfoComponent);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  const textQuestionDetails: FeedbackTextQuestionDetails \u003d {"},{"lineNumber":40,"author":{"gitId":"moziliar"},"content":"    shouldAllowRichText: true,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    questionText: \u0027Text question details\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    recommendedLength: 100,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  const mcqQuestionDetails: FeedbackMcqQuestionDetails \u003d {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    questionText: \u0027MCQ question details\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    hasAssignedWeights: false,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    mcqWeights: [],"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mcqOtherWeight: 0,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    numOfMcqChoices: 2,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    mcqChoices: [\u0027a\u0027, \u0027b\u0027],"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    otherEnabled: false,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    generateOptionsFor: FeedbackParticipantType.NONE,"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should not show control link and question details for TEXT questions\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d textQuestionDetails;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    const questionDetailControlLink: any \u003d fixture.debugElement.query(By.css(\u0027a\u0027));"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    const infoWrapper: any \u003d fixture.debugElement.query(By.css(\u0027div\u0027));"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(questionDetailControlLink).toBeNull();"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    expect(infoWrapper).toBeNull();"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  it(\u0027should show control link when question type is not TEXT\u0027, () \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d mcqQuestionDetails;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  it(\u0027should show question detail when click control link\u0027, () \u003d\u003e {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    component.questionDetails \u003d mcqQuestionDetails;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"    const questionDetailControlLink: any \u003d fixture.debugElement.query(By.css(\u0027a\u0027));"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"    questionDetailControlLink.nativeElement.click();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":93,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"moziliar":1,"-":92}},{"path":"src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv class\u003d\"plain-text-area\" *ngIf\u003d\"!questionDetails.shouldAllowRichText\"\u003e"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  \u003ctextarea [ngModel]\u003d\"responseDetails.answer\" (ngModelChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [disabled]\u003d\"isDisabled\"\u003e\u003c/textarea\u003e"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"\u003ctm-rich-text-editor *ngIf\u003d\"questionDetails.shouldAllowRichText\" [richText]\u003d\"responseDetails.answer\" (richTextChange)\u003d\"triggerResponseDetailsChange(\u0027answer\u0027, $event)\" [isDisabled]\u003d\"isDisabled\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"margin-top-7px text-secondary text-right\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"recommended-length\" *ngIf\u003d\"questionDetails.recommendedLength\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    Recommended length for the answer: {{ questionDetails.recommendedLength }} words"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"response-length\" *ngIf\u003d\"questionDetails.recommendedLength\" [ngClass]\u003d\"{\u0027text-success\u0027: isWordCountWithinRecommendedBound }\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Response length: {{ wordCount }} words"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":4,"-":8}},{"path":"src/web/app/components/question-types/question-edit-answer-form/text-question-edit-answer-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-top-7px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-top: 7px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":".plain-text-area {"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"  height: 120px;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":".plain-text-area \u003e textarea {"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"  box-sizing: border-box;"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"  width: 100%;"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"  height: 100%;"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":10,"-":3}},{"path":"src/web/app/components/question-types/question-edit-details-form/constsum-options-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbr\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"options-section\" class\u003d\"col-sm-9\" cdkDropList (cdkDropListDropped)\u003d\"onConstsumOptionDropped($event)\" [cdkDropListDisabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cdiv class\u003d\"row margin-bottom-20px padding-left-12px\" *ngFor\u003d\"let option of model.constSumOptions; let i \u003d index;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        trackBy: trackConstsumOption\" cdkDrag cdkDragLockAxis\u003d\"y\"\u003e"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv cdkDragHandle\u003e"},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":"            \u003cspan class\u003d\"input-group-addon\"\u003e\u0026#8597; \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv class\u003d\"flex-grow-1\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003ctm-constsum-options-field (elementDeleted)\u003d\"onConstsumOptionDeleted(i)\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                  [isEditable]\u003d\"isEditable\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                  (textChange)\u003d\"onConstsumOptionEntered($event, i)\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                                  [text]\u003d\"option\"\u003e\u003c/tm-constsum-options-field\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-sm-9\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-add-option\" class\u003d\"btn btn-primary\" name\u003d\"button\" ngDefaultControl"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"!isEditable\" (click)\u003d\"increaseNumberOfConstsumOptions()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e add more options"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cb\u003eTotal Points to distribute:\u003c/b\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-11 offset-1 margin-top-10px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"total-points-radio\" class\u003d\"form-check-input\" type\u003d\"radio\" [ngModel]\u003d\"model.pointsPerOption\" [value]\u003d\"false\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                   (ngModelChange)\u003d\"triggerModelChange(\u0027pointsPerOption\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"total-points\" type\u003d\"number\" class\u003d\"form-control\" min\u003d\"1\" step\u003d\"1\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                   [ngModel]\u003d\"!model.pointsPerOption ? model.points : \u0027\u0027\" (ngModelChange)\u003d\"triggerModelChange(\u0027points\u0027, $event)\" [disabled]\u003d\"!isEditable || model.pointsPerOption\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Respondents will have to distribute the total points specified here among the options, e.g. if you specify 100 points here and there are 3 options, respondents will have to distribute 100 points among 3 options.\"\u003ein total\u003c/b\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"per-option-points-radio\" class\u003d\"form-check-input\" type\u003d\"radio\" [ngModel]\u003d\"model.pointsPerOption\" [value]\u003d\"true\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                   (ngModelChange)\u003d\"triggerModelChange(\u0027pointsPerOption\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cinput id\u003d\"per-option-points\" type\u003d\"number\" class\u003d\"form-control\" min\u003d\"1\" step\u003d\"1\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                   [ngModel]\u003d\"model.pointsPerOption ? model.points : \u0027\u0027\" (ngModelChange)\u003d\"triggerModelChange(\u0027points\u0027, $event)\" [disabled]\u003d\"!isEditable || !model.pointsPerOption\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"The number of points to distribute will vary based on the number of options, e.g. if you specify 100 points here and there are 3 options, the total number of points to distribute among 3 options will be 300 (i.e. 100 x 3).\"\u003eX (number of options)\u003c/b\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 padding-left-33px margin-top-10px\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cinput id\u003d\"uneven-distribution-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                 [ngModel]\u003d\"model.forceUnevenDistribution\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                 (ngModelChange)\u003d\"onForceUnevenDistribution($event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cselect id\u003d\"uneven-distribution-dropdown\" class\u003d\"form-control\" [ngModel]\u003d\"model.distributePointsFor\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                  [disabled]\u003d\"!isEditable || model.distributePointsFor \u003d\u003d\u003d FeedbackConstantSumDistributePointsType.NONE\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  (ngModelChange)\u003d\"triggerModelChange(\u0027distributePointsFor\u0027, $event)\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003coption [value]\u003d\"FeedbackConstantSumDistributePointsType.DISTRIBUTE_ALL_UNEVENLY\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              Every option"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003c/option\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003coption [value]\u003d\"FeedbackConstantSumDistributePointsType.DISTRIBUTE_SOME_UNEVENLY\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              At least some options"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/option\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/select\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"          \u003cb class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"This determines whether a giver can distribute the same number of points to multiple recipients\"\u003eto receive a different number of points\u003c/b\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003c/label\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":5,"-":69}},{"path":"src/web/app/components/question-types/question-edit-details-form/constsum-options-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-top-10px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-top: 10px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"AdithyaNarayan"},"content":".margin-bottom-20px {"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 20px;"},{"lineNumber":7,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":".padding-left-12px {"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"  padding-left: 12px;"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":13,"author":{"gitId":"AdithyaNarayan"},"content":".row {"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":"  align-items: center;"},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":".input-group-addon {"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"  cursor: move;"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"  resize: both;"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  padding: .375rem .75rem;"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"  font-weight: 400;"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"  line-height: 1.5;"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"  color: #495057;"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"  text-align: center;"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"  background-color: #E9ECEF;"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"  border: 1px solid #CED4DA;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":23,"-":5}},{"path":"src/web/app/components/question-types/question-edit-details-form/rank-options-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbr\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"options-section\" class\u003d\"col-sm-9\" cdkDropList (cdkDropListDropped)\u003d\"onRankOptionDropped($event)\" [cdkDropListDisabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cdiv class\u003d\"row margin-bottom-20px padding-left-12px\" *ngFor\u003d\"let num of model.options; let i \u003d index;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        trackBy: trackRankOption\" cdkDrag cdkDragLockAxis\u003d\"y\"\u003e"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv cdkDragHandle\u003e"},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":"            \u003cspan class\u003d\"input-group-addon\"\u003e\u0026#8597; \u003c/span\u003e"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003cdiv class\u003d\"flex-grow-1\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003ctm-rank-options-field (elementDeleted)\u003d\"onRankOptionDeleted($event)\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                                  [isEditable]\u003d\"isEditable\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                                  [index]\u003d\"i\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                                  [numberOfRankChoices]\u003d\"model.options.length\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                                  (rankOptionText)\u003d\"onRankOptionEntered($event, i)\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                                  [text]\u003d\"model.options[i]\"\u003e\u003c/tm-rank-options-field\u003e"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-sm-9\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-add-option\" class\u003d\"btn btn-primary\" name\u003d\"button\" ngDefaultControl"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                [disabled]\u003d\"!isEditable\" (click)\u003d\"increaseNumberOfRankOptions()\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e add more options"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/button\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003cbr /\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-sm-6\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003clabel class\u003d\"form-check-label margin-bottom-20px margin-right-5px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"duplicate-rank-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\"  [ngModel]\u003d\"model.areDuplicatesAllowed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"         (ngModelChange)\u003d\"triggerModelChange(\u0027areDuplicatesAllowed\u0027, $event)\" [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cb\u003eAllow response giver to give the same rank to multiple options\u003c/b\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/label\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-bottom-20px margin-right-5px\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"form-check-label col-sm-9\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cinput id\u003d\"min-options-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [disabled]\u003d\"!isEditable\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"               [ngModel]\u003d\"isMinOptionsToBeRankedEnabled\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"               (ngModelChange)\u003d\"triggerMinOptionsToBeRankedChange($event)\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cb\u003eMinimum number of options a respondent must rank\u003c/b\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u003c/label\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"min-options\" type\u003d\"number\" class\u003d\"form-control col-sm-3\" [disabled]\u003d\"!isMinOptionsToBeRankedEnabled || !isEditable\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"displayValueForMinOptionsToBeRanked\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerModelChange(\u0027minOptionsToBeRanked\u0027, $event)\" min\u003d\"1\" max\u003d\"{{ maxMinOptionsValue }}\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-right-5px\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003clabel class\u003d\"form-check-label col-sm-9\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cinput id\u003d\"max-options-checkbox\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [disabled]\u003d\"!isEditable\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"               [ngModel]\u003d\"isMaxOptionsToBeRankedEnabled\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"               (ngModelChange)\u003d\"triggerMaxOptionsToBeRankedChange($event)\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cb\u003eMaximum number of options a respondent can rank\u003c/b\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/label\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003cinput id\u003d\"max-options\" type\u003d\"number\" class\u003d\"form-control col-sm-3\" [disabled]\u003d\"!isMaxOptionsToBeRankedEnabled || !isEditable\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"             [ngModel]\u003d\"displayValueForMaxOptionsToBeRanked\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"             (ngModelChange)\u003d\"triggerModelChange(\u0027maxOptionsToBeRanked\u0027, $event)\" [min]\u003d\"isMinOptionsToBeRankedEnabled ? model.minOptionsToBeRanked : 1\" max\u003d\"{{model.options.length}}\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":6,"-":56}},{"path":"src/web/app/components/question-types/question-edit-details-form/rank-options-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-bottom-20px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".margin-right-5px {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  margin-right: 5px;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":".padding-left-12px {"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"  padding-left: 12px;"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"}"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":".row {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":".input-group-addon {"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"  cursor: move;"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"  resize: both;"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  padding: .375rem .75rem;"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"  font-weight: 400;"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"  line-height: 1.5;"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"  color: #495057;"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"  text-align: center;"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"  background-color: #E9ECEF;"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"  border: 1px solid #CED4DA;"},{"lineNumber":28,"author":{"gitId":"AdithyaNarayan"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":17,"-":11}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv class\u003d\"row padding-15px\"\u003e"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  \u003cdiv class\u003d\"col-md-10 allow-rich-text\"\u003e"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"    \u003clabel\u003e"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"      \u003cinput type\u003d\"checkbox\""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"             [checked]\u003d\"model.shouldAllowRichText\""},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"             (click)\u003d\"triggerModelChange(\u0027shouldAllowRichText\u0027, $event.target.checked)\""},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"             [disabled]\u003d\"!isEditable\"\u003e"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"      \u003ca\u003e Allow rich-text formatting (e.g., bold text, links, bullet lists, colors, etc.) in the answers\u003c/a\u003e"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"    \u003c/label\u003e"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"  \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12 question-recommended-length\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    [Optional]"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"The recommended length is shown to the respondent but not enforced\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      Recommended length"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/span\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    for the response:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cinput id\u003d\"recommended-length\" type\u003d\"number\" class\u003d\"form-control\" [ngModel]\u003d\"model.recommendedLength\" (ngModelChange)\u003d\"triggerModelChange(\u0027recommendedLength\u0027, $event)\" [disabled]\u003d\"!isEditable\" min\u003d\"1\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    words"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":10,"-":10}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":".allow-rich-text {"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"  color: gray;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".question-recommended-length {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  color: gray;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":".question-recommended-length \u003e input {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  display: inline;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  width: 80px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":4,"-":8}},{"path":"src/web/app/components/question-types/question-edit-details-form/text-question-edit-details-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackTextQuestionDetails } from \u0027../../../../types/api-output\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { DEFAULT_TEXT_QUESTION_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { QuestionEditDetailsFormComponent } from \u0027./question-edit-details-form.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Question details edit form component for text question."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  selector: \u0027tm-text-question-edit-details-form\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./text-question-edit-details-form.component.html\u0027,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./text-question-edit-details-form.component.scss\u0027],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"})"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class TextQuestionEditDetailsFormComponent extends QuestionEditDetailsFormComponent\u003cFeedbackTextQuestionDetails\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    implements OnInit {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    super(DEFAULT_TEXT_QUESTION_DETAILS());"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  ngOnInit(): void {}"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":1,"-":21}},{"path":"src/web/app/components/question-types/question-statistics/question-statistics-calculation/rank-recipients-question-statistics-calculation.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Directive } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { QuestionStatistics } from \u0027../question-statistics\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Class to calculate stats for rank recipients question."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Directive()"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// tslint:disable-next-line:directive-class-suffix"},{"lineNumber":14,"author":{"gitId":"-"},"content":"export class RankRecipientsQuestionStatisticsCalculation"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    extends QuestionStatistics\u003cFeedbackRankRecipientsQuestionDetails, FeedbackRankRecipientsResponseDetails\u003e {"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  emailToTeamName: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  emailToName: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  ranksReceivedPerOption: Record\u003cstring, number[]\u003e \u003d {};"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  selfRankPerOption: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  rankPerOption: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  rankPerOptionExcludeSelf: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"  rankPerOptionInTeam: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"  rankPerOptionInTeamExcludeSelf: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor(question: FeedbackRankRecipientsQuestionDetails) {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    super(question);"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  calculateStatistics(): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.emailToTeamName \u003d {};"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.emailToName \u003d {};"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    this.ranksReceivedPerOption \u003d {};"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.selfRankPerOption \u003d {};"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.rankPerOption \u003d {};"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    this.rankPerOptionExcludeSelf \u003d {};"},{"lineNumber":37,"author":{"gitId":"AdithyaNarayan"},"content":"    this.rankPerOptionInTeam \u003d {};"},{"lineNumber":38,"author":{"gitId":"AdithyaNarayan"},"content":"    this.rankPerOptionInTeamExcludeSelf \u003d {};"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    const ranksReceivedPerOptionExcludeSelf: Record\u003cstring, number[]\u003e \u003d {};"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    const isRecipientTeam: boolean \u003d this.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        || this.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS_EXCLUDING_SELF;"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"AdithyaNarayan"},"content":"    const isRecipientOwnTeamMember: boolean \u003d this.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS"},{"lineNumber":46,"author":{"gitId":"AdithyaNarayan"},"content":"        || this.recipientType \u003d\u003d\u003d FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF;"},{"lineNumber":47,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":48,"author":{"gitId":"AdithyaNarayan"},"content":"    const teamMembersPerTeam: Record\u003cstring, string[]\u003e \u003d {};"},{"lineNumber":49,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    for (const response of this.responses) {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"      const identifier: string \u003d isRecipientTeam ? response.recipient : (response.recipientEmail || response.recipient);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"      this.ranksReceivedPerOption[identifier] \u003d this.ranksReceivedPerOption[identifier] || [];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      this.ranksReceivedPerOption[identifier].push(response.responseDetails.answer);"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"      if (response.recipient \u003d\u003d\u003d response.giver) {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.selfRankPerOption[identifier] \u003d response.responseDetails.answer;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ranksReceivedPerOptionExcludeSelf[identifier] \u003d ranksReceivedPerOptionExcludeSelf[identifier] || [];"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ranksReceivedPerOptionExcludeSelf[identifier].push(response.responseDetails.answer);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"      if (!this.emailToTeamName[identifier]) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.emailToTeamName[identifier] \u003d isRecipientTeam ? \u0027\u0027 : response.recipientTeam;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      if (!this.emailToName[identifier]) {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.emailToName[identifier] \u003d response.recipient;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":69,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":70,"author":{"gitId":"AdithyaNarayan"},"content":"      if (isRecipientOwnTeamMember) {"},{"lineNumber":71,"author":{"gitId":"AdithyaNarayan"},"content":"        teamMembersPerTeam[response.recipientTeam] \u003d teamMembersPerTeam[response.recipientTeam] || [];"},{"lineNumber":72,"author":{"gitId":"AdithyaNarayan"},"content":"        if (!teamMembersPerTeam[response.recipientTeam].includes(identifier)) {"},{"lineNumber":73,"author":{"gitId":"AdithyaNarayan"},"content":"          teamMembersPerTeam[response.recipientTeam].push(identifier);"},{"lineNumber":74,"author":{"gitId":"AdithyaNarayan"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"AdithyaNarayan"},"content":"      }"},{"lineNumber":76,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"    for (const option of Object.keys(this.ranksReceivedPerOption)) {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      this.ranksReceivedPerOption[option].sort((a: number, b: number) \u003d\u003e a - b);"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    this.rankPerOption \u003d this.calculateRankPerOption(this.ranksReceivedPerOption);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    this.rankPerOptionExcludeSelf \u003d this.calculateRankPerOption(ranksReceivedPerOptionExcludeSelf);"},{"lineNumber":84,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":85,"author":{"gitId":"AdithyaNarayan"},"content":"    if (isRecipientOwnTeamMember) {"},{"lineNumber":86,"author":{"gitId":"AdithyaNarayan"},"content":"      this.rankPerOptionInTeam \u003d this.calculateRankPerOptionInTeam(this.ranksReceivedPerOption, teamMembersPerTeam);"},{"lineNumber":87,"author":{"gitId":"AdithyaNarayan"},"content":"      this.rankPerOptionInTeamExcludeSelf \u003d this.calculateRankPerOptionInTeam(ranksReceivedPerOptionExcludeSelf,"},{"lineNumber":88,"author":{"gitId":"AdithyaNarayan"},"content":"        teamMembersPerTeam);"},{"lineNumber":89,"author":{"gitId":"AdithyaNarayan"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  private calculateRankPerOption(ranksReceivedPerOption: Record\u003cstring, number[]\u003e): Record\u003cstring, number\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    const averageRanksReceivedPerOptions: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    for (const option of Object.keys(ranksReceivedPerOption)) {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      const answers: number[] \u003d ranksReceivedPerOption[option];"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      const sum: number \u003d answers.reduce((a: number, b: number) \u003d\u003e a + b, 0);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      if (answers.length \u003d\u003d\u003d 0) {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // skip recipient which has no answer collected"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      averageRanksReceivedPerOptions[option] \u003d answers.length \u003d\u003d\u003d 0 ? 0 : sum / answers.length;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    const optionsOrderedByRank: string[] \u003d Object.keys(averageRanksReceivedPerOptions).sort((a: string, b: string) \u003d\u003e {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      return averageRanksReceivedPerOptions[a] - averageRanksReceivedPerOptions[b];"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const rankPerOption: Record\u003cstring, number\u003e \u003d {};"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c optionsOrderedByRank.length; i +\u003d 1) {"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      const option: string \u003d optionsOrderedByRank[i];"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      if (i \u003d\u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        rankPerOption[option] \u003d 1;"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      const rank: number \u003d averageRanksReceivedPerOptions[option];"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      const optionBefore: string \u003d optionsOrderedByRank[i - 1];"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      const rankBefore: number \u003d averageRanksReceivedPerOptions[optionBefore];"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      if (rank \u003d\u003d\u003d rankBefore) {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // If the average rank is the same, the overall rank will be the same"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        rankPerOption[option] \u003d rankPerOption[optionBefore];"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Otherwise, the rank is as determined by the order"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        rankPerOption[option] \u003d i + 1;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"    return rankPerOption;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"AdithyaNarayan"},"content":"  private calculateRankPerOptionInTeam(ranksReceivedPerOption: Record\u003cstring, number[]\u003e,"},{"lineNumber":133,"author":{"gitId":"AdithyaNarayan"},"content":"    teamMembersPerTeam: Record\u003cstring, string[]\u003e): Record\u003cstring, number\u003e {"},{"lineNumber":134,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":135,"author":{"gitId":"AdithyaNarayan"},"content":"    const teams: string[] \u003d Object.keys(teamMembersPerTeam);"},{"lineNumber":136,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":137,"author":{"gitId":"AdithyaNarayan"},"content":"    return teams"},{"lineNumber":138,"author":{"gitId":"AdithyaNarayan"},"content":"        .map((team: string) \u003d\u003e teamMembersPerTeam[team])"},{"lineNumber":139,"author":{"gitId":"AdithyaNarayan"},"content":"        .map((teamMembers: string[]) \u003d\u003e teamMembers"},{"lineNumber":140,"author":{"gitId":"AdithyaNarayan"},"content":"            .reduce((ranksReceivedPerOptionInTeam: Record\u003cstring, number[]\u003e, teamMember: string) \u003d\u003e {"},{"lineNumber":141,"author":{"gitId":"AdithyaNarayan"},"content":"              ranksReceivedPerOptionInTeam[teamMember] \u003d ranksReceivedPerOption[teamMember] || [];"},{"lineNumber":142,"author":{"gitId":"AdithyaNarayan"},"content":"              return ranksReceivedPerOptionInTeam;"},{"lineNumber":143,"author":{"gitId":"AdithyaNarayan"},"content":"            }, {}))"},{"lineNumber":144,"author":{"gitId":"AdithyaNarayan"},"content":"        .map(this.calculateRankPerOption)"},{"lineNumber":145,"author":{"gitId":"AdithyaNarayan"},"content":"        .reduce((rankPerOptionInTeam: Record\u003cstring, number\u003e, rankPerOptionInEachTeam: Record\u003cstring, number\u003e) \u003d\u003e {"},{"lineNumber":146,"author":{"gitId":"AdithyaNarayan"},"content":"          return { ...rankPerOptionInTeam, ...rankPerOptionInEachTeam };"},{"lineNumber":147,"author":{"gitId":"AdithyaNarayan"},"content":"        }, { });"},{"lineNumber":148,"author":{"gitId":"AdithyaNarayan"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":42,"-":108}},{"path":"src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"AdithyaNarayan"},"content":"import {"},{"lineNumber":3,"author":{"gitId":"AdithyaNarayan"},"content":"  FeedbackParticipantType,"},{"lineNumber":4,"author":{"gitId":"AdithyaNarayan"},"content":"  FeedbackQuestionType,"},{"lineNumber":5,"author":{"gitId":"AdithyaNarayan"},"content":"  FeedbackRankRecipientsResponseDetails,"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SortableTableModule } from \u0027../../sortable-table/sortable-table.module\u0027;"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":"import { Response } from \u0027./question-statistics\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { RankRecipientsQuestionStatisticsComponent } from \u0027./rank-recipients-question-statistics.component\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"describe(\u0027RankRecipientsQuestionStatisticsComponent\u0027, () \u003d\u003e {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  let component: RankRecipientsQuestionStatisticsComponent;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cRankRecipientsQuestionStatisticsComponent\u003e;"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"  const testResponses: Response\u003cFeedbackRankRecipientsResponseDetails\u003e[] \u003d ["},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027alice\u0027,"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 1\u0027,"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027bob\u0027,"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":24,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 1,"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":28,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":29,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027bob\u0027,"},{"lineNumber":30,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 1\u0027,"},{"lineNumber":31,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":32,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027alice\u0027,"},{"lineNumber":33,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":34,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":35,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":36,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 2,"},{"lineNumber":37,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":38,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":39,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":40,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":41,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027charlie\u0027,"},{"lineNumber":42,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 2\u0027,"},{"lineNumber":43,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":44,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027delta\u0027,"},{"lineNumber":45,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":46,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":47,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":48,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 2,"},{"lineNumber":49,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":50,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":51,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":52,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":53,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027delta\u0027,"},{"lineNumber":54,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 2\u0027,"},{"lineNumber":55,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":56,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027charlie\u0027,"},{"lineNumber":57,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":58,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":59,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":60,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 1,"},{"lineNumber":61,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":62,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":63,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":64,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":65,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027charlie\u0027,"},{"lineNumber":66,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 2\u0027,"},{"lineNumber":67,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":68,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027charlie\u0027,"},{"lineNumber":69,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":70,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":71,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":72,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 3,"},{"lineNumber":73,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":74,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":75,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":76,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":77,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027delta\u0027,"},{"lineNumber":78,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 2\u0027,"},{"lineNumber":79,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":80,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027delta\u0027,"},{"lineNumber":81,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":82,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":83,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":84,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 1,"},{"lineNumber":85,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":86,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":87,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":88,"author":{"gitId":"AdithyaNarayan"},"content":"    {"},{"lineNumber":89,"author":{"gitId":"AdithyaNarayan"},"content":"      giver: \u0027elliot\u0027,"},{"lineNumber":90,"author":{"gitId":"AdithyaNarayan"},"content":"      giverTeam: \u0027Team 2\u0027,"},{"lineNumber":91,"author":{"gitId":"AdithyaNarayan"},"content":"      giverSection: \u0027Tutorial 1\u0027,"},{"lineNumber":92,"author":{"gitId":"AdithyaNarayan"},"content":"      recipient: \u0027charlie\u0027,"},{"lineNumber":93,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":94,"author":{"gitId":"AdithyaNarayan"},"content":"      recipientSection: \u0027Tutorial 1\u0027,"},{"lineNumber":95,"author":{"gitId":"AdithyaNarayan"},"content":"      responseDetails: {"},{"lineNumber":96,"author":{"gitId":"AdithyaNarayan"},"content":"        answer: 1,"},{"lineNumber":97,"author":{"gitId":"AdithyaNarayan"},"content":"        questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":98,"author":{"gitId":"AdithyaNarayan"},"content":"      },"},{"lineNumber":99,"author":{"gitId":"AdithyaNarayan"},"content":"    },"},{"lineNumber":100,"author":{"gitId":"AdithyaNarayan"},"content":"  ];"},{"lineNumber":101,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      declarations: [RankRecipientsQuestionStatisticsComponent],"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      imports: [SortableTableModule],"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(RankRecipientsQuestionStatisticsComponent);"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":119,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":120,"author":{"gitId":"AdithyaNarayan"},"content":"  it(\u0027should not calculate team rank if recipient type is invalid\u0027, () \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"AdithyaNarayan"},"content":"    component.responses \u003d testResponses;"},{"lineNumber":122,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":123,"author":{"gitId":"AdithyaNarayan"},"content":"    // ranks inside teams are meaningless when ranking across teams"},{"lineNumber":124,"author":{"gitId":"AdithyaNarayan"},"content":"    component.recipientType \u003d FeedbackParticipantType.TEAMS;"},{"lineNumber":125,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":126,"author":{"gitId":"AdithyaNarayan"},"content":"    component.calculateStatistics();"},{"lineNumber":127,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":128,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOptionInTeam).toMatchObject({});"},{"lineNumber":129,"author":{"gitId":"AdithyaNarayan"},"content":"  });"},{"lineNumber":130,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":131,"author":{"gitId":"AdithyaNarayan"},"content":"  it(\u0027should rank correctly within team when recipient type is valid\u0027, () \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"AdithyaNarayan"},"content":"    component.responses \u003d testResponses;"},{"lineNumber":133,"author":{"gitId":"AdithyaNarayan"},"content":"    component.recipientType \u003d FeedbackParticipantType.OWN_TEAM_MEMBERS;"},{"lineNumber":134,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":135,"author":{"gitId":"AdithyaNarayan"},"content":"    const bob: string \u003d \u0027bob\u0027;"},{"lineNumber":136,"author":{"gitId":"AdithyaNarayan"},"content":"    const charlie: string \u003d \u0027charlie\u0027;"},{"lineNumber":137,"author":{"gitId":"AdithyaNarayan"},"content":"    const delta: string \u003d \u0027delta\u0027;"},{"lineNumber":138,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":139,"author":{"gitId":"AdithyaNarayan"},"content":"    component.calculateStatistics();"},{"lineNumber":140,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":141,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOption[delta]).toBe(2);"},{"lineNumber":142,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOptionInTeam[bob]).toBe(1);"},{"lineNumber":143,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOptionInTeam[charlie]).toBe(2);"},{"lineNumber":144,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOptionInTeam[delta]).toBe(1);"},{"lineNumber":145,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(component.rankPerOptionInTeamExcludeSelf[delta]).toBe(2);"},{"lineNumber":146,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":147,"author":{"gitId":"AdithyaNarayan"},"content":"  });"},{"lineNumber":148,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"AdithyaNarayan":123,"-":26}},{"path":"src/web/app/components/question-types/question-statistics/rank-recipients-question-statistics.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnChanges, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS } from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SortBy } from \u0027../../../../types/sort-properties\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { ColumnData, SortableTableCellData } from \u0027../../sortable-table/sortable-table.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  RankRecipientsQuestionStatisticsCalculation,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"} from \u0027./question-statistics-calculation/rank-recipients-question-statistics-calculation\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Statistics for rank recipients questions."},{"lineNumber":11,"author":{"gitId":"-"},"content":" */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  selector: \u0027tm-rank-recipients-question-statistics\u0027,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./rank-recipients-question-statistics.component.html\u0027,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./rank-recipients-question-statistics.component.scss\u0027],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"})"},{"lineNumber":17,"author":{"gitId":"-"},"content":"export class RankRecipientsQuestionStatisticsComponent extends RankRecipientsQuestionStatisticsCalculation"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    implements OnInit, OnChanges {"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"  columnsData: ColumnData[] \u003d [];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  rowsData: SortableTableCellData[][] \u003d [];"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"  constructor() {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    super(DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS());"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    this.calculateStatistics();"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    this.getTableData();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"  ngOnChanges(): void {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    this.calculateStatistics();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    this.getTableData();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  private getTableData(): void {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    this.columnsData \u003d ["},{"lineNumber":42,"author":{"gitId":"-"},"content":"      { header: \u0027Team\u0027, sortBy: SortBy.RANK_RECIPIENTS_TEAM },"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      { header: \u0027Recipient\u0027, sortBy: SortBy.RANK_RECIPIENTS_RECIPIENT },"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      { header: \u0027Ranks Received\u0027 },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      { header: \u0027Self Rank\u0027, sortBy: SortBy.RANK_RECIPIENTS_SELF_RANK },"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      { header: \u0027Overall Rank\u0027, sortBy: SortBy.RANK_RECIPIENTS_OVERALL_RANK },"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      { header: \u0027Overall Rank Excluding Self\u0027, sortBy: SortBy.RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF },"},{"lineNumber":48,"author":{"gitId":"AdithyaNarayan"},"content":"      { header: \u0027Team Rank\u0027, sortBy: SortBy.RANK_RECIPIENTS_TEAM_RANK },"},{"lineNumber":49,"author":{"gitId":"AdithyaNarayan"},"content":"      { header: \u0027Team Rank Excluding Self\u0027, sortBy: SortBy.RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF },"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    ];"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    this.rowsData \u003d Object.keys(this.ranksReceivedPerOption).map((key: string) \u003d\u003e {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      return ["},{"lineNumber":54,"author":{"gitId":"-"},"content":"        { value: this.emailToTeamName[key] },"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        { value: this.emailToName[key] },"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        { value: this.ranksReceivedPerOption[key].join(\u0027, \u0027) },"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        { value: this.selfRankPerOption[key] || \u0027-\u0027 },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        { value: this.rankPerOption[key] || \u0027-\u0027 },"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        { value: this.rankPerOptionExcludeSelf[key] || \u0027-\u0027 },"},{"lineNumber":60,"author":{"gitId":"AdithyaNarayan"},"content":"        { value: this.rankPerOptionInTeam[key] || \u0027-\u0027 },"},{"lineNumber":61,"author":{"gitId":"AdithyaNarayan"},"content":"        { value: this.rankPerOptionInTeamExcludeSelf[key] || \u0027-\u0027 },"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":4,"-":62}},{"path":"src/web/app/components/session-edit-form/session-edit-form.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card card-plain\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"close-header\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"closeEditFormHandler()\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003ch5 class\u003d\"text-center\"\u003eCreate new\u003c/h5\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-9 col-md-7\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cselect id\u003d\"session-type\" class\u003d\"form-control\" [ngModel]\u003d\"model.templateSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027templateSessionName\u0027, $event)\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"              \u003coption *ngFor\u003d\"let templateSession of templateSessions\" [ngValue]\u003d\"templateSession.name\"\u003e{{ templateSession.name }}\u003c/option\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/select\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-1 col-md-1\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003ca type\u003d\"button\" class\u003d\"btn btn-link\" tmRouterLink\u003d\"/web/instructor/help\" [queryParams]\u003d\"{ questionId: \u0027sessions\u0027, section: \u0027sessions\u0027 }\" target\u003d\"_blank\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/a\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center align-items-center mt-1\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-3\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003ch5 class\u003d\"text-md-right\"\u003eOr: \u003c/h5\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-9 text-md-left\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-copy-session\" type\u003d\"button\" class\u003d\"btn btn-info\" (click)\u003d\"copyOthersHandler()\"\u003eCopy from previous feedback sessions\u003c/button\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center text-md-right session-form-buttons\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-edit\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"triggerModelChange(\u0027isEditable\u0027, true)\" *ngIf\u003d\"formMode \u003d\u003d SessionEditFormMode.EDIT \u0026\u0026 !model.isEditable \u0026\u0026 !model.isSaving\"\u003e\u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e Edit\u003c/button\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-save\" type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"submitFormHandler()\" [disabled]\u003d\"model.isSaving\" *ngIf\u003d\"model.isEditable || model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003eSave \u003c/button\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Discard changes to the feedback session\" (click)\u003d\"cancelHandler()\" *ngIf\u003d\"model.isEditable\" [disabled]\u003d\"model.isSaving\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Cancel \u003c/button\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-delete\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Delete the feedback session\" (click)\u003d\"deleteHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isDeleting\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"fas fa-trash\"\u003e\u003c/i\u003e Delete\u003c/button\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"btn-fs-copy\" type\u003d\"button\" class\u003d\"btn btn-primary\" ngbTooltip\u003d\"Copy this feedback session to other courses\" (click)\u003d\"copyHandler()\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isCopying\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"far fa-copy\"\u003e\u003c/i\u003e Copy\u003c/button\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Course for which the feedback session is for.\"\u003eCourse ID\u003c/span\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003cselect id\u003d\"add-course-id\" class\u003d\"form-control\" [ngClass]\u003d\"{\u0027is-invalid\u0027: courseCandidates.length \u003d\u003d\u003d 0}\" [ngModel]\u003d\"model.courseId\" (ngModelChange)\u003d\"courseIdChangeHandler($event)\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let course of courseCandidates\" [ngValue]\u003d\"course.courseId\"\u003e{{ course.courseId }}\u003c/option\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"invalid-feedback\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                There is no un-archived course."},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-course-id\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.courseId }} \u003c/div\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold mt-3 mt-md-0\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Time Zone"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"time-zone\" class\u003d\"col-md-4 text-md-left\" [ngClass]\u003d\"{\u0027col-form-label\u0027: formMode \u003d\u003d\u003d SessionEditFormMode.ADD}\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"To change this, edit the course settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time.\"\u003e{{ model.timeZone }}\u003c/span\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Course Name"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"course-name\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            {{ model.courseName }}"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\" class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Enter the name of the feedback session e.g. Feedback Session 1.\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            \u003cspan *ngIf\u003d\"formMode !\u003d\u003d SessionEditFormMode.ADD\"\u003eSession Name\u003c/span\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              \u003cinput id\u003d\"add-session-name\" type\u003d\"text\" class\u003d\"form-control\" [ngModel]\u003d\"model.feedbackSessionName\" (ngModelChange)\u003d\"triggerModelChange(\u0027feedbackSessionName\u0027, $event)\" placeholder\u003d\"e.g. Feedback for Project Presentation 1\" maxlength\u003d\"38\" /\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                {{FEEDBACK_SESSION_NAME_MAX_LENGTH - model.feedbackSessionName.length}} characters left"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            \u003cdiv id\u003d\"edit-session-name\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e {{ model.feedbackSessionName }} \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            \u003cspan class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"Will be displayed at the top of the page when users respond to the session.\"\u003eInstructions\u003c/span\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-10 text-md-left\"\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            \u003ctm-rich-text-editor id\u003d\"instructions\" [richText]\u003d\"model.instructions\" (richTextChange)\u003d\"triggerModelChange(\u0027instructions\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-rich-text-editor\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003cbr/\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Submission Status"},{"lineNumber":107,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"submission-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            {{ model.submissionStatus | submissionStatusName }}"},{"lineNumber":110,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 text-md-right font-bold mt-3 mt-md-0\"\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Published Status"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          \u003cdiv id\u003d\"published-status\" class\u003d\"col-md-4 text-md-left\"\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            {{ model.publishStatus | publishStatusName }}"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\"\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-12 text-md-left\"\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Users can start submitting responses.\"\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center align-items-center\"\u003e"},{"lineNumber":133,"author":{"gitId":"daongochieu2810"},"content":"              \u003cdiv id\u003d\"submission-start-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":134,"author":{"gitId":"daongochieu2810"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionStartDate\u0027, $event)\""},{"lineNumber":135,"author":{"gitId":"daongochieu2810"},"content":"                                     [date]\u003d\"model.submissionStartDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u003ctm-time-picker id\u003d\"submission-start-time\" [time]\u003d\"model.submissionStartTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionStartTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-5 border-left-gray\"\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 text-md-left ml-md-2\"\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"No more submissions from users.\"\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                  Submission closing time"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":151,"author":{"gitId":"daongochieu2810"},"content":"              \u003cdiv id\u003d\"submission-end-date\" class\u003d\"col-md-7 col-xs-center\"\u003e"},{"lineNumber":152,"author":{"gitId":"daongochieu2810"},"content":"                \u003ctm-datepicker [disabled]\u003d\"!model.isEditable\" (dateChangeCallback)\u003d\"triggerModelChange(\u0027submissionEndDate\u0027, $event)\""},{"lineNumber":153,"author":{"gitId":"daongochieu2810"},"content":"                                     [minDate]\u003d\"model.submissionStartDate\" [date]\u003d\"model.submissionEndDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-5\"\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u003ctm-time-picker id\u003d\"submission-end-time\" [time]\u003d\"model.submissionEndTime\" (timeChange)\u003d\"triggerModelChange(\u0027submissionEndTime\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-2 border-left-gray\"\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"ngb-tooltip-class col-12 text-md-left ml-md-2\" ngbTooltip\u003d\"Amount of time the system will continue accepting submissions after the specified deadline.\"\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"control-label font-bold\"\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                  Grace period"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u003cselect id\u003d\"grace-period\" class\u003d\"form-control\" [ngModel]\u003d\"model.gracePeriod\" (ngModelChange)\u003d\"triggerModelChange(\u0027gracePeriod\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                  \u003coption *ngFor\u003d\"let graceMinute of [0, 5, 10, 15, 20, 25, 30]\" [ngValue]\u003d\"graceMinute\"\u003e{{ graceMinute + \u0027 min\u0027}}\u003c/option\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u003c/select\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasVisibleSettingsPanelExpanded\" class\u003d\"margin-top-20px\"\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eSession is visible at submission opening time, responses are only visible when you publish the results.\u003c/span\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-visibility\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasVisibleSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasVisibleSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row align-items-start\"\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 text-center text-md-left\"\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Session can be visible before it is open for submissions so that users can preview the questions.\"\u003eMake session visible \u003c/label\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"session-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                    At"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":202,"author":{"gitId":"daongochieu2810"},"content":"              \u003cdiv id\u003d\"session-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":203,"author":{"gitId":"daongochieu2810"},"content":"                \u003ctm-datepicker [disabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":204,"author":{"gitId":"daongochieu2810"},"content":"                                     (dateChangeCallback)\u003d\"triggerModelChange(\u0027customSessionVisibleDate\u0027, $event)\""},{"lineNumber":205,"author":{"gitId":"daongochieu2810"},"content":"                                     [maxDate]\u003d\"maxDateForSessionVisible\" [date]\u003d\"model.customSessionVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u003ctm-time-picker id\u003d\"session-visibility-time\" [time]\u003d\"model.customSessionVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customSessionVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-1 ml-md-3\"\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12 form-check\"\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                  \u003cinput id\u003d\"session-visibility-at-open\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"sessionVisibleRadio\" [value]\u003d\"SessionVisibleSetting.AT_OPEN\" [ngModel]\u003d\"model.sessionVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027sessionVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                  Submission opening time"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u003c/label\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-6 sessionVisibleRadio border-left-gray text-center text-md-left\"\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row ml-md-1\"\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u003clabel class\u003d\"ngb-tooltip-class label-control font-bold\" ngbTooltip\u003d\"Make responses for the feedback session visible to designated recipients.\"\u003eMake response visible \u003c/label\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-2 mt-md-1\"\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u003clabel class\u003d\"form-check-label\"\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                      \u003cinput id\u003d\"response-visibility-custom\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.CUSTOM\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"/\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                      At"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u003c/label\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":235,"author":{"gitId":"daongochieu2810"},"content":"                \u003cdiv id\u003d\"response-visibility-date\" class\u003d\"col-md-6\"\u003e"},{"lineNumber":236,"author":{"gitId":"daongochieu2810"},"content":"                  \u003ctm-datepicker [disabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\""},{"lineNumber":237,"author":{"gitId":"daongochieu2810"},"content":"                                       (dateChangeCallback)\u003d\"triggerModelChange(\u0027customResponseVisibleDate\u0027, $event)\""},{"lineNumber":238,"author":{"gitId":"daongochieu2810"},"content":"                                       [minDate]\u003d\"minDateForResponseVisible\" [date]\u003d\"model.customResponseVisibleDate\"\u003e\u003c/tm-datepicker\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                  \u003ctm-time-picker id\u003d\"response-visibility-time\" [time]\u003d\"model.customResponseVisibleTime\" (timeChange)\u003d\"triggerModelChange(\u0027customResponseVisibleTime\u0027, $event)\" [isDisabled]\u003d\"model.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.CUSTOM || !model.isEditable\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Same time as when the session becomes visible to users.\"\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-immediately\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.AT_VISIBLE\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    Immediately"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row mt-md-2 ml-md-1\"\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"form-check\"\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                  \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remember to manually publish the responses for this session later on.\"\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u003cinput id\u003d\"response-visibility-manually\" class\u003d\"form-check-input\" type\u003d\"radio\" name\u003d\"responseVisibleRadio\" [value]\u003d\"ResponseVisibleSetting.LATER\" [ngModel]\u003d\"model.responseVisibleSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027responseVisibleSetting\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    Not now (publish manually)"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                  \u003c/label\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"!model.hasEmailSettingsPanelExpanded\"\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"text-muted\"\u003eEmails are sent when session opens (within 15 minutes), 24 hrs before session closes and when results are published.\u003c/span\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      \u003cbutton id\u003d\"btn-change-email\" type\u003d\"button\" class\u003d\"btn btn-link\" (click)\u003d\"triggerModelChange(\u0027hasEmailSettingsPanelExpanded\u0027, true)\" [disabled]\u003d\"!model.isEditable\"\u003e[Change]\u003c/button\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card border-primary margin-top-20px\" *ngIf\u003d\"model.hasEmailSettingsPanelExpanded\" @collapseAnim\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-12 font-bold\"\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"          Send emails for"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row ml-md-1 mt-md-3\"\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session is open for submission.\"\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-opening\" class\u003d\"form-check-input\" type\u003d\"checkbox\" checked disabled\u003eSession opening reminder"},{"lineNumber":282,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Remind students to submit 24 hours before the end of the session.\"\u003e"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-closing\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isClosingEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isClosingEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Session closing reminder"},{"lineNumber":289,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-4\"\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"form-check form-check-inline\"\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"              \u003clabel class\u003d\"ngb-tooltip-class form-check-label\" ngbTooltip\u003d\"Notify students when the session results is published.\"\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                \u003cinput id\u003d\"email-published\" class\u003d\"form-check-input\" type\u003d\"checkbox\" [ngModel]\u003d\"model.isPublishedEmailEnabled\" (ngModelChange)\u003d\"triggerModelChange(\u0027isPublishedEmailEnabled\u0027, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e Results published announcement"},{"lineNumber":296,"author":{"gitId":"-"},"content":"              \u003c/label\u003e"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row margin-top-20px\"\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12 text-center\"\u003e"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        \u003cspan class\u003d\"loader\"\u003e\u003c/span\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.ADD\"\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-create-session\" type\u003d\"button\" class\u003d\"btn btn-primary\" [disabled]\u003d\"courseCandidates.length \u003d\u003d\u003d 0 || model.isSaving\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eCreate Feedback Session"},{"lineNumber":308,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"          \u003cp class\u003d\"text-danger margin-top-20px\" *ngIf\u003d\"courseCandidates.length \u003d\u003d\u003d 0\"\u003e\u003cb\u003eYou need to have an active(unarchived) course to create a session!\u003c/b\u003e\u003c/p\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\"\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-success\" [disabled]\u003d\"model.isSaving || !model.isEditable\" *ngIf\u003d\"formMode \u003d\u003d\u003d SessionEditFormMode.EDIT\" (click)\u003d\"submitFormHandler()\"\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003eSave Changes"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"daongochieu2810":14,"-":305}},{"path":"src/web/app/components/session-edit-form/session-edit-form.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, EventEmitter, Input, OnInit, Output } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"daongochieu2810"},"content":"import { NgbCalendar, NgbDateParserFormatter } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FEEDBACK_SESSION_NAME_MAX_LENGTH } from \u0027../../../types/field-validator\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../simple-modal/simple-modal-type\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../teammates-common/collapse-anim\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { SessionEditFormDatePickerFormatter } from \u0027./session-edit-form-datepicker-formatter\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { DateFormat, SessionEditFormMode, SessionEditFormModel } from \u0027./session-edit-form-model\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Form to Add/Edit feedback sessions."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-edit-form\u0027,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-edit-form.component.html\u0027,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-edit-form.component.scss\u0027],"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: SessionEditFormDatePickerFormatter }],"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"})"},{"lineNumber":29,"author":{"gitId":"-"},"content":"export class SessionEditFormComponent implements OnInit {"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  SessionVisibleSetting: typeof SessionVisibleSetting \u003d SessionVisibleSetting;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting: typeof ResponseVisibleSetting \u003d ResponseVisibleSetting;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  // const"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  FEEDBACK_SESSION_NAME_MAX_LENGTH: number \u003d FEEDBACK_SESSION_NAME_MAX_LENGTH;"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  model: SessionEditFormModel \u003d {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 0, minute: 0 },"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 0, minute: 0 },"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 0, minute: 0 },"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 0, minute: 0 },"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  modelChange: EventEmitter\u003cSessionEditFormModel\u003e \u003d new EventEmitter();"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  formMode: SessionEditFormMode \u003d SessionEditFormMode.ADD;"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  // add mode specific"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  templateSessions: TemplateSession[] \u003d [];"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  // event emission"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  addNewSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  editExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  cancelEditingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  deleteExistingSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  copyCurrentSessionEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  copyOtherSessionsEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":107,"author":{"gitId":"-"},"content":""},{"lineNumber":108,"author":{"gitId":"-"},"content":"  @Output()"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  closeEditFormEvent: EventEmitter\u003cvoid\u003e \u003d new EventEmitter\u003cvoid\u003e();"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"daongochieu2810"},"content":"  constructor(private simpleModalService: SimpleModalService, public calendar: NgbCalendar) { }"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   * Triggers the change of the model for the form."},{"lineNumber":118,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  triggerModelChange(field: string, data: any): void {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    this.modelChange.emit({"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      ...this.model,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      [field]: data,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"   * Handles course Id change event."},{"lineNumber":128,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   * \u003cp\u003eUsed in ADD mode."},{"lineNumber":130,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  courseIdChangeHandler(newCourseId: string): void {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d newCourseId);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"    if (course) {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      this.modelChange.emit({"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        ...this.model,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        courseId: newCourseId,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        courseName: course.courseName,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        timeZone: course.timeZone,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   * Gets the maximum date for a session to be visible based on the input model."},{"lineNumber":146,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  get maxDateForSessionVisible(): DateFormat {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    switch (this.model.responseVisibleSetting) {"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.LATER:"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.AT_VISIBLE:"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return this.model.submissionStartDate;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      case ResponseVisibleSetting.CUSTOM:"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        const submissionStartDate: any \u003d this.getMomentInstance(this.model.submissionStartDate);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        const responseVisibleDate: any \u003d this.getMomentInstance(this.model.customResponseVisibleDate);"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (submissionStartDate.isBefore(responseVisibleDate)) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          return this.model.submissionStartDate;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return this.model.customResponseVisibleDate;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"          year: 0,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"          month: 0,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          day: 0,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   * Gets the minimum date for responses to be visible based on the input model."},{"lineNumber":171,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  get minDateForResponseVisible(): DateFormat {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    switch (this.model.sessionVisibleSetting) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      case SessionVisibleSetting.AT_OPEN:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return this.model.submissionStartDate;"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      case SessionVisibleSetting.CUSTOM:"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        return this.model.customSessionVisibleDate;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"          year: 0,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"          month: 0,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"          day: 0,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        };"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   * Gets a moment instance from a date."},{"lineNumber":189,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  getMomentInstance(date: DateFormat): any {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    const inst: any \u003d moment();"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    return inst;"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":199,"author":{"gitId":"-"},"content":"   * Handles submit button click event."},{"lineNumber":200,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  submitFormHandler(): void {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    // resolve local date time to timestamp"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.ADD) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.addNewSessionEvent.emit();"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":"    if (this.formMode \u003d\u003d\u003d SessionEditFormMode.EDIT) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      this.editExistingSessionEvent.emit();"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   * Handles cancel button click event."},{"lineNumber":214,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  cancelHandler(): void {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    this.simpleModalService.openConfirmationModal(\u0027Discard unsaved edit?\u0027,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, \u0027Warning: Any unsaved changes will be lost.\u0027).result.then(() \u003d\u003e {"},{"lineNumber":218,"author":{"gitId":"-"},"content":"          this.cancelEditingSessionEvent.emit();"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":221,"author":{"gitId":"-"},"content":""},{"lineNumber":222,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * Handles delete current feedback session button click event."},{"lineNumber":224,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  deleteHandler(): void {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    this.simpleModalService.openConfirmationModal(`Delete the session \u003cstrong\u003e${ this.model.feedbackSessionName }\u003c/strong\u003e?`,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        \u0027The session will be moved to the recycle bin. This action can be reverted by going to the \"Sessions\" tab and restoring the desired session(s).\u0027,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    ).result.then(() \u003d\u003e {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      this.deleteExistingSessionEvent.emit();"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":233,"author":{"gitId":"-"},"content":""},{"lineNumber":234,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   * Handles copy current feedback session button click event."},{"lineNumber":236,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  copyHandler(): void {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    this.copyCurrentSessionEvent.emit();"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   * Handles copy from other feedback sessions button click event."},{"lineNumber":243,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  copyOthersHandler(): void {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    this.copyOtherSessionsEvent.emit();"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":247,"author":{"gitId":"-"},"content":""},{"lineNumber":248,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":249,"author":{"gitId":"-"},"content":"   * Handles closing of the edit form."},{"lineNumber":250,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  closeEditFormHandler(): void {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    this.closeEditFormEvent.emit();"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":2,"-":252}},{"path":"src/web/app/components/session-edit-form/session-edit-form.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"daongochieu2810"},"content":"import { NgbTooltipModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import { DatepickerModule } from \u0027../datepicker/datepicker.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../teammates-router/teammates-router.module\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { SessionEditFormComponent } from \u0027./session-edit-form.component\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { SubmissionStatusNamePipe } from \u0027./submission-status-name.pipe\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TimePickerComponent } from \u0027./time-picker/time-picker.component\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Module for instructor session edit/create form."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":19,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    FormsModule,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    NgbTooltipModule,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    AjaxLoadingModule,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    TeammatesCommonModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    RichTextEditorModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    TeammatesRouterModule,"},{"lineNumber":26,"author":{"gitId":"daongochieu2810"},"content":"    DatepickerModule,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  declarations: ["},{"lineNumber":29,"author":{"gitId":"-"},"content":"    SessionEditFormComponent,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    TimePickerComponent,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    SubmissionStatusNamePipe,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  exports: ["},{"lineNumber":34,"author":{"gitId":"-"},"content":"    SessionEditFormComponent,"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"    TimePickerComponent,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":37,"author":{"gitId":"-"},"content":"})"},{"lineNumber":38,"author":{"gitId":"-"},"content":"export class SessionEditFormModule { }"}],"authorContributionMap":{"t-cheepeng":1,"daongochieu2810":3,"-":34}},{"path":"src/web/app/components/simple-modal/simple-modal-type.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Represents the type of  the modal to be displayed."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export enum SimpleModalType {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":6,"author":{"gitId":"-"},"content":"   * Warning modal."},{"lineNumber":7,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  WARNING,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * Danger modal."},{"lineNumber":11,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  DANGER,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   * Info modal."},{"lineNumber":15,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  INFO,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   * Neutral modal."},{"lineNumber":19,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  NEUTRAL,"},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  /**"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"   * Load modal."},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"   */"},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":"  LOAD,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":4,"-":21}},{"path":"src/web/app/components/simple-modal/simple-modal.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"\u003cdiv class\u003d\"transparent-overlay\" [ngClass]\u003d\"{ \u0027display-none\u0027: type !\u003d\u003d SimpleModalType.LOAD }\"\u003e\u003c/div\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-header\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"     [ngClass]\u003d\"{"},{"lineNumber":4,"author":{"gitId":"-"},"content":"     \u0027alert-danger\u0027 : type \u003d\u003d\u003d SimpleModalType.DANGER,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"     \u0027alert-warning\u0027 : type \u003d\u003d\u003d SimpleModalType.WARNING,"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"     \u0027alert-info\u0027 : type \u003d\u003d\u003d SimpleModalType.INFO || type \u003d\u003d\u003d SimpleModalType.LOAD,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"     \u0027bg-white\u0027 : type \u003d\u003d\u003d SimpleModalType.NEUTRAL}\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cdiv\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003ch5 class\u003d\"modal-title\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003ci *ngIf\u003d\"type \u003d\u003d\u003d SimpleModalType.DANGER\" class\u003d\"fas fa-times-circle\"\u003e\u003c/i\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003ci *ngIf\u003d\"type \u003d\u003d\u003d SimpleModalType.WARNING\" class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"      \u003ci *ngIf\u003d\"type \u003d\u003d\u003d SimpleModalType.INFO || type \u003d\u003d\u003d SimpleModalType.LOAD\" class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"margin-left-5px\" [innerHTML]\u003d\"header\"\u003e\u003c/span\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/h5\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"close\""},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"    (click)\u003d\"type \u003d\u003d\u003d SimpleModalType.LOAD ? activeModal.close() : activeModal.dismiss()\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-body\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"isTemplate\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cng-container *ngTemplateOutlet\u003d\"content\"\u003e\u003c/ng-container\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"!isTemplate\" [innerHTML]\u003d\"content\"\u003e\u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"  \u003cdiv *ngIf\u003d\"type \u003d\u003d\u003d SimpleModalType.LOAD\" class\u003d\"progress-bar-container\"\u003e"},{"lineNumber":27,"author":{"gitId":"moziliar"},"content":"    \u003ctm-progress-bar\u003e\u003c/tm-progress-bar\u003e"},{"lineNumber":28,"author":{"gitId":"moziliar"},"content":"  \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"modal-footer\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light modal-btn-cancel\" *ngIf\u003d\"!isInformationOnly\" (click)\u003d\"activeModal.dismiss()\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {{ cancelMessage }}"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":34,"author":{"gitId":"moziliar"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"btn modal-btn-ok z-index-1\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"          [ngClass]\u003d\"{"},{"lineNumber":36,"author":{"gitId":"moziliar"},"content":"          \u0027btn-danger\u0027 : type \u003d\u003d\u003d SimpleModalType.DANGER || type \u003d\u003d\u003d SimpleModalType.LOAD,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u0027btn-warning\u0027 : type \u003d\u003d\u003d SimpleModalType.WARNING,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u0027btn-info\u0027 : type \u003d\u003d\u003d SimpleModalType.INFO,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u0027btn-primary\u0027 : type \u003d\u003d\u003d SimpleModalType.NEUTRAL }\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"          (click)\u003d\"activeModal.close()\"\u003e{{ confirmMessage }}\u003c/button\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"moziliar":10,"-":31}},{"path":"src/web/app/components/simple-modal/simple-modal.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".margin-left-5px {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  margin-left: 5px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":".progress-bar-container {"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"  margin-top: 10px;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"  margin-bottom: 2px;"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":".transparent-overlay {"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"  position: fixed;"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"  top: 0;"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"  left: 0;"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"  width: 100vw;"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":"  height: 100vh;"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  visibility: false;"},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"  z-index: 0;"},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":20,"author":{"gitId":"moziliar"},"content":".display-none {"},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  display: none;"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"}"},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":24,"author":{"gitId":"moziliar"},"content":".z-index-1 {"},{"lineNumber":25,"author":{"gitId":"moziliar"},"content":"  z-index: 1;"},{"lineNumber":26,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":23,"-":3}},{"path":"src/web/app/components/simple-modal/simple-modal.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import { ProgressBarModule } from \u0027../progress-bar/progress-bar.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalComponent } from \u0027./simple-modal.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"describe(\u0027SimpleModalComponent\u0027, () \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  let component: SimpleModalComponent;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSimpleModalComponent\u003e;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      declarations: [SimpleModalComponent],"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      providers: [NgbActiveModal],"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"      imports: [ProgressBarModule],"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SimpleModalComponent);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":28,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"moziliar":2,"-":26}},{"path":"src/web/app/components/simple-modal/simple-modal.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import { ProgressBarModule } from \u0027../../components/progress-bar/progress-bar.module\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalComponent } from \u0027./simple-modal.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Module for the modal component"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  declarations: [SimpleModalComponent],"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  exports: [SimpleModalComponent],"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":13,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"    ProgressBarModule,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  entryComponents: [SimpleModalComponent],"},{"lineNumber":17,"author":{"gitId":"-"},"content":"})"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"export class SimpleModalModule { }"}],"authorContributionMap":{"moziliar":2,"-":17}},{"path":"src/web/app/components/teammates-common/generated-choice.pipe.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { FeedbackParticipantType } from \u0027../../../types/api-output\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Transforms {@link FeedbackParticipantType} to a description for generated MCQ/MSQ choices."},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Pipe({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  name: \u0027generatedChoice\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class GeneratedChoicePipe implements PipeTransform {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  transform(type: FeedbackParticipantType): string {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    switch (type) {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.STUDENTS:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return \u0027students\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.STUDENTS_EXCLUDING_SELF:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return \u0027students (excluding self)\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.TEAMS:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return \u0027teams\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.TEAMS_EXCLUDING_SELF:"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return \u0027teams (excluding own team)\u0027;"},{"lineNumber":22,"author":{"gitId":"daongochieu2810"},"content":"      case FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF:"},{"lineNumber":23,"author":{"gitId":"daongochieu2810"},"content":"        return \u0027team members\u0027;"},{"lineNumber":24,"author":{"gitId":"daongochieu2810"},"content":"      case FeedbackParticipantType.OWN_TEAM_MEMBERS:"},{"lineNumber":25,"author":{"gitId":"daongochieu2810"},"content":"        return \u0027team members (excluding self)\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      case FeedbackParticipantType.INSTRUCTORS:"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return \u0027instructors\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return \u0027unknown\u0027;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":4,"-":29}},{"path":"src/web/app/components/teammates-common/student-name/student-name-with-photo.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, Input, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbTooltip } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import { StringHelper } from \u0027../../../../services/string-helper\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Display student name with photo popover"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  selector: \u0027tm-student-name-with-photo\u0027,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./student-name-with-photo.component.html\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./student-name-with-photo.component.scss\u0027],"},{"lineNumber":12,"author":{"gitId":"-"},"content":"})"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class StudentNameWithPhotoComponent implements OnInit {"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  name: string \u003d \u0027\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @Input()"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  email: string \u003d \u0027\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"  iconClass: string \u003d \u0027far\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  tooltipTimer: any;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  constructor() { }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":30,"author":{"gitId":"halfwhole"},"content":"    this.name \u003d StringHelper.removeAnonymousHash(this.name);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"  handleMouseover(t: NgbTooltip): void {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    this.iconClass \u003d \u0027fa\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.tooltipTimer \u003d setTimeout(() \u003d\u003e {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      if (!t.isOpen()) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        t.open();"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }, 400);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  handleMouseout(t: NgbTooltip): void {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    this.iconClass \u003d \u0027far\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    this.clearTooltipTimer();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    if (t.isOpen()) {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      t.close();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"  clearTooltipTimer(): void {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    clearTimeout(this.tooltipTimer);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":2,"-":51}},{"path":"src/web/app/components/toast/toast.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cngb-toast *ngIf\u003d\"toast\" [delay]\u003d\"toast.delay || 10000\" (hide)\u003d\"removeToast()\" [class]\u003d\"toast.classes\" [autohide]\u003d\"toast.autohide\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cng-template [ngIf]\u003d\"isTemplate()\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cng-template [ngTemplateOutlet]\u003d\"toast.message\"\u003e\u003c/ng-template\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"removeToast()\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003c/button\u003e"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"  \u003cng-container *ngIf\u003d\"!isTemplate()\"\u003e{{ toast.message }}\u003c/ng-container\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/ngb-toast\u003e"}],"authorContributionMap":{"daongochieu2810":1,"-":6}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-courses-section/instructor-help-courses-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eCourses\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 5)\"\u003eEnrolling Students in Courses\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_ADD_STUDENTS)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_ADD_STUDENTS\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I add students to a course?\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_ADD_STUDENTS]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      There are two ways to enroll students in a course:"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        From the \u003cb\u003eHome\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eStudents\u003c/button\u003e button of the corresponding course, and choose \u003cb\u003eEnroll\u003c/b\u003e."},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        From the \u003cb\u003eCourses\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eEnroll\u003c/button\u003e button of the corresponding course."},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.SIZE_LIMIT)\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.SIZE_LIMIT\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Is there a size limit for a course?\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.SIZE_LIMIT]\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      No. However, if courses with an enrollment of more than 100 students need to be \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.ENROLL_SECTIONS); questionsToCollapsed[CoursesSectionQuestions.ENROLL_SECTIONS] \u003d true\" [tmRouterLink]\u003d\"\"\u003edivided into sections\u003c/a\u003e.\u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      TEAMMATES uses section information to organize the results of your sessions into a downloadable report."},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.NO_TEAMS)\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.NO_TEAMS\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                            headerText\u003d\"What should I do if my course doesn’t have teams?\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.NO_TEAMS]\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      When you enroll students in a course, TEAMMATES requires you to specify a \u003cb\u003eTeam\u003c/b\u003e for each student.\u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      If your class does not use groups or teams, simply provide a dummy value in the Team column."},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.SECTIONS)\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.SECTIONS\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"                            headerText\u003d\"What are sections meant for?\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.SECTIONS]\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      Sections are used to organize students in courses with significantly large numbers of students."},{"lineNumber":49,"author":{"gitId":"-"},"content":"      It is mandatory for courses with more than 100 students to organize students into sections."},{"lineNumber":50,"author":{"gitId":"-"},"content":"      Courses with less than 100 students do not need to be split into sections."},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      Section information is used to paginate the downloadable report of a session\u0027s results."},{"lineNumber":54,"author":{"gitId":"-"},"content":"      When you download the results of a session as an Excel spreadsheet, each section will be given its own page in the file."},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question class\u003d\"instr-help-qn-last\" [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.ENROLL_SECTIONS)\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.ENROLL_SECTIONS\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I enroll students into sections?\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.ENROLL_SECTIONS]\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      To specify a section for each student at the time of enrollment, include a \u003cb\u003eSection\u003c/b\u003e column in the spreadsheet and ensure it is copied over to the student data text box, together with the rest of the data."},{"lineNumber":64,"author":{"gitId":"-"},"content":"      To view more information, go to the \u003cb\u003eCourses\u003c/b\u003e page, click on the \u003cbutton class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eEnroll\u003c/button\u003e button for any course and scroll down to the \u003cb\u003eMore Info\u003c/b\u003e section."},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(5, 9)\"\u003eAdding Instructors to Courses\u003c/h4\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c!--Question --\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_ADD_INSTRUCTOR)\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_ADD_INSTRUCTOR\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I add instructors to my course?\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_ADD_INSTRUCTOR]\"\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      From your \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eCourses\u003c/b\u003e page, click the \u003cbutton class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eEdit\u003c/button\u003e button of the course you would like to edit. You will be directed to the \u003cb\u003eEdit Course\u003c/b\u003e page, which will look similar to the example below.\u003cbr\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      Here, you can add new instructors to the course, edit existing instructors\u0027 details, and delete instructors from the course, depending on your access privileges."},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      To add an instructor:"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Click the \u003cbutton class\u003d\"btn btn-primary btn-sm\" type\u003d\"button\"\u003eAdd New Instructor\u003c/button\u003e button at the bottom of the page. A form will appear for you to specify the necessary information about the new instructor."},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Fill in the name, email, role, and access level of the instructor you want to add. If you are not clear about certain input field, hover your cursor over the input field to view the tooltip for explanation of the field.\u003cbr\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-primary btn-sm\" type\u003d\"button\"\u003eAdd Instructor\u003c/button\u003e to add the instructor."},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_EDIT_INSTRUCTOR)\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_EDIT_INSTRUCTOR\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit the information of an instructor in my course?\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_EDIT_INSTRUCTOR]\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      To edit the name, email and visible role of Instructor A from Course B, first go to the \u003cb\u003eEdit Course\u003c/b\u003e page of Course B.\u003cbr\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      From your \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eCourses\u003c/b\u003e page, click the \u003cbutton class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eEdit\u003c/button\u003e button of the course you would like to edit. You will be directed to the \u003cb\u003eEdit Course\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      To edit Instructor A\u0027s information:"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Scroll to the panel showing Instructor A\u0027s information.\u003cbr\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Click the \u003cbutton class\u003d\"btn btn-primary btn-sm\" type\u003d\"button\"\u003e\u003cspan class\u003d\"fa fa-pencil-alt\"\u003e\u003c/span\u003e Edit\u003c/button\u003e button in the top right hand corner of Instructor A\u0027s information panel. \u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Update the relevant fields with Instructor A\u0027s new information."},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-primary btn-sm\" type\u003d\"button\"\u003eSave changes\u003c/button\u003e to save the changes and complete the edit process."},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_INSTRUCTOR_ACCESS)\""},{"lineNumber":122,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_INSTRUCTOR_ACCESS\""},{"lineNumber":123,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I set an instructor\u0027s access level?\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_INSTRUCTOR_ACCESS]\"\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      When \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_ADD_INSTRUCTOR); questionsToCollapsed[CoursesSectionQuestions.COURSE_ADD_INSTRUCTOR] \u003d true\" [tmRouterLink]\u003d\"\"\u003eadding an instructor\u003c/a\u003e or \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_EDIT_INSTRUCTOR); questionsToCollapsed[CoursesSectionQuestions.COURSE_EDIT_INSTRUCTOR] \u003d true\" [tmRouterLink]\u003d\"\"\u003eediting an instructor\u0027s information\u003c/a\u003e, you can set the instructor\u0027s access level."},{"lineNumber":127,"author":{"gitId":"-"},"content":"      There are 4 pre-defined privilege options for you to choose from:"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        \u003cb\u003eCo-owner\u003c/b\u003e: is able to perform any action on the course, including deleting the course. When you create a new course, your access level is Co-owner. This is the highest access level."},{"lineNumber":132,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        \u003cb\u003eManager\u003c/b\u003e: has the same privileges as a Co-owner except that s/he is not allowed to delete the course."},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":137,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eObserver\u003c/b\u003e: can view the course\u0027s information, but cannot edit or submit information."},{"lineNumber":138,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        \u003cb\u003eTutor\u003c/b\u003e: can view student details, give/view comments, and submit/view responses for sessions."},{"lineNumber":141,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      All the access levels listed above have pre-defined privileges which you can view by clicking the \u0027View details\u0027 link next to the access level description.\u003cbr\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      To set custom privileges for an instructor, select the \u003cb\u003eCustom\u003c/b\u003e access level, and specify which privileges the instructor should get."},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.PRIVILEGES)\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.PRIVILEGES\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I set custom privileges for an instructor?\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.PRIVILEGES]\"\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      When you set the access level for an instructor to \u003cb\u003eCustom\u003c/b\u003e, detailed privilege settings will appear.\u003cbr\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      Use the checkboxes to give instructors specific privileges."},{"lineNumber":156,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      If a course has sections, you can customize an instructor\u0027s permissions for each section by clicking \u0027Give different permissions for a specific section\u0027.\u003cbr\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      In the panel for section-level privilege settings, use the section checkboxes to apply your chosen settings to more than one section.\u003cbr\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      You can also change the degree of access the instructor has to specific sessions in that section by clicking \u0027Give different permissions for sessions in this section\u0027."},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(9, 13)\"\u003eManaging Courses\u003c/h4\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_VIEW_STUDENTS)\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_VIEW_STUDENTS\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view a list of students in a course?\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_STUDENTS]\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      There are two ways to access the list of students in a course."},{"lineNumber":172,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      To view the list of students in Course A:"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        From the \u003cb\u003eHome\u003c/b\u003e page, find the panel corresponding to Course A. On the right hand side, click \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eStudents \u003cspan class\u003d\"caret dropdown-toggle\"\u003e\u003c/span\u003e\u003c/button\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        and then select \u003cb\u003eView/Edit\u003c/b\u003e."},{"lineNumber":180,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        From the \u003cb\u003eCourses\u003c/b\u003e page, click \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eView\u003c/button\u003e button of the row corresponding to Course A."},{"lineNumber":183,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.CHANGE_SECTION)\""},{"lineNumber":188,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.CHANGE_SECTION\""},{"lineNumber":189,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I change a student\u0027s section?\""},{"lineNumber":190,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.CHANGE_SECTION]\"\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      To edit the section Student A from Course B is enrolled in:"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click Course B\u0027s panel heading. You will see a list of students enrolled in Course B."},{"lineNumber":197,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Click the \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eEdit\u003c/button\u003e button in the last column of the row corresponding to Student A."},{"lineNumber":200,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        A new page will open that allows you to \u003cbutton class\u003d\"btn btn-link\" (click)\u003d\"collapseStudentEditDetails.emit(true);\"\u003eedit the student\u0027s profile\u003c/button\u003e, including a field to edit the student\u0027s section.\u003cbr\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        After editing the section name, click \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSave Changes\u003c/button\u003e to confirm Student A\u0027s new section."},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.DISAPPEARED_COURSE)\""},{"lineNumber":211,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.DISAPPEARED_COURSE\""},{"lineNumber":212,"author":{"gitId":"-"},"content":"                            headerText\u003d\"What should I do if a student says his/her courses have disappeared from the system?\""},{"lineNumber":213,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.DISAPPEARED_COURSE]\"\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      The most likely reason for this is that the student has changed the primary email address associated with his/her Google ID. Please ask the student to email"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003e{{ supportEmail }}\u003c/a\u003e so that we help to rectify the problem."},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.DEL_STUDENTS)\""},{"lineNumber":221,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.DEL_STUDENTS\""},{"lineNumber":222,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I delete students from a course?\""},{"lineNumber":223,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.DEL_STUDENTS]\"\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      To remove Student A from Course B:"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_VIEW_STUDENTS); questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_STUDENTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eView the student list\u003c/a\u003e of Course B."},{"lineNumber":230,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        In the row corresponding to Student A, click the \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eDelete\u003c/button\u003e button."},{"lineNumber":233,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        Click \u003cb\u003eOK\u003c/b\u003e to confirm that you would like to delete Student A from Course B."},{"lineNumber":236,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(13, 16)\"\u003eArchiving Courses\u003c/h4\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_ARCHIVE)\""},{"lineNumber":243,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_ARCHIVE\""},{"lineNumber":244,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I archive a course?\""},{"lineNumber":245,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_ARCHIVE]\"\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      When a course has ended, you can archive it so that it doesn\u0027t appear in your home page. Course, student and session details of an archived course are still stored on TEAMMATES. However, you cannot edit, create feedback sessions for or enroll students in an archived course."},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      In your \u003cb\u003eHome\u003c/b\u003e page, you will see panels for each course and a table of feedback sessions inside it, similar to the example below.\u003cbr\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      Click on the \u003cbutton class\u003d\"btn btn-primary btn-sm\" type\u003d\"button\"\u003eCourse \u003cspan class\u003d\"caret\"\u003e\u003c/span\u003e\u003c/button\u003e button on the card heading of the course you want to archive.\u003cbr\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      Then select \u003cbutton class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eArchive\u003c/button\u003e in the drop-down menu and click \u003cb\u003eOK\u003c/b\u003e to confirm."},{"lineNumber":253,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      You can also archive a course from the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      Under \u0027Active Courses\u0027, click on the \u003cbutton class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eArchive\u003c/button\u003e button in the row corresponding to the course you want to archive."},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_VIEW_ARCHIVED)\""},{"lineNumber":261,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_VIEW_ARCHIVED\""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view courses I have archived?\""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_ARCHIVED]\"\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      You can view all your archived courses by navigating to the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      Scroll to the \u003cb\u003eArchived courses\u003c/b\u003e heading."},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      The courses you have previously archived are listed here."},{"lineNumber":270,"author":{"gitId":"-"},"content":"      In order to access information in an archived course, \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_UNARCHIVE); questionsToCollapsed[CoursesSectionQuestions.COURSE_UNARCHIVE] \u003d true\" [tmRouterLink]\u003d\"\"\u003eunarchive the course\u003c/a\u003e."},{"lineNumber":271,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_UNARCHIVE)\""},{"lineNumber":275,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_UNARCHIVE\""},{"lineNumber":276,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I unarchive an archived course?\""},{"lineNumber":277,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_UNARCHIVE]\"\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      To unarchive a course, first \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_VIEW_ARCHIVED); questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_ARCHIVED] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the course\u003c/a\u003e that you would like to unarchive in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eUnarchive\u003c/button\u003e button corresponding to the course you want to unarchive."},{"lineNumber":281,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(16, 20)\"\u003eRestoring Deleted Courses\u003c/h4\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_VIEW_DELETED)\""},{"lineNumber":287,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_VIEW_DELETED\""},{"lineNumber":288,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view courses I have deleted?\""},{"lineNumber":289,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_DELETED]\"\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      You can view all your deleted courses by navigating to the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      Scroll to the \u003cb\u003eDeleted courses\u003c/b\u003e heading."},{"lineNumber":293,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      The courses you have previously deleted are listed here."},{"lineNumber":296,"author":{"gitId":"-"},"content":"      In order to access information in a deleted course, \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_RESTORE); questionsToCollapsed[CoursesSectionQuestions.COURSE_RESTORE] \u003d true\" [tmRouterLink]\u003d\"\"\u003erestore the course\u003c/a\u003e."},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.COURSE_RESTORE)\""},{"lineNumber":301,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.COURSE_RESTORE\""},{"lineNumber":302,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore a deleted course?\""},{"lineNumber":303,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.COURSE_RESTORE]\"\u003e"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      To restore a deleted course, first \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_VIEW_DELETED); questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_DELETED] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the course\u003c/a\u003e that you would like to restore in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eRestore\u003c/button\u003e button corresponding to the course you want to restore."},{"lineNumber":307,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      After restoring the course, all the information relevant to the course (e.g. instructors, sessions, students) will also be restored."},{"lineNumber":310,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.PERM_DEL)\""},{"lineNumber":314,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.PERM_DEL\""},{"lineNumber":315,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I permanently delete a course?\""},{"lineNumber":316,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.PERM_DEL]\"\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      To permanently delete a course, first \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_VIEW_DELETED); questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_DELETED] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the course\u003c/a\u003e that you would like to permanently delete in the \u003cb\u003eCourses\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-secondary btn-sm color-negative\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e button corresponding to the course you want to delete."},{"lineNumber":320,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      After deleting the course, all the information relevant to the course (e.g. instructors, sessions, students) will also be permanently deleted."},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(CoursesSectionQuestions.RESTORE_ALL)\""},{"lineNumber":327,"author":{"gitId":"-"},"content":"                            [id]\u003d\"CoursesSectionQuestions.RESTORE_ALL\""},{"lineNumber":328,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore/delete all courses from Recycle Bin?\""},{"lineNumber":329,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[CoursesSectionQuestions.RESTORE_ALL]\"\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      First \u003ca (click)\u003d\"jumpTo(CoursesSectionQuestions.COURSE_VIEW_DELETED); questionsToCollapsed[CoursesSectionQuestions.COURSE_VIEW_DELETED] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the course\u003c/a\u003e and check for courses in Recycle Bin.\u003cbr\u003e"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      To restore all courses, click on the \u003ca class\u003d\"btn btn-secondary btn-sm\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\"\u003e\u003cspan class\u003d\"fa fa-check\"\u003e\u003c/span\u003e\u003cstrong\u003e Restore All\u003c/strong\u003e\u003c/a\u003e button in \u003cb\u003eDeleted courses\u003c/b\u003e heading;"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      to delete all courses, click on the \u003ca class\u003d\"btn btn-secondary btn-sm color-negative\" data-toggle\u003d\"tooltip\" data-placement\u003d\"top\"\u003e\u003cspan class\u003d\"fa fa-times\"\u003e\u003c/span\u003e\u003cstrong\u003e Delete All\u003c/strong\u003e\u003c/a\u003e button in \u003cb\u003eDeleted courses\u003c/b\u003e heading."},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":1,"-":335}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"flex-container\"\u003e"},{"lineNumber":2,"author":{"gitId":"Derek-Hardy"},"content":"  \u003cdiv class\u003d\"main-body col-lg-10\" #helpPage\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d{{Sections.body}}\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"      \u003ch1 class\u003d\"color-orange\"\u003e Help for Instructors\u003c/h1\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cp\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          Have questions about how to use TEAMMATES? This page answers some frequently asked questions."},{"lineNumber":8,"author":{"gitId":"-"},"content":"          \u003cbr\u003e If you are new to TEAMMATES, our \u003ca [tmRouterLink]\u003d\"instructorGettingStartedPath\"\u003eGetting Started\u003c/a\u003e guide will introduce you to the basic functions of TEAMMATES."},{"lineNumber":9,"author":{"gitId":"-"},"content":"          \u003cbr\u003e If you have any remaining questions, don\u0027t hesitate to \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003eemail us\u003c/a\u003e. We respond within 24 hours."},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-9\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"              \u003cinput type\u003d\"text\" [(ngModel)]\u003d\"searchTerm\" class\u003d\"form-control\" placeholder\u003d\"How can we help?\" (keyup.enter)\u003d\"search()\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"search()\"\u003e\u003ci class\u003d\"fas fa-search\"\u003e\u003c/i\u003e\u003c/button\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-danger\" (click)\u003d\"clear()\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003c/button\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"key\" style\u003d\"margin-top: 20px;\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          \u003ch4\u003e{{ matchFound }} results found for \"{{ key }}\"\u003c/h4\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003chr/\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d\"{{Sections.students}}\" class\u003d\"section-body\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-help-students-section #studentsHelpSection [key]\u003d\"key\" (matchFound)\u003d\"updateMatchFoundNumber($event)\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-help-students-section\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d\"{{Sections.courses}}\" class\u003d\"section-body\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-help-courses-section #coursesHelpSection [key]\u003d\"key\" (matchFound)\u003d\"updateMatchFoundNumber($event)\" (collapseStudentEditDetails)\u003d\"collapseStudentEditDetails()\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-help-courses-section\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d\"{{Sections.sessions}}\" class\u003d\"section-body\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-help-sessions-section #sessionsHelpSection [key]\u003d\"key\" (matchFound)\u003d\"updateMatchFoundNumber($event)\"\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-help-sessions-section\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d\"{{Sections.questions}}\" class\u003d\"section-body\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-help-questions-section #questionsHelpSection [key]\u003d\"key\" (matchFound)\u003d\"updateMatchFoundNumber($event)\" (collapsePeerEvalTips)\u003d\"collapsePeerEvalTips()\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-help-questions-section\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"Derek-Hardy"},"content":"  \u003cdiv class\u003d\"side-nav container-fluid col-lg-2\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003cp\u003e\u003cb\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      Browse by topic:"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/b\u003e\u003c/p\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003cul class\u003d\"nav nav-pills flex-column\"\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003cli class\u003d\"nav-item\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"scroll(Sections.students)\" [tmRouterLink]\u003d\"\"\u003eStudents\u003c/a\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003cli class\u003d\"nav-item\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"scroll(Sections.courses)\" [tmRouterLink]\u003d\"\"\u003eCourses\u003c/a\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cli class\u003d\"nav-item\"\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"scroll(Sections.sessions)\" [tmRouterLink]\u003d\"\"\u003eSessions\u003c/a\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003cli class\u003d\"nav-item\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"scroll(Sections.questions)\" [tmRouterLink]\u003d\"\"\u003eQuestions\u003c/a\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003cul class\u003d\"nav nav-pills flex-column\"\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003cli class\u003d\"nav-item\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"scroll(Sections.body)\" [tmRouterLink]\u003d\"\"\u003eBack to Top \u003ci class\u003d\"fas fa-arrow-up\"\u003e\u003c/i\u003e \u003c/a\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"Derek-Hardy":2,"-":68}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".side-nav {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  width: 150px;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  top: 100px;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  right: 5%;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  position: fixed;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":".flex-container {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  flex-wrap: nowrap;"},{"lineNumber":11,"author":{"gitId":"Derek-Hardy"},"content":"  padding-right: 30px;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":".section-body {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  padding-bottom: 5px;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":18,"author":{"gitId":"Derek-Hardy"},"content":"@media (max-width: 992px) {"},{"lineNumber":19,"author":{"gitId":"jianhandev"},"content":"  .side-nav {"},{"lineNumber":20,"author":{"gitId":"jianhandev"},"content":"    display: none;"},{"lineNumber":21,"author":{"gitId":"jianhandev"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"jianhandev"},"content":""},{"lineNumber":23,"author":{"gitId":"jianhandev"},"content":"  .flex-container {"},{"lineNumber":24,"author":{"gitId":"jianhandev"},"content":"    padding-right: 0;"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"jianhandev"},"content":"}"}],"authorContributionMap":{"jianhandev":9,"Derek-Hardy":2,"-":15}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-data.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  ContributionStatistics,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackConstantSumDistributePointsType,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackConstantSumQuestionDetails,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackConstantSumResponseDetails,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  FeedbackContributionResponseDetails,"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  FeedbackMcqQuestionDetails,"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  FeedbackNumericalScaleResponseDetails,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsResponseDetails,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FeedbackRubricQuestionDetails,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  FeedbackRubricResponseDetails,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackVisibilityType,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  ResponseOutput,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/api-output\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    DEFAULT_CONTRIBUTION_QUESTION_DETAILS,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    DEFAULT_MCQ_QUESTION_DETAILS,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    DEFAULT_NUMSCALE_QUESTION_DETAILS,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    DEFAULT_RANK_OPTIONS_QUESTION_DETAILS,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    DEFAULT_RUBRIC_QUESTION_DETAILS,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    DEFAULT_TEXT_QUESTION_DETAILS,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../../../../types/default-question-structs\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { CommentTableModel } from \u0027../../../components/comment-box/comment-table/comment-table.component\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"} from \u0027../../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { QuestionSubmissionFormModel,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"} from \u0027../../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { Response } from \u0027../../../components/question-types/question-statistics/question-statistics\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    QuestionTabModel,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"} from \u0027../../../pages-instructor/instructor-session-result-page/instructor-session-result-page.component\u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":45,"author":{"gitId":"-"},"content":" * Structure for example of essay question model"},{"lineNumber":46,"author":{"gitId":"-"},"content":" */"},{"lineNumber":47,"author":{"gitId":"-"},"content":"export const EXAMPLE_ESSAY_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_TEXT_QUESTION_DETAILS(),"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":73,"author":{"gitId":"-"},"content":"};"},{"lineNumber":74,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":75,"author":{"gitId":"-"},"content":" * Structure for example of numerical scale question model"},{"lineNumber":76,"author":{"gitId":"-"},"content":" */"},{"lineNumber":77,"author":{"gitId":"-"},"content":"export const EXAMPLE_NUMERICAL_SCALE_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_NUMSCALE_QUESTION_DETAILS(),"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":103,"author":{"gitId":"-"},"content":"};"},{"lineNumber":104,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":105,"author":{"gitId":"-"},"content":" * Structure for example of numerical scale responses"},{"lineNumber":106,"author":{"gitId":"-"},"content":" */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"export const EXAMPLE_NUMERICAL_SCALE_RESPONSES: Response\u003cFeedbackNumericalScaleResponseDetails\u003e[] \u003d ["},{"lineNumber":108,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      answer: 2,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":150,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      answer: 4,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"      answer: 3,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      answer: 4,"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":220,"author":{"gitId":"-"},"content":"];"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Structure for example of numerical scale response output"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */"},{"lineNumber":224,"author":{"gitId":"-"},"content":"export const EXAMPLE_NUMERICAL_SCALE_RESPONSE_OUTPUT: ResponseOutput[] \u003d ["},{"lineNumber":225,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    responseId: \u00271\u0027,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    responseId: \u00272\u0027,"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    responseId: \u00273\u0027,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      answer: 2,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    responseId: \u00274\u0027,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    responseId: \u00275\u0027,"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      answer: 4,"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    responseId: \u00276\u0027,"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      answer: 3,"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    responseId: \u00277\u0027,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      answer: 4,"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":344,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    responseId: \u00278\u0027,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      answer: 5,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.NUMSCALE,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    } as FeedbackNumericalScaleResponseDetails,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":360,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":361,"author":{"gitId":"-"},"content":"];"},{"lineNumber":362,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":363,"author":{"gitId":"-"},"content":" * Structure for example of numerical scale question tab model"},{"lineNumber":364,"author":{"gitId":"-"},"content":" */"},{"lineNumber":365,"author":{"gitId":"-"},"content":"export const EXAMPLE_NUMERICAL_SCALE_QUESTION_TAB_MODEL: QuestionTabModel \u003d {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  question: EXAMPLE_NUMERICAL_SCALE_QUESTION_MODEL,"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  responses: EXAMPLE_NUMERICAL_SCALE_RESPONSE_OUTPUT,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"  statistics: \u0027\u0027,"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  hasPopulated: true,"},{"lineNumber":370,"author":{"gitId":"-"},"content":"  isTabExpanded: true,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"};"},{"lineNumber":372,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":373,"author":{"gitId":"-"},"content":" * Structure for example of numerical scale questions"},{"lineNumber":374,"author":{"gitId":"-"},"content":" */"},{"lineNumber":375,"author":{"gitId":"-"},"content":"export const EXAMPLE_NUMERICAL_SCALE_QUESTIONS: Record\u003cstring, QuestionTabModel\u003e \u003d {"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  question: EXAMPLE_NUMERICAL_SCALE_QUESTION_TAB_MODEL,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"};"},{"lineNumber":378,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":379,"author":{"gitId":"-"},"content":" * Structure for example of instructor comment tab model"},{"lineNumber":380,"author":{"gitId":"-"},"content":" */"},{"lineNumber":381,"author":{"gitId":"-"},"content":"export const EXAMPLE_INSTRUCTOR_COMMENT_TABLE_MODEL: Record\u003cstring, CommentTableModel\u003e \u003d {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  1: {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":386,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  2: {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":402,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":410,"author":{"gitId":"-"},"content":""},{"lineNumber":411,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  3: {"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  4: {"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":433,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":444,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  5: {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":451,"author":{"gitId":"-"},"content":""},{"lineNumber":452,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":454,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":456,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":458,"author":{"gitId":"-"},"content":""},{"lineNumber":459,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  6: {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":464,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":471,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":472,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":478,"author":{"gitId":"-"},"content":"  7: {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":483,"author":{"gitId":"-"},"content":""},{"lineNumber":484,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":486,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":488,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":492,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":493,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":494,"author":{"gitId":"-"},"content":"  8: {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    commentRows: [],"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    newCommentRow: {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":498,"author":{"gitId":"-"},"content":"        commentText: \u0027\u0027,"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":502,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":504,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    isAddingNewComment: false,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    isReadOnly: true,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":510,"author":{"gitId":"-"},"content":"};"},{"lineNumber":511,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":512,"author":{"gitId":"-"},"content":" * Structure for example of feedback session"},{"lineNumber":513,"author":{"gitId":"-"},"content":" */"},{"lineNumber":514,"author":{"gitId":"-"},"content":"export const EXAMPLE_FEEDBACK_SESSION: FeedbackSession \u003d {"},{"lineNumber":515,"author":{"gitId":"-"},"content":"  courseId: \u0027CS2103T\u0027,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"  timeZone: \u0027UTC\u0027,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  feedbackSessionName: \u0027Project Feedback 1\u0027,"},{"lineNumber":518,"author":{"gitId":"-"},"content":"  instructions: \u0027Enter your feedback for projects\u0027,"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  submissionStartTimestamp: 0,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"  submissionEndTimestamp: 0,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  gracePeriod: 0,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"  submissionStatus: FeedbackSessionSubmissionStatus.CLOSED,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"  publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"  isClosingEmailEnabled: true,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"  isPublishedEmailEnabled: true,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  createdAtTimestamp: 0,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"};"},{"lineNumber":530,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":531,"author":{"gitId":"-"},"content":" * Structure for example of distrution point option question detail"},{"lineNumber":532,"author":{"gitId":"-"},"content":" */"},{"lineNumber":533,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTE_POINT_OPTION_QUESTION_DETAIL: FeedbackConstantSumQuestionDetails \u003d {"},{"lineNumber":534,"author":{"gitId":"-"},"content":"  numOfConstSumOptions: 2,"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  constSumOptions: [\u0027Option A\u0027, \u0027Option B\u0027],"},{"lineNumber":536,"author":{"gitId":"-"},"content":"  distributeToRecipients: false,"},{"lineNumber":537,"author":{"gitId":"-"},"content":"  pointsPerOption: false,"},{"lineNumber":538,"author":{"gitId":"-"},"content":"  forceUnevenDistribution: false,"},{"lineNumber":539,"author":{"gitId":"-"},"content":"  distributePointsFor: FeedbackConstantSumDistributePointsType.NONE,"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  points: 100,"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.CONSTSUM_OPTIONS,"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  questionText: \u0027\u0027,"},{"lineNumber":543,"author":{"gitId":"-"},"content":"};"},{"lineNumber":544,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":545,"author":{"gitId":"-"},"content":" * Structure for example of distribution point option model"},{"lineNumber":546,"author":{"gitId":"-"},"content":" */"},{"lineNumber":547,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTED_POINT_OPTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":549,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":550,"author":{"gitId":"-"},"content":""},{"lineNumber":551,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.CONSTSUM_OPTIONS,"},{"lineNumber":555,"author":{"gitId":"-"},"content":"  questionDetails: EXAMPLE_DISTRIBUTE_POINT_OPTION_QUESTION_DETAIL,"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":561,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":566,"author":{"gitId":"-"},"content":""},{"lineNumber":567,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":569,"author":{"gitId":"-"},"content":""},{"lineNumber":570,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":571,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":572,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":573,"author":{"gitId":"-"},"content":"};"},{"lineNumber":574,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":575,"author":{"gitId":"-"},"content":" * Structure for example of distribute point option response output"},{"lineNumber":576,"author":{"gitId":"-"},"content":" */"},{"lineNumber":577,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTE_POINT_OPTION_RESPONSE_OUTPUT: ResponseOutput[] \u003d ["},{"lineNumber":578,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    responseId: \u00271\u0027,"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":585,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"      answers: [2, 8],"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":594,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":595,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    responseId: \u00272\u0027,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":603,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      answers: [3, 7],"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":612,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    responseId: \u00273\u0027,"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":616,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":617,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":619,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":620,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":622,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      answers: [5, 5],"},{"lineNumber":625,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":627,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":628,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":629,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    responseId: \u00274\u0027,"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":633,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":635,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":636,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"      answers: [5, 5],"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":645,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":646,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":648,"author":{"gitId":"-"},"content":"    responseId: \u00275\u0027,"},{"lineNumber":649,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":650,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":657,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"      answers: [9, 1],"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":662,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":663,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":665,"author":{"gitId":"-"},"content":"    responseId: \u00276\u0027,"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":672,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":674,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"      answers: [6, 4],"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":679,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":680,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":682,"author":{"gitId":"-"},"content":"    responseId: \u00277\u0027,"},{"lineNumber":683,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":684,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":685,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":686,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":690,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":691,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"      answers: [4, 6],"},{"lineNumber":693,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":695,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":696,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":697,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":698,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    responseId: \u00278\u0027,"},{"lineNumber":700,"author":{"gitId":"-"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":701,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":702,"author":{"gitId":"-"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":703,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":704,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":705,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":706,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":707,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":709,"author":{"gitId":"-"},"content":"      answers: [7, 3],"},{"lineNumber":710,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONSTSUM,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"    } as FeedbackConstantSumResponseDetails,"},{"lineNumber":712,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":713,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":714,"author":{"gitId":"-"},"content":"];"},{"lineNumber":715,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":716,"author":{"gitId":"-"},"content":" * Structure for example of distribute point option question tab model"},{"lineNumber":717,"author":{"gitId":"-"},"content":" */"},{"lineNumber":718,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTE_POINT_OPTION_QUESTION_TAB_MODEL: QuestionTabModel \u003d {"},{"lineNumber":719,"author":{"gitId":"-"},"content":"  question: EXAMPLE_DISTRIBUTED_POINT_OPTION_MODEL,"},{"lineNumber":720,"author":{"gitId":"-"},"content":"  responses: EXAMPLE_DISTRIBUTE_POINT_OPTION_RESPONSE_OUTPUT,"},{"lineNumber":721,"author":{"gitId":"-"},"content":"  statistics: \u0027\u0027,"},{"lineNumber":722,"author":{"gitId":"-"},"content":"  hasPopulated: true,"},{"lineNumber":723,"author":{"gitId":"-"},"content":"  isTabExpanded: true,"},{"lineNumber":724,"author":{"gitId":"-"},"content":"};"},{"lineNumber":725,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":726,"author":{"gitId":"-"},"content":" * Structure for example of distribute point option questions"},{"lineNumber":727,"author":{"gitId":"-"},"content":" */"},{"lineNumber":728,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTE_POINT_OPTION_QUESTIONS: Record\u003cstring, QuestionTabModel\u003e \u003d {"},{"lineNumber":729,"author":{"gitId":"-"},"content":"  question: EXAMPLE_DISTRIBUTE_POINT_OPTION_QUESTION_TAB_MODEL,"},{"lineNumber":730,"author":{"gitId":"-"},"content":"};"},{"lineNumber":731,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":732,"author":{"gitId":"-"},"content":" * Structure for example of distributed point recipient model"},{"lineNumber":733,"author":{"gitId":"-"},"content":" */"},{"lineNumber":734,"author":{"gitId":"-"},"content":"export const EXAMPLE_DISTRIBUTED_POINT_RECIPIENT_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":735,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":737,"author":{"gitId":"-"},"content":""},{"lineNumber":738,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":740,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.CONSTSUM_RECIPIENTS,"},{"lineNumber":742,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_CONSTSUM_RECIPIENTS_QUESTION_DETAILS(),"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":745,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":746,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":747,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":749,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":750,"author":{"gitId":"-"},"content":""},{"lineNumber":751,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":752,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":755,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":758,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":759,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":760,"author":{"gitId":"-"},"content":"};"},{"lineNumber":761,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":762,"author":{"gitId":"-"},"content":" * Structure for example of team contribution question model"},{"lineNumber":763,"author":{"gitId":"-"},"content":" */"},{"lineNumber":764,"author":{"gitId":"-"},"content":"export const EXAMPLE_TEAM_CONTRIBUTION_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":766,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":770,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":771,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":772,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_CONTRIBUTION_QUESTION_DETAILS(),"},{"lineNumber":773,"author":{"gitId":"-"},"content":""},{"lineNumber":774,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":775,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":776,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":777,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":778,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":779,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":780,"author":{"gitId":"-"},"content":""},{"lineNumber":781,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":782,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":783,"author":{"gitId":"-"},"content":""},{"lineNumber":784,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":785,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":786,"author":{"gitId":"-"},"content":""},{"lineNumber":787,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":788,"author":{"gitId":"-"},"content":"    FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":789,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":790,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":791,"author":{"gitId":"-"},"content":"};"},{"lineNumber":792,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":793,"author":{"gitId":"-"},"content":" * Structure for example of team contribution response output"},{"lineNumber":794,"author":{"gitId":"-"},"content":" */"},{"lineNumber":795,"author":{"gitId":"-"},"content":"export const EXAMPLE_TEAM_CONTRIBUTION_RESPONSE_OUTPUT: ResponseOutput[] \u003d ["},{"lineNumber":796,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":797,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":798,"author":{"gitId":"-"},"content":"    responseId: \u00271\u0027,"},{"lineNumber":799,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":800,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":802,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":804,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":805,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":806,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":807,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":808,"author":{"gitId":"-"},"content":"      answer: 90,"},{"lineNumber":809,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":810,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":811,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":812,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":813,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":814,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":815,"author":{"gitId":"-"},"content":"    responseId: \u00272\u0027,"},{"lineNumber":816,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":817,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":818,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":819,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":820,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":821,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":822,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":823,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":824,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":825,"author":{"gitId":"-"},"content":"      answer: 70,"},{"lineNumber":826,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":827,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":828,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":829,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":830,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":831,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":832,"author":{"gitId":"-"},"content":"    responseId: \u00273\u0027,"},{"lineNumber":833,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":834,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":835,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":838,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":839,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":840,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":841,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":842,"author":{"gitId":"-"},"content":"      answer: 120,"},{"lineNumber":843,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":844,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":846,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":847,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":848,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":849,"author":{"gitId":"-"},"content":"    responseId: \u00274\u0027,"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":852,"author":{"gitId":"-"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":853,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":855,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":856,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":857,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":858,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":859,"author":{"gitId":"-"},"content":"      answer: 100,"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":861,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":862,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":863,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":864,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":865,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    responseId: \u00275\u0027,"},{"lineNumber":867,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":869,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":870,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":871,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":873,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":875,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":876,"author":{"gitId":"-"},"content":"      answer: 110,"},{"lineNumber":877,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":878,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":879,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":880,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":881,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":882,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":883,"author":{"gitId":"-"},"content":"    responseId: \u00276\u0027,"},{"lineNumber":884,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":886,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":889,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":890,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":893,"author":{"gitId":"-"},"content":"      answer: 110,"},{"lineNumber":894,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":895,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":896,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":897,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":898,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":899,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    responseId: \u00277\u0027,"},{"lineNumber":901,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":902,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":906,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":907,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":908,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":909,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"      answer: 100,"},{"lineNumber":911,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":912,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":913,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":914,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":915,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":916,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":917,"author":{"gitId":"-"},"content":"    responseId: \u00278\u0027,"},{"lineNumber":918,"author":{"gitId":"-"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":919,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":920,"author":{"gitId":"-"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":921,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":922,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":923,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":924,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":925,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":926,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":927,"author":{"gitId":"-"},"content":"      answer: 110,"},{"lineNumber":928,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":929,"author":{"gitId":"-"},"content":"    } as FeedbackContributionResponseDetails,"},{"lineNumber":930,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":931,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":932,"author":{"gitId":"-"},"content":"];"},{"lineNumber":933,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":934,"author":{"gitId":"-"},"content":" * Structure for example of contribution statistics"},{"lineNumber":935,"author":{"gitId":"-"},"content":" */"},{"lineNumber":936,"author":{"gitId":"-"},"content":"export const EXAMPLE_CONTRIBUTION_STATISTICS: ContributionStatistics \u003d {"},{"lineNumber":937,"author":{"gitId":"-"},"content":"  results: {"},{"lineNumber":938,"author":{"gitId":"-"},"content":"    \u0027alice@gmail.com\u0027: {"},{"lineNumber":939,"author":{"gitId":"-"},"content":"      claimed: -999,"},{"lineNumber":940,"author":{"gitId":"-"},"content":"      perceived: -9999,"},{"lineNumber":941,"author":{"gitId":"-"},"content":"      claimedOthers: {"},{"lineNumber":942,"author":{"gitId":"-"},"content":"        \u0027bob@gmail.com\u0027: 90,"},{"lineNumber":943,"author":{"gitId":"-"},"content":"        \u0027emma@gmail.com\u0027: 110,"},{"lineNumber":944,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":945,"author":{"gitId":"-"},"content":"      perceivedOthers: [],"},{"lineNumber":946,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":947,"author":{"gitId":"-"},"content":"    \u0027bob@gmail.com\u0027: {"},{"lineNumber":948,"author":{"gitId":"-"},"content":"      claimed: 100,"},{"lineNumber":949,"author":{"gitId":"-"},"content":"      perceived: 92,"},{"lineNumber":950,"author":{"gitId":"-"},"content":"      claimedOthers: {},"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      perceivedOthers: [109, 90, 78, -9999],"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":953,"author":{"gitId":"-"},"content":"    \u0027charles@gmail.com\u0027: {"},{"lineNumber":954,"author":{"gitId":"-"},"content":"      claimed: -999,"},{"lineNumber":955,"author":{"gitId":"-"},"content":"      perceived: -9999,"},{"lineNumber":956,"author":{"gitId":"-"},"content":"      claimedOthers: {"},{"lineNumber":957,"author":{"gitId":"-"},"content":"        \u0027bob@gmail.com\u0027: 78,"},{"lineNumber":958,"author":{"gitId":"-"},"content":"        \u0027emma@gmail.com\u0027: 122,"},{"lineNumber":959,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":960,"author":{"gitId":"-"},"content":"      perceivedOthers: [],"},{"lineNumber":961,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":962,"author":{"gitId":"-"},"content":"    \u0027david@gmail.com\u0027: {"},{"lineNumber":963,"author":{"gitId":"-"},"content":"      claimed: -999,"},{"lineNumber":964,"author":{"gitId":"-"},"content":"      perceived: -9999,"},{"lineNumber":965,"author":{"gitId":"-"},"content":"      claimedOthers: {"},{"lineNumber":966,"author":{"gitId":"-"},"content":"        \u0027bob@gmail.com\u0027: 109,"},{"lineNumber":967,"author":{"gitId":"-"},"content":"        \u0027emma@gmail.com\u0027: 91,"},{"lineNumber":968,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":969,"author":{"gitId":"-"},"content":"      perceivedOthers: [],"},{"lineNumber":970,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":971,"author":{"gitId":"-"},"content":"    \u0027emma@gmail.com\u0027: {"},{"lineNumber":972,"author":{"gitId":"-"},"content":"      claimed: 110,"},{"lineNumber":973,"author":{"gitId":"-"},"content":"      perceived: 108,"},{"lineNumber":974,"author":{"gitId":"-"},"content":"      claimedOthers: {},"},{"lineNumber":975,"author":{"gitId":"-"},"content":"      perceivedOthers: [122, 110, 91, -9999],"},{"lineNumber":976,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":977,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":978,"author":{"gitId":"-"},"content":"};"},{"lineNumber":979,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":980,"author":{"gitId":"-"},"content":" * Structure for example of team contribution question tab model"},{"lineNumber":981,"author":{"gitId":"-"},"content":" */"},{"lineNumber":982,"author":{"gitId":"-"},"content":"export const EXAMPLE_TEAM_CONTRIBUTION_QUESTION_TAB_MODEL: QuestionTabModel \u003d {"},{"lineNumber":983,"author":{"gitId":"-"},"content":"  question: EXAMPLE_TEAM_CONTRIBUTION_QUESTION_MODEL,"},{"lineNumber":984,"author":{"gitId":"-"},"content":"  responses: EXAMPLE_TEAM_CONTRIBUTION_RESPONSE_OUTPUT,"},{"lineNumber":985,"author":{"gitId":"-"},"content":"  statistics: JSON.stringify(EXAMPLE_CONTRIBUTION_STATISTICS),"},{"lineNumber":986,"author":{"gitId":"-"},"content":"  hasPopulated: true,"},{"lineNumber":987,"author":{"gitId":"-"},"content":"  isTabExpanded: true,"},{"lineNumber":988,"author":{"gitId":"-"},"content":"};"},{"lineNumber":989,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":990,"author":{"gitId":"-"},"content":" * Structure for example of team contribution questions"},{"lineNumber":991,"author":{"gitId":"-"},"content":" */"},{"lineNumber":992,"author":{"gitId":"-"},"content":"export const EXAMPLE_TEAM_CONTRIBUTION_QUESTIONS: Record\u003cstring, QuestionTabModel\u003e \u003d {"},{"lineNumber":993,"author":{"gitId":"-"},"content":"  question: EXAMPLE_TEAM_CONTRIBUTION_QUESTION_TAB_MODEL,"},{"lineNumber":994,"author":{"gitId":"-"},"content":"};"},{"lineNumber":995,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":996,"author":{"gitId":"-"},"content":" * Structure for example of rubric question model"},{"lineNumber":997,"author":{"gitId":"-"},"content":" */"},{"lineNumber":998,"author":{"gitId":"-"},"content":"export const EXAMPLE_RUBRIC_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":999,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":1001,"author":{"gitId":"-"},"content":""},{"lineNumber":1002,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"  questionDetails: {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"    ...DEFAULT_RUBRIC_QUESTION_DETAILS(),"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    numOfRubricChoices: 4,"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"    rubricChoices: [\u0027Strongly Disagree\u0027, \u0027Disagree\u0027, \u0027Agree\u0027, \u0027Strongly Agree\u0027],"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"    numOfRubricSubQuestions: 2,"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"    rubricSubQuestions:"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"      [\u0027This student participates well in online discussions.\u0027, \u0027This student completes assigned tasks on time.\u0027],"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"    rubricDescriptions: ["},{"lineNumber":1014,"author":{"gitId":"-"},"content":"      [\u0027Rarely or never responds.\u0027, \u0027Occasionally responds, but never initiates discussions.\u0027,"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"        \u0027Takes part in discussions and sometimes initiates discussions.\u0027,"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"        \u0027Initiates discussions frequently, and engages the team.\u0027],"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"      [\u0027Rarely or never completes tasks.\u0027, \u0027Often misses deadlines.\u0027, \u0027Occasionally misses deadlines.\u0027,"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"        \u0027Tasks are always completed before the deadline.\u0027]],"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"  } as FeedbackRubricQuestionDetails,"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":1027,"author":{"gitId":"-"},"content":""},{"lineNumber":1028,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1030,"author":{"gitId":"-"},"content":""},{"lineNumber":1031,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1033,"author":{"gitId":"-"},"content":""},{"lineNumber":1034,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1039,"author":{"gitId":"-"},"content":" * Structure for example of rubric question response output"},{"lineNumber":1040,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"export const EXAMPLE_RUBRIC_QUESTION_RESPONSE_OUTPUT: ResponseOutput[] \u003d ["},{"lineNumber":1042,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"    responseId: \u00271\u0027,"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1053,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"      answer: [0, 0],"},{"lineNumber":1055,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1057,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1061,"author":{"gitId":"-"},"content":"    responseId: \u00272\u0027,"},{"lineNumber":1062,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":1063,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1064,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1065,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1066,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":1067,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1068,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1069,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1070,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"      answer: [2, 2],"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1077,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1078,"author":{"gitId":"-"},"content":"    responseId: \u00273\u0027,"},{"lineNumber":1079,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":1080,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1088,"author":{"gitId":"-"},"content":"      answer: [1, 1],"},{"lineNumber":1089,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1090,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"    responseId: \u00274\u0027,"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"      answer: [1, 2],"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"    responseId: \u00275\u0027,"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"      answer: [0, 1],"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"    responseId: \u00276\u0027,"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"      answer: [2, 3],"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1146,"author":{"gitId":"-"},"content":"    responseId: \u00277\u0027,"},{"lineNumber":1147,"author":{"gitId":"-"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1149,"author":{"gitId":"-"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1150,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1151,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":1152,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1153,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1154,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1156,"author":{"gitId":"-"},"content":"      answer: [1, 3],"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"    responseId: \u00278\u0027,"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1173,"author":{"gitId":"-"},"content":"      answer: [0, 1],"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"    } as FeedbackRubricResponseDetails,"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"];"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1180,"author":{"gitId":"-"},"content":" * Structure for example of rubric question questions tab model"},{"lineNumber":1181,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"export const EXAMPLE_RUBRIC_QUESTION_QUESTION_TAB_MODEL: QuestionTabModel \u003d {"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"  question: EXAMPLE_RUBRIC_QUESTION_MODEL,"},{"lineNumber":1184,"author":{"gitId":"-"},"content":"  responses: EXAMPLE_RUBRIC_QUESTION_RESPONSE_OUTPUT,"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"  statistics: \u0027\u0027,"},{"lineNumber":1186,"author":{"gitId":"-"},"content":"  hasPopulated: true,"},{"lineNumber":1187,"author":{"gitId":"-"},"content":"  isTabExpanded: true,"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1189,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1190,"author":{"gitId":"-"},"content":" * Structure for example of rubric question questions"},{"lineNumber":1191,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"export const EXAMPLE_RUBRIC_QUESTION_QUESTIONS: Record\u003cstring, QuestionTabModel\u003e \u003d {"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"  question: EXAMPLE_RUBRIC_QUESTION_QUESTION_TAB_MODEL,"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1196,"author":{"gitId":"-"},"content":" * Structure for example of rank recipient question model"},{"lineNumber":1197,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1198,"author":{"gitId":"-"},"content":"export const EXAMPLE_RANK_RECIPIENT_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":1201,"author":{"gitId":"-"},"content":""},{"lineNumber":1202,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1206,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_RANK_RECIPIENTS_QUESTION_DETAILS(),"},{"lineNumber":1207,"author":{"gitId":"-"},"content":""},{"lineNumber":1208,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":1214,"author":{"gitId":"-"},"content":""},{"lineNumber":1215,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1217,"author":{"gitId":"-"},"content":""},{"lineNumber":1218,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1220,"author":{"gitId":"-"},"content":""},{"lineNumber":1221,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1226,"author":{"gitId":"-"},"content":" * Structure for example of rank recipient response output"},{"lineNumber":1227,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"export const EXAMPLE_RANK_RECIPIENT_RESPONSE_OUTPUT: ResponseOutput[] \u003d ["},{"lineNumber":1229,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"    responseId: \u00271\u0027,"},{"lineNumber":1232,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1234,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1236,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027Alice\u0027,"},{"lineNumber":1237,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1238,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1241,"author":{"gitId":"-"},"content":"      answer: 2,"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1243,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"    responseId: \u00272\u0027,"},{"lineNumber":1249,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1251,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1253,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027Alice\u0027,"},{"lineNumber":1254,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1255,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1256,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1257,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1258,"author":{"gitId":"AdithyaNarayan"},"content":"      answer: 1,"},{"lineNumber":1259,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1260,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1261,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1262,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1263,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1264,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1265,"author":{"gitId":"-"},"content":"    responseId: \u00273\u0027,"},{"lineNumber":1266,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Emma\u0027,"},{"lineNumber":1267,"author":{"gitId":"AdithyaNarayan"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":1268,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1269,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1270,"author":{"gitId":"-"},"content":"    recipient: \u0027Bob\u0027,"},{"lineNumber":1271,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1272,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1273,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1274,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1275,"author":{"gitId":"AdithyaNarayan"},"content":"      answer: 2,"},{"lineNumber":1276,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1277,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1278,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1279,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1280,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1281,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1282,"author":{"gitId":"-"},"content":"    responseId: \u00274\u0027,"},{"lineNumber":1283,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":1284,"author":{"gitId":"AdithyaNarayan"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1285,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1286,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1287,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027Charles\u0027,"},{"lineNumber":1288,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1289,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1290,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1291,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1292,"author":{"gitId":"-"},"content":"      answer: 1,"},{"lineNumber":1293,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1294,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1295,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1296,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1297,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1298,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1299,"author":{"gitId":"-"},"content":"    responseId: \u00275\u0027,"},{"lineNumber":1300,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027David\u0027,"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1302,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1304,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027Charles\u0027,"},{"lineNumber":1305,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1306,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1309,"author":{"gitId":"AdithyaNarayan"},"content":"      answer: 3,"},{"lineNumber":1310,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1311,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1312,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1313,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1314,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1315,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1316,"author":{"gitId":"-"},"content":"    responseId: \u00276\u0027,"},{"lineNumber":1317,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Alice\u0027,"},{"lineNumber":1318,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1319,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027alice@gmail.com\u0027,"},{"lineNumber":1320,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1321,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027David\u0027,"},{"lineNumber":1322,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1323,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1324,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1325,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1326,"author":{"gitId":"-"},"content":"      answer: 3,"},{"lineNumber":1327,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1328,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1329,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1330,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1331,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1332,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1333,"author":{"gitId":"-"},"content":"    responseId: \u00277\u0027,"},{"lineNumber":1334,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Charles\u0027,"},{"lineNumber":1335,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 1\u0027,"},{"lineNumber":1336,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027charles@gmail.com\u0027,"},{"lineNumber":1337,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1338,"author":{"gitId":"AdithyaNarayan"},"content":"    recipient: \u0027David\u0027,"},{"lineNumber":1339,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientTeam: \u0027Team 1\u0027,"},{"lineNumber":1340,"author":{"gitId":"AdithyaNarayan"},"content":"    recipientEmail: \u0027david@gmail.com\u0027,"},{"lineNumber":1341,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1342,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1343,"author":{"gitId":"-"},"content":"      answer: 2,"},{"lineNumber":1344,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1345,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1346,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1348,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":1349,"author":{"gitId":"-"},"content":"    isMissingResponse: false,"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"    responseId: \u00278\u0027,"},{"lineNumber":1351,"author":{"gitId":"AdithyaNarayan"},"content":"    giver: \u0027Bob\u0027,"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"    giverTeam: \u0027Team 2\u0027,"},{"lineNumber":1353,"author":{"gitId":"AdithyaNarayan"},"content":"    giverEmail: \u0027bob@gmail.com\u0027,"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"    giverSection: \u0027\u0027,"},{"lineNumber":1355,"author":{"gitId":"-"},"content":"    recipient: \u0027Emma\u0027,"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"    recipientTeam: \u0027Team 2\u0027,"},{"lineNumber":1357,"author":{"gitId":"-"},"content":"    recipientEmail: \u0027emma@gmail.com\u0027,"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"    recipientSection: \u0027\u0027,"},{"lineNumber":1359,"author":{"gitId":"-"},"content":"    responseDetails: {"},{"lineNumber":1360,"author":{"gitId":"AdithyaNarayan"},"content":"      answer: 1,"},{"lineNumber":1361,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.RANK_RECIPIENTS,"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"    } as FeedbackRankRecipientsResponseDetails,"},{"lineNumber":1363,"author":{"gitId":"-"},"content":"    instructorComments: [],"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":1365,"author":{"gitId":"-"},"content":"];"},{"lineNumber":1366,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1367,"author":{"gitId":"-"},"content":" * Structure for example of rank recipient question tab model"},{"lineNumber":1368,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"export const EXAMPLE_RANK_RECIPIENT_QUESTION_TAB_MODEL: QuestionTabModel \u003d {"},{"lineNumber":1370,"author":{"gitId":"-"},"content":"  question: EXAMPLE_RANK_RECIPIENT_QUESTION_MODEL,"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"  responses: EXAMPLE_RANK_RECIPIENT_RESPONSE_OUTPUT,"},{"lineNumber":1372,"author":{"gitId":"-"},"content":"  statistics: \u0027\u0027,"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"  hasPopulated: true,"},{"lineNumber":1374,"author":{"gitId":"-"},"content":"  isTabExpanded: true,"},{"lineNumber":1375,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1376,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1377,"author":{"gitId":"-"},"content":" * Structure for example of rank recipient questions"},{"lineNumber":1378,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1379,"author":{"gitId":"-"},"content":"export const EXAMPLE_RANK_RECIPIENT_QUESTIONS: Record\u003cstring, QuestionTabModel\u003e \u003d {"},{"lineNumber":1380,"author":{"gitId":"-"},"content":"  question: EXAMPLE_RANK_RECIPIENT_QUESTION_TAB_MODEL,"},{"lineNumber":1381,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1382,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1383,"author":{"gitId":"-"},"content":" * Structure for example of rank option question model"},{"lineNumber":1384,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1385,"author":{"gitId":"-"},"content":"export const EXAMPLE_RANK_OPTION_QUESTION_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":1386,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1387,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":1388,"author":{"gitId":"-"},"content":""},{"lineNumber":1389,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1390,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":1391,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1392,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.RANK_OPTIONS,"},{"lineNumber":1393,"author":{"gitId":"-"},"content":"  questionDetails: DEFAULT_RANK_OPTIONS_QUESTION_DETAILS(),"},{"lineNumber":1394,"author":{"gitId":"-"},"content":""},{"lineNumber":1395,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":1396,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":1397,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":1398,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":1399,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":1400,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":1401,"author":{"gitId":"-"},"content":""},{"lineNumber":1402,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1404,"author":{"gitId":"-"},"content":""},{"lineNumber":1405,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1406,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1407,"author":{"gitId":"-"},"content":""},{"lineNumber":1408,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":1409,"author":{"gitId":"-"},"content":"    FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":1410,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1411,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1412,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1413,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1414,"author":{"gitId":"-"},"content":" * Structure for example of MCQ question without weights model"},{"lineNumber":1415,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1416,"author":{"gitId":"-"},"content":"export const EXAMPLE_MCQ_QUESTION_WITHOUT_WEIGHTS_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":1417,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1418,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":1419,"author":{"gitId":"-"},"content":""},{"lineNumber":1420,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1421,"author":{"gitId":"-"},"content":"  questionBrief: \u0027How much did you think you contributed?\u0027,"},{"lineNumber":1422,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1423,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":1424,"author":{"gitId":"-"},"content":"  questionDetails: {"},{"lineNumber":1425,"author":{"gitId":"-"},"content":"    ...DEFAULT_MCQ_QUESTION_DETAILS(),"},{"lineNumber":1426,"author":{"gitId":"-"},"content":"    numOfMcqChoices: 3,"},{"lineNumber":1427,"author":{"gitId":"-"},"content":"    mcqChoices: [\u0027I did great!\u0027, \u0027I performed satisfactorily.\u0027, \u0027I did not contribute as much as I wanted to.\u0027],"},{"lineNumber":1428,"author":{"gitId":"-"},"content":"    hasAssignedWeights: false,"},{"lineNumber":1429,"author":{"gitId":"-"},"content":"    mcqWeights: [],"},{"lineNumber":1430,"author":{"gitId":"-"},"content":"  } as FeedbackMcqQuestionDetails,"},{"lineNumber":1431,"author":{"gitId":"-"},"content":""},{"lineNumber":1432,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":1433,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":1434,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":1435,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":1436,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":1437,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":1438,"author":{"gitId":"-"},"content":""},{"lineNumber":1439,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1440,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1441,"author":{"gitId":"-"},"content":""},{"lineNumber":1442,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1443,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1444,"author":{"gitId":"-"},"content":""},{"lineNumber":1445,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":1446,"author":{"gitId":"-"},"content":"    FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":1447,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1448,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1449,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1450,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1451,"author":{"gitId":"-"},"content":" * Structure for example of MCQ question with weights model"},{"lineNumber":1452,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1453,"author":{"gitId":"-"},"content":"export const EXAMPLE_MCQ_QUESTION_WITH_WEIGHTS_MODEL: QuestionEditFormModel \u003d {"},{"lineNumber":1454,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1455,"author":{"gitId":"-"},"content":"  isQuestionHasResponses: false,"},{"lineNumber":1456,"author":{"gitId":"-"},"content":""},{"lineNumber":1457,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1458,"author":{"gitId":"-"},"content":"  questionBrief: \u0027How much did you think you contributed?\u0027,"},{"lineNumber":1459,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1460,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":1461,"author":{"gitId":"-"},"content":"  questionDetails: {"},{"lineNumber":1462,"author":{"gitId":"-"},"content":"    ...DEFAULT_MCQ_QUESTION_DETAILS(),"},{"lineNumber":1463,"author":{"gitId":"-"},"content":"    numOfMcqChoices: 3,"},{"lineNumber":1464,"author":{"gitId":"-"},"content":"    mcqChoices: [\u0027I did great!\u0027, \u0027I performed satisfactorily.\u0027, \u0027I did not contribute as much as I wanted to.\u0027],"},{"lineNumber":1465,"author":{"gitId":"-"},"content":"    hasAssignedWeights: true,"},{"lineNumber":1466,"author":{"gitId":"-"},"content":"    mcqWeights: [1, 3, 5],"},{"lineNumber":1467,"author":{"gitId":"-"},"content":"  } as FeedbackMcqQuestionDetails,"},{"lineNumber":1468,"author":{"gitId":"-"},"content":""},{"lineNumber":1469,"author":{"gitId":"-"},"content":"  isEditable: false,"},{"lineNumber":1470,"author":{"gitId":"-"},"content":"  isSaving: false,"},{"lineNumber":1471,"author":{"gitId":"-"},"content":"  isCollapsed: false,"},{"lineNumber":1472,"author":{"gitId":"-"},"content":"  isVisibilityChanged: false,"},{"lineNumber":1473,"author":{"gitId":"-"},"content":"  isFeedbackPathChanged: false,"},{"lineNumber":1474,"author":{"gitId":"-"},"content":"  isQuestionDetailsChanged: false,"},{"lineNumber":1475,"author":{"gitId":"-"},"content":""},{"lineNumber":1476,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1477,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1478,"author":{"gitId":"-"},"content":""},{"lineNumber":1479,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1480,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1481,"author":{"gitId":"-"},"content":""},{"lineNumber":1482,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT,"},{"lineNumber":1483,"author":{"gitId":"-"},"content":"    FeedbackVisibilityType.GIVER_TEAM_MEMBERS],"},{"lineNumber":1484,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1485,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1486,"author":{"gitId":"-"},"content":"};"},{"lineNumber":1487,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":1488,"author":{"gitId":"-"},"content":" * Structure for example of responder rubric submission form model"},{"lineNumber":1489,"author":{"gitId":"-"},"content":" */"},{"lineNumber":1490,"author":{"gitId":"-"},"content":"export const EXAMPLE_RESPONDER_RUBRIC_SUBMISSION_FORM_MODEL: QuestionSubmissionFormModel \u003d {"},{"lineNumber":1491,"author":{"gitId":"-"},"content":"  recipientList: ["},{"lineNumber":1492,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":1493,"author":{"gitId":"-"},"content":"      recipientIdentifier: \u0027alice\u0027,"},{"lineNumber":1494,"author":{"gitId":"-"},"content":"      recipientName: \u0027Alice\u0027,"},{"lineNumber":1495,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1496,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":1497,"author":{"gitId":"-"},"content":"      recipientIdentifier: \u0027bob\u0027,"},{"lineNumber":1498,"author":{"gitId":"-"},"content":"      recipientName: \u0027Bob\u0027,"},{"lineNumber":1499,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1500,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":1501,"author":{"gitId":"-"},"content":"  recipientSubmissionForms: ["},{"lineNumber":1502,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":1503,"author":{"gitId":"-"},"content":"      responseId: \u0027response1\u0027,"},{"lineNumber":1504,"author":{"gitId":"-"},"content":"      recipientIdentifier: \u0027alice\u0027,"},{"lineNumber":1505,"author":{"gitId":"-"},"content":"      responseDetails: { questionType: FeedbackQuestionType.RUBRIC, answer: [0, 2] } as FeedbackRubricResponseDetails,"},{"lineNumber":1506,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":1507,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1508,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":1509,"author":{"gitId":"-"},"content":"      responseId: \u0027response2\u0027,"},{"lineNumber":1510,"author":{"gitId":"-"},"content":"      recipientIdentifier: \u0027bob\u0027,"},{"lineNumber":1511,"author":{"gitId":"-"},"content":"      responseDetails: { questionType: FeedbackQuestionType.RUBRIC, answer: [1, 3] } as FeedbackRubricResponseDetails,"},{"lineNumber":1512,"author":{"gitId":"-"},"content":"      isValid: true,"},{"lineNumber":1513,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":1514,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":1515,"author":{"gitId":"-"},"content":"  customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":1516,"author":{"gitId":"-"},"content":"  feedbackQuestionId: \u0027\u0027,"},{"lineNumber":1517,"author":{"gitId":"-"},"content":"  questionNumber: 1,"},{"lineNumber":1518,"author":{"gitId":"-"},"content":"  questionBrief: \u0027\u0027,"},{"lineNumber":1519,"author":{"gitId":"-"},"content":"  questionDescription: \u0027\u0027,"},{"lineNumber":1520,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":1521,"author":{"gitId":"-"},"content":"  giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":1522,"author":{"gitId":"-"},"content":"  recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":1523,"author":{"gitId":"-"},"content":"  numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":1524,"author":{"gitId":"-"},"content":"  showResponsesTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1525,"author":{"gitId":"-"},"content":"  showGiverNameTo: [FeedbackVisibilityType.INSTRUCTORS],"},{"lineNumber":1526,"author":{"gitId":"-"},"content":"  showRecipientNameTo: [FeedbackVisibilityType.INSTRUCTORS, FeedbackVisibilityType.RECIPIENT],"},{"lineNumber":1527,"author":{"gitId":"-"},"content":"  questionDetails: {"},{"lineNumber":1528,"author":{"gitId":"-"},"content":"    ...DEFAULT_RUBRIC_QUESTION_DETAILS(),"},{"lineNumber":1529,"author":{"gitId":"-"},"content":"    numOfRubricChoices: 4,"},{"lineNumber":1530,"author":{"gitId":"-"},"content":"    rubricChoices: [\u0027Strongly Disagree\u0027, \u0027Disagree\u0027, \u0027Agree\u0027, \u0027Strongly Agree\u0027],"},{"lineNumber":1531,"author":{"gitId":"-"},"content":"    numOfRubricSubQuestions: 2,"},{"lineNumber":1532,"author":{"gitId":"-"},"content":"    rubricSubQuestions: ["},{"lineNumber":1533,"author":{"gitId":"-"},"content":"      \u0027This student participates well in online discussions.\u0027,"},{"lineNumber":1534,"author":{"gitId":"-"},"content":"      \u0027This student completes assigned tasks on time.\u0027,"},{"lineNumber":1535,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":1536,"author":{"gitId":"-"},"content":"    rubricDescriptions:"},{"lineNumber":1537,"author":{"gitId":"-"},"content":"    ["},{"lineNumber":1538,"author":{"gitId":"-"},"content":"      ["},{"lineNumber":1539,"author":{"gitId":"-"},"content":"        \u0027Rarely or never responds.\u0027, \u0027Occasionally responds, but never initiates discussions.\u0027,"},{"lineNumber":1540,"author":{"gitId":"-"},"content":"        \u0027Takes part in discussions and sometimes initiates discussions.\u0027,"},{"lineNumber":1541,"author":{"gitId":"-"},"content":"        \u0027Initiates discussions frequently, and engages the team.\u0027,"},{"lineNumber":1542,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":1543,"author":{"gitId":"-"},"content":"      ["},{"lineNumber":1544,"author":{"gitId":"-"},"content":"        \u0027Rarely or never completes tasks.\u0027,"},{"lineNumber":1545,"author":{"gitId":"-"},"content":"        \u0027Often misses deadlines.\u0027,"},{"lineNumber":1546,"author":{"gitId":"-"},"content":"        \u0027Occasionally misses deadlines.\u0027,"},{"lineNumber":1547,"author":{"gitId":"-"},"content":"        \u0027Tasks are always completed before the deadline.\u0027,"},{"lineNumber":1548,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":1549,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":1550,"author":{"gitId":"-"},"content":"  } as FeedbackRubricQuestionDetails,"},{"lineNumber":1551,"author":{"gitId":"-"},"content":"};"}],"authorContributionMap":{"AdithyaNarayan":40,"-":1511}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-questions-section/instructor-help-questions-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eQuestions\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 10)\"\u003eSetting Up Questions\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.ESSAY)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.ESSAY\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Essay Questions\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.ESSAY]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      Essay questions are open-ended questions that allow respondents to give text feedback about a question.\u003cbr\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      To set up an essay question:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.ESSAY]\" @collapseAnim\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleEssayQuestionModel\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.SINGLE_ANSWER_MCQ)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.SINGLE_ANSWER_MCQ\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Multiple Choice (Single Answer) Questions\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.SINGLE_ANSWER_MCQ]\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      Multiple-choice (single answer) questions allow respondents to choose one answer from your list of answer options.\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"      Other than manually specifying options, TEAMMATES also supports \u003cb\u003egenerating options\u003c/b\u003e based on the list of students, teams and instructors in the course."},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      To set up a multiple choice (single answer) question:"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":47,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":50,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":51,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":53,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify answer options by writing them manually, or generate options from your course\u0027s list of students, instructors or teams."},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":56,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Specify \u0027Other\u0027 option, and let the student enter their own answer."},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Assign weights to each option for calculating statistics."},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":62,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.SINGLE_ANSWER_MCQ]\" @collapseAnim\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleMCQQuestionWithoutWeightsModel\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      When you view the results of a multiple-choice (single answer) question, TEAMMATES calculates some statistics about the results collected,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      such as the number of responses for each option, and the percentage of response in which each option was chosen."},{"lineNumber":75,"author":{"gitId":"-"},"content":"      If weights are assigned in the question, then additional statistics are calculated such as count and average point for each option."},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u0027Per Recipient Statistics\u0027 are calculated if weights are assigned, it contains the number of responses each recipient received for each option,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      and the total and average points for each recipient."},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eNote: \u003c/strong\u003e Weights can be assigned for questions with existing questions too. To do that, edit the question that needs weights,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      if there are existing responses for that question, the additional statistics will automatically get calculated for the question."},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.SINGLE_ANSWER_MCQ]\" @collapseAnim\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleMCQQuestionWithWeightsModel\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.MULTIPLE_ANSWER_MCQ)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.MULTIPLE_ANSWER_MCQ\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Multiple Choice (Multiple Answer) Questions\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.MULTIPLE_ANSWER_MCQ]\"\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      Multiple-choice (multiple answers) question are similar to the single answer version, except that respondents are able to select multiple options as their response."},{"lineNumber":98,"author":{"gitId":"-"},"content":"      \u003cbr\u003e The setup and result statistics is similar to the single answer version. See"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003ca (click)\u003d\"jumpTo(QuestionsSectionQuestions.SINGLE_ANSWER_MCQ); questionsToCollapsed[QuestionsSectionQuestions.SINGLE_ANSWER_MCQ] \u003d true\" [tmRouterLink]\u003d\"\"\u003eabove\u003c/a\u003e for details."},{"lineNumber":100,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eNote:\u003c/strong\u003e Multiple-choice (multiple answers) question allow respondents to select \u0027None of the above\u0027 option as an answer,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      if \u0027Minimum number of options a respondent is allowed to select\u0027 option is not selected. The result statistics do not contain"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      \u0027None of the above\u0027 responses, as statistics is not calculated for this option."},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.NUMERICAL_SCALE)\""},{"lineNumber":109,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.NUMERICAL_SCALE\""},{"lineNumber":110,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Numerical Scale Questions\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.NUMERICAL_SCALE]\"\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":113,"author":{"gitId":"AdithyaNarayan"},"content":"      Numerical scale questions allow numerical responses from respondents."},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      To set up a numerical scale question:"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":120,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":123,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":126,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the minimum and maximum valid input values — values outside of the range specified will not be allowed."},{"lineNumber":127,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":129,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the precision at which input values should increment — TEAMMATES uses this value to enumerate all possible acceptable responses."},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":132,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":133,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.NUMERICAL_SCALE]\" @collapseAnim\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleNumericalScaleQuestionModel\""},{"lineNumber":138,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":139,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\"\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003c/tm-question-edit-form\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      Statistics for numerical scale questions are also provided for instructors.\u003cbr\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      TEAMMATES calculates the mean, minimum and maximum values based on all responses given."},{"lineNumber":145,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.NUMERICAL_SCALE]\" @collapseAnim\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-question-view"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              [questions]\u003d\"exampleNumericalScaleQuestions\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"              [section]\u003d\"\" [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":150,"author":{"gitId":"-"},"content":"              [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":151,"author":{"gitId":"-"},"content":"              [showStatistics]\u003d\"true\" [indicateMissingResponses]\u003d\"true\""},{"lineNumber":152,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":153,"author":{"gitId":"-"},"content":"              [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\"\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.POINTS_OPTIONS)\""},{"lineNumber":159,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.POINTS_OPTIONS\""},{"lineNumber":160,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Distribute Points (Among Options) Questions\""},{"lineNumber":161,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.POINTS_OPTIONS]\"\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      Distribute points (among options) questions allow respondents to split a fixed number of points among options that you specify."},{"lineNumber":164,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"      To setup a distribute points (among options) question:"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":170,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":171,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":173,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":176,"author":{"gitId":"AdithyaNarayan"},"content":"        List all the answer options from which students can choose."},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":179,"author":{"gitId":"AdithyaNarayan"},"content":"        Choose the number of points students will get to split among the options — you can also choose to specify \u003cb\u003epoints to distribute X number of options\u003c/b\u003e, which gives students a total of \u003ccode\u003e(specified points) x (number of options)\u003c/code\u003e points."},{"lineNumber":180,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":182,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":183,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.POINTS_OPTIONS]\" @collapseAnim\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":187,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleDistributedPointOptionModel\""},{"lineNumber":188,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":189,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\"\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      \u003c/tm-question-edit-form\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      In the results view, TEAMMATES provides statistics on the average number of points each option received."},{"lineNumber":194,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.POINTS_OPTIONS]\" @collapseAnim\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-question-view"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              [questions]\u003d\"exampleDistributePointOptionQuestions\""},{"lineNumber":198,"author":{"gitId":"-"},"content":"              [section]\u003d\"\" [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":199,"author":{"gitId":"-"},"content":"              [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":200,"author":{"gitId":"-"},"content":"              [showStatistics]\u003d\"true\" [indicateMissingResponses]\u003d\"true\""},{"lineNumber":201,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":202,"author":{"gitId":"-"},"content":"              [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\"\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.POINTS_RECIPIENTS)\""},{"lineNumber":208,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.POINTS_RECIPIENTS\""},{"lineNumber":209,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Distribute Points (Among Recipients) Questions\""},{"lineNumber":210,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.POINTS_RECIPIENTS]\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      Distribute points (among recipients) questions allow respondents to split points among a list of recipients.\u003cbr\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      For example, if the question recipient is set to the giver\u0027s team members, students are required to split points among their team members."},{"lineNumber":214,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      To set up a distribute points (among recipients) question:"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":220,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":221,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":223,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":224,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":226,"author":{"gitId":"AdithyaNarayan"},"content":"        Choose the number of points students will get to split among the options — you can also choose to specify \u003cb\u003epoints to distribute X number of options\u003c/b\u003e, which gives students a total of \u003ccode\u003e(specified points) x (number of options)\u003c/code\u003e points."},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":229,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":230,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.POINTS_RECIPIENTS]\" @collapseAnim\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":234,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleDistributedPointRecipientModel\""},{"lineNumber":235,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":236,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\"\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"      \u003c/tm-question-edit-form\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.CONTRIBUTION)\""},{"lineNumber":242,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.CONTRIBUTION\""},{"lineNumber":243,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Team Contribution Questions\""},{"lineNumber":244,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.CONTRIBUTION]\"\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      Team contribution questions are a specialized question type designed to evaluate a student\u0027s level of contribution in a team.\u003cbr\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      They estimate the perceived contribution of a student and prevent students from inflating their own scores."},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      If you do not wish to use TEAMMATES\u0027s specialized calculation scheme, you may choose to use a distribute points (among recipients) question type."},{"lineNumber":251,"author":{"gitId":"-"},"content":"      Distribute points (among recipients) questions calculate the mean of all scores given to the recipient."},{"lineNumber":252,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      To set up a team contribution question:"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":257,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":258,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":260,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":261,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      The feedback path for this question type is fixed: the feedback giver must be a student, and the student must give feedback about his/her team members and himself."},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.CONTRIBUTION]\" @collapseAnim\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":268,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleTeamContributionQuestionModel\""},{"lineNumber":269,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":270,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\"\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      \u003c/tm-question-edit-form\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      Contribution questions in TEAMMATES are unique because they are targeted at measuring team contributions. \u003cbr\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      Thus, TEAMMATES purposefully prevents students from influencing their own ‘perceived contribution’ value."},{"lineNumber":276,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      Perceived contribution is calculated based on what a student\u0027s other team members perceive as his/her contribution."},{"lineNumber":279,"author":{"gitId":"-"},"content":"      The student\u0027s own opinion about his own contribution is not considered for the calculation."},{"lineNumber":280,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      Students enter contribution estimates for self and team members, using the scale \u003ccode\u003eEqual share + x%\u003c/code\u003e. e.g. \u003ccode\u003eEqual share -10%\u003c/code\u003e\u003cbr\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      Based on those values, we try to deduce the student\u0027s answer to the following two questions:"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        In your opinion, what proportion of the project did you do?"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        In your opinion, if your teammates were doing the project by themselves without you, how would they compare against each other in terms of contribution?"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      In the calculation, we do not allow (1) to affect (2). We use (2) to calculate the average perceived contribution for each student. A more detailed version of this calculation can be found"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        \u003cspan class \u003d modal-window-class ngbTooltip\u003d\"Click here for popup.\" \u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"          \u003ca (click)\u003d\"openContribInfoModal(contributionTemplateBody)\"\u003ehere\u003c/a\u003e."},{"lineNumber":297,"author":{"gitId":"-"},"content":"        \u003c/span\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003cng-template #contributionTemplateBody\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"modal-body\"\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"              \u003cstrong\u003eGeneral Mechanism\u003c/strong\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                Students enter contribution estimates for themselves and their team members using the contribution scale"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                (see \u003ca href\u003d\"https://github.com/TEAMMATES/teammates/blob/master/docs/glossary.md#product-related\"\u003e glossary\u003c/a\u003e)."},{"lineNumber":306,"author":{"gitId":"-"},"content":"                \u003cbr\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                \u003cbr\u003eBased on those values, a student\u0027s answer to the following two questions are deduced:"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                \u003cbr\u003e(a) In your opinion, what portion of the project did you do?"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                \u003cbr\u003e(b) In your opinion, if your teammates are doing the project by themselves without you, how do they compare against each other in terms of contribution?"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                \u003cbr\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                \u003cbr\u003eIn the calculation, we do not allow (a) to affect (b). We use (b) to calculate the average perceived contribution for each student."},{"lineNumber":312,"author":{"gitId":"-"},"content":"                \u003cbr\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"              \u003cbr\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"              \u003cstrong\u003eCalculation Scheme\u003c/strong\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"              \u003cdiv\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \u003col type\u003d\"1\"\u003e"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                  \u003cli\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                    \u003cstrong\u003eCalculate \u003ccode\u003enormalizedClaimed\u003c/code\u003e values\u003c/strong\u003e"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                    \u003cdiv\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                      This is required because the total of points entered might not sum up to \u003ccode\u003e100 * (team size)\u003c/code\u003e."},{"lineNumber":324,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                      \u003ccode\u003e(normalized value) \u003d (original value) * (normalization factor)\u003c/code\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"bs-example\"\u003e"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                        entered values: \u003ccode\u003e90\u003c/code\u003e [self], \u003ccode\u003e110\u003c/code\u003e, \u003ccode\u003e130\u003c/code\u003e, \u003ccode\u003eN/A\u003c/code\u003e (total \u003d \u003ccode\u003e330\u003c/code\u003e)"},{"lineNumber":329,"author":{"gitId":"-"},"content":"                        \u003cbr\u003enormalization factor: \u003ccode\u003e(100 * 3) / (90 + 110 + 130) \u003d 300 / 330\u003c/code\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                        \u003cbr\u003enormalized: \u003ccode\u003e82\u003c/code\u003e, \u003ccode\u003e100\u003c/code\u003e, \u003ccode\u003e118\u003c/code\u003e, \u003ccode\u003eN/A\u003c/code\u003e"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                        \u003cbr\u003enormalized total \u003d \u003ccode\u003e300\u003c/code\u003e (i.e. \u003ccode\u003e100 * number of inputs\u003c/code\u003e)"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                      This answers the question (a) above. The student thinks he did \u0027\u003ccode\u003eEqual share - 18%\u003c/code\u003e\u0027 (as indicated by \u003ccode\u003e82\u003c/code\u003e)."},{"lineNumber":334,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                  \u003c/li\u003e"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                  \u003cli\u003e"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    \u003cstrong\u003eCalculate \u003ccode\u003epeerContributionRatio\u003c/code\u003e values by removing self-rating bias\u003c/strong\u003e"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                    \u003cdiv\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                      Here, we ignore the self rating and normalize remaining values."},{"lineNumber":342,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":343,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"bs-example\"\u003e"},{"lineNumber":344,"author":{"gitId":"-"},"content":"                        normalized input (from above): \u003ccode\u003e82\u003c/code\u003e,\u003ccode\u003e100\u003c/code\u003e, \u003ccode\u003e118\u003c/code\u003e, \u003ccode\u003eN/A\u003c/code\u003e"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                        \u003cbr\u003eCalculating unbiased values:"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                        \u003cbr\u003e\u0026nbsp;\u003ccode\u003e82\u003c/code\u003e → ignored."},{"lineNumber":347,"author":{"gitId":"-"},"content":"                        \u003cbr\u003e\u0026nbsp;\u003ccode\u003e100\u003c/code\u003e → \u003ccode\u003e100 * 200 / (100 + 118) \u003d 92\u003c/code\u003e"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                        \u003cbr\u003e\u0026nbsp;\u003ccode\u003e118\u003c/code\u003e → \u003ccode\u003e118 * 200 / (100 + 118) \u003d 108\u003c/code\u003e"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                        \u003cbr\u003eUnbiased values: [self (ignored)], \u003ccode\u003e92\u003c/code\u003e, \u003ccode\u003e108\u003c/code\u003e, \u003ccode\u003eN/A\u003c/code\u003e"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                        \u003cbr\u003eUnbiased values total \u003d \u003ccode\u003e200 (100 * number of ratings)\u003c/code\u003e"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                      This answers the question (b) above. In the example above, the student thinks his teammates contribution ratio is \u003ccode\u003e92:108\u003c/code\u003e and is unsure of the third teammate."},{"lineNumber":353,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                  \u003c/li\u003e"},{"lineNumber":356,"author":{"gitId":"-"},"content":"                  \u003cli\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                    \u003cstrong\u003eCalculate \u003ccode\u003eaveragePerceivedContributionRatio\u003c/code\u003e\u003c/strong\u003e"},{"lineNumber":358,"author":{"gitId":"-"},"content":"                    \u003cdiv\u003e"},{"lineNumber":359,"author":{"gitId":"-"},"content":"                      Next, we calculate \u003ccode\u003eaveragePerceivedContributionRatio\u003c/code\u003e among team members, independent of (a). This consists of these steps:"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                      \u003col type\u003d\"i\"\u003e"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                        \u003cli\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"                          \u003cstrong\u003eCalculate \u003ccode\u003eaveragePerceived\u003c/code\u003e:\u003c/strong\u003e"},{"lineNumber":364,"author":{"gitId":"-"},"content":"                          \u003cdiv\u003e"},{"lineNumber":365,"author":{"gitId":"-"},"content":"                            For each student, take the average of \u003ccode\u003epeerContributionRatio\u003c/code\u003e that others have given him."},{"lineNumber":366,"author":{"gitId":"-"},"content":"                          \u003c/div\u003e"},{"lineNumber":367,"author":{"gitId":"-"},"content":"                          \u003cbr\u003e"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                        \u003c/li\u003e"},{"lineNumber":369,"author":{"gitId":"-"},"content":"                        \u003cli\u003e"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                          \u003cstrong\u003eCalculate \u003ccode\u003enormalizedAveragePerceived\u003c/code\u003e:\u003c/strong\u003e"},{"lineNumber":371,"author":{"gitId":"-"},"content":"                          \u003cdiv\u003e"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                            Normalize the averages, similar to how input was normalized."},{"lineNumber":373,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":374,"author":{"gitId":"-"},"content":"                            \u003ccode\u003e"},{"lineNumber":375,"author":{"gitId":"-"},"content":"                              normalizedAveragePerceived \u003d averagePerceived * normalizationFactor"},{"lineNumber":376,"author":{"gitId":"-"},"content":"                              \u003cbr\u003enormalizationFactor \u003d 100 * (number of students with averagePerceived values)/(sum of averagePerceived)"},{"lineNumber":377,"author":{"gitId":"-"},"content":"                            \u003c/code\u003e"},{"lineNumber":378,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e"},{"lineNumber":379,"author":{"gitId":"-"},"content":"                            \u003cbr\u003eThis is the relative work distribution among team members based on unbiased opinions of team members."},{"lineNumber":380,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e"},{"lineNumber":381,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e"},{"lineNumber":382,"author":{"gitId":"-"},"content":"                          \u003c/div\u003e"},{"lineNumber":383,"author":{"gitId":"-"},"content":"                        \u003c/li\u003e"},{"lineNumber":384,"author":{"gitId":"-"},"content":"                        \u003cli\u003e"},{"lineNumber":385,"author":{"gitId":"-"},"content":"                          \u003cstrong\u003eCalculate \u003ccode\u003enormalizedPeerContributionRatio\u003c/code\u003e\u003c/strong\u003e"},{"lineNumber":386,"author":{"gitId":"-"},"content":"                          \u003cdiv\u003e"},{"lineNumber":387,"author":{"gitId":"-"},"content":"                            Since we normalized the averages (in previous step), we also normalize the value that were averaged in the first place. This is such that average and averaged tallies with each other."},{"lineNumber":388,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e"},{"lineNumber":389,"author":{"gitId":"-"},"content":"                            \u003ccode\u003enormalizedPeerContributionRatio \u003d peerContributionRatio * normalizationFactor\u003c/code\u003e"},{"lineNumber":390,"author":{"gitId":"-"},"content":"                            \u003cbr\u003e"},{"lineNumber":391,"author":{"gitId":"-"},"content":"                          \u003c/div\u003e"},{"lineNumber":392,"author":{"gitId":"-"},"content":"                        \u003c/li\u003e"},{"lineNumber":393,"author":{"gitId":"-"},"content":"                      \u003c/ol\u003e"},{"lineNumber":394,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":395,"author":{"gitId":"-"},"content":"                  \u003c/li\u003e"},{"lineNumber":396,"author":{"gitId":"-"},"content":"                  \u003cli\u003e"},{"lineNumber":397,"author":{"gitId":"-"},"content":"                    \u003cstrong\u003eDenormalize \u003ccode\u003enormalizedAveragePerceived\u003c/code\u003e\u003c/strong\u003e"},{"lineNumber":398,"author":{"gitId":"-"},"content":"                    \u003cdiv\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                      For each student, denormalize \u003ccode\u003enormalizedAveragePerceived\u003c/code\u003e. We scale back to match the total of original"},{"lineNumber":400,"author":{"gitId":"-"},"content":"                      input by student. That way, student can compare his input (i.e., his opinion of the team’s work distribution)"},{"lineNumber":401,"author":{"gitId":"-"},"content":"                      with the team’s opinion. In the example used above, we should use 330/300 as the denormalizing factor for that student."},{"lineNumber":402,"author":{"gitId":"-"},"content":"                      The result could be something like this:"},{"lineNumber":403,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"bs-example\"\u003e"},{"lineNumber":406,"author":{"gitId":"-"},"content":"                        student’s opinion: \u003ccode\u003e90\u003c/code\u003e [self], \u003ccode\u003e110\u003c/code\u003e, \u003ccode\u003e130\u003c/code\u003e, \u003ccode\u003eN/A\u003c/code\u003e (total \u003d \u003ccode\u003e330\u003c/code\u003e)"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                        \u003cbr\u003eteam’s opinion : \u003ccode\u003e95\u003c/code\u003e, \u003ccode\u003e105\u003c/code\u003e, \u003ccode\u003e125\u003c/code\u003e, \u003ccode\u003e115\u003c/code\u003e (total \u003d \u003ccode\u003e440\u003c/code\u003e)"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                      Value transformation steps: input (i.e. claimed) → \u003ccode\u003enormalizedClaimed\u003c/code\u003e →"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                      \u003ccode\u003epeerContributionRatio\u003c/code\u003e → \u003ccode\u003eaveragePerceived\u003c/code\u003e →"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                      \u003ccode\u003enormalizedAveragePerceived\u003c/code\u003e → \u003ccode\u003edenormalizedAveragePerceived\u003c/code\u003e →"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                      \u003ccode\u003enormalizedPeerContributionRatio\u003c/code\u003e"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":414,"author":{"gitId":"-"},"content":"                      \u003cbr\u003e"},{"lineNumber":415,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":416,"author":{"gitId":"-"},"content":"                  \u003c/li\u003e"},{"lineNumber":417,"author":{"gitId":"-"},"content":"                \u003c/ol\u003e"},{"lineNumber":418,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":419,"author":{"gitId":"-"},"content":"              Student view:"},{"lineNumber":420,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":421,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":422,"author":{"gitId":"-"},"content":"                  for claimed contribution, show: same as what the student entered initially (otherwise, the student will be confused as to how the value got changed)"},{"lineNumber":423,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":424,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":425,"author":{"gitId":"-"},"content":"                  for perceived contribution, show: \u003ccode\u003edenormalizedAveragePerceived\u003c/code\u003e"},{"lineNumber":426,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":427,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":428,"author":{"gitId":"-"},"content":"              \u003cbr\u003eInstructor view:"},{"lineNumber":429,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":430,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":431,"author":{"gitId":"-"},"content":"                  for claimed contribution, show: \u003ccode\u003enormalizedClaimed\u003c/code\u003e"},{"lineNumber":432,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":433,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":434,"author":{"gitId":"-"},"content":"                  for perceived contribution, show: \u003ccode\u003enormalizedAveragePerceived\u003c/code\u003e"},{"lineNumber":435,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":436,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"              \u003cbr\u003eNote:"},{"lineNumber":438,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":439,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":440,"author":{"gitId":"-"},"content":"                  Scenario 1: If students give 0 points to each other, then everyone should receive Equal Share and difference should be 0."},{"lineNumber":441,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":442,"author":{"gitId":"-"},"content":"                \u003cli\u003e"},{"lineNumber":443,"author":{"gitId":"-"},"content":"                  Scenario 2: If students are not sure or do not submit the evaluation, then Perceived/Claimed for Instructor should be shown as N/A instead of Equal Share. In this case, difference too should be shown as N/A."},{"lineNumber":444,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":445,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":446,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":447,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      \u003c/ng-template\u003e"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      The results and statistics are presented in the example below. Here is a summary of the terms used:"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":455,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        \u003cb\u003eE (Equal share)\u003c/b\u003e: a relative measure of work done. e.g. For a 3-person team, an ‘Equal share’ means ‘a third of the total work done’."},{"lineNumber":457,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":459,"author":{"gitId":"-"},"content":"        \u003cb \u003eCC (Claimed Contribution)\u003c/b\u003e: This is what the student claimed he contributed."},{"lineNumber":460,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":461,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":462,"author":{"gitId":"-"},"content":"        \u003cb\u003eRatings Received \u003c/b\u003e: These are the peer opinions as to how much the student contributed. These values have been adjusted to neutralize any attempts by students to boost their own standing by rating others low."},{"lineNumber":463,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        \u003cb\u003ePC (Perceived Contribution)\u003c/b\u003e: This is the average value of the ‘Ratings Received’. This can be considered as the"},{"lineNumber":466,"author":{"gitId":"-"},"content":"        \u003ci\u003eteam’s perception of how much the student contributed\u003c/i\u003e."},{"lineNumber":467,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        \u003cb\u003eDiff\u003c/b\u003e: The difference between the claimed contribution (CC) and the perceived contribution (PC). This value can be used to identify those who have over/under-estimated their own contribution."},{"lineNumber":470,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      The ratings in a contribution question can be used to identify relative contribution levels of students in a team."},{"lineNumber":474,"author":{"gitId":"-"},"content":"      If you use these values for grading, also refer the ‘Interpret contribution numbers with care’ caveat in the"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      \u003cbutton class\u003d\"btn btn-link\" (click)\u003d\"collapsePeerEvalTips.emit()\"\u003etips for conducting \u0027team peer evaluation\u0027 sessions\u003c/button\u003e section."},{"lineNumber":476,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      The actual contribution values entered by the student may appear different from the values shown in the results because the system ‘normalizes’ those values so that there is no artificial inflation of contribution."},{"lineNumber":479,"author":{"gitId":"-"},"content":"      For example, if a student says everyone contributed ‘Equal share + 10%’, the system automatically normalizes it to ‘Equal share’ because in reality that is what the student means."},{"lineNumber":480,"author":{"gitId":"-"},"content":"      ‘Normalize’ here means scale up/down the values so that the \u003ccode\u003e(sum of contributions) \u003d ( n x Equal Share)\u003c/code\u003e where \u003ccode\u003en\u003c/code\u003e is the number of students being reviewed."},{"lineNumber":481,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.CONTRIBUTION]\" @collapseAnim\u003e"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-question-view"},{"lineNumber":484,"author":{"gitId":"-"},"content":"              [questions]\u003d\"exampleTeamContributionQuestions\""},{"lineNumber":485,"author":{"gitId":"-"},"content":"              [section]\u003d\"\" [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":486,"author":{"gitId":"-"},"content":"              [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":487,"author":{"gitId":"-"},"content":"              [showStatistics]\u003d\"true\" [indicateMissingResponses]\u003d\"true\""},{"lineNumber":488,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":489,"author":{"gitId":"-"},"content":"              [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\"\u003e"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":492,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":493,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":494,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.RUBRIC)\""},{"lineNumber":495,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.RUBRIC\""},{"lineNumber":496,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Rubric Questions\""},{"lineNumber":497,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RUBRIC]\"\u003e"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":499,"author":{"gitId":"-"},"content":"      Rubric questions allow instructors to create multiple sub-questions with highly customizable choices and descriptions."},{"lineNumber":500,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":502,"author":{"gitId":"-"},"content":"      To respondents, a rubric question will appear as a table that looks similar to the example below. Respondents can choose one answer per row."},{"lineNumber":503,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RUBRIC]\" @collapseAnim\u003e"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      \u003ctm-question-submission-form"},{"lineNumber":506,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleResponderRubricSubmissionFormModel\""},{"lineNumber":507,"author":{"gitId":"-"},"content":"              [isDisabled]\u003d\"true\""},{"lineNumber":508,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-question-submission-form\u003e"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":511,"author":{"gitId":"-"},"content":"      To set up a rubric question:"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":513,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":515,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":516,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":518,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":519,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":521,"author":{"gitId":"AdithyaNarayan"},"content":"        Add choices using the \u003ccode\u003eAdd Column\u003c/code\u003e button, or delete choices using the \u003ccode\u003ex\u003c/code\u003e button at the bottom of each column."},{"lineNumber":522,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":523,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":524,"author":{"gitId":"AdithyaNarayan"},"content":"        Add subquestions using the \u003ccode\u003eAdd Row\u003c/code\u003e button, or delete subquestions using the \u003ccode\u003ex\u003c/code\u003e button to the left of each subquestion."},{"lineNumber":525,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":527,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add description text to describe each choice for each subquestion."},{"lineNumber":528,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":530,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Assign weights to each choice of each sub-question for calculating statistics."},{"lineNumber":531,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":533,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":534,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RUBRIC]\" @collapseAnim\u003e"},{"lineNumber":537,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":538,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleRubricQuestionModel\""},{"lineNumber":539,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":540,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\"\u003e"},{"lineNumber":541,"author":{"gitId":"-"},"content":"      \u003c/tm-question-edit-form\u003e"},{"lineNumber":542,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":544,"author":{"gitId":"-"},"content":"      Result statistics for rubric questions show how often a choice is selected for each sub-question.\u003cbr\u003e"},{"lineNumber":545,"author":{"gitId":"-"},"content":"      If weights are assigned to the choices, the weights will be used to calculate an average score."},{"lineNumber":546,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      \u003cstrong\u003eResponse Summary Table:\u003c/strong\u003e Each choice cell of each sub-question in the Response summary table"},{"lineNumber":549,"author":{"gitId":"-"},"content":"      has three parts \u003cstrong\u003ePercentage (Response count) [Weight of the choice]\u003c/strong\u003e. Each of the parts are explained below:"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        Percentage: Shows the percentage of how often this choice is selected out of all responses for this sub-question."},{"lineNumber":554,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":555,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":556,"author":{"gitId":"AdithyaNarayan"},"content":"        Response count: Shows the number of times this choice is selected."},{"lineNumber":557,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":559,"author":{"gitId":"-"},"content":"        Weight of the choice: Shows the weight attached with this choice of this sub-question."},{"lineNumber":560,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      If weights are assigned to the question, then based on the weight of each choice and the response count of that choice,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      the overall average score of the sub-question is calculated."},{"lineNumber":565,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      \u003cstrong\u003ePer Recipient Statistics:\u003c/strong\u003e This table is only shown to the questions which have weights assigned."},{"lineNumber":568,"author":{"gitId":"-"},"content":"      Similar to the Response summary table, each choice of each sub-question in this table is divided into two parts,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      which are \u003cstrong\u003eResponse Count [Weight of the choice]\u003c/strong\u003e. Based on the weight assigned to the choice and"},{"lineNumber":570,"author":{"gitId":"-"},"content":"      the response count of that choice, total and average points for the sub-question is calculated for each recipient."},{"lineNumber":571,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RUBRIC]\" @collapseAnim\u003e"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-question-view"},{"lineNumber":574,"author":{"gitId":"-"},"content":"              [questions]\u003d\"exampleRubricQuestionQuestions\""},{"lineNumber":575,"author":{"gitId":"-"},"content":"              [section]\u003d\"\" [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":576,"author":{"gitId":"-"},"content":"              [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":577,"author":{"gitId":"-"},"content":"              [showStatistics]\u003d\"true\" [indicateMissingResponses]\u003d\"true\""},{"lineNumber":578,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":579,"author":{"gitId":"-"},"content":"              [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\"\u003e"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":582,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":583,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":584,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.RANK_OPTIONS)\""},{"lineNumber":585,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.RANK_OPTIONS\""},{"lineNumber":586,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Rank (Options) Questions\""},{"lineNumber":587,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RANK_OPTIONS]\"\u003e"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      Rank options questions allow respondents to rank the options that you create."},{"lineNumber":590,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":592,"author":{"gitId":"-"},"content":"      To set up a rank options question:"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":594,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":596,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":597,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":598,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":599,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":600,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":601,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":602,"author":{"gitId":"AdithyaNarayan"},"content":"        List the options for respondents to rank."},{"lineNumber":603,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":604,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":605,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Allow respondents to give the same rank to multiple options."},{"lineNumber":606,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":608,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Set the minimum and/or maximum number of options a respondent should rank — setting these values ensures that respondents will rank your desired number of options."},{"lineNumber":609,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":610,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":611,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the appropriate feedback recipients."},{"lineNumber":612,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    \u003ctm-question-edit-form *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RANK_OPTIONS]\""},{"lineNumber":615,"author":{"gitId":"-"},"content":"            [formModel]\u003d\"exampleRankOptionQuestionModel\""},{"lineNumber":616,"author":{"gitId":"-"},"content":"            [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":617,"author":{"gitId":"-"},"content":"            [isDisplayOnly]\u003d\"true\""},{"lineNumber":618,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":619,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":620,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":621,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(QuestionsSectionQuestions.RANK_RECIPIENTS)\""},{"lineNumber":622,"author":{"gitId":"-"},"content":"                            [id]\u003d\"QuestionsSectionQuestions.RANK_RECIPIENTS\""},{"lineNumber":623,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Rank (Recipients) Questions\""},{"lineNumber":624,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RANK_RECIPIENTS]\"\u003e"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      Rank recipients questions allow respondents to rank themselves, students, teams, or instructors."},{"lineNumber":627,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":628,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":630,"author":{"gitId":"-"},"content":"      To set up a rank recipients question:"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":632,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":633,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":634,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the question text."},{"lineNumber":635,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":636,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":637,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Add a description for the question."},{"lineNumber":638,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":640,"author":{"gitId":"AdithyaNarayan"},"content":"        Specify the feedback path that should be used to generate the options respondents get to rank."},{"lineNumber":641,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":643,"author":{"gitId":"AdithyaNarayan"},"content":"        (Optional) Allow respondents to give the same rank to multiple options."},{"lineNumber":644,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":645,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":646,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RANK_RECIPIENTS]\" @collapseAnim\u003e"},{"lineNumber":647,"author":{"gitId":"-"},"content":"      \u003ctm-question-edit-form"},{"lineNumber":648,"author":{"gitId":"-"},"content":"              [formModel]\u003d\"exampleRankRecipientQuestionModel\""},{"lineNumber":649,"author":{"gitId":"-"},"content":"              [formMode]\u003d\"QuestionEditFormMode.EDIT\""},{"lineNumber":650,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":651,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-question-edit-form\u003e"},{"lineNumber":652,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":653,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":654,"author":{"gitId":"-"},"content":"      When viewing the results of a rank recipients question, you will be able to see the following results for each feedback recipient:"},{"lineNumber":655,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":656,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":657,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":658,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eRanks received\u003c/b\u003e: a list of the ranks which a recipient received from respondents."},{"lineNumber":659,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":661,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eOverall rank\u003c/b\u003e: the recipient\u0027s rank relative to other recipients, as computed by TEAMMATES."},{"lineNumber":662,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":663,"author":{"gitId":"AdithyaNarayan"},"content":"      \u003cli\u003e"},{"lineNumber":664,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eTeam rank\u003c/b\u003e: the recipient\u0027s rank relative to other recipients within their own team only. Applicable only if students rank their teammates."},{"lineNumber":665,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      Technical details about how ranks are calculated are available \u003cspan class \u003d modal-window-class ngbTooltip\u003d\"Click here for popup.\"\u003e \u003ca (click)\u003d\"openRankInfoModal(rankInfoHelp)\"\u003ehere\u003c/a\u003e \u003c/span\u003e."},{"lineNumber":669,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    \u003cng-template #rankInfoHelp\u003e"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":672,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":673,"author":{"gitId":"-"},"content":"          \u003cb\u003eRanks Received\u003c/b\u003e is a list of the actual ranks each recipient received. TEAMMATES processes the original responses, handling ties and unused ranks."},{"lineNumber":674,"author":{"gitId":"-"},"content":"          For example, if giver A\u0027s original response is \u003ccode\u003e(1, 3, 3, 5)\u003c/code\u003e and Rank 5 is given to recipient B, after the processing, giver A\u0027s response will become \u003ccode\u003e(1, 2, 2, 4)\u003c/code\u003e and recipient B will have a Rank 4 in his/her \u003cb\u003eRanks Received\u003c/b\u003e, instead of the Rank 5 in the original response by giver A."},{"lineNumber":675,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":676,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":677,"author":{"gitId":"-"},"content":"          The \u003cb\u003eOverall Rank\u003c/b\u003e ranks the average rank each recipient receives."},{"lineNumber":678,"author":{"gitId":"-"},"content":"          For example, if recipient A received the ranks \u003ccode\u003e(1, 2)\u003c/code\u003e and recipient B received the ranks \u003ccode\u003e(2, 4, 6)\u003c/code\u003e, then recipient A and recipient B\u0027s average ranks are 1.5 and 4 respectively. By ranking these two averages, recipient A and B will get an \u003cb\u003eOverall Rank\u003c/b\u003e of 1 and 2 respectively."},{"lineNumber":679,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":680,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cli\u003e"},{"lineNumber":681,"author":{"gitId":"AdithyaNarayan"},"content":"          The \u003cb\u003eTeam Rank\u003c/b\u003e works in a similar way to \u003cb\u003eOverall Rank\u003c/b\u003e as it uses the average rank received to calculate the rank within the team. However, the average rank of the members are only compared to their own team members."},{"lineNumber":682,"author":{"gitId":"AdithyaNarayan"},"content":"          For example, if recipient A (who is a part of team X) received the ranks \u003ccode\u003e(1, 2)\u003c/code\u003e and recipient B (who is a part of team X) received the ranks \u003ccode\u003e(2, 4, 6)\u003c/code\u003e, then recipient A and recipient B\u0027s average ranks are 1.5 and 4 respectively. By ranking these two averages, recipient A and B will get a \u003cb\u003eTeam Rank\u003c/b\u003e of 1 and 2 respectively."},{"lineNumber":683,"author":{"gitId":"AdithyaNarayan"},"content":"          If recipient C (who is a part of team Y) received the ranks \u003ccode\u003e(1, 1)\u003c/code\u003e and recipient D (who is a part of team Y) received the ranks \u003ccode\u003e(1, 2)\u003c/code\u003e, then recipient C and recipient D\u0027s average ranks are 1 and 1.5 respectively. By ranking these two averages, recipient C and D will get a \u003cb\u003eTeam Rank\u003c/b\u003e of 1 and 2 respectively."},{"lineNumber":684,"author":{"gitId":"AdithyaNarayan"},"content":"          Note that both recipient A and recipient C get an average of 1.5 but they get different team ranks as they are in different teams."},{"lineNumber":685,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003c/li\u003e"},{"lineNumber":686,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":687,"author":{"gitId":"-"},"content":"    \u003c/ng-template\u003e"},{"lineNumber":688,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[QuestionsSectionQuestions.RANK_RECIPIENTS]\" @collapseAnim\u003e"},{"lineNumber":689,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-question-view"},{"lineNumber":690,"author":{"gitId":"-"},"content":"              [questions]\u003d\"exampleRankRecipientQuestions\""},{"lineNumber":691,"author":{"gitId":"-"},"content":"              [section]\u003d\"\" [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":692,"author":{"gitId":"-"},"content":"              [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":693,"author":{"gitId":"-"},"content":"              [showStatistics]\u003d\"true\" [indicateMissingResponses]\u003d\"true\""},{"lineNumber":694,"author":{"gitId":"-"},"content":"              [isDisplayOnly]\u003d\"true\""},{"lineNumber":695,"author":{"gitId":"-"},"content":"              [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\"\u003e"},{"lineNumber":696,"author":{"gitId":"-"},"content":"      \u003c/tm-instructor-session-result-question-view\u003e"},{"lineNumber":697,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":698,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":699,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":54,"-":645}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-sessions-section/instructor-help-sessions-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eSessions\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 4)\"\u003eSetting Up Sessions\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Tips for conducting team peer evaluation sessions\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.TIPS_FOR_CONDUCTION_PEER_EVAL]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      Any evaluation system has both positive and negative effects on those being evaluated."},{"lineNumber":12,"author":{"gitId":"-"},"content":"      As teachers, you are probably keen to maximize the positive effect of this system on your course while minimizing any negative effects."},{"lineNumber":13,"author":{"gitId":"-"},"content":"      Here are some of the things you could do:"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cb\u003eHave frequent peer evaluations.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Rather than have only one peer evaluation at the end of the course, have several peer evaluations at different points of the course. This way, students get frequent peer-feedback about their contribution, giving them plenty of chances to correct their conduct as necessary."},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cb\u003eIgnore early peer evaluations.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Consider not using initial peer evaluations for grading. Let students know that in advance. This gives students time to get used to the system and be more relaxed in giving early feedback to peers."},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cb\u003eInterpret contribution numbers with care.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        If you use ‘Team contribution’ type questions in your peer evaluations, keep in mind the contribution numbers reported by TEAMMATES are based on student perceptions and may not reflect the real contribution of a student. Therefore, use those numbers primarily to identify cases that need further investigation."},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cbr\u003e You may ignore minor variations in the contribution numbers reported by TEAMMATES. The difference between [Equal share] and [Equal share - 2%] is not significant and can very well be due to rounding off within the system."},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cbr\u003e \u003cbr\u003eKeep in mind that it is human nature for one to downplay the value of contributions from others when one’s own contribution is being compared to that of others. As a result, it is common for the ‘perceived contribution’ to be somewhat lower than what the student actually did."},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cbr\u003e When taking further actions based on evaluation reports, also pay attention to the team’s consensus level about the contribution of a student. For example, you can take further actions with more confidence if all team members rated a certain student’s contribution low."},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cb\u003eTolerate unequal contributions.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        This may be a good policy to adopt (If students know this policy, they will be more honest in reporting contribution values):"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003ci\u003eIt is OK to do less than an equal share of the work, as long as you are willing to accept a lower grade than your team members. It is your right to decide how much time you allocate to this course. How you prioritize your work is your own business.\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cb\u003eAnnounce a \u0027cooling off\u0027 period.\u003c/b\u003e\u003cbr\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        This may be a good guidelines to give to students:"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003ci\u003eIf you are unhappy about the peer-feedback received, please allow at least one day to lapse before you fire off a response email. You are likely to respond more rationally when you had some time to think it over. Also keep in mind that we do take note of how well you handle such a situation. You need to act professionally when facing conflicting views, opposition, and even deliberate sabotage.\u003c/i\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_NEW_FEEDBACK)\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_NEW_FEEDBACK\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I create and schedule a new feedback session?\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_NEW_FEEDBACK]\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    To create a new feedback session, click the \u003cb\u003eSessions\u003c/b\u003e tab at the top of the page. Then,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    fill out and submit the \u003cb\u003eAdd New Feedback Session\u003c/b\u003e form:"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cb\u003eChoose a session type\u003c/b\u003e. You can choose between creating a session with your own questions,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        creating a copy of a session you previously made, or using one of our session templates."},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cul\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Session with your own questions: you\u0027ll start with an empty template to which you can add your own"},{"lineNumber":65,"author":{"gitId":"AdithyaNarayan"},"content":"            questions."},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Session using template: TEAMMATES will provide you with a template of a typical session that you can"},{"lineNumber":69,"author":{"gitId":"AdithyaNarayan"},"content":"            add to and customize to suit your needs."},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003cli\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            Copy from previous feedback sessions: you can reuse questions and settings from a survey you created"},{"lineNumber":73,"author":{"gitId":"AdithyaNarayan"},"content":"            in the past."},{"lineNumber":74,"author":{"gitId":"-"},"content":"          \u003c/li\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        \u003c/ul\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003cb\u003eSelect the course ID\u003c/b\u003e of the course for which the session will be created."},{"lineNumber":79,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        \u003cb\u003eGive your session a session name\u003c/b\u003e. This name will be visible to session respondents."},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003cb\u003eSet the session\u0027s submission opening/closing time\u003c/b\u003e. This is the time period during which students"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        can submit responses. TEAMMATES will automatically open and close the session at times you specify."},{"lineNumber":86,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        (Optional) Set advanced options to best suit your needs:"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":92,"author":{"gitId":"AdithyaNarayan"},"content":"          Set a custom time zone."},{"lineNumber":93,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":95,"author":{"gitId":"AdithyaNarayan"},"content":"          Give students more specific instructions."},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":98,"author":{"gitId":"AdithyaNarayan"},"content":"          Set a grace period during which students can still submit responses if the session closes."},{"lineNumber":99,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          Choose when you want this session to be visible to students. After this time, students can see the questions,"},{"lineNumber":102,"author":{"gitId":"AdithyaNarayan"},"content":"          but they cannot submit their responses until the session is \u003ci\u003eopen\u003c/i\u003e."},{"lineNumber":103,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"          Choose when you want to make this session\u0027s responses visible. At this time, TEAMMATES will automatically"},{"lineNumber":106,"author":{"gitId":"AdithyaNarayan"},"content":"          publish the results for students to view."},{"lineNumber":107,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":109,"author":{"gitId":"AdithyaNarayan"},"content":"          Choose whether TEAMMATES should send reminder or announcement emails to students about this session."},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"          Make the session private. A private session is a session that is never visible to others."},{"lineNumber":113,"author":{"gitId":"-"},"content":"          This is for you to record your feedback about students. If you want to create a private session,"},{"lineNumber":114,"author":{"gitId":"AdithyaNarayan"},"content":"          set \"Make session visible\" to \u003ccode\u003eNever\u003c/code\u003e."},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003cb\u003eClick Create Feedback Session\u003c/b\u003e!"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      This is the form used to set up sessions."},{"lineNumber":123,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_NEW_FEEDBACK]\" @collapseAnim\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\""},{"lineNumber":126,"author":{"gitId":"-"},"content":"                            [model]\u003d\"exampleSessionEditFormModel\""},{"lineNumber":127,"author":{"gitId":"-"},"content":"                            [courseCandidates]\u003d\"exampleCourseCandidates\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                            [templateSessions]\u003d\"exampleTemplateSessions\"\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/tm-session-edit-form\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_QUESTIONS)\""},{"lineNumber":134,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_QUESTIONS\""},{"lineNumber":135,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I add questions to a session?\""},{"lineNumber":136,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\"\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      After setting up a session, you can start adding questions.\u003cbr\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      You can also access this page by clicking the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eEdit\u003c/button\u003e button of the desired session from the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page."},{"lineNumber":140,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      To add a question:"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Scroll to the bottom of the page."},{"lineNumber":147,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Select between adding a question from our predefined \u003ca (click)\u003d\"jumpTo(\u0027questions\u0027)\" [tmRouterLink]\u003d\"\"\u003equestion types\u003c/a\u003e or"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        copying a question from an existing feedback session."},{"lineNumber":151,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Save changes to the question when you have finished creating the question"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\" @collapseAnim\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          \u003cdiv ngbDropdown class\u003d\"d-inline-block\"\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            \u003cbutton class\u003d\"btn btn-primary\" ngbDropdownToggle\u003eAdd New Question\u003c/button\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"dropdown-item\"\u003eChoose from template questions\u003c/button\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\"\u003e\u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e\u003c/button\u003e"},{"lineNumber":166,"author":{"gitId":"teikjun"},"content":"          \u003cbutton class\u003d\"btn btn-primary\"\u003eCopy Question\u003c/button\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      TEAMMATES gives you fine-grained control of each question. In addition to providing a range of different"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      \u003ca (click)\u003d\"jumpTo(\u0027questions\u0027)\" [tmRouterLink]\u003d\"\"\u003equestion types\u003c/a\u003e,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      you can also customize your desired:"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        \u003cb\u003eFeedback Path\u003c/b\u003e: define who is giving feedback, and who the feedback is about."},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Select a common feedback path from the dropdown menu, or choose \"Other predefined combinations...\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"        to define the Feedback Giver and Recipient separately."},{"lineNumber":180,"author":{"gitId":"-"},"content":"        If you choose a ‘team’ as the giver, any member can submit the response on behalf of the team."},{"lineNumber":181,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        \u003cb\u003eVisibility options\u003c/b\u003e: let students know who will be able to see their answers."},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Select a common visibility option from the dropdown menu, or choose \"Custom visibility options...\""},{"lineNumber":185,"author":{"gitId":"-"},"content":"        to fully customize who can see the feedback response, the giver\u0027s identity, and the recipient\u0027s identity."},{"lineNumber":186,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      In the example question below, students will give feedback on their own team members."},{"lineNumber":190,"author":{"gitId":"-"},"content":"      The team member receiving feedback can see the feedback, but not who gave the feedback."},{"lineNumber":191,"author":{"gitId":"-"},"content":"      Instructors can see who received what feedback, and who gave the feedback."},{"lineNumber":192,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_QUESTIONS]\" @collapseAnim\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"background-color-light-green margin-top-15px padding-15px\"\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          \u003cb class\u003d\"feedback-path-title\"\u003eFeedback Path\u003c/b\u003e (Who is giving feedback about whom?)"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"true\"\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            \u003cspan\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"              Students in this course will give feedback on \u003ci class\u003d\"fas fa-arrow-right\"\u003e\u003c/i\u003e Giver\u0027s team members"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"margin-top-15px padding-15px background-color-light-green\"\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003cdiv\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"          \u003cb\u003eVisibility\u003c/b\u003e (Who can see the responses?)"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"true\"\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            \u003cspan\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"              Shown anonymously to recipient and giver\u0027s team members, visible to instructor"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_PREVIEW)\""},{"lineNumber":222,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_PREVIEW\""},{"lineNumber":223,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I preview a session?\""},{"lineNumber":224,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_PREVIEW]\"\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      To see what the current session looks like to anyone in the course when they are submitting responses, use the \u003cb\u003ePreview\u003c/b\u003e feature.\u003cbr\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      You can quickly and easily confirm that the questions and their settings are correct after editing questions."},{"lineNumber":228,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      To access the preview panel of a specific session, click the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eEdit\u003c/button\u003e button for that session in the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page. The preview"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      panel is located at the bottom of the Edit Feedback Session page."},{"lineNumber":232,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_PREVIEW]\" @collapseAnim\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body background-color-light-blue text-center\"\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"row align-items-center\"\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-2 text-right\"\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"              \u003cb\u003ePreview Session:\u003c/b\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-5\"\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control preview-select\"\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let student of exampleStudents\" [ngValue]\u003d\"student.email\"\u003e[{{ student.teamName }}] {{ student.name }}\u003c/option\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"true\" \u003ePreview as Student\u003c/button\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"col-5\" ngbTooltip\u003d\"View how this session would look like to an instructor who is submitting feedback. Only instructors with submit privileges are included in the list.\"\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control preview-select\"\u003e"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                \u003coption *ngFor\u003d\"let instructor of exampleInstructors\" [ngValue]\u003d\"instructor.email\"\u003e{{ instructor.name }}\u003c/option\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":250,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"true\" \u003ePreview as Instructor\u003c/button\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(4, 7)\"\u003eManaging Session Responses\u003c/h4\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_CANNOT_SUBMIT)\""},{"lineNumber":262,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_CANNOT_SUBMIT\""},{"lineNumber":263,"author":{"gitId":"-"},"content":"                            headerText\u003d\"What should I do if a student says he/she cannot submit an evaluation due to a technical glitch?\""},{"lineNumber":264,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_CANNOT_SUBMIT]\"\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      Instructors can submit responses on behalf of a student. To do so:"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Ask the student to view the submission page and send you his/her answers to the session questions."},{"lineNumber":271,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_VIEW_RESULTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eView the results\u003c/a\u003e of the session."},{"lineNumber":274,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        Scroll to the panel titled \u003cb\u003eParticipants who have not responded to any question\u003c/b\u003e. Click on the panel to expand it."},{"lineNumber":277,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        Click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-sm btn-secondary\"\u003eSubmit Responses\u003c/button\u003e button of the corresponding student. You will be directed to a page where you can submit responses on behalf of the student."},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        Copy the student\u0027s responses to the corresponding questions, and click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-lg\"\u003eSubmit Feedback\u003c/button\u003e button."},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_VIEW_RESULTS)\""},{"lineNumber":288,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_VIEW_RESULTS\""},{"lineNumber":289,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view the results of my session?\""},{"lineNumber":290,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\"\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      View responses to a session by clicking the \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eResults\u003c/button\u003e button of a session in the \u003cb\u003eHome\u003c/b\u003e or \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      Click \u003cbutton class\u003d\"btn btn-primary btn-s\"\u003eEdit View\u003c/button\u003e to sort the results in an order that best suits you."},{"lineNumber":294,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003cp\u003e5 different views are available, each denoting the order in which responses are grouped."},{"lineNumber":296,"author":{"gitId":"-"},"content":"      Additionally, you can group the results by team, show or hide statistics, view missing responses and filter responses from a particular section."},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body row\"\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"View results in different formats\"\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"              View:"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.QUESTION\"\u003eGroup by - Question\u003c/option\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.GRQ\"\u003eGroup by - Giver \u003e Recipient \u003e Question\u003c/option\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.RGQ\"\u003eGroup by - Recipient \u003e Giver \u003e Question\u003c/option\u003e"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.GQR\"\u003eGroup by - Giver \u003e Question \u003e Recipient\u003c/option\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                \u003coption [value]\u003d\"InstructorSessionResultViewType.RQG\"\u003eGroup by - Recipient \u003e Question \u003e Giver\u003c/option\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":315,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"View results by sections\"\u003e"},{"lineNumber":317,"author":{"gitId":"-"},"content":"              Section:"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":320,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u003coption value\u003d\"\"\u003eAll\u003c/option\u003e"},{"lineNumber":322,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":325,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            \u003clabel class\u003d\"control-label\" ngbTooltip\u003d\"Choose the way responses for the selected section is viewed\"\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"              If showing only a section:"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            \u003c/label\u003e"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            \u003cdiv\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"              \u003cselect class\u003d\"form-control\"\u003e"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.EITHER\"\u003e"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                  Show response if either the giver or evaluee is in the selected section"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.GIVER\"\u003e"},{"lineNumber":335,"author":{"gitId":"-"},"content":"                  Show response if the giver is in the selected section"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.EVALUEE\"\u003e"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                  Show response if the evaluee is in the selected section"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                \u003coption [ngValue]\u003d\"InstructorSessionResultSectionType.BOTH\"\u003e"},{"lineNumber":341,"author":{"gitId":"-"},"content":"                  Show response only if both are in the selected section"},{"lineNumber":342,"author":{"gitId":"-"},"content":"                \u003c/option\u003e"},{"lineNumber":343,"author":{"gitId":"-"},"content":"              \u003c/select\u003e"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":345,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"col-md-6\"\u003e"},{"lineNumber":348,"author":{"gitId":"-"},"content":"          \u003clabel class\u003d\"control-label\"\u003e"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            Additional settings:"},{"lineNumber":350,"author":{"gitId":"-"},"content":"          \u003c/label\u003e"},{"lineNumber":351,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Group by Teams"},{"lineNumber":353,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":354,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Show Statistics"},{"lineNumber":356,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":357,"author":{"gitId":"-"},"content":"          \u003cdiv\u003e"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            \u003cinput type\u003d\"checkbox\"\u003e Indicate Missing Responses"},{"lineNumber":359,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      In the example below, results are sorted by \u003cb\u003eGiver \u003e Recipient \u003e Question\u003c/b\u003e. Additionally, missing responses"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      have been recorded."},{"lineNumber":366,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-result-grq-view [session]\u003d\"this.exampleFeedbackSession\""},{"lineNumber":369,"author":{"gitId":"-"},"content":"                                             [section]\u003d\"\u0027Section A\u0027\""},{"lineNumber":370,"author":{"gitId":"-"},"content":"                                             [sectionType]\u003d\"InstructorSessionResultSectionType.EITHER\""},{"lineNumber":371,"author":{"gitId":"-"},"content":"                                             [groupByTeam]\u003d\"true\""},{"lineNumber":372,"author":{"gitId":"-"},"content":"                                             [showStatistics]\u003d\"true\""},{"lineNumber":373,"author":{"gitId":"-"},"content":"                                             [indicateMissingResponses]\u003d\"true\""},{"lineNumber":374,"author":{"gitId":"-"},"content":"                                             [isExpandAll]\u003d\"true\""},{"lineNumber":375,"author":{"gitId":"-"},"content":"                                             [instructorCommentTableModel]\u003d\"exampleInstructorCommentTableModel\""},{"lineNumber":376,"author":{"gitId":"-"},"content":"                                             [responses]\u003d\"exampleGrqResponses\""},{"lineNumber":377,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-instructor-session-result-grq-view\u003e"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-session-no-response-panel [session]\u003d\"exampleFeedbackSession\""},{"lineNumber":379,"author":{"gitId":"-"},"content":"                                               [section]\u003d\"\u0027Section A\u0027\""},{"lineNumber":380,"author":{"gitId":"-"},"content":"                                               [allStudents]\u003d\"exampleStudents\""},{"lineNumber":381,"author":{"gitId":"-"},"content":"                                               [noResponseStudents]\u003d\"exampleStudents\""},{"lineNumber":382,"author":{"gitId":"-"},"content":"                                               [isDisplayOnly]\u003d\"true\""},{"lineNumber":383,"author":{"gitId":"-"},"content":"      \u003e\u003c/tm-instructor-session-no-response-panel\u003e"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    \u003cp\u003eIf you choose to publish the results of the session, students will receive an email with a link to access the"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      session\u0027s results. What they can see is governed by the visibility levels you set when setting up the session."},{"lineNumber":387,"author":{"gitId":"-"},"content":"      Here is an example of what a student might see:"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS]\" @collapseAnim\u003e"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\" *ngFor\u003d\"let question of exampleQuestionsWithResponses\"\u003e"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body\" style\u003d\"padding: 20px;\"\u003e"},{"lineNumber":392,"author":{"gitId":"-"},"content":"          \u003ctm-question-text-with-info [questionNumber]\u003d\"question.feedbackQuestion.questionNumber\" [questionDetails]\u003d\"question.feedbackQuestion.questionDetails\" style\u003d\"font-size: 20px;\"\u003e\u003c/tm-question-text-with-info\u003e"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          \u003ctm-single-statistics [question]\u003d\"question.feedbackQuestion.questionDetails\""},{"lineNumber":394,"author":{"gitId":"-"},"content":"                                [responses]\u003d\"question.responsesToSelf\""},{"lineNumber":395,"author":{"gitId":"-"},"content":"                                [statistics]\u003d\"question.questionStatistics\""},{"lineNumber":396,"author":{"gitId":"-"},"content":"                                [isStudent]\u003d\"true\"\u003e\u003c/tm-single-statistics\u003e"},{"lineNumber":397,"author":{"gitId":"-"},"content":"          \u003ctm-student-view-responses *ngIf\u003d\"question.responsesToSelf.length\" [responses]\u003d\"question.responsesToSelf\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":398,"author":{"gitId":"-"},"content":"          \u003cdiv *ngFor\u003d\"let responsesForOtherRecipient of question.otherResponses\"\u003e"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            \u003ctm-student-view-responses *ngIf\u003d\"responsesForOtherRecipient.length\" [responses]\u003d\"responsesForOtherRecipient\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":400,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":401,"author":{"gitId":"-"},"content":"          \u003cdiv *ngIf\u003d\"question.responsesFromSelf.length\" style\u003d\"margin-top: 10px;\"\u003e"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            \u003cstrong\u003eYour own responses (to others):\u003c/strong\u003e"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            \u003cdiv *ngFor\u003d\"let responseFromSelf of question.responsesFromSelf\"\u003e"},{"lineNumber":404,"author":{"gitId":"-"},"content":"              \u003ctm-student-view-responses [responses]\u003d\"[responseFromSelf]\" [isSelfResponses]\u003d\"true\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"exampleFeedbackSession.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":406,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":411,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.VIEW_ALL_RESPONSES)\""},{"lineNumber":413,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.VIEW_ALL_RESPONSES\""},{"lineNumber":414,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view all the responses a student has given and received?\""},{"lineNumber":415,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_ALL_RESPONSES]\"\u003e"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      To view the responses that Student A from Course B has given and received:"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":422,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":424,"author":{"gitId":"-"},"content":"        Click \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eAll Records\u003c/button\u003e button corresponding to Student A to access all the responses Student A has given and received."},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":427,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(7, 9)\"\u003eAdding Comments to Responses\u003c/h4\u003e"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.SESSION_ADD_COMMENTS)\""},{"lineNumber":433,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.SESSION_ADD_COMMENTS\""},{"lineNumber":434,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I create a comment on a response?\""},{"lineNumber":435,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS]\"\u003e"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      While \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_VIEW_RESULTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_VIEW_RESULTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eviewing the results\u003c/a\u003e of a session, you can add comments to respondents\u0027 answers."},{"lineNumber":438,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":440,"author":{"gitId":"-"},"content":"      To create comments on a response in a session:"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":442,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":443,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":444,"author":{"gitId":"AdithyaNarayan"},"content":"        View the results of a session."},{"lineNumber":445,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":447,"author":{"gitId":"AdithyaNarayan"},"content":"        Click \u003cbutton class\u003d\"btn btn-light btn-s dropdown-toggle\"\u003eView\u003c/button\u003e dropdown and change the view type to \u003cb\u003eGroup by - Giver \u0026gt; Recipient \u0026gt; Question\u003c/b\u003e or \u003cb\u003eGroup by - Recipient \u0026gt; Giver \u0026gt; Question\u003c/b\u003e."},{"lineNumber":448,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":450,"author":{"gitId":"AdithyaNarayan"},"content":"        Click the \u003cbutton type\u003d\"button\" class\u003d\"btn btn-secondary btn-sm\"\u003e\u003ci class\u003d\"fas fa-comment\"\u003e\u003c/i\u003e\u0026nbsp;\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e\u003c/button\u003e icon on the right-hand side of the response you would like to comment on."},{"lineNumber":451,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":453,"author":{"gitId":"AdithyaNarayan"},"content":"        Fill in the form, which will appear similar to the example below."},{"lineNumber":454,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS]\" @collapseAnim\u003e"},{"lineNumber":457,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":458,"author":{"gitId":"-"},"content":"        \u003ctm-comment-edit-form"},{"lineNumber":459,"author":{"gitId":"-"},"content":"                [mode]\u003d\"CommentRowMode.ADD\""},{"lineNumber":460,"author":{"gitId":"-"},"content":"                [model]\u003d\"exampleCommentEditFormModel\""},{"lineNumber":461,"author":{"gitId":"-"},"content":"                [isFeedbackParticipantComment]\u003d\"false\""},{"lineNumber":462,"author":{"gitId":"-"},"content":"                [response]\u003d\"exampleResponse\""},{"lineNumber":463,"author":{"gitId":"-"},"content":"                [questionShowResponsesTo]\u003d\"[]\""},{"lineNumber":464,"author":{"gitId":"-"},"content":"                [isDisabled]\u003d\"false\""},{"lineNumber":465,"author":{"gitId":"-"},"content":"                [shouldHideSavingButton]\u003d\"false\""},{"lineNumber":466,"author":{"gitId":"-"},"content":"                [shouldHideClosingButton]\u003d\"false\""},{"lineNumber":467,"author":{"gitId":"-"},"content":"                [isVisibilityOptionEnabled]\u003d\"true\"\u003e"},{"lineNumber":468,"author":{"gitId":"-"},"content":"        \u003c/tm-comment-edit-form\u003e"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":472,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.EDIT_DEL_COMMENT)\""},{"lineNumber":474,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.EDIT_DEL_COMMENT\""},{"lineNumber":475,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit or delete a comment on a response?\""},{"lineNumber":476,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.EDIT_DEL_COMMENT]\"\u003e"},{"lineNumber":477,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":478,"author":{"gitId":"-"},"content":"      To edit or delete a comment that you previously made on a response:"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":482,"author":{"gitId":"-"},"content":"        Navigate to the page where you \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.SESSION_ADD_COMMENTS); questionsToCollapsed[SessionsSectionQuestions.SESSION_ADD_COMMENTS] \u003d true\" [tmRouterLink]\u003d\"\"\u003eadded the comment\u003c/a\u003e that you want to edit or delete."},{"lineNumber":483,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        Hover over the comment which you want to edit or delete."},{"lineNumber":486,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":487,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        Click the \u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e icon to edit the comment, or"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        \u003ci class\u003d\"far fa-trash-alt\"\u003e\u003c/i\u003e icon to delete the comment. The icons are visible on the right-hand side of the comment field."},{"lineNumber":490,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":492,"author":{"gitId":"-"},"content":"        If you are editing the comment, make your edits and click \u003cbutton class\u003d\"btn btn-primary btn-s\"\u003eSave\u003c/button\u003e to save changes."},{"lineNumber":493,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":495,"author":{"gitId":"-"},"content":"        If you are deleting the comment, click \u003cb\u003eOK\u003c/b\u003e to confirm that you want to delete the comment."},{"lineNumber":496,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"  \u003c!--Section--\u003e"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(9, 13)\"\u003eRestoring Deleted Sessions\u003c/h4\u003e"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.VIEW_DELETED_SESSION)\""},{"lineNumber":504,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.VIEW_DELETED_SESSION\""},{"lineNumber":505,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view sessions I have deleted?\""},{"lineNumber":506,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION]\"\u003e"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      You can view all your deleted feedback sessions by navigating to the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      Scroll to the \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading, which looks similar to this:"},{"lineNumber":510,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":511,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION]\" @collapseAnim\u003e"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":513,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":514,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"false\"\u003e"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":516,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      The feedback sessions you have previously deleted are listed here."},{"lineNumber":519,"author":{"gitId":"-"},"content":"      In order to access information in a deleted session, \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.RESTORE_SESSION); questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003erestore the session\u003c/a\u003e."},{"lineNumber":520,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":521,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.RESTORE_SESSION)\""},{"lineNumber":524,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.RESTORE_SESSION\""},{"lineNumber":525,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore a deleted session?\""},{"lineNumber":526,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION]\"\u003e"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      To restore a deleted feedback session, first \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e that you would like to restore in the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-secondary btn-sm\" type\u003d\"button\"\u003eRestore\u003c/button\u003e button corresponding to the session you want to restore."},{"lineNumber":530,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":531,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_SESSION]\" @collapseAnim\u003e"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":533,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":534,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"true\"\u003e"},{"lineNumber":535,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      After restoring the session, all the information relevant to the session (e.g. questions, responses, comments) will also be restored."},{"lineNumber":539,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.PERMANENT_DEL_SESSION)\""},{"lineNumber":543,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.PERMANENT_DEL_SESSION\""},{"lineNumber":544,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I permanently delete a session?\""},{"lineNumber":545,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.PERMANENT_DEL_SESSION]\"\u003e"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":547,"author":{"gitId":"-"},"content":"      To permanently delete a feedback session, first \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e that you would like to permanently delete in the \u003cb\u003eSessions\u003c/b\u003e page.\u003cbr\u003e"},{"lineNumber":548,"author":{"gitId":"-"},"content":"      Then, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-danger\" type\u003d\"button\"\u003eDelete Permanently\u003c/button\u003e button corresponding to the session you want to delete."},{"lineNumber":549,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":550,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.PERMANENT_DEL_SESSION]\" @collapseAnim\u003e"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":552,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":553,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"true\"\u003e"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":556,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      After deleting the session, all the information relevant to the session (e.g. questions, responses, comments) will also be permanently deleted."},{"lineNumber":558,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":559,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":560,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":561,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(SessionsSectionQuestions.RESTORE_DEL_ALL)\""},{"lineNumber":562,"author":{"gitId":"-"},"content":"                            [id]\u003d\"SessionsSectionQuestions.RESTORE_DEL_ALL\""},{"lineNumber":563,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I restore/delete all sessions from Recycle Bin?\""},{"lineNumber":564,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_DEL_ALL]\"\u003e"},{"lineNumber":565,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      First \u003ca (click)\u003d\"jumpTo(SessionsSectionQuestions.VIEW_DELETED_SESSION); questionsToCollapsed[SessionsSectionQuestions.VIEW_DELETED_SESSION] \u003d true\" [tmRouterLink]\u003d\"\"\u003eview the session\u003c/a\u003e and check for sessions in Recycle Bin.\u003cbr\u003e"},{"lineNumber":567,"author":{"gitId":"-"},"content":"      To restore all sessions, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-secondary\"\u003e\u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e\u003cstrong\u003e Restore All\u003c/strong\u003e\u003c/button\u003e button in \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading;"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      to delete all sessions, click on the \u003cbutton href\u003d\"#\" class\u003d\"btn btn-sm btn-danger\"\u003e\u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e\u003cstrong\u003e Delete All\u003c/strong\u003e\u003c/button\u003e button in \u003cb\u003eDeleted feedback sessions\u003c/b\u003e heading."},{"lineNumber":569,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[SessionsSectionQuestions.RESTORE_DEL_ALL]\" @collapseAnim\u003e"},{"lineNumber":571,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-recycle-bin-table"},{"lineNumber":572,"author":{"gitId":"-"},"content":"              [recycleBinFeedbackSessionRowModels]\u003d\"exampleRecycleBinFeedbackSessions\""},{"lineNumber":573,"author":{"gitId":"-"},"content":"              [isRecycleBinExpanded]\u003d\"false\"\u003e"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":576,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":577,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"teikjun":1,"AdithyaNarayan":14,"-":562}},{"path":"src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003ch2 class\u003d\"color-blue\" *ngIf\u003d\"!key || showQuestion.length \u003e 0\"\u003eStudents\u003c/h2\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(0, 3)\"\u003eStudent Records\u003c/h4\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003c!-- Question --\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_PROFILE)\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_PROFILE\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view a student\u0027s profile?\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cp\u003eTo view the profile of Student A from Course B:\u003c/p\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eView\u003c/button\u003e button in the last column of the row corresponding to Student A. A new page will open displaying the student\u0027s profile, similar to the sample profile below."},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003ctm-student-profile [studentProfile]\u003d\"exampleStudentProfile\"\u003e\u003c/tm-student-profile\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003ctm-course-related-info [student]\u003d\"exampleStudentAttributes\" [isDisplayOnly]\u003d\"true\"\u003e\u003c/tm-course-related-info\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      The student\u0027s profile page displays the student\u0027s details and course-related information, such as:"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cul\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cb\u003eSection Name\u003c/b\u003e: the name of the section you enrolled the student in. This only appears if sections are created for the course."},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cb\u003eTeam Name\u003c/b\u003e: the name of the team you enrolled the student in, or \u003ci\u003eNA\u003c/i\u003e if the student does not belong to a team."},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":35,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eOfficial Email\u003c/b\u003e: the email address that will be used to contact the student, taken from enrollment information."},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":38,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cb\u003eComments\u003c/b\u003e: additional student information you entered in the Comments column during enrollment."},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/ul\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      Below this is the \u003cb\u003eMore Info\u003c/b\u003e section containing a personal description given by the student, if any."},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cbr\u003e You can press the \u003cspan class\u003d\"text-muted fas fa-expand-arrows-alt cursor-pointer\"\u003e\u003c/span\u003e button in the top-right corner to display the information in a lightbox for better readability."},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_PROFILE]\" @collapseAnim\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003ctm-more-info [studentName]\u003d\"exampleStudentAttributes.name\" [moreInfoText]\u003d\"exampleStudentProfile.moreInfo\"\u003e\u003c/tm-more-info\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_EDIT_DETAILS)\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_EDIT_DETAILS\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I edit a student\u0027s details after enrolling the student?\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      To edit the name, section, team, contact email, or instructor comments of Student A from Course B:"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in Course B."},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-secondary btn-sm\"\u003eEdit\u003c/button\u003e button in the last column of the row corresponding to Student A."},{"lineNumber":64,"author":{"gitId":"-"},"content":"        \u003cbr\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        In the new page that opens, edit the relevant fields of Student A\u0027s details. The page will look similar to the example below."},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSave Changes\u003c/button\u003e to save your changes to Student A\u0027s details."},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      Note that moving a student to a different team (i.e. changing the student\u0027s Team ID) will change the student\u0027s team in all existing sessions in the course."},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EDIT_DETAILS]\" @collapseAnim\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003ctm-instructor-course-student-edit-page [isEnabled]\u003d\"false\"\u003e\u003c/tm-instructor-course-student-edit-page\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_VIEW_RESPONSES)\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_VIEW_RESPONSES\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I view all the responses a student has given and received?\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_VIEW_RESPONSES]\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      To view the responses that Student A from Course B has given and received:"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Go to the \u003cb\u003eStudents\u003c/b\u003e page and click the panel heading for Course B. You will see a list of students enrolled in the course."},{"lineNumber":92,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eAll Records\u003c/button\u003e button corresponding to Student A to access all the responses Student A has given and received."},{"lineNumber":96,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(3, 5)\"\u003eFinding Students\u003c/h4\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  \u003c!--Question --\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_SEARCH)\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_SEARCH\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I search for a student in my course?\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      You can search for students from the \u003cb\u003eSearch\u003c/b\u003e page. Click the \u003cb\u003eSearch\u003c/b\u003e tab in the navigation bar at the top of the page. You should see a search bar similar to the one below:"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e\u003ctm-instructor-search-bar\u003e\u003c/tm-instructor-search-bar\u003e\u003c/tm-example-box\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      To search for a student:"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Tick the option \u003cb\u003eStudents\u003c/b\u003e below the search box."},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Type your search terms into the search bar. You can search for a student record based on:"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        \u003cul\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"          \u003cli\u003eSection name\u003c/li\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"          \u003cli\u003eTeam name\u003c/li\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          \u003cli\u003eStudent name\u003c/li\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          \u003cli\u003eEmail\u003c/li\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        \u003c/ul\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Click the"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        \u003cbutton class\u003d\"btn btn-primary btn-sm\"\u003eSearch\u003c/button\u003e button."},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      If you search for \u003ccode\u003ealice\u003c/code\u003e, the search results would show something like this (assuming such a student exists):"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleSingleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      You can search for multiple students based on the attributes mentioned above. To do so, include the terms you wish to search for in the search box separated by spaces.\u003cbr\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      For example, if you search for \u003ccode\u003ealice Section A Team B jack@email.com\u003c/code\u003e, the search would result in something similar to this (assuming the corresponding data exists):"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003ctm-example-box *ngIf\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_SEARCH]\" @collapseAnim\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      \u003ctm-student-result-table [studentTables]\u003d\"exampleMultipleStudentResultTables\" [isActionButtonsEnabled]\u003d\"false\"\u003e\u003c/tm-student-result-table\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003c/tm-example-box\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_EMAIL)\""},{"lineNumber":147,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_EMAIL\""},{"lineNumber":148,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I email a student or students in my course?\""},{"lineNumber":149,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_EMAIL]\"\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    \u003col\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        On the \u003cb\u003eStudents\u003c/b\u003e page, filter out the selected student/students."},{"lineNumber":153,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Click"},{"lineNumber":156,"author":{"gitId":"AdithyaNarayan"},"content":"        \u003cbutton class\u003d\"btn btn-sm btn-secondary\"\u003eCopy Emails\u003c/button\u003e to copy their email addresses to your clipboard."},{"lineNumber":157,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      \u003cli\u003e"},{"lineNumber":159,"author":{"gitId":"AdithyaNarayan"},"content":"        Use your preferred email provider to email the students."},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/li\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/ol\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  \u003c!-- Section --\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  \u003ch4 *ngIf\u003d\"displaySubsection(5, 7)\"\u003eStudent Accounts\u003c/h4\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-first\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT)\""},{"lineNumber":167,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT\""},{"lineNumber":168,"author":{"gitId":"-"},"content":"                            headerText\u003d\"Is it compulsory for students to use Google accounts?\""},{"lineNumber":169,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_GOOGLE_ACCOUNT]\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      Students can submit feedback and view results without having to login to TEAMMATES, unless they choose to link their Google account (optional). TEAMMATES will send students a unique URL to access their feedback sessions and results. However, students"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      who link their TEAMMATES account with their Google account will be able to access a dashboard of all their sessions and results through the TEAMMATES website."},{"lineNumber":173,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  \u003c!--Question--\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  \u003ctm-instructor-help-panel class\u003d\"instr-help-qn-last\" #question [hidden]\u003d\"key \u0026\u0026 !showQuestion.includes(StudentsSectionQuestions.STUDENT_CHANGE_ID)\""},{"lineNumber":177,"author":{"gitId":"-"},"content":"                            [id]\u003d\"StudentsSectionQuestions.STUDENT_CHANGE_ID\""},{"lineNumber":178,"author":{"gitId":"-"},"content":"                            headerText\u003d\"How do I change the Google ID associated with a student?\""},{"lineNumber":179,"author":{"gitId":"-"},"content":"                            [(isPanelExpanded)]\u003d\"questionsToCollapsed[StudentsSectionQuestions.STUDENT_CHANGE_ID]\"\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    \u003cp\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      At the moment, there is no way for students to update their own Google IDs."},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003cbr\u003e Please ask the student to \u003ca href\u003d\"mailto:{{ supportEmail }}\"\u003econtact us\u003c/a\u003e for assistance changing his/her Google ID."},{"lineNumber":183,"author":{"gitId":"-"},"content":"    \u003c/p\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  \u003c/tm-instructor-help-panel\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"AdithyaNarayan":4,"-":181}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"t-cheepeng"},"content":"\u003ch1\u003eStudent Activity Logs\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"t-cheepeng"},"content":"\u003cp\u003eThis page allows you to find when your students have accessed or submitted a particular feedback session for a given course. The earliest date you can search for is \u003cb\u003e{{this.LOGS_RETENTION_PERIOD}} days\u003c/b\u003e before today.\u003c/p\u003e"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"\u003chr/\u003e"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"\u003cdiv *tmIsLoading\u003d\"isLoading\" class\u003d\"card bg-form no-border\"\u003e"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"    \u003cdiv class\u003d\"row form-group\"\u003e"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"          \u003clabel for\u003d\"course-id-dropdown\" class\u003d\"font-weight-bold\"\u003eCourse ID\u003c/label\u003e"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":13,"author":{"gitId":"t-cheepeng"},"content":"          \u003cselect id\u003d\"course-id-dropdown\" class\u003d\"form-control col-8\" [(ngModel)]\u003d\"formModel.courseId\"\u003e"},{"lineNumber":14,"author":{"gitId":"t-cheepeng"},"content":"            \u003coption value\u003d\"\" disabled selected hidden\u003eSelect Course ID\u003c/option\u003e"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"            \u003coption *ngFor\u003d\"let course of courses\"\u003e"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"              {{course.courseId}}"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"            \u003c/option\u003e"},{"lineNumber":18,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/select\u003e"},{"lineNumber":19,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv class\u003d\"col-8\"\u003e"},{"lineNumber":22,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12 mb-1\"\u003e"},{"lineNumber":23,"author":{"gitId":"t-cheepeng"},"content":"          \u003clabel for\u003d\"logs-from-datepicker\" class\u003d\"font-weight-bold\"\u003eSearch period from\u003c/label\u003e"},{"lineNumber":24,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":26,"author":{"gitId":"t-cheepeng"},"content":"          \u003cdiv class\u003d\"col-md-6 input-group\"\u003e"},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"            \u003cinput id\u003d\"logs-from-datepicker\" type\u003d\"text\" class\u003d\"form-control\" ngbDatepicker [minDate]\u003d\"earliestSearchDate\" [maxDate]\u003d\"dateToday\" [(ngModel)]\u003d\"formModel.logsDateFrom\" #logsFromDp\u003d\"ngbDatepicker\"/\u003e"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":"            \u003cbutton class\u003d\"btn btn-light\" (click)\u003d\"logsFromDp.toggle()\" type\u003d\"button\"\u003e"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":"              \u003ci class\u003d\"fas fa-calendar-alt\"\u003e\u003c/i\u003e"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"            \u003c/button\u003e"},{"lineNumber":31,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"t-cheepeng"},"content":"          \u003cdiv class\u003d\"col-md-3\"\u003e"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"            \u003ctm-time-picker [(time)]\u003d\"formModel.logsTimeFrom\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"    \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":"    \u003cdiv class\u003d\"row form-group\"\u003e"},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":"          \u003clabel for\u003d\"student-name-dropdown\" class\u003d\"font-weight-bold\"\u003eStudent Name (Optional)\u003c/label\u003e"},{"lineNumber":42,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":44,"author":{"gitId":"t-cheepeng"},"content":"          \u003cselect id\u003d\"student-name-dropdown\" class\u003d\"form-control col-8\" [(ngModel)]\u003d\"formModel.studentName\"\u003e"},{"lineNumber":45,"author":{"gitId":"t-cheepeng"},"content":"            \u003coption *ngFor\u003d\"let student of courseToStudents[formModel.courseId]\"\u003e"},{"lineNumber":46,"author":{"gitId":"t-cheepeng"},"content":"              {{student.name}}"},{"lineNumber":47,"author":{"gitId":"t-cheepeng"},"content":"            \u003c/option\u003e"},{"lineNumber":48,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/select\u003e"},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv class\u003d\"col-8\"\u003e"},{"lineNumber":52,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"col-12 mb-1\"\u003e"},{"lineNumber":53,"author":{"gitId":"t-cheepeng"},"content":"          \u003clabel for\u003d\"logs-to-datepicker\" class\u003d\"font-weight-bold\"\u003eSearch period until\u003c/label\u003e"},{"lineNumber":54,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":56,"author":{"gitId":"t-cheepeng"},"content":"          \u003cdiv class\u003d\"col-md-6 input-group\"\u003e"},{"lineNumber":57,"author":{"gitId":"t-cheepeng"},"content":"            \u003cinput id\u003d\"logs-to-datepicker\" type\u003d\"text\" class\u003d\"form-control\" ngbDatepicker [minDate]\u003d\"earliestSearchDate\" [maxDate]\u003d\"dateToday\" [(ngModel)]\u003d\"formModel.logsDateTo\" #logsToDp\u003d\"ngbDatepicker\"/\u003e"},{"lineNumber":58,"author":{"gitId":"t-cheepeng"},"content":"            \u003cbutton class\u003d\"btn btn-light\" (click)\u003d\"logsToDp.toggle()\" type\u003d\"button\"\u003e"},{"lineNumber":59,"author":{"gitId":"t-cheepeng"},"content":"              \u003ci class\u003d\"fas fa-calendar-alt\"\u003e\u003c/i\u003e"},{"lineNumber":60,"author":{"gitId":"t-cheepeng"},"content":"            \u003c/button\u003e"},{"lineNumber":61,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"t-cheepeng"},"content":"          \u003cdiv class\u003d\"col-md-3\"\u003e"},{"lineNumber":63,"author":{"gitId":"t-cheepeng"},"content":"            \u003ctm-time-picker [(time)]\u003d\"formModel.logsTimeTo\"\u003e\u003c/tm-time-picker\u003e"},{"lineNumber":64,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"t-cheepeng"},"content":"          \u003cdiv class\u003d\"col-md-2\"\u003e"},{"lineNumber":66,"author":{"gitId":"t-cheepeng"},"content":"            \u003cbutton id\u003d\"search-button\" class\u003d\"float-right btn btn-primary\" (click)\u003d\"search()\" [disabled]\u003d\"!formModel.courseId || isSearching\"\u003eSearch\u003c/button\u003e"},{"lineNumber":67,"author":{"gitId":"t-cheepeng"},"content":"          \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":69,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"t-cheepeng"},"content":"    \u003c/div\u003e"},{"lineNumber":71,"author":{"gitId":"t-cheepeng"},"content":"  \u003c/div\u003e"},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"\u003c/div\u003e"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"\u003cdiv *tmIsLoading\u003d\"isSearching\"\u003e"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"  \u003cdiv *ngFor\u003d\"let results of searchResults\"\u003e"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"    \u003cdiv class\u003d\"card mb-3 alert-success-border\"\u003e"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv class\u003d\"card-header alert-success cursor-pointer\" (click)\u003d\"results.isTabExpanded \u003d !results.isTabExpanded\"\u003e"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"        {{results.feedbackSessionName}}"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"results.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"t-cheepeng"},"content":"      \u003cdiv *ngIf\u003d\"results.isTabExpanded\"\u003e"},{"lineNumber":84,"author":{"gitId":"t-cheepeng"},"content":"        \u003cdiv *ngIf\u003d\"results.logRowsData[0]; else noActivityTemplate\" class\u003d\"card-body\"\u003e"},{"lineNumber":85,"author":{"gitId":"t-cheepeng"},"content":"          \u003ctm-sortable-table [rows]\u003d\"results.logRowsData\" [columns]\u003d\"results.logColumnsData\" [initialSortBy]\u003d\"SortBy.GIVER_NAME\"\u003e\u003c/tm-sortable-table\u003e"},{"lineNumber":86,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/div\u003e"},{"lineNumber":87,"author":{"gitId":"t-cheepeng"},"content":"        \u003cng-template #noActivityTemplate\u003e"},{"lineNumber":88,"author":{"gitId":"t-cheepeng"},"content":"          \u003ci\u003eNo activity for this feedback session in selected search period\u003c/i\u003e"},{"lineNumber":89,"author":{"gitId":"t-cheepeng"},"content":"        \u003c/ng-template\u003e"},{"lineNumber":90,"author":{"gitId":"t-cheepeng"},"content":"      \u003c/div\u003e"},{"lineNumber":91,"author":{"gitId":"t-cheepeng"},"content":"    \u003c/div\u003e"},{"lineNumber":92,"author":{"gitId":"t-cheepeng"},"content":"  \u003c/div\u003e"},{"lineNumber":93,"author":{"gitId":"t-cheepeng"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"t-cheepeng":93}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"t-cheepeng"},"content":".bg-form {"},{"lineNumber":2,"author":{"gitId":"t-cheepeng"},"content":"  background-color: #EAEFF5;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"}"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":".no-border {"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"  border: 0;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"}"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":".alert-success-border {"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"  border-color: #C3E6CB;"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":"}"}],"authorContributionMap":{"t-cheepeng":11}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"t-cheepeng"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"t-cheepeng"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"  Course,"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSession,"},{"lineNumber":12,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionLog,"},{"lineNumber":13,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":14,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"  LogType,"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"  ResponseVisibleSetting,"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"  SessionVisibleSetting,"},{"lineNumber":18,"author":{"gitId":"t-cheepeng"},"content":"  Student,"},{"lineNumber":19,"author":{"gitId":"t-cheepeng"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":20,"author":{"gitId":"t-cheepeng"},"content":"import { SortBy } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":"import { ColumnData } from \u0027../../components/sortable-table/sortable-table.component\u0027;"},{"lineNumber":22,"author":{"gitId":"t-cheepeng"},"content":"import { InstructorAuditLogsPageComponent } from \u0027./instructor-audit-logs-page.component\u0027;"},{"lineNumber":23,"author":{"gitId":"t-cheepeng"},"content":"import { InstructorAuditLogsPageModule } from \u0027./instructor-audit-logs-page.module\u0027;"},{"lineNumber":24,"author":{"gitId":"t-cheepeng"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":25,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":26,"author":{"gitId":"t-cheepeng"},"content":"describe(\u0027InstructorAuditLogsPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"  let component: InstructorAuditLogsPageComponent;"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":"  let fixture: ComponentFixture\u003cInstructorAuditLogsPageComponent\u003e;"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":"  let courseService: CourseService;"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"  let studentService: StudentService;"},{"lineNumber":31,"author":{"gitId":"t-cheepeng"},"content":"  let logService: LogService;"},{"lineNumber":32,"author":{"gitId":"t-cheepeng"},"content":"  let timezoneService: TimezoneService;"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"  const resultColumns: ColumnData[] \u003d ["},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Time\u0027, sortBy: SortBy.LOG_DATE },"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Name\u0027, sortBy: SortBy.GIVER_NAME },"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Activity\u0027, sortBy: SortBy.LOG_TYPE },"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Email\u0027, sortBy: SortBy.RESPONDENT_EMAIL },"},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Section\u0027, sortBy: SortBy.SECTION_NAME },"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":"    { header: \u0027Team\u0027, sortBy: SortBy.TEAM_NAME },"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":"  ];"},{"lineNumber":42,"author":{"gitId":"t-cheepeng"},"content":"  const testCourse1: Course \u003d {"},{"lineNumber":43,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027CS9999\u0027,"},{"lineNumber":44,"author":{"gitId":"t-cheepeng"},"content":"    courseName: \u0027CS9999\u0027,"},{"lineNumber":45,"author":{"gitId":"t-cheepeng"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":46,"author":{"gitId":"t-cheepeng"},"content":"    creationTimestamp: 0,"},{"lineNumber":47,"author":{"gitId":"t-cheepeng"},"content":"    deletionTimestamp: 0,"},{"lineNumber":48,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":"  const testCourse2: Course \u003d {"},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027MA1234\u0027,"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":"    courseName: \u0027MA1234\u0027,"},{"lineNumber":52,"author":{"gitId":"t-cheepeng"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":53,"author":{"gitId":"t-cheepeng"},"content":"    creationTimestamp: 0,"},{"lineNumber":54,"author":{"gitId":"t-cheepeng"},"content":"    deletionTimestamp: 0,"},{"lineNumber":55,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":56,"author":{"gitId":"t-cheepeng"},"content":"  const emptyStudent: Student \u003d {"},{"lineNumber":57,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027\u0027, email: \u0027\u0027, name: \u0027\u0027, sectionName: \u0027\u0027, teamName: \u0027\u0027,"},{"lineNumber":58,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":59,"author":{"gitId":"t-cheepeng"},"content":"  const testStudent: Student \u003d {"},{"lineNumber":60,"author":{"gitId":"t-cheepeng"},"content":"    email: \u0027doejohn@email.com\u0027,"},{"lineNumber":61,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027CS9999\u0027,"},{"lineNumber":62,"author":{"gitId":"t-cheepeng"},"content":"    name: \u0027Doe John\u0027,"},{"lineNumber":63,"author":{"gitId":"t-cheepeng"},"content":"    teamName: \u0027team 1\u0027,"},{"lineNumber":64,"author":{"gitId":"t-cheepeng"},"content":"    sectionName: \u0027section 1\u0027,"},{"lineNumber":65,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":66,"author":{"gitId":"t-cheepeng"},"content":"  const testFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":67,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionName: \u0027Feedback Session 1\u0027,"},{"lineNumber":68,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027CS9999\u0027,"},{"lineNumber":69,"author":{"gitId":"t-cheepeng"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":70,"author":{"gitId":"t-cheepeng"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":71,"author":{"gitId":"t-cheepeng"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"    submissionEndTimestamp: 1549095330000,"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":"    gracePeriod: 0,"},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":"  const testLogs1: FeedbackSessionLog \u003d {"},{"lineNumber":83,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionData: testFeedbackSession,"},{"lineNumber":84,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionLogEntries: ["},{"lineNumber":85,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":86,"author":{"gitId":"t-cheepeng"},"content":"        studentData: testStudent,"},{"lineNumber":87,"author":{"gitId":"t-cheepeng"},"content":"        feedbackSessionLogType: LogType.FEEDBACK_SESSION_SUBMISSION,"},{"lineNumber":88,"author":{"gitId":"t-cheepeng"},"content":"        timestamp: 0,"},{"lineNumber":89,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":90,"author":{"gitId":"t-cheepeng"},"content":"    ],"},{"lineNumber":91,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":92,"author":{"gitId":"t-cheepeng"},"content":"  const testLogs2: FeedbackSessionLog \u003d {"},{"lineNumber":93,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionData: testFeedbackSession,"},{"lineNumber":94,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionLogEntries: ["},{"lineNumber":95,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":96,"author":{"gitId":"t-cheepeng"},"content":"        studentData: testStudent,"},{"lineNumber":97,"author":{"gitId":"t-cheepeng"},"content":"        feedbackSessionLogType: LogType.FEEDBACK_SESSION_SUBMISSION,"},{"lineNumber":98,"author":{"gitId":"t-cheepeng"},"content":"        timestamp: 0,"},{"lineNumber":99,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":100,"author":{"gitId":"t-cheepeng"},"content":"    ],"},{"lineNumber":101,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":102,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":103,"author":{"gitId":"t-cheepeng"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"t-cheepeng"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":105,"author":{"gitId":"t-cheepeng"},"content":"      imports: [InstructorAuditLogsPageModule, HttpClientTestingModule],"},{"lineNumber":106,"author":{"gitId":"t-cheepeng"},"content":"    }).compileComponents();"},{"lineNumber":107,"author":{"gitId":"t-cheepeng"},"content":"  }));"},{"lineNumber":108,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":109,"author":{"gitId":"t-cheepeng"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":110,"author":{"gitId":"t-cheepeng"},"content":"    fixture \u003d TestBed.createComponent(InstructorAuditLogsPageComponent);"},{"lineNumber":111,"author":{"gitId":"t-cheepeng"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":112,"author":{"gitId":"t-cheepeng"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":113,"author":{"gitId":"t-cheepeng"},"content":"    logService \u003d TestBed.inject(LogService);"},{"lineNumber":114,"author":{"gitId":"t-cheepeng"},"content":"    timezoneService \u003d TestBed.inject(TimezoneService);"},{"lineNumber":115,"author":{"gitId":"t-cheepeng"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":116,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":117,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":118,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":119,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":120,"author":{"gitId":"t-cheepeng"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":121,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":122,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":123,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":124,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":125,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":126,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":127,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap when page is still loading\u0027, () \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d true;"},{"lineNumber":129,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":130,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":131,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":132,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":133,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap when searching for details in search form\u0027, () \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"t-cheepeng"},"content":"    component.courses \u003d [testCourse1, testCourse2];"},{"lineNumber":135,"author":{"gitId":"t-cheepeng"},"content":"    component.formModel \u003d {"},{"lineNumber":136,"author":{"gitId":"t-cheepeng"},"content":"      logsDateFrom: { year: 1997, month: 9, day: 11 },"},{"lineNumber":137,"author":{"gitId":"t-cheepeng"},"content":"      logsTimeFrom: { hour: 23, minute: 59 },"},{"lineNumber":138,"author":{"gitId":"t-cheepeng"},"content":"      logsDateTo: { year: 1998, month: 9, day: 11 },"},{"lineNumber":139,"author":{"gitId":"t-cheepeng"},"content":"      logsTimeTo: { hour: 15, minute: 0 },"},{"lineNumber":140,"author":{"gitId":"t-cheepeng"},"content":"      courseId: \u0027CS9999\u0027,"},{"lineNumber":141,"author":{"gitId":"t-cheepeng"},"content":"      studentName: \u0027Doe John\u0027,"},{"lineNumber":142,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":143,"author":{"gitId":"t-cheepeng"},"content":"    component.courseToStudents \u003d {"},{"lineNumber":144,"author":{"gitId":"t-cheepeng"},"content":"      CS9999: [testStudent],"},{"lineNumber":145,"author":{"gitId":"t-cheepeng"},"content":"      MA1234: [],"},{"lineNumber":146,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":147,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":148,"author":{"gitId":"t-cheepeng"},"content":"    component.isSearching \u003d true;"},{"lineNumber":149,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":150,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":151,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":152,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":153,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":154,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with results of a search\u0027, () \u003d\u003e {"},{"lineNumber":155,"author":{"gitId":"t-cheepeng"},"content":"    component.searchResults \u003d ["},{"lineNumber":156,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":157,"author":{"gitId":"t-cheepeng"},"content":"        feedbackSessionName: \u0027Feedback session 1\u0027,"},{"lineNumber":158,"author":{"gitId":"t-cheepeng"},"content":"        logColumnsData: resultColumns,"},{"lineNumber":159,"author":{"gitId":"t-cheepeng"},"content":"        logRowsData: [["},{"lineNumber":160,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u002715 January 2021\u0027 },"},{"lineNumber":161,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u0027Doe John\u0027 },"},{"lineNumber":162,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u0027Viewed the submission page\u0027 },"},{"lineNumber":163,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u0027doejohn@email.com\u0027 },"},{"lineNumber":164,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u0027section 1\u0027 },"},{"lineNumber":165,"author":{"gitId":"t-cheepeng"},"content":"          { value: \u0027team 1\u0027 },"},{"lineNumber":166,"author":{"gitId":"t-cheepeng"},"content":"        ]],"},{"lineNumber":167,"author":{"gitId":"t-cheepeng"},"content":"        isTabExpanded: true,"},{"lineNumber":168,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":169,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":170,"author":{"gitId":"t-cheepeng"},"content":"        feedbackSessionName: \u0027Feedback session 2\u0027,"},{"lineNumber":171,"author":{"gitId":"t-cheepeng"},"content":"        logColumnsData: resultColumns,"},{"lineNumber":172,"author":{"gitId":"t-cheepeng"},"content":"        logRowsData: [],"},{"lineNumber":173,"author":{"gitId":"t-cheepeng"},"content":"        isTabExpanded: true,"},{"lineNumber":174,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":175,"author":{"gitId":"t-cheepeng"},"content":"    ];"},{"lineNumber":176,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":177,"author":{"gitId":"t-cheepeng"},"content":"    component.isSearching \u003d false;"},{"lineNumber":178,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":179,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":180,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":181,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":182,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":183,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should load all courses and students that instructor has on init\u0027, () \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"t-cheepeng"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027getAllCoursesAsInstructor\u0027).and"},{"lineNumber":185,"author":{"gitId":"t-cheepeng"},"content":"        .returnValue(of({"},{"lineNumber":186,"author":{"gitId":"t-cheepeng"},"content":"          courses: ["},{"lineNumber":187,"author":{"gitId":"t-cheepeng"},"content":"            testCourse1, testCourse2,"},{"lineNumber":188,"author":{"gitId":"t-cheepeng"},"content":"          ],"},{"lineNumber":189,"author":{"gitId":"t-cheepeng"},"content":"        }));"},{"lineNumber":190,"author":{"gitId":"t-cheepeng"},"content":"    const studentSpy: Spy \u003d spyOn(studentService, \u0027getStudentsFromCourse\u0027).and"},{"lineNumber":191,"author":{"gitId":"t-cheepeng"},"content":"        .returnValue(of({"},{"lineNumber":192,"author":{"gitId":"t-cheepeng"},"content":"          students: ["},{"lineNumber":193,"author":{"gitId":"t-cheepeng"},"content":"            testStudent,"},{"lineNumber":194,"author":{"gitId":"t-cheepeng"},"content":"          ],"},{"lineNumber":195,"author":{"gitId":"t-cheepeng"},"content":"        }));"},{"lineNumber":196,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":197,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":198,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":199,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":200,"author":{"gitId":"t-cheepeng"},"content":"    expect(courseSpy).toBeCalledWith(\u0027active\u0027);"},{"lineNumber":201,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.courses.length).toEqual(2);"},{"lineNumber":202,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.courseToStudents[testCourse1.courseId][0]).toEqual(emptyStudent);"},{"lineNumber":203,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.courseToStudents[testCourse1.courseId][1]).toEqual(testStudent);"},{"lineNumber":204,"author":{"gitId":"t-cheepeng"},"content":"    expect(studentSpy).toHaveBeenNthCalledWith(1, { courseId: testCourse1.courseId });"},{"lineNumber":205,"author":{"gitId":"t-cheepeng"},"content":"    expect(studentSpy).toHaveBeenNthCalledWith(2, { courseId: testCourse2.courseId });"},{"lineNumber":206,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":207,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":208,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should search for logs when search button is clicked\u0027, () \u003d\u003e {"},{"lineNumber":209,"author":{"gitId":"t-cheepeng"},"content":"    const logSpy: Spy \u003d spyOn(logService, \u0027searchFeedbackSessionLog\u0027).and"},{"lineNumber":210,"author":{"gitId":"t-cheepeng"},"content":"        .returnValue(of({ feedbackSessionLogs: [testLogs1, testLogs2] }));"},{"lineNumber":211,"author":{"gitId":"t-cheepeng"},"content":"    const timeSpy: Spy \u003d spyOn(timezoneService, \u0027getResolvedTimestamp\u0027).and"},{"lineNumber":212,"author":{"gitId":"t-cheepeng"},"content":"        .returnValue(of({ timestamp: 0, message: \u0027\u0027 }));"},{"lineNumber":213,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":214,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":215,"author":{"gitId":"t-cheepeng"},"content":"    component.isSearching \u003d false;"},{"lineNumber":216,"author":{"gitId":"t-cheepeng"},"content":"    component.formModel \u003d {"},{"lineNumber":217,"author":{"gitId":"t-cheepeng"},"content":"      logsDateFrom: { year: 2020, month: 12, day: 30 },"},{"lineNumber":218,"author":{"gitId":"t-cheepeng"},"content":"      logsTimeFrom: { hour: 23, minute: 59 },"},{"lineNumber":219,"author":{"gitId":"t-cheepeng"},"content":"      logsDateTo: { year: 2020, month: 12, day: 31 },"},{"lineNumber":220,"author":{"gitId":"t-cheepeng"},"content":"      logsTimeTo: { hour: 23, minute: 59 },"},{"lineNumber":221,"author":{"gitId":"t-cheepeng"},"content":"      courseId: testCourse1.courseId,"},{"lineNumber":222,"author":{"gitId":"t-cheepeng"},"content":"      studentName: testStudent.name,"},{"lineNumber":223,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":224,"author":{"gitId":"t-cheepeng"},"content":"    component.courseToStudents \u003d { CS9999: [testStudent] };"},{"lineNumber":225,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":226,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":227,"author":{"gitId":"t-cheepeng"},"content":"    fixture.debugElement.nativeElement.querySelector(\u0027#search-button\u0027).click();"},{"lineNumber":228,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":229,"author":{"gitId":"t-cheepeng"},"content":"    expect(timeSpy).toHaveBeenCalledTimes(2);"},{"lineNumber":230,"author":{"gitId":"t-cheepeng"},"content":"    expect(logSpy).toHaveBeenCalled();"},{"lineNumber":231,"author":{"gitId":"t-cheepeng"},"content":"    expect(logSpy).toHaveBeenCalledWith({"},{"lineNumber":232,"author":{"gitId":"t-cheepeng"},"content":"      courseId: testCourse1.courseId, searchFrom: \u00270\u0027, searchUntil: \u00270\u0027, studentEmail: testStudent.email,"},{"lineNumber":233,"author":{"gitId":"t-cheepeng"},"content":"    });"},{"lineNumber":234,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":235,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.searchResults.length).toEqual(2);"},{"lineNumber":236,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":237,"author":{"gitId":"t-cheepeng"},"content":"    for (let i: number \u003d 0; i \u003c 2; i +\u003d 1) {"},{"lineNumber":238,"author":{"gitId":"t-cheepeng"},"content":"      expect(component.searchResults[i].isTabExpanded).toBeFalsy();"},{"lineNumber":239,"author":{"gitId":"t-cheepeng"},"content":"      expect(component.searchResults[i].logColumnsData).toEqual(resultColumns);"},{"lineNumber":240,"author":{"gitId":"t-cheepeng"},"content":"      // Testing that the LogType is converted correctly."},{"lineNumber":241,"author":{"gitId":"t-cheepeng"},"content":"      expect(component.searchResults[i].logRowsData[0][2].value).toEqual(\u0027Submitted responses\u0027);"},{"lineNumber":242,"author":{"gitId":"t-cheepeng"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":244,"author":{"gitId":"t-cheepeng"},"content":"});"}],"authorContributionMap":{"t-cheepeng":244}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"t-cheepeng"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"t-cheepeng"},"content":"import { NgbDateParserFormatter } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"import { concatMap, finalize, map, mergeAll } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"import { LOCAL_DATE_TIME_FORMAT, TimeResolvingResult, TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":"import { ApiConst } from \u0027../../../types/api-const\u0027;"},{"lineNumber":12,"author":{"gitId":"t-cheepeng"},"content":"import {"},{"lineNumber":13,"author":{"gitId":"t-cheepeng"},"content":"  Course,"},{"lineNumber":14,"author":{"gitId":"t-cheepeng"},"content":"  Courses,"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionLog, FeedbackSessionLogEntry,"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionLogs, LogType,"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"  Student,"},{"lineNumber":18,"author":{"gitId":"t-cheepeng"},"content":"  Students,"},{"lineNumber":19,"author":{"gitId":"t-cheepeng"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":20,"author":{"gitId":"t-cheepeng"},"content":"import { SortBy } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":"import { SessionEditFormDatePickerFormatter } from \u0027../../components/session-edit-form/session-edit-form-datepicker-formatter\u0027;"},{"lineNumber":22,"author":{"gitId":"t-cheepeng"},"content":"import { DateFormat } from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":23,"author":{"gitId":"t-cheepeng"},"content":"import { TimeFormat } from \u0027../../components/session-edit-form/time-picker/time-picker.component\u0027;"},{"lineNumber":24,"author":{"gitId":"t-cheepeng"},"content":"import { ColumnData, SortableTableCellData } from \u0027../../components/sortable-table/sortable-table.component\u0027;"},{"lineNumber":25,"author":{"gitId":"t-cheepeng"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":26,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":" * Model for searching of logs"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":" */"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"interface SearchLogsFormModel {"},{"lineNumber":31,"author":{"gitId":"t-cheepeng"},"content":"  logsDateFrom: DateFormat;"},{"lineNumber":32,"author":{"gitId":"t-cheepeng"},"content":"  logsDateTo: DateFormat;"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"  logsTimeFrom: TimeFormat;"},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"  logsTimeTo: TimeFormat;"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"  courseId: string;"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"  studentName: string;"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"}"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"/**"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":" * Model for displaying of feedback session logs"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":" */"},{"lineNumber":42,"author":{"gitId":"t-cheepeng"},"content":"interface FeedbackSessionLogModel {"},{"lineNumber":43,"author":{"gitId":"t-cheepeng"},"content":"  feedbackSessionName: string;"},{"lineNumber":44,"author":{"gitId":"t-cheepeng"},"content":"  logColumnsData: ColumnData[];"},{"lineNumber":45,"author":{"gitId":"t-cheepeng"},"content":"  logRowsData: SortableTableCellData[][];"},{"lineNumber":46,"author":{"gitId":"t-cheepeng"},"content":"  isTabExpanded: boolean;"},{"lineNumber":47,"author":{"gitId":"t-cheepeng"},"content":"}"},{"lineNumber":48,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":"/**"},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":" * Component for instructor logs"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":" */"},{"lineNumber":52,"author":{"gitId":"t-cheepeng"},"content":"@Component({"},{"lineNumber":53,"author":{"gitId":"t-cheepeng"},"content":"  selector: \u0027tm-instructor-audit-logs-page\u0027,"},{"lineNumber":54,"author":{"gitId":"t-cheepeng"},"content":"  templateUrl: \u0027./instructor-audit-logs-page.component.html\u0027,"},{"lineNumber":55,"author":{"gitId":"t-cheepeng"},"content":"  providers: [{ provide: NgbDateParserFormatter, useClass: SessionEditFormDatePickerFormatter }],"},{"lineNumber":56,"author":{"gitId":"t-cheepeng"},"content":"  styleUrls: [\u0027./instructor-audit-logs-page.component.scss\u0027],"},{"lineNumber":57,"author":{"gitId":"t-cheepeng"},"content":"})"},{"lineNumber":58,"author":{"gitId":"t-cheepeng"},"content":"export class InstructorAuditLogsPageComponent implements OnInit {"},{"lineNumber":59,"author":{"gitId":"t-cheepeng"},"content":"  LOGS_RETENTION_PERIOD: number \u003d ApiConst.LOGS_RETENTION_PERIOD;"},{"lineNumber":60,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":61,"author":{"gitId":"t-cheepeng"},"content":"  // enum"},{"lineNumber":62,"author":{"gitId":"t-cheepeng"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":63,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":64,"author":{"gitId":"t-cheepeng"},"content":"  formModel: SearchLogsFormModel \u003d {"},{"lineNumber":65,"author":{"gitId":"t-cheepeng"},"content":"    logsDateFrom: { year: 0, month: 0, day: 0 },"},{"lineNumber":66,"author":{"gitId":"t-cheepeng"},"content":"    logsTimeFrom: { hour: 0, minute: 0 },"},{"lineNumber":67,"author":{"gitId":"t-cheepeng"},"content":"    logsDateTo: { year: 0, month: 0, day: 0 },"},{"lineNumber":68,"author":{"gitId":"t-cheepeng"},"content":"    logsTimeTo: { hour: 0, minute: 0 },"},{"lineNumber":69,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":70,"author":{"gitId":"t-cheepeng"},"content":"    studentName: \u0027\u0027,"},{"lineNumber":71,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"  dateToday: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":"  earliestSearchDate: DateFormat \u003d { year: 0, month: 0, day: 0 };"},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"  courses: Course[] \u003d [];"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"  courseToStudents: Record\u003cstring, Student[]\u003e \u003d {};"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"  searchResults: FeedbackSessionLogModel[] \u003d [];"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"  isLoading: boolean \u003d true;"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"  isSearching: boolean \u003d false;"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"  constructor(private courseService: CourseService,"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"              private studentService: StudentService,"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":"              private logsService: LogService,"},{"lineNumber":83,"author":{"gitId":"t-cheepeng"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":84,"author":{"gitId":"t-cheepeng"},"content":"              private statusMessageService: StatusMessageService) { }"},{"lineNumber":85,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":86,"author":{"gitId":"t-cheepeng"},"content":"  ngOnInit(): void {"},{"lineNumber":87,"author":{"gitId":"t-cheepeng"},"content":"    const today: Date \u003d new Date();"},{"lineNumber":88,"author":{"gitId":"t-cheepeng"},"content":"    this.dateToday.year \u003d today.getFullYear();"},{"lineNumber":89,"author":{"gitId":"t-cheepeng"},"content":"    this.dateToday.month \u003d today.getMonth() + 1;"},{"lineNumber":90,"author":{"gitId":"t-cheepeng"},"content":"    this.dateToday.day \u003d today.getDate();"},{"lineNumber":91,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":92,"author":{"gitId":"t-cheepeng"},"content":"    const earliestSearchDate: Date \u003d new Date(Date.now() - this.LOGS_RETENTION_PERIOD * 24 * 60 * 60 * 1000);"},{"lineNumber":93,"author":{"gitId":"t-cheepeng"},"content":"    this.earliestSearchDate.year \u003d earliestSearchDate.getFullYear();"},{"lineNumber":94,"author":{"gitId":"t-cheepeng"},"content":"    this.earliestSearchDate.month \u003d earliestSearchDate.getMonth() + 1;"},{"lineNumber":95,"author":{"gitId":"t-cheepeng"},"content":"    this.earliestSearchDate.day \u003d earliestSearchDate.getDate();"},{"lineNumber":96,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":97,"author":{"gitId":"t-cheepeng"},"content":"    this.formModel.logsDateFrom \u003d { ...this.dateToday, day: today.getDate() - 1 };"},{"lineNumber":98,"author":{"gitId":"t-cheepeng"},"content":"    this.formModel.logsDateTo \u003d { ...this.dateToday };"},{"lineNumber":99,"author":{"gitId":"t-cheepeng"},"content":"    this.formModel.logsTimeFrom \u003d { hour: 23, minute: 59 };"},{"lineNumber":100,"author":{"gitId":"t-cheepeng"},"content":"    this.formModel.logsTimeTo \u003d { hour: 23, minute: 59 };"},{"lineNumber":101,"author":{"gitId":"t-cheepeng"},"content":"    this.loadData();"},{"lineNumber":102,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":104,"author":{"gitId":"t-cheepeng"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"t-cheepeng"},"content":"   * Search for logs of student activity"},{"lineNumber":106,"author":{"gitId":"t-cheepeng"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"t-cheepeng"},"content":"  search(): void {"},{"lineNumber":108,"author":{"gitId":"t-cheepeng"},"content":"    this.isSearching \u003d true;"},{"lineNumber":109,"author":{"gitId":"t-cheepeng"},"content":"    this.searchResults \u003d [];"},{"lineNumber":110,"author":{"gitId":"t-cheepeng"},"content":"    const localDateTime: Observable\u003cnumber\u003e[] \u003d ["},{"lineNumber":111,"author":{"gitId":"t-cheepeng"},"content":"      this.resolveLocalDateTime(this.formModel.logsDateFrom, this.formModel.logsTimeFrom, \u0027Search period from\u0027),"},{"lineNumber":112,"author":{"gitId":"t-cheepeng"},"content":"      this.resolveLocalDateTime(this.formModel.logsDateTo, this.formModel.logsTimeTo, \u0027Search period until\u0027),"},{"lineNumber":113,"author":{"gitId":"t-cheepeng"},"content":"    ];"},{"lineNumber":114,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":115,"author":{"gitId":"t-cheepeng"},"content":"    let email: string \u003d \u0027\u0027;"},{"lineNumber":116,"author":{"gitId":"t-cheepeng"},"content":"    if (this.formModel.studentName) {"},{"lineNumber":117,"author":{"gitId":"t-cheepeng"},"content":"      const students: Student[] \u003d this.courseToStudents[this.formModel.courseId];"},{"lineNumber":118,"author":{"gitId":"t-cheepeng"},"content":"      const selectedStudent: Student | undefined \u003d"},{"lineNumber":119,"author":{"gitId":"t-cheepeng"},"content":"          students.find((student: Student) \u003d\u003e student.name \u003d\u003d\u003d this.formModel.studentName);"},{"lineNumber":120,"author":{"gitId":"t-cheepeng"},"content":"      if (selectedStudent) {"},{"lineNumber":121,"author":{"gitId":"t-cheepeng"},"content":"        email \u003d selectedStudent.email;"},{"lineNumber":122,"author":{"gitId":"t-cheepeng"},"content":"      }"},{"lineNumber":123,"author":{"gitId":"t-cheepeng"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":125,"author":{"gitId":"t-cheepeng"},"content":"    forkJoin(localDateTime)"},{"lineNumber":126,"author":{"gitId":"t-cheepeng"},"content":"        .pipe("},{"lineNumber":127,"author":{"gitId":"t-cheepeng"},"content":"            concatMap((timestamp: number[]) \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"t-cheepeng"},"content":"              return this.logsService.searchFeedbackSessionLog({"},{"lineNumber":129,"author":{"gitId":"t-cheepeng"},"content":"                courseId: this.formModel.courseId,"},{"lineNumber":130,"author":{"gitId":"t-cheepeng"},"content":"                searchFrom: timestamp[0].toString(),"},{"lineNumber":131,"author":{"gitId":"t-cheepeng"},"content":"                searchUntil: timestamp[1].toString(),"},{"lineNumber":132,"author":{"gitId":"t-cheepeng"},"content":"                studentEmail: email,"},{"lineNumber":133,"author":{"gitId":"t-cheepeng"},"content":"              });"},{"lineNumber":134,"author":{"gitId":"t-cheepeng"},"content":"            }),"},{"lineNumber":135,"author":{"gitId":"t-cheepeng"},"content":"            finalize(() \u003d\u003e this.isSearching \u003d false))"},{"lineNumber":136,"author":{"gitId":"t-cheepeng"},"content":"        .subscribe((logs: FeedbackSessionLogs) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"t-cheepeng"},"content":"          logs.feedbackSessionLogs.map((log: FeedbackSessionLog) \u003d\u003e"},{"lineNumber":138,"author":{"gitId":"t-cheepeng"},"content":"              this.searchResults.push(this.toFeedbackSessionLogModel(log)));"},{"lineNumber":139,"author":{"gitId":"t-cheepeng"},"content":"        }, (e: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(e.error.message));"},{"lineNumber":140,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":142,"author":{"gitId":"t-cheepeng"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"t-cheepeng"},"content":"   * Load all courses and students that the instructor have"},{"lineNumber":144,"author":{"gitId":"t-cheepeng"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"t-cheepeng"},"content":"  private loadData(): void {"},{"lineNumber":146,"author":{"gitId":"t-cheepeng"},"content":"    const emptyStudent: Student \u003d {"},{"lineNumber":147,"author":{"gitId":"t-cheepeng"},"content":"      courseId: \u0027\u0027, email: \u0027\u0027, name: \u0027\u0027, sectionName: \u0027\u0027, teamName: \u0027\u0027,"},{"lineNumber":148,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":149,"author":{"gitId":"t-cheepeng"},"content":"    this.courseService"},{"lineNumber":150,"author":{"gitId":"t-cheepeng"},"content":"        .getAllCoursesAsInstructor(\u0027active\u0027)"},{"lineNumber":151,"author":{"gitId":"t-cheepeng"},"content":"        .pipe("},{"lineNumber":152,"author":{"gitId":"t-cheepeng"},"content":"            concatMap((courses: Courses) \u003d\u003e courses.courses.map((course: Course) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"t-cheepeng"},"content":"              this.courses.push(course);"},{"lineNumber":154,"author":{"gitId":"t-cheepeng"},"content":"              return this.studentService.getStudentsFromCourse({ courseId: course.courseId });"},{"lineNumber":155,"author":{"gitId":"t-cheepeng"},"content":"            })),"},{"lineNumber":156,"author":{"gitId":"t-cheepeng"},"content":"            mergeAll(),"},{"lineNumber":157,"author":{"gitId":"t-cheepeng"},"content":"            finalize(() \u003d\u003e this.isLoading \u003d false))"},{"lineNumber":158,"author":{"gitId":"t-cheepeng"},"content":"        .subscribe(((student: Students) \u003d\u003e"},{"lineNumber":159,"author":{"gitId":"t-cheepeng"},"content":"                // Student with no name is selectable to search for all students since the field is optional"},{"lineNumber":160,"author":{"gitId":"t-cheepeng"},"content":"                this.courseToStudents[student.students[0].courseId] \u003d [emptyStudent, ...student.students]),"},{"lineNumber":161,"author":{"gitId":"t-cheepeng"},"content":"            (e: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(e.error.message));"},{"lineNumber":162,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":163,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":164,"author":{"gitId":"t-cheepeng"},"content":"  private resolveLocalDateTime(date: DateFormat, time: TimeFormat, fieldName: string): Observable\u003cnumber\u003e {"},{"lineNumber":165,"author":{"gitId":"t-cheepeng"},"content":"    const inst: any \u003d moment();"},{"lineNumber":166,"author":{"gitId":"t-cheepeng"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":167,"author":{"gitId":"t-cheepeng"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":168,"author":{"gitId":"t-cheepeng"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":169,"author":{"gitId":"t-cheepeng"},"content":"    inst.set(\u0027hour\u0027, time.hour);"},{"lineNumber":170,"author":{"gitId":"t-cheepeng"},"content":"    inst.set(\u0027minute\u0027, time.minute);"},{"lineNumber":171,"author":{"gitId":"t-cheepeng"},"content":"    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"},{"lineNumber":172,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":173,"author":{"gitId":"t-cheepeng"},"content":"    return this.timezoneService.getResolvedTimestamp(localDateTime, this.timezoneService.guessTimezone(), fieldName)"},{"lineNumber":174,"author":{"gitId":"t-cheepeng"},"content":"        .pipe(map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"},{"lineNumber":175,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":176,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":177,"author":{"gitId":"t-cheepeng"},"content":"  private toFeedbackSessionLogModel(log: FeedbackSessionLog): FeedbackSessionLogModel {"},{"lineNumber":178,"author":{"gitId":"t-cheepeng"},"content":"    return {"},{"lineNumber":179,"author":{"gitId":"t-cheepeng"},"content":"      isTabExpanded: false,"},{"lineNumber":180,"author":{"gitId":"t-cheepeng"},"content":"      feedbackSessionName: log.feedbackSessionData.feedbackSessionName,"},{"lineNumber":181,"author":{"gitId":"t-cheepeng"},"content":"      logColumnsData: ["},{"lineNumber":182,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Time\u0027, sortBy: SortBy.LOG_DATE },"},{"lineNumber":183,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Name\u0027, sortBy: SortBy.GIVER_NAME },"},{"lineNumber":184,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Activity\u0027, sortBy: SortBy.LOG_TYPE },"},{"lineNumber":185,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Email\u0027, sortBy: SortBy.RESPONDENT_EMAIL },"},{"lineNumber":186,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Section\u0027, sortBy: SortBy.SECTION_NAME },"},{"lineNumber":187,"author":{"gitId":"t-cheepeng"},"content":"        { header: \u0027Team\u0027, sortBy: SortBy.TEAM_NAME },"},{"lineNumber":188,"author":{"gitId":"t-cheepeng"},"content":"      ],"},{"lineNumber":189,"author":{"gitId":"t-cheepeng"},"content":"      logRowsData: log.feedbackSessionLogEntries.map((entry: FeedbackSessionLogEntry) \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"t-cheepeng"},"content":"        return ["},{"lineNumber":191,"author":{"gitId":"t-cheepeng"},"content":"          { value: this.timezoneService.formatToString(entry.timestamp, log.feedbackSessionData.timeZone, \u0027ddd, DD MMM, YYYY hh:mm:ss A\u0027) },"},{"lineNumber":192,"author":{"gitId":"t-cheepeng"},"content":"          { value: entry.studentData.name },"},{"lineNumber":193,"author":{"gitId":"t-cheepeng"},"content":"          { value: LogType[entry.feedbackSessionLogType.toString() as keyof typeof LogType]"},{"lineNumber":194,"author":{"gitId":"t-cheepeng"},"content":"            \u003d\u003d\u003d LogType.FEEDBACK_SESSION_ACCESS ? \u0027Viewed the submission page\u0027 : \u0027Submitted responses\u0027 },"},{"lineNumber":195,"author":{"gitId":"t-cheepeng"},"content":"          { value: entry.studentData.email },"},{"lineNumber":196,"author":{"gitId":"t-cheepeng"},"content":"          { value: entry.studentData.sectionName },"},{"lineNumber":197,"author":{"gitId":"t-cheepeng"},"content":"          { value: entry.studentData.teamName },"},{"lineNumber":198,"author":{"gitId":"t-cheepeng"},"content":"        ];"},{"lineNumber":199,"author":{"gitId":"t-cheepeng"},"content":"      }),"},{"lineNumber":200,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":201,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"t-cheepeng"},"content":"}"}],"authorContributionMap":{"t-cheepeng":202}},{"path":"src/web/app/pages-instructor/instructor-audit-logs-page/instructor-audit-logs-page.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"t-cheepeng"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"t-cheepeng"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"import { FormsModule } from \u0027@angular/forms\u0027;"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"import { NgbDatepickerModule, NgbDropdownModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"import { SessionEditFormModule } from \u0027../../components/session-edit-form/session-edit-form.module\u0027;"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"import { SortableTableModule } from \u0027../../components/sortable-table/sortable-table.module\u0027;"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"import { InstructorAuditLogsPageComponent } from \u0027./instructor-audit-logs-page.component\u0027;"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":12,"author":{"gitId":"t-cheepeng"},"content":"const routes: Routes \u003d ["},{"lineNumber":13,"author":{"gitId":"t-cheepeng"},"content":"  {"},{"lineNumber":14,"author":{"gitId":"t-cheepeng"},"content":"    path: \u0027\u0027,"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"    component: InstructorAuditLogsPageComponent,"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"  },"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"];"},{"lineNumber":18,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":19,"author":{"gitId":"t-cheepeng"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"t-cheepeng"},"content":" * Module for instructor audit logs page"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":" */"},{"lineNumber":22,"author":{"gitId":"t-cheepeng"},"content":"@NgModule({"},{"lineNumber":23,"author":{"gitId":"t-cheepeng"},"content":"  declarations: [InstructorAuditLogsPageComponent],"},{"lineNumber":24,"author":{"gitId":"t-cheepeng"},"content":"  exports: [InstructorAuditLogsPageComponent],"},{"lineNumber":25,"author":{"gitId":"t-cheepeng"},"content":"  imports: ["},{"lineNumber":26,"author":{"gitId":"t-cheepeng"},"content":"    CommonModule,"},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":"    NgbDatepickerModule,"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":"    FormsModule,"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"    SessionEditFormModule,"},{"lineNumber":31,"author":{"gitId":"t-cheepeng"},"content":"    NgbDropdownModule,"},{"lineNumber":32,"author":{"gitId":"t-cheepeng"},"content":"    LoadingSpinnerModule,"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"    PanelChevronModule,"},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"    SortableTableModule,"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"  ],"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"})"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"export class InstructorAuditLogsPageModule { }"}],"authorContributionMap":{"t-cheepeng":37}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry *tmIsLoading\u003d\"isLoadingCourseEnrollPage\" [shouldShowRetry]\u003d\"!coursePresent\" [message]\u003d\"\u0027Failed to load course\u0027\" (retryEvent)\u003d\"getCourseEnrollPageData(courseId)\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"coursePresent\"\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \u003ch1 id\u003d\"enroll-header\"\u003eEnroll Students for {{ courseId }}\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingStudentsFailed\" [message]\u003d\"\u0027Failed to load students\u0027\" (retryEvent)\u003d\"getCourseEnrollPageData(courseId)\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\u0027!hasLoadingStudentsFailed\u0027 class\u003d\"card card-primary\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body fill-plain\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"          \u003cp class\u003d\"text-muted\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"            \u003ca class\u003d\"scroll-down\" tabindex\u003d\"0\" role\u003d\"button\" (click)\u003d\"navigateToMoreInfo()\"\u003e \u003c!--We are just treating it as a button here--\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"              \u003cb\u003e\u0026nbsp;\u003c/b\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"              \u003cb\u003e\u003cu\u003eScroll down\u003c/u\u003e\u003c/b\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            to see more information about the spreadsheet interfaces."},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \u003cbr\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-info-circle\"\u003e\u003c/i\u003e If you want to enroll more than"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cstrong\u003e100\u003c/strong\u003e students into one course, divide students into sections containing no more than"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cstrong\u003e100\u003c/strong\u003e students.\u003cbr\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/p\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"col-md-12\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003ctm-status-message [messages]\u003d\"statusMessage\"\u003e\u003c/tm-status-message\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"card card-default\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              \u003cdiv id\u003d\"toggle-existing-students\" class\u003d\"card-header cursor-pointer\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"                  (click)\u003d\"toggleExistingStudentsPanel()\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cb\u003eExisting Students\u003c/b\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003ctm-ajax-preload *ngIf\u003d\"isLoadingExistingStudents\"\u003e\u003c/tm-ajax-preload\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                  \u003cb class\u003d\"existing-students-status-message\"\u003e{{ isExistingStudentsPresent ? \u0027\u0027 : \u0027No existing students in course.\u0027 }}\u003c/b\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                  \u003cb class\u003d\"existing-students-status-message\"\u003e{{ isAjaxSuccess ? \u0027\u0027 : \u0027Failed to load. Click here to retry.\u0027 }}\u003c/b\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                  \u003ctm-panel-chevron [isExpanded]\u003d\"!isExistingStudentsPanelCollapsed\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003chot-table"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                  [licenseKey]\u003d\"\u0027non-commercial-and-evaluation\u0027\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                  [hotId]\u003d\"existingStudentsHOT\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                  [readOnly]\u003d\"true\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                  [height]\u003d\"400\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                  [autoWrapRow]\u003d\"true\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                  [preventOverflow]\u003d\"\u0027horizontal\u0027\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  [manualColumnResize]\u003d\"true\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                  [manualRowResize]\u003d\"true\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  [manualColumnMove]\u003d\"true\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"                  [rowHeaders]\u003d\"true\""},{"lineNumber":43,"author":{"gitId":"-"},"content":"                  [colHeaders]\u003d\"colHeaders\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                  [columnSorting]\u003d\"true\""},{"lineNumber":45,"author":{"gitId":"-"},"content":"                  [minRows]\u003d\"20\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"                  [maxCols]\u003d\"5\""},{"lineNumber":47,"author":{"gitId":"daongochieu2810"},"content":"                  [autoRowSize]\u003d\"true\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"                  [stretchH]\u003d\"\u0027all\u0027\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  [hidden]\u003d\"isExistingStudentsPanelCollapsed\" @collapseAnim\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003c/hot-table\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cdiv *ngIf\u003d\"enrollErrorMessage\" class\u003d\"card card-default\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"card-body bg-danger text-white\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003cbutton class\u003d\"float-right fas fa-times close\" (click)\u003d\"enrollErrorMessage \u003d \u0027\u0027\"\u003e\u003c/button\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                {{ enrollErrorMessage }}"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"card card-default\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"card-header cursor-pointer\" (click)\u003d\"toggleNewStudentsPanel()\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003cb\u003eNew Students\u003c/b\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003ctm-panel-chevron [isExpanded]\u003d\"!isNewStudentsPanelCollapsed\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003chot-table"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                  [licenseKey]\u003d\"\u0027non-commercial-and-evaluation\u0027\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                  [hotId]\u003d\"newStudentsHOT\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                  [height]\u003d\"500\""},{"lineNumber":71,"author":{"gitId":"-"},"content":"                  [autoWrapRow]\u003d\"true\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  [preventOverflow]\u003d\"\u0027horizontal\u0027\""},{"lineNumber":73,"author":{"gitId":"-"},"content":"                  [manualColumnResize]\u003d\"true\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                  [manualRowResize]\u003d\"true\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  [manualColumnMove]\u003d\"true\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                  [rowHeaders]\u003d\"true\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                  [colHeaders]\u003d\"colHeaders\""},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  [columnSorting]\u003d\"true\""},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  [minRows]\u003d\"20\""},{"lineNumber":80,"author":{"gitId":"-"},"content":"                  [maxCols]\u003d\"5\""},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"                  [autoRowSize]\u003d\"true\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  [stretchH]\u003d\"\u0027all\u0027\""},{"lineNumber":83,"author":{"gitId":"-"},"content":"                  [minSpareRows]\u003d\"1\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                  [contextMenu]\u003d\"contextMenuOptions\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                  [hidden]\u003d\"isNewStudentsPanelCollapsed\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              \u003c/hot-table\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003cdiv class\u003d\"row enroll-students-spreadsheet-buttons\" [hidden]\u003d\"isNewStudentsPanelCollapsed\"\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"enroll-button-group\"\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                \u003cdiv class\u003d\"input-group\"\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                  \u003cbutton type\u003d\"button\" title\u003d\"Add\" id\u003d\"btn-add-empty-rows\" class\u003d\"btn btn-primary btn-margin-right\" (click)\u003d\"addRows(numOfRows.value)\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    Add row(s)"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                  \u003c/button\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                  \u003cinput type\u003d\"number\" id\u003d\"number-of-rows\" class\u003d\"form-control\" value\u003d\"1\" min\u003d\"0\" #numOfRows\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003cdiv class\u003d\"enroll-button-group\"\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u003cbutton"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                    type\u003d\"submit\""},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    title\u003d\"Enroll\""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    id\u003d\"btn-enroll\""},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    name\u003d\"button-enroll\""},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    class\u003d\"btn btn-success float-right\""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    [disabled]\u003d\"isEnrolling\""},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    (click)\u003d\"submitEnrollData()\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                  \u003ctm-ajax-loading *ngIf\u003d\"isEnrolling\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                  Enroll students"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \u003c/tm-loading-retry\u003e"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    \u003cbutton id\u003d\"paste\" [hidden]\u003d\"true\" (click)\u003d\"showPasteModalBox()\"\u003e\u003c/button\u003e \u003c!-- Acts as a medium to send the modal box into the JS file --\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"more-info\" #moreInfo [hidden]\u003d\"showEnrollResults\"\u003e"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003ch2\u003e More info \u003c/h2\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      \u003chr\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      \u003cul\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eSpreadsheet Information\u003c/span\u003e"},{"lineNumber":123,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              If you have student data in a spreadsheet, simply copy the relevant cell-range from your spreadsheet and"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              paste into the \u003ccode\u003eNew students\u003c/code\u003e spreadsheet interface above.\u003cbr\u003e\u003cbr\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              \u003ctable class\u003d\"table table-striped table-bordered\"\u003e"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                \u003ctbody\u003e\u003ctr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                  \u003cth\u003eSection\u003c/th\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                  \u003cth\u003eTeam\u003c/th\u003e"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                  \u003cth\u003eName\u003c/th\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                  \u003cth\u003eEmail\u003c/th\u003e"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                  \u003cth\u003eComments\u003c/th\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTom Jacobs\u003c/td\u003e"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                  \u003ctd\u003etom@example.com\u003c/td\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eJean Wong\u003c/td\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                  \u003ctd\u003ejean@example.com\u003c/td\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eExchange Student\u003c/td\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 1\u003c/td\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 1\u003c/td\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eRavi Kumar\u003c/td\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eravi@example.com\u003c/td\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 2\u003c/td\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eChun Ling\u003c/td\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eling@example.com\u003c/td\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 2\u003c/td\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eDesmond Wu\u003c/td\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                  \u003ctd\u003edesmond@example.com\u003c/td\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u003ctr\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTutorial Group 2\u003c/td\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eTeam 3\u003c/td\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eHarsha Silva\u003c/td\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                  \u003ctd\u003eharsha@example.com\u003c/td\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                  \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                \u003c/tr\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                \u003c/tbody\u003e\u003c/table\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            \u003cli\u003eEach existing cells can be edited by just clicking on it.\u003c/li\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cli\u003eThe entire table can be sorted by just clicking on the column name.\u003c/li\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            \u003cli\u003eYou can re-arrange column order by clicking on the column header and dragging them left or right.\u003c/li\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            \u003cli\u003eTo access more edit functions, right-click on a cell.\u003c/li\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            \u003cli\u003eColumn width can be adjusted.\u003c/li\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            \u003cli\u003eExpand the \u003ccode\u003eExisting students\u003c/code\u003e spreadsheet interface to view existing students in the course.\u003c/li\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eColumns Information\u003c/span\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              \u003csamp\u003eSection\u003c/samp\u003e [Compulsory for courses having more than 100 students]: Section name/ID"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"              \u003csamp\u003eTeam\u003c/samp\u003e [Compulsory]: Team name/ID"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                  A team must be unique within a course. A team cannot be in 2 different sections."},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                  If you do not have teams in your course, use “N/A” as the team name for all students."},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"              \u003csamp\u003eName\u003c/samp\u003e [Compulsory]: Student name"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"              \u003csamp\u003eEmail\u003c/samp\u003e [Compulsory]: The email address used to contact the student.\u003cbr\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"              \u003cul\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                  This need not be a Gmail address."},{"lineNumber":212,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                \u003cli class\u003d\"more-info-sub-point-details\"\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                  It should be unique for each student."},{"lineNumber":215,"author":{"gitId":"-"},"content":"                  If two students are given the same email, they will be considered the same student."},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u003c/li\u003e"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              \u003c/ul\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            \u003cli class\u003d\"more-info-column-info\"\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"              \u003csamp\u003eComments\u003c/samp\u003e [Optional]: Any other information you want to record about a student."},{"lineNumber":221,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        \u003cli\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          \u003cspan class\u003d\"more-info-point-title\"\u003eMass editing enrolled students\u003c/span\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"          \u003cul\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"              To mass-edit data of enrolled students (except email address), simply use this page to re-enroll them with"},{"lineNumber":229,"author":{"gitId":"-"},"content":"              the"},{"lineNumber":230,"author":{"gitId":"-"},"content":"              updated data."},{"lineNumber":231,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            \u003cli\u003e"},{"lineNumber":233,"author":{"gitId":"-"},"content":"              To DELETE students or to UPDATE EMAIL address of a student, please go to the \u003ccode\u003ecourses\u003c/code\u003e page and"},{"lineNumber":234,"author":{"gitId":"-"},"content":"              click the \u003ccode\u003eStudents -\u0026gt; View/Edit\u003c/code\u003e link of the course."},{"lineNumber":235,"author":{"gitId":"-"},"content":"            \u003c/li\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"          \u003c/ul\u003e"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        \u003c/li\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      \u003c/ul\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003chr\u003e"},{"lineNumber":243,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"results-panel\" *ngIf\u003d\"coursePresent \u0026\u0026 showEnrollResults\"\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  \u003ch1\u003eEnrollment Results for {{ courseId }}\u003c/h1\u003e"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  \u003cdiv *ngFor\u003d\"let enrollResultPanel of enrollResultPanelList\"\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card enroll-results-panel\" *ngIf\u003d\"enrollResultPanel.studentList.length \u003e 0\"\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header\" [ngClass]\u003d\"{\u0027bg-primary\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.NEW,"},{"lineNumber":248,"author":{"gitId":"-"},"content":"       \u0027bg-warning\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"       \u0027bg-info\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED_UNCHANGED,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"       \u0027bg-danger\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"       \u0027bg-default\u0027: enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.UNMODIFIED}\" [style.color]\u003d\"enrollResultPanel.status \u003d\u003d\u003d"},{"lineNumber":252,"author":{"gitId":"-"},"content":"       EnrollStatus.NEW || enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.MODIFIED_UNCHANGED ? \u0027white\u0027 : \u0027black\u0027 \"\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        {{ enrollResultPanel.messageForEnrollmentStatus }}"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      \u003ctable class\u003d\"table table-striped table-bordered table-responsive-lg\"\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        \u003cthead\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":"          \u003ctr\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            \u003cth\u003eSection\u003c/th\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            \u003cth\u003eTeam\u003c/th\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            \u003cth\u003eStudent Name\u003c/th\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            \u003cth\u003eE-mail address\u003c/th\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            \u003cth\u003eComments\u003c/th\u003e"},{"lineNumber":263,"author":{"gitId":"daongochieu2810"},"content":"            \u003cth *ngIf\u003d\"enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR\"\u003eErrors\u003c/th\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        \u003c/thead\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        \u003ctbody\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"          \u003ctr *ngFor\u003d\"let student of enrollResultPanel.studentList\"\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.sectionName }}\u003c/td\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.teamName }}\u003c/td\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.name }}\u003c/td\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.email }}\u003c/td\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{ student.comments }}\u003c/td\u003e"},{"lineNumber":273,"author":{"gitId":"daongochieu2810"},"content":"            \u003ctd *ngIf\u003d\"enrollResultPanel.status \u003d\u003d\u003d EnrollStatus.ERROR\"\u003e{{ unsuccessfulEnrolls[student.email] }}\u003c/td\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        \u003c/tbody\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"      \u003c/table\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"daongochieu2810":4,"-":275}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".fill-plain {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  background-color: #EAEFF5;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".card-default {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-color: #DDD;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  width: 100%;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":".card-header {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  background-color: #F0F0F0;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":".card-body {"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":".text-muted {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":".scroll-down :hover {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  color: blue;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":".status-message {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  padding: 15px;"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":".more-info {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  margin-top: 30px;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  padding-bottom: 30px;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":".more-info-point-title {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  display: block;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  margin: 10px 0;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":".more-info-column-info {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  list-style: circle;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":".more-info-sub-point-details {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  list-style: disc;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-left: -20px;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":".enroll-students-spreadsheet-buttons {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  margin-top: -15px;"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"#number-of-rows {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  margin-left: 10px;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":".enroll-results-panel {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  margin-bottom: 15px;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":".existing-students-status-message {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  font-weight: bold;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  margin-left: 1em;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  margin-right: 1em;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":".enroll-button-group {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  width: 50%;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"},{"lineNumber":75,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":76,"author":{"gitId":"daongochieu2810"},"content":"table {"},{"lineNumber":77,"author":{"gitId":"daongochieu2810"},"content":"  table-layout: fixed;"},{"lineNumber":78,"author":{"gitId":"daongochieu2810"},"content":"}"},{"lineNumber":79,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":80,"author":{"gitId":"daongochieu2810"},"content":"table td {"},{"lineNumber":81,"author":{"gitId":"daongochieu2810"},"content":"  word-wrap: break-word;"},{"lineNumber":82,"author":{"gitId":"daongochieu2810"},"content":"  overflow-wrap: break-word;"},{"lineNumber":83,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":9,"-":74}},{"path":"src/web/app/pages-instructor/instructor-course-enroll-page/instructor-course-enroll-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, ElementRef, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { HotTableRegisterer } from \u0027@handsontable/angular\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import Handsontable from \u0027handsontable\u0027;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import { concat, Observable } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":12,"author":{"gitId":"daongochieu2810"},"content":"import { EnrollStudents, HasResponses, JoinState, Student, Students } from \u0027../../../types/api-output\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StudentEnrollRequest, StudentsEnrollRequest } from \u0027../../../types/api-request\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { StatusMessage } from \u0027../../components/status-message/status-message\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { EnrollStatus } from \u0027./enroll-status\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"interface EnrollResultPanel {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  status: EnrollStatus;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  messageForEnrollmentStatus: string;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  studentList: Student[];"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Instructor course enroll page."},{"lineNumber":28,"author":{"gitId":"-"},"content":" */"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-course-enroll-page\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-course-enroll-page.component.html\u0027,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-course-enroll-page.component.scss\u0027],"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":34,"author":{"gitId":"-"},"content":"})"},{"lineNumber":35,"author":{"gitId":"-"},"content":"export class InstructorCourseEnrollPageComponent implements OnInit {"},{"lineNumber":36,"author":{"gitId":"daongochieu2810"},"content":"  GENERAL_ERROR_MESSAGE: string \u003d `You may check that: \"Section\" and \"Comment\" are optional while \"Team\", \"Name\","},{"lineNumber":37,"author":{"gitId":"daongochieu2810"},"content":"        and \"Email\" must be filled. \"Section\", \"Team\", \"Name\", and \"Comment\" should start with an"},{"lineNumber":38,"author":{"gitId":"daongochieu2810"},"content":"        alphabetical character, unless wrapped by curly brackets \"{}\", and should not contain vertical bar \"|\" and"},{"lineNumber":39,"author":{"gitId":"daongochieu2810"},"content":"        percentage sign \"%\". \"Email\" should contain some text followed by one \"@\" sign followed by some"},{"lineNumber":40,"author":{"gitId":"daongochieu2810"},"content":"        more text. \"Team\" should not have the same format as email to avoid mis-interpretation.`;"},{"lineNumber":41,"author":{"gitId":"daongochieu2810"},"content":"  SECTION_ERROR_MESSAGE: string \u003d \u0027Section cannot be empty if the total number of students is more than 100. \u0027;"},{"lineNumber":42,"author":{"gitId":"daongochieu2810"},"content":"  TEAM_ERROR_MESSAGE: string \u003d \u0027Duplicated team detected in different sections. \u0027;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  EnrollStatus: typeof EnrollStatus \u003d EnrollStatus;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  coursePresent?: boolean;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  isLoadingCourseEnrollPage: boolean \u003d false;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  showEnrollResults?: boolean \u003d false;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  enrollErrorMessage: string \u003d \u0027\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  statusMessage: StatusMessage[] \u003d [];"},{"lineNumber":52,"author":{"gitId":"daongochieu2810"},"content":"  unsuccessfulEnrolls: { [email: string]: string } \u003d {};"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"  @ViewChild(\u0027moreInfo\u0027) moreInfo?: ElementRef;"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"  @Input() isNewStudentsPanelCollapsed: boolean \u003d false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  @Input() isExistingStudentsPanelCollapsed: boolean \u003d true;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  colHeaders: string[] \u003d [\u0027Section\u0027, \u0027Team\u0027, \u0027Name\u0027, \u0027Email\u0027, \u0027Comments\u0027];"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  contextMenuOptions: String[] | Object[] \u003d"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    [\u0027row_above\u0027,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u0027row_below\u0027,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u0027remove_row\u0027,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u0027undo\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      \u0027redo\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        key: \u0027paste\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name: \u0027Paste\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        callback: this.pasteClick,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      \u0027make_read_only\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      \u0027alignment\u0027];"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  hotRegisterer: HotTableRegisterer \u003d new HotTableRegisterer();"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  newStudentsHOT: string \u003d \u0027newStudentsHOT\u0027;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  enrollResultPanelList?: EnrollResultPanel[];"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  existingStudents: Student[] \u003d [];"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  existingStudentsHOT: string \u003d \u0027existingStudentsHOT\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  isExistingStudentsPresent: boolean \u003d true;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  hasLoadingStudentsFailed: boolean \u003d false;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  isLoadingExistingStudents: boolean \u003d false;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  isAjaxSuccess: boolean \u003d true;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  isEnrolling: boolean \u003d false;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"daongochieu2810"},"content":"  allStudentChunks: StudentEnrollRequest[][] \u003d [];"},{"lineNumber":88,"author":{"gitId":"daongochieu2810"},"content":"  invalidRowsIndex: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":89,"author":{"gitId":"daongochieu2810"},"content":"  numberOfStudentsPerRequest: number \u003d 50; // at most 50 students per chunk"},{"lineNumber":90,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService) { }"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      this.getCourseEnrollPageData(queryParams.courseid);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * Submits enroll data"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  submitEnrollData(): void {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    this.isEnrolling \u003d true;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    this.enrollErrorMessage \u003d \u0027\u0027;"},{"lineNumber":110,"author":{"gitId":"daongochieu2810"},"content":"    this.allStudentChunks \u003d [];"},{"lineNumber":111,"author":{"gitId":"daongochieu2810"},"content":"    this.invalidRowsIndex \u003d new Set();"},{"lineNumber":112,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":113,"author":{"gitId":"daongochieu2810"},"content":"    const lastColIndex: number \u003d 4;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    const newStudentsHOTInstance: Handsontable \u003d"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.hotRegisterer.getInstance(this.newStudentsHOT);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    const hotInstanceColHeaders: string[] \u003d (newStudentsHOTInstance.getColHeader() as string[]);"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"daongochieu2810"},"content":"    // Reset error highlighting on a new submission"},{"lineNumber":119,"author":{"gitId":"daongochieu2810"},"content":"    this.resetTableStyle(newStudentsHOTInstance, 0,"},{"lineNumber":120,"author":{"gitId":"daongochieu2810"},"content":"        newStudentsHOTInstance.getData().length - 1,"},{"lineNumber":121,"author":{"gitId":"daongochieu2810"},"content":"        0,"},{"lineNumber":122,"author":{"gitId":"daongochieu2810"},"content":"        hotInstanceColHeaders.indexOf(this.colHeaders[lastColIndex]));"},{"lineNumber":123,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":124,"author":{"gitId":"daongochieu2810"},"content":"    // Remove error highlight on click"},{"lineNumber":125,"author":{"gitId":"daongochieu2810"},"content":"    newStudentsHOTInstance.addHook(\u0027afterSelectionEnd\u0027, (row: number, column: number,"},{"lineNumber":126,"author":{"gitId":"daongochieu2810"},"content":"                                                         row2: number, column2: number) \u003d\u003e {"},{"lineNumber":127,"author":{"gitId":"daongochieu2810"},"content":"      this.resetTableStyle(newStudentsHOTInstance, row, row2, column, column2);"},{"lineNumber":128,"author":{"gitId":"daongochieu2810"},"content":"    });"},{"lineNumber":129,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":130,"author":{"gitId":"daongochieu2810"},"content":"    // Record the row with its index on the table"},{"lineNumber":131,"author":{"gitId":"daongochieu2810"},"content":"    const studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e \u003d new Map();"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"    // Parse the user input to be requests."},{"lineNumber":134,"author":{"gitId":"-"},"content":"    // Handsontable contains null value initially,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    // see https://github.com/handsontable/handsontable/issues/3927"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    newStudentsHOTInstance.getData()"},{"lineNumber":137,"author":{"gitId":"daongochieu2810"},"content":"        .forEach((row: string[], index: number) \u003d\u003e {"},{"lineNumber":138,"author":{"gitId":"daongochieu2810"},"content":"          if (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null || cell \u003d\u003d\u003d \u0027\u0027)) {"},{"lineNumber":139,"author":{"gitId":"daongochieu2810"},"content":"            studentEnrollRequests.set(index, {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"              section: row[hotInstanceColHeaders.indexOf(this.colHeaders[0])] \u003d\u003d\u003d null ?"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                  \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[0])].trim(),"},{"lineNumber":142,"author":{"gitId":"-"},"content":"              team: row[hotInstanceColHeaders.indexOf(this.colHeaders[1])] \u003d\u003d\u003d null ?"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                  \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[1])].trim(),"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              name: row[hotInstanceColHeaders.indexOf(this.colHeaders[2])] \u003d\u003d\u003d null ?"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                  \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[2])].trim(),"},{"lineNumber":146,"author":{"gitId":"-"},"content":"              email: row[hotInstanceColHeaders.indexOf(this.colHeaders[3])] \u003d\u003d\u003d null ?"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                  \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[3])].trim(),"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              comments: row[hotInstanceColHeaders.indexOf(this.colHeaders[4])] \u003d\u003d\u003d null ?"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                  \u0027\u0027 : row[hotInstanceColHeaders.indexOf(this.colHeaders[4])].trim(),"},{"lineNumber":150,"author":{"gitId":"daongochieu2810"},"content":"            });"},{"lineNumber":151,"author":{"gitId":"daongochieu2810"},"content":"          }"},{"lineNumber":152,"author":{"gitId":"daongochieu2810"},"content":"        });"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"daongochieu2810"},"content":"    if (studentEnrollRequests.size \u003d\u003d\u003d 0) {"},{"lineNumber":155,"author":{"gitId":"daongochieu2810"},"content":"      this.enrollErrorMessage \u003d \u0027Empty table\u0027;"},{"lineNumber":156,"author":{"gitId":"daongochieu2810"},"content":"      this.isEnrolling \u003d false;"},{"lineNumber":157,"author":{"gitId":"daongochieu2810"},"content":"      return;"},{"lineNumber":158,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":160,"author":{"gitId":"daongochieu2810"},"content":"    this.checkCompulsoryFields(studentEnrollRequests);"},{"lineNumber":161,"author":{"gitId":"daongochieu2810"},"content":"    this.checkEmailNotRepeated(studentEnrollRequests);"},{"lineNumber":162,"author":{"gitId":"daongochieu2810"},"content":"    this.checkTeamsValid(studentEnrollRequests);"},{"lineNumber":163,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":164,"author":{"gitId":"daongochieu2810"},"content":"    if (this.invalidRowsIndex.size \u003e 0) {"},{"lineNumber":165,"author":{"gitId":"daongochieu2810"},"content":"      this.setTableStyleBasedOnFieldChecks(newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":166,"author":{"gitId":"daongochieu2810"},"content":"      this.isEnrolling \u003d false;"},{"lineNumber":167,"author":{"gitId":"daongochieu2810"},"content":"      return;"},{"lineNumber":168,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":170,"author":{"gitId":"daongochieu2810"},"content":"    this.partitionStudentEnrollRequests(Array.from(studentEnrollRequests.values()));"},{"lineNumber":171,"author":{"gitId":"daongochieu2810"},"content":"    const enrolledStudents: Student[] \u003d [];"},{"lineNumber":172,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":173,"author":{"gitId":"daongochieu2810"},"content":"    // Use concat because we cannot afford to parallelize with forkJoin when there\u0027s data dependency"},{"lineNumber":174,"author":{"gitId":"daongochieu2810"},"content":"    const enrollRequests: Observable\u003cEnrollStudents\u003e \u003d concat("},{"lineNumber":175,"author":{"gitId":"daongochieu2810"},"content":"        ...this.allStudentChunks.map((studentChunk: StudentEnrollRequest[]) \u003d\u003e {"},{"lineNumber":176,"author":{"gitId":"daongochieu2810"},"content":"          const request: StudentsEnrollRequest \u003d {"},{"lineNumber":177,"author":{"gitId":"daongochieu2810"},"content":"            studentEnrollRequests: studentChunk,"},{"lineNumber":178,"author":{"gitId":"daongochieu2810"},"content":"          };"},{"lineNumber":179,"author":{"gitId":"daongochieu2810"},"content":"          return this.studentService.enrollStudents("},{"lineNumber":180,"author":{"gitId":"daongochieu2810"},"content":"              this.courseId, request,"},{"lineNumber":181,"author":{"gitId":"daongochieu2810"},"content":"          );"},{"lineNumber":182,"author":{"gitId":"daongochieu2810"},"content":"        }),"},{"lineNumber":183,"author":{"gitId":"daongochieu2810"},"content":"    );"},{"lineNumber":184,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":185,"author":{"gitId":"daongochieu2810"},"content":"    enrollRequests.pipe(finalize(() \u003d\u003e this.isEnrolling \u003d false)).subscribe({"},{"lineNumber":186,"author":{"gitId":"daongochieu2810"},"content":"      next: (resp: EnrollStudents) \u003d\u003e {"},{"lineNumber":187,"author":{"gitId":"daongochieu2810"},"content":"        enrolledStudents.push(...resp.studentsData.students);"},{"lineNumber":188,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":189,"author":{"gitId":"daongochieu2810"},"content":"        if (resp.unsuccessfulEnrolls !\u003d null) {"},{"lineNumber":190,"author":{"gitId":"daongochieu2810"},"content":"          for (const unsuccessfulEnroll of resp.unsuccessfulEnrolls) {"},{"lineNumber":191,"author":{"gitId":"daongochieu2810"},"content":"            this.unsuccessfulEnrolls[unsuccessfulEnroll.studentEmail] \u003d unsuccessfulEnroll.errorMessage;"},{"lineNumber":192,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":193,"author":{"gitId":"daongochieu2810"},"content":"            for (const index of studentEnrollRequests.keys()) {"},{"lineNumber":194,"author":{"gitId":"daongochieu2810"},"content":"              if (studentEnrollRequests.get(index)?.email \u003d\u003d\u003d unsuccessfulEnroll.studentEmail) {"},{"lineNumber":195,"author":{"gitId":"daongochieu2810"},"content":"                this.invalidRowsIndex.add(index);"},{"lineNumber":196,"author":{"gitId":"daongochieu2810"},"content":"                break;"},{"lineNumber":197,"author":{"gitId":"daongochieu2810"},"content":"              }"},{"lineNumber":198,"author":{"gitId":"daongochieu2810"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"daongochieu2810"},"content":"          }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"daongochieu2810"},"content":"      },"},{"lineNumber":202,"author":{"gitId":"daongochieu2810"},"content":"      complete: () \u003d\u003e {"},{"lineNumber":203,"author":{"gitId":"daongochieu2810"},"content":"        this.showEnrollResults \u003d true;"},{"lineNumber":204,"author":{"gitId":"daongochieu2810"},"content":"        this.statusMessage.pop(); // removes any existing error status message"},{"lineNumber":205,"author":{"gitId":"daongochieu2810"},"content":"        this.statusMessageService.showSuccessToast(\u0027Enrollment successful. Summary given below.\u0027);"},{"lineNumber":206,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":207,"author":{"gitId":"daongochieu2810"},"content":"        if (this.invalidRowsIndex.size \u003e 0) {"},{"lineNumber":208,"author":{"gitId":"daongochieu2810"},"content":"          this.setTableStyleBasedOnFieldChecks(newStudentsHOTInstance, hotInstanceColHeaders);"},{"lineNumber":209,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":210,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":211,"author":{"gitId":"daongochieu2810"},"content":"        this.prepareEnrollmentResults(enrolledStudents, studentEnrollRequests);"},{"lineNumber":212,"author":{"gitId":"daongochieu2810"},"content":"      },"},{"lineNumber":213,"author":{"gitId":"daongochieu2810"},"content":"      error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":214,"author":{"gitId":"daongochieu2810"},"content":"        if (enrolledStudents.length \u003e 0) {"},{"lineNumber":215,"author":{"gitId":"daongochieu2810"},"content":"          this.showEnrollResults \u003d true;"},{"lineNumber":216,"author":{"gitId":"daongochieu2810"},"content":"          this.prepareEnrollmentResults(enrolledStudents, studentEnrollRequests);"},{"lineNumber":217,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":219,"author":{"gitId":"daongochieu2810"},"content":"        // Set error message after populating result panels to avoid it being overridden"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        this.enrollErrorMessage \u003d resp.error.message;"},{"lineNumber":221,"author":{"gitId":"daongochieu2810"},"content":"      },"},{"lineNumber":222,"author":{"gitId":"daongochieu2810"},"content":"    });"},{"lineNumber":223,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":224,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":225,"author":{"gitId":"daongochieu2810"},"content":"  private prepareEnrollmentResults(enrolledStudents: Student[],"},{"lineNumber":226,"author":{"gitId":"daongochieu2810"},"content":"                                   studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":227,"author":{"gitId":"daongochieu2810"},"content":"    this.enrollResultPanelList \u003d this.populateEnrollResultPanelList(this.existingStudents,"},{"lineNumber":228,"author":{"gitId":"daongochieu2810"},"content":"        enrolledStudents, Array.from(studentEnrollRequests.values()));"},{"lineNumber":229,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId }).subscribe((resp: Students) \u003d\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      this.existingStudents \u003d resp.students;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      if (!this.isExistingStudentsPanelCollapsed) {"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        const existingStudentTable: Handsontable \u003d this.hotRegisterer.getInstance(this.existingStudentsHOT);"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.loadExistingStudentsData(existingStudentTable, this.existingStudents);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      this.isExistingStudentsPresent \u003d true;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":238,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":239,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":240,"author":{"gitId":"daongochieu2810"},"content":"  private partitionStudentEnrollRequests(studentEnrollRequests: StudentEnrollRequest[]): void {"},{"lineNumber":241,"author":{"gitId":"daongochieu2810"},"content":"    let currentStudentChunk: StudentEnrollRequest[] \u003d [];"},{"lineNumber":242,"author":{"gitId":"daongochieu2810"},"content":"    for (const request of studentEnrollRequests) {"},{"lineNumber":243,"author":{"gitId":"daongochieu2810"},"content":"      currentStudentChunk.push(request);"},{"lineNumber":244,"author":{"gitId":"daongochieu2810"},"content":"      if (currentStudentChunk.length \u003e\u003d this.numberOfStudentsPerRequest) {"},{"lineNumber":245,"author":{"gitId":"daongochieu2810"},"content":"        this.allStudentChunks.push(currentStudentChunk);"},{"lineNumber":246,"author":{"gitId":"daongochieu2810"},"content":"        currentStudentChunk \u003d [];"},{"lineNumber":247,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":248,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":249,"author":{"gitId":"daongochieu2810"},"content":"    if (currentStudentChunk.length \u003e 0) {"},{"lineNumber":250,"author":{"gitId":"daongochieu2810"},"content":"      this.allStudentChunks.push(currentStudentChunk);"},{"lineNumber":251,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":252,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":253,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":254,"author":{"gitId":"daongochieu2810"},"content":"  private checkTeamsValid(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":255,"author":{"gitId":"daongochieu2810"},"content":"    const teamSectionMap: Map\u003cstring, string\u003e \u003d new Map();"},{"lineNumber":256,"author":{"gitId":"daongochieu2810"},"content":"    const teamIndexMap: Map\u003cstring, number\u003e \u003d new Map();"},{"lineNumber":257,"author":{"gitId":"daongochieu2810"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":258,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":259,"author":{"gitId":"daongochieu2810"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":260,"author":{"gitId":"daongochieu2810"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":261,"author":{"gitId":"daongochieu2810"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":262,"author":{"gitId":"daongochieu2810"},"content":"        return;"},{"lineNumber":263,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":264,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":265,"author":{"gitId":"daongochieu2810"},"content":"      if (!teamSectionMap.has(request.team)) {"},{"lineNumber":266,"author":{"gitId":"daongochieu2810"},"content":"        teamSectionMap.set(request.team, request.section);"},{"lineNumber":267,"author":{"gitId":"daongochieu2810"},"content":"        teamIndexMap.set(request.team, key);"},{"lineNumber":268,"author":{"gitId":"daongochieu2810"},"content":"        return;"},{"lineNumber":269,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":270,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":271,"author":{"gitId":"daongochieu2810"},"content":"      if (teamSectionMap.get(request.team) !\u003d\u003d request.section) {"},{"lineNumber":272,"author":{"gitId":"daongochieu2810"},"content":"        this.invalidRowsIndex.add(key);"},{"lineNumber":273,"author":{"gitId":"daongochieu2810"},"content":"        const firstIndex: number | undefined \u003d teamIndexMap.get(request.team);"},{"lineNumber":274,"author":{"gitId":"daongochieu2810"},"content":"        if (firstIndex !\u003d\u003d undefined) {"},{"lineNumber":275,"author":{"gitId":"daongochieu2810"},"content":"          this.invalidRowsIndex.add(firstIndex);"},{"lineNumber":276,"author":{"gitId":"daongochieu2810"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":279,"author":{"gitId":"daongochieu2810"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":280,"author":{"gitId":"daongochieu2810"},"content":"      this.enrollErrorMessage +\u003d \u0027Found duplicated teams in different sections. \u0027;"},{"lineNumber":281,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":283,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":284,"author":{"gitId":"daongochieu2810"},"content":"  private checkCompulsoryFields(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":285,"author":{"gitId":"daongochieu2810"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":286,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":287,"author":{"gitId":"daongochieu2810"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":288,"author":{"gitId":"daongochieu2810"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":289,"author":{"gitId":"daongochieu2810"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":290,"author":{"gitId":"daongochieu2810"},"content":"        return;"},{"lineNumber":291,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":292,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":293,"author":{"gitId":"daongochieu2810"},"content":"      if ((studentEnrollRequests.size \u003e\u003d 100 \u0026\u0026 request.section \u003d\u003d\u003d \u0027\u0027)"},{"lineNumber":294,"author":{"gitId":"daongochieu2810"},"content":"          || request.team \u003d\u003d\u003d \u0027\u0027 || request.name \u003d\u003d\u003d \u0027\u0027 || request.email \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":295,"author":{"gitId":"daongochieu2810"},"content":"        this.invalidRowsIndex.add(key);"},{"lineNumber":296,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":297,"author":{"gitId":"daongochieu2810"},"content":"    });"},{"lineNumber":298,"author":{"gitId":"daongochieu2810"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":299,"author":{"gitId":"daongochieu2810"},"content":"      this.enrollErrorMessage +\u003d \u0027Found empty compulsory fields and/or sections with more than 100 students. \u0027;"},{"lineNumber":300,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":301,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":302,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":303,"author":{"gitId":"daongochieu2810"},"content":"  private checkEmailNotRepeated(studentEnrollRequests: Map\u003cnumber, StudentEnrollRequest\u003e): void {"},{"lineNumber":304,"author":{"gitId":"daongochieu2810"},"content":"    const emailMap: Map\u003cstring, number\u003e \u003d new Map();"},{"lineNumber":305,"author":{"gitId":"daongochieu2810"},"content":"    const invalidRowsOriginalSize: number \u003d this.invalidRowsIndex.size;"},{"lineNumber":306,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":307,"author":{"gitId":"daongochieu2810"},"content":"    Array.from(studentEnrollRequests.keys()).forEach((key: number) \u003d\u003e {"},{"lineNumber":308,"author":{"gitId":"daongochieu2810"},"content":"      const request: StudentEnrollRequest | undefined \u003d studentEnrollRequests.get(key);"},{"lineNumber":309,"author":{"gitId":"daongochieu2810"},"content":"      if (request \u003d\u003d\u003d undefined) {"},{"lineNumber":310,"author":{"gitId":"daongochieu2810"},"content":"        return;"},{"lineNumber":311,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":312,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":313,"author":{"gitId":"daongochieu2810"},"content":"      if (!emailMap.has(request.email)) {"},{"lineNumber":314,"author":{"gitId":"daongochieu2810"},"content":"        emailMap.set(request.email, key);"},{"lineNumber":315,"author":{"gitId":"daongochieu2810"},"content":"        return;"},{"lineNumber":316,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":317,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":318,"author":{"gitId":"daongochieu2810"},"content":"      this.invalidRowsIndex.add(key);"},{"lineNumber":319,"author":{"gitId":"daongochieu2810"},"content":"      const firstIndex: number | undefined \u003d emailMap.get(request.email);"},{"lineNumber":320,"author":{"gitId":"daongochieu2810"},"content":"      if (firstIndex !\u003d\u003d undefined) {"},{"lineNumber":321,"author":{"gitId":"daongochieu2810"},"content":"        this.invalidRowsIndex.add(firstIndex);"},{"lineNumber":322,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":324,"author":{"gitId":"daongochieu2810"},"content":"    if (this.invalidRowsIndex.size \u003e invalidRowsOriginalSize) {"},{"lineNumber":325,"author":{"gitId":"daongochieu2810"},"content":"      this.enrollErrorMessage +\u003d \u0027Found duplicated emails. \u0027;"},{"lineNumber":326,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":327,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":328,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":329,"author":{"gitId":"daongochieu2810"},"content":"  private resetTableStyle(newStudentsHOTInstance: Handsontable,"},{"lineNumber":330,"author":{"gitId":"daongochieu2810"},"content":"                                 startRow: number, endRow: number, startCol: number, endCol: number): void {"},{"lineNumber":331,"author":{"gitId":"daongochieu2810"},"content":"    for (let row: number \u003d startRow; row \u003c\u003d endRow; row +\u003d 1) {"},{"lineNumber":332,"author":{"gitId":"daongochieu2810"},"content":"      for (let col: number \u003d startCol; col \u003c\u003d endCol; col +\u003d 1) {"},{"lineNumber":333,"author":{"gitId":"daongochieu2810"},"content":"        newStudentsHOTInstance.setCellMeta(row, col, \u0027className\u0027, \u0027valid-row\u0027);"},{"lineNumber":334,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":335,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":336,"author":{"gitId":"daongochieu2810"},"content":"    newStudentsHOTInstance.render();"},{"lineNumber":337,"author":{"gitId":"daongochieu2810"},"content":"  }"},{"lineNumber":338,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":339,"author":{"gitId":"daongochieu2810"},"content":"  private setTableStyleBasedOnFieldChecks(newStudentsHOTInstance: Handsontable,"},{"lineNumber":340,"author":{"gitId":"daongochieu2810"},"content":"                                          hotInstanceColHeaders: string[]): void {"},{"lineNumber":341,"author":{"gitId":"daongochieu2810"},"content":"    for (const index of this.invalidRowsIndex) {"},{"lineNumber":342,"author":{"gitId":"daongochieu2810"},"content":"      for (const header of this.colHeaders) {"},{"lineNumber":343,"author":{"gitId":"daongochieu2810"},"content":"        newStudentsHOTInstance.setCellMeta(index, hotInstanceColHeaders.indexOf(header),"},{"lineNumber":344,"author":{"gitId":"daongochieu2810"},"content":"            \u0027className\u0027, \u0027invalid-row\u0027);"},{"lineNumber":345,"author":{"gitId":"daongochieu2810"},"content":"      }"},{"lineNumber":346,"author":{"gitId":"daongochieu2810"},"content":"    }"},{"lineNumber":347,"author":{"gitId":"daongochieu2810"},"content":"    newStudentsHOTInstance.render();"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"  private populateEnrollResultPanelList(existingStudents: Student[], enrolledStudents: Student[],"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                                        enrollRequests: StudentEnrollRequest[]): EnrollResultPanel[] {"},{"lineNumber":352,"author":{"gitId":"-"},"content":""},{"lineNumber":353,"author":{"gitId":"-"},"content":"    const panels: EnrollResultPanel[] \u003d [];"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    const studentLists: Student[][] \u003d [];"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    const statuses: (string | EnrollStatus)[] \u003d Object.values(EnrollStatus)"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        .filter((value: string | EnrollStatus) \u003d\u003e typeof value \u003d\u003d\u003d \u0027string\u0027);"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"    for (const _ of statuses) {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      studentLists.push([]);"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"    // Identify students not in the enroll list."},{"lineNumber":363,"author":{"gitId":"-"},"content":"    for (const existingStudent of existingStudents) {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d existingStudent.email;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      if (enrolledStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.UNMODIFIED].push(existingStudent);"},{"lineNumber":369,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"    // Identify new students, modified students, and students that are modified without any changes."},{"lineNumber":373,"author":{"gitId":"-"},"content":"    for (const enrolledStudent of enrolledStudents) {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      const unchangedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        return this.isSameEnrollInformation(student, enrolledStudent);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      const modifiedStudent: Student | undefined \u003d existingStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d enrolledStudent.email;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      if (unchangedStudent !\u003d\u003d undefined) {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.MODIFIED_UNCHANGED].push(enrolledStudent);"},{"lineNumber":382,"author":{"gitId":"-"},"content":"      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent !\u003d\u003d undefined) {"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.MODIFIED].push(enrolledStudent);"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      } else if (unchangedStudent \u003d\u003d\u003d undefined \u0026\u0026 modifiedStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.NEW].push(enrolledStudent);"},{"lineNumber":386,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"    // Identify students that failed to enroll."},{"lineNumber":390,"author":{"gitId":"-"},"content":"    for (const request of enrollRequests) {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      const enrolledStudent: Student | undefined \u003d enrolledStudents.find((student: Student) \u003d\u003e {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        return student.email \u003d\u003d\u003d request.email;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"      if (enrolledStudent \u003d\u003d\u003d undefined) {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        studentLists[EnrollStatus.ERROR].push({"},{"lineNumber":397,"author":{"gitId":"-"},"content":"          email: request.email,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"          name: request.name,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"          sectionName: request.section,"},{"lineNumber":401,"author":{"gitId":"-"},"content":"          teamName: request.team,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"          comments: request.comments,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"          joinState: JoinState.NOT_JOINED,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"          lastName: \u0027\u0027,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":406,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":407,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"    const statusMessage: Record\u003cnumber, string\u003e \u003d {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      0: `${studentLists[EnrollStatus.NEW].length} student(s) added:`,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      1: `${studentLists[EnrollStatus.MODIFIED].length} student(s) modified:`,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      2: `${studentLists[EnrollStatus.MODIFIED_UNCHANGED].length} student(s) updated with no changes:`,"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      3: `${studentLists[EnrollStatus.ERROR].length} student(s) failed to be enrolled:`,"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      4: `${studentLists[EnrollStatus.UNMODIFIED].length} student(s) remain unmodified:`,"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"-"},"content":"    for (const status of statuses) {"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      panels.push({"},{"lineNumber":420,"author":{"gitId":"-"},"content":"        status: EnrollStatus[status as keyof typeof EnrollStatus],"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        messageForEnrollmentStatus: statusMessage[EnrollStatus[status as keyof typeof EnrollStatus]],"},{"lineNumber":422,"author":{"gitId":"-"},"content":"        studentList: studentLists[EnrollStatus[status as keyof typeof EnrollStatus]],"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":425,"author":{"gitId":"-"},"content":""},{"lineNumber":426,"author":{"gitId":"-"},"content":"    if (studentLists[EnrollStatus.ERROR].length \u003e 0) {"},{"lineNumber":427,"author":{"gitId":"daongochieu2810"},"content":"      this.enrollErrorMessage \u003d this.GENERAL_ERROR_MESSAGE;"},{"lineNumber":428,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(\u0027Some students failed to be enrolled, see the summary below.\u0027);"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    return panels;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"-"},"content":"  private isSameEnrollInformation(enrolledStudent: Student, existingStudent: Student): boolean {"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    return enrolledStudent.email \u003d\u003d\u003d existingStudent.email"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.name \u003d\u003d\u003d existingStudent.name"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.teamName \u003d\u003d\u003d existingStudent.teamName"},{"lineNumber":437,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.sectionName \u003d\u003d\u003d existingStudent.sectionName"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        \u0026\u0026 enrolledStudent.comments \u003d\u003d\u003d existingStudent.comments;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":440,"author":{"gitId":"-"},"content":""},{"lineNumber":441,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   * Adds new rows to the \u0027New students\u0027 spreadsheet interface"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   * according to user input"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":445,"author":{"gitId":"-"},"content":"  addRows(numOfRows: number): void {"},{"lineNumber":446,"author":{"gitId":"-"},"content":"    this.hotRegisterer.getInstance(this.newStudentsHOT).alter("},{"lineNumber":447,"author":{"gitId":"-"},"content":"        \u0027insert_row\u0027, [], numOfRows);"},{"lineNumber":448,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":449,"author":{"gitId":"-"},"content":""},{"lineNumber":450,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   * Toggles the view of \u0027New Students\u0027 spreadsheet interface"},{"lineNumber":452,"author":{"gitId":"-"},"content":"   * and/or its affiliated buttons"},{"lineNumber":453,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":454,"author":{"gitId":"-"},"content":"  toggleNewStudentsPanel(): void {"},{"lineNumber":455,"author":{"gitId":"-"},"content":"    this.isNewStudentsPanelCollapsed \u003d !this.isNewStudentsPanelCollapsed;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   * Returns the length of the current spreadsheet."},{"lineNumber":460,"author":{"gitId":"-"},"content":"   * Rows with all null values are filtered."},{"lineNumber":461,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":462,"author":{"gitId":"-"},"content":"  getSpreadsheetLength(dataHandsontable: string[][]): number {"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    return dataHandsontable"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        .filter((row: string[]) \u003d\u003e (!row.every((cell: string) \u003d\u003e cell \u003d\u003d\u003d null)))"},{"lineNumber":465,"author":{"gitId":"-"},"content":"        .length;"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":469,"author":{"gitId":"-"},"content":"   * Transforms the first uppercase letter of a string into a lowercase letter."},{"lineNumber":470,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":471,"author":{"gitId":"-"},"content":"  unCapitalizeFirstLetter(targetString: string): string {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    return targetString.charAt(0).toLowerCase() + targetString.slice(1);"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   * Converts returned student list to a suitable format required by Handsontable."},{"lineNumber":477,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":478,"author":{"gitId":"-"},"content":"  studentListDataToHandsontableData(studentsData: Student[], handsontableColHeader: any[]): string[][] {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    const headers: string[] \u003d handsontableColHeader.map(this.unCapitalizeFirstLetter);"},{"lineNumber":480,"author":{"gitId":"-"},"content":"    return studentsData.map((student: Student) \u003d\u003e (headers.map("},{"lineNumber":481,"author":{"gitId":"-"},"content":"        (header: string) \u003d\u003e {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"          if (header \u003d\u003d\u003d \u0027team\u0027) {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            return (student as any).teamName;"},{"lineNumber":484,"author":{"gitId":"daongochieu2810"},"content":"          }"},{"lineNumber":485,"author":{"gitId":"daongochieu2810"},"content":"          if (header \u003d\u003d\u003d \u0027section\u0027) {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            return (student as any).sectionName;"},{"lineNumber":487,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          return (student as any)[header];"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":490,"author":{"gitId":"-"},"content":"    )));"},{"lineNumber":491,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":494,"author":{"gitId":"-"},"content":"   * Loads existing student data into the spreadsheet interface."},{"lineNumber":495,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  loadExistingStudentsData(existingStudentsHOTInstance: Handsontable, studentsData: Student[]): void {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    existingStudentsHOTInstance.loadData(this.studentListDataToHandsontableData("},{"lineNumber":498,"author":{"gitId":"-"},"content":"        studentsData, (existingStudentsHOTInstance.getColHeader() as any[])));"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   * Toggles the view of \u0027Existing Students\u0027 spreadsheet interface"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  toggleExistingStudentsPanel(): void {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    // Has to be done before the API call is made so that HOT is available for data population"},{"lineNumber":506,"author":{"gitId":"-"},"content":"    this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed;"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    this.isLoadingExistingStudents \u003d true;"},{"lineNumber":508,"author":{"gitId":"-"},"content":"    const existingStudentsHOTInstance: Handsontable \u003d"},{"lineNumber":509,"author":{"gitId":"-"},"content":"        this.hotRegisterer.getInstance(this.existingStudentsHOT);"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"    // Calling REST API only the first time when spreadsheet has no data"},{"lineNumber":512,"author":{"gitId":"-"},"content":"    if (this.getSpreadsheetLength(existingStudentsHOTInstance.getData()) !\u003d\u003d 0) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      this.isLoadingExistingStudents \u003d false;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":516,"author":{"gitId":"-"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId }).subscribe("},{"lineNumber":518,"author":{"gitId":"-"},"content":"        (resp: Students) \u003d\u003e {"},{"lineNumber":519,"author":{"gitId":"-"},"content":"          if (resp.students.length !\u003d\u003d 0) {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            this.loadExistingStudentsData(existingStudentsHOTInstance, resp.students);"},{"lineNumber":521,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            // Shows a message if there are no existing students. Panel would not be expanded."},{"lineNumber":523,"author":{"gitId":"-"},"content":"            this.isExistingStudentsPresent \u003d false;"},{"lineNumber":524,"author":{"gitId":"-"},"content":"            this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"},{"lineNumber":525,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      this.isAjaxSuccess \u003d false;"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      this.isExistingStudentsPanelCollapsed \u003d !this.isExistingStudentsPanelCollapsed; // Collapse the panel again"},{"lineNumber":530,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      this.isLoadingExistingStudents \u003d false;"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":533,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":536,"author":{"gitId":"-"},"content":"   * Trigger click button"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":538,"author":{"gitId":"-"},"content":"  pasteClick(): void {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    const element: HTMLElement \u003d"},{"lineNumber":540,"author":{"gitId":"-"},"content":"        (document.getElementById(\u0027paste\u0027) as HTMLElement);"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    element.click();"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   * Shows modal box when user clicks on the \u0027paste\u0027 option in the"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   * Handsontable context menu"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  showPasteModalBox(): void {"},{"lineNumber":549,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `Pasting data through the context menu is not supported due to browser restrictions.\u003cbr\u003e"},{"lineNumber":550,"author":{"gitId":"-"},"content":"      Please use \u003ckbd\u003eCtrl + V\u003c/kbd\u003e or \u003ckbd\u003e⌘ + V\u003c/kbd\u003e to paste your data instead.`;"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    this.simpleModalService.openInformationModal(\u0027Pasting data through the context menu\u0027,"},{"lineNumber":552,"author":{"gitId":"-"},"content":"        SimpleModalType.WARNING, modalContent);"},{"lineNumber":553,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":554,"author":{"gitId":"-"},"content":""},{"lineNumber":555,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   * Checks whether the course is present"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":558,"author":{"gitId":"-"},"content":"  getCourseEnrollPageData(courseid: string): void {"},{"lineNumber":559,"author":{"gitId":"-"},"content":"    this.existingStudents \u003d [];"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    this.hasLoadingStudentsFailed \u003d false;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    this.isLoadingCourseEnrollPage \u003d true;"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    this.courseService.hasResponsesForCourse(courseid).subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      this.coursePresent \u003d true;"},{"lineNumber":564,"author":{"gitId":"-"},"content":"      this.courseId \u003d courseid;"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      if (resp.hasResponses) {"},{"lineNumber":566,"author":{"gitId":"-"},"content":"        const modalContent: string \u003d `\u003cp\u003e\u003cstrong\u003eThere are existing feedback responses for this course.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":567,"author":{"gitId":"-"},"content":"          Modifying records of enrolled students will result in some existing responses"},{"lineNumber":568,"author":{"gitId":"-"},"content":"          from those modified students to be deleted. You may wish to download the data"},{"lineNumber":569,"author":{"gitId":"-"},"content":"          before you make the changes.`;"},{"lineNumber":570,"author":{"gitId":"-"},"content":"        this.simpleModalService.openInformationModal("},{"lineNumber":571,"author":{"gitId":"-"},"content":"            \u0027Existing feedback responses\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":573,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      this.coursePresent \u003d false;"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":576,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"      this.isLoadingCourseEnrollPage \u003d false;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: courseid }).subscribe((resp: Students) \u003d\u003e {"},{"lineNumber":580,"author":{"gitId":"-"},"content":"      this.existingStudents \u003d resp.students;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      this.hasLoadingStudentsFailed \u003d true;"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":584,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":585,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":586,"author":{"gitId":"-"},"content":""},{"lineNumber":587,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   * Shows user more information about the spreadsheet interfaces"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":590,"author":{"gitId":"-"},"content":"  navigateToMoreInfo(): void {"},{"lineNumber":591,"author":{"gitId":"-"},"content":"    (this.moreInfo as ElementRef)"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        .nativeElement.scrollIntoView({ behavior: \u0027auto\u0027, block: \u0027start\u0027 });"},{"lineNumber":593,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":594,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":224,"-":370}},{"path":"src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-course\" class\u003d\"btn btn-success\" (click)\u003d\"isAddNewCourseFormExpanded \u003d true\""},{"lineNumber":3,"author":{"gitId":"-"},"content":"          [disabled]\u003d\"isAddNewCourseFormExpanded\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"\u003cdiv id\u003d\"add-course-section\" class\u003d\"course-section\" *ngIf\u003d\"isAddNewCourseFormExpanded\" @collapseAnim\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ctm-add-course-form (courseAdded)\u003d\"loadInstructorCourses()\""},{"lineNumber":9,"author":{"gitId":"-"},"content":"                      (closeCourseFormEvent)\u003d\"isAddNewCourseFormExpanded \u003d false\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003e\u003c/tm-add-course-form\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadInstructorCourses()\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cng-template #addCourseAlert\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\"\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      You do not seem to have any active courses. Use the button above to create a new course."},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isLoading\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"course-section\" *ngIf\u003d\"activeCourses.length; else addCourseAlert;\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003ch3\u003eActive courses\u003c/h3\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"table table-responsive\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003ctable id\u003d\"active-courses-table\" class\u003d\"table table-striped table-bordered margin-0\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cthead\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003ctr class\u003d\"bg-primary text-white\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cth id\u003d\"sort-course-id\" class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_ID)\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              Course ID"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cth id\u003d\"sort-course-name\" class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_NAME)\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              Course Name"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003cth id\u003d\"sort-creation-date\" class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_CREATION_DATE)\"\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              Creation Date"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"activeTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 activeTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cth\u003eSections\u003c/th\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cth\u003eTeams\u003c/th\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cth\u003eTotal Students\u003c/th\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cth\u003eTotal Unregistered\u003c/th\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/thead\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003ctbody\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cng-template #loadingSpinner\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            \u003ctm-ajax-loading [useBlueSpinner]\u003d\"true\"\u003e\u003c/tm-ajax-loading\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/ng-template\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003ctr *ngFor\u003d\"let course of activeCourses; let i \u003d index\"\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u003ctd id\u003d\"course-id-{{ i }}\"\u003e{{course.course.courseId}}\u003c/td\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"ngb-tooltip-class\" container\u003d\"body\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003ca *ngIf\u003d\"!course.isLoadingCourseStats; else loadingSpinner\" (click)\u003d\"getCourseStats(i)\" [tmRouterLink]\u003d\"\"\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  Show"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                {{ courseStats[course.course.courseId].sections }}"},{"lineNumber":77,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u003ca *ngIf\u003d\"!course.isLoadingCourseStats; else loadingSpinner\" id\u003d\"show-statistics-{{ i }}\" (click)\u003d\"getCourseStats(i)\" [tmRouterLink]\u003d\"\"\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                  Show"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                {{ courseStats[course.course.courseId].teams }}"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u003ca *ngIf\u003d\"!course.isLoadingCourseStats; else loadingSpinner\" (click)\u003d\"getCourseStats(i)\" [tmRouterLink]\u003d\"\"\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                  Show"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                {{ courseStats[course.course.courseId].students }}"},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003ctd\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u003ca *ngIf\u003d\"!course.isLoadingCourseStats; else loadingSpinner\" (click)\u003d\"getCourseStats(i)\" [tmRouterLink]\u003d\"\"\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                  Show"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"              \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                {{ courseStats[course.course.courseId].unregistered }}"},{"lineNumber":107,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            \u003ctd class\u003d\"text-center actions-cell\"\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"              \u003ca id\u003d\"btn-enroll-{{ i }}\" class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyStudent\""},{"lineNumber":111,"author":{"gitId":"-"},"content":"                      ngbTooltip\u003d\"Enroll student into the course\""},{"lineNumber":112,"author":{"gitId":"-"},"content":"                      tmRouterLink\u003d\"/web/instructor/courses/enroll\""},{"lineNumber":113,"author":{"gitId":"-"},"content":"                      [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Enroll"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              \u003c/a\u003e"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-enroll-disabled-{{ i }}\" class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyStudent\"\u003e"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Enroll"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              \u003c/button\u003e"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdown class\u003d\"d-inline-block\"\u003e"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-other-actions-{{ i }}\" class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003eOther Actions\u003c/button\u003e"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u003cdiv ngbDropdownMenu\u003e"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-primary btn-sm dropdown-item clickable\""},{"lineNumber":123,"author":{"gitId":"-"},"content":"                          tmRouterLink\u003d\"/web/instructor/courses/details\""},{"lineNumber":124,"author":{"gitId":"-"},"content":"                          [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    View"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-primary btn-sm dropdown-item clickable\""},{"lineNumber":128,"author":{"gitId":"-"},"content":"                          tmRouterLink\u003d\"/web/instructor/courses/edit\""},{"lineNumber":129,"author":{"gitId":"-"},"content":"                          [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    Edit"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-archive-{{ i }}\" class\u003d\"btn btn-primary btn-sm dropdown-item clickable\" (click)\u003d\"changeArchiveStatus(course.course.courseId, true)\""},{"lineNumber":133,"author":{"gitId":"-"},"content":"                          ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\" placement\u003d\"left\" container\u003d\"body\"\u003e"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    Archive"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                  \u003c/button\u003e"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-soft-delete-{{ i }}\" class\u003d\"btn btn-primary btn-sm dropdown-item clickable\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""},{"lineNumber":137,"author":{"gitId":"-"},"content":"                          ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\" placement\u003d\"left\" container\u003d\"body\"\u003e"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                    Delete"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                  \u003c/button\u003e"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                  \u003cbutton id\u003d\"btn-soft-delete-disabled-{{ i }}\" class\u003d\"btn btn-primary btn-sm dropdown-item disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    Delete"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                  \u003c/button\u003e"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                \u003c/div\u003e"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            \u003c/td\u003e"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          \u003c/tbody\u003e"},{"lineNumber":148,"author":{"gitId":"-"},"content":"          \u003ctr *ngIf\u003d\"!activeCourses.length\"\u003e"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            \u003ctd\u003e\u003c/td\u003e"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        \u003c/table\u003e"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        \u003cp *ngIf\u003d\"!activeCourses.length\"\u003eNo records found.\u003c/p\u003e"},{"lineNumber":160,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"course-section\" *ngIf\u003d\"archivedCourses.length\"\u003e"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  \u003ch3 class\u003d\"text-muted\"\u003e"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cspan class\u003d\"fa fa-file-archive\"\u003e\u003c/span\u003e Archived courses"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  \u003c/h3\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card top-padded\"\u003e"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    \u003cdiv id\u003d\"archived-table-heading\" class\u003d\"card-header bg-info text-white cursor-pointer\" (click)\u003d\"isArchivedCourseExpanded \u003d !isArchivedCourseExpanded\"\u003e"},{"lineNumber":171,"author":{"gitId":"-"},"content":"      \u003cb\u003eArchive\u003c/b\u003e"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        \u003ctm-panel-chevron [isExpanded]\u003d\"isArchivedCourseExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card-body archive-body table-responsive\" *ngIf\u003d\"isArchivedCourseExpanded\" @collapseAnim\u003e"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003ctable id\u003d\"archived-courses-table\" class\u003d\"table table-striped table-bordered archive-table\"\u003e"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        \u003cthead\u003e"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          \u003ctr class\u003d\"background-color-medium-gray text-color-gray\"\u003e"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortArchivedCoursesEvent(SortBy.COURSE_ID)\"\u003e"},{"lineNumber":181,"author":{"gitId":"-"},"content":"              Course ID"},{"lineNumber":182,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortArchivedCoursesEvent(SortBy.COURSE_NAME)\"\u003e"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              Course Name"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortArchivedCoursesEvent(SortBy.COURSE_CREATION_DATE)\"\u003e"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              Creation Date"},{"lineNumber":198,"author":{"gitId":"-"},"content":"              \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"archivedTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 archivedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":202,"author":{"gitId":"-"},"content":"              \u003c/span\u003e"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            \u003c/th\u003e"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":205,"author":{"gitId":"-"},"content":"          \u003c/tr\u003e"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        \u003c/thead\u003e"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        \u003ctbody\u003e"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        \u003ctr *ngFor\u003d\"let course of archivedCourses; let i \u003d index\"\u003e"},{"lineNumber":209,"author":{"gitId":"-"},"content":"          \u003ctd id\u003d\"archived-course-id-{{ i }}\"\u003e{{course.course.courseId}}\u003c/td\u003e"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"},{"lineNumber":211,"author":{"gitId":"-"},"content":"          \u003ctd\u003e"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            \u003cspan container\u003d\"body\" class\u003d\"ngb-tooltip-class\" ngbTooltip\u003d\"{{course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027}}\"\u003e{{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}\u003c/span\u003e"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          \u003c/td\u003e"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          \u003ctd class\u003d\"text-center actions-cell\"\u003e"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-unarchive-{{ i }}\" class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.course.courseId, false)\"\u003e"},{"lineNumber":216,"author":{"gitId":"-"},"content":"              Unarchive"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            \u003cbutton id\u003d\"btn-soft-delete-archived-{{ i }}\" class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""},{"lineNumber":219,"author":{"gitId":"-"},"content":"                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"},{"lineNumber":220,"author":{"gitId":"-"},"content":"              Delete"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":222,"author":{"gitId":"halfwhole"},"content":"            \u003cbutton id\u003d\"btn-soft-delete-archived-disabled-{{ i }}\" class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"              Delete"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            \u003c/button\u003e"},{"lineNumber":225,"author":{"gitId":"-"},"content":"          \u003c/td\u003e"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        \u003c/tr\u003e"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        \u003c/tbody\u003e"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003c/table\u003e"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row course-section margin-top-30px\" *ngIf\u003d\"softDeletedCourses.length\"\u003e"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":235,"author":{"gitId":"-"},"content":"   \u003ch3 class\u003d\"text-muted\"\u003e"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      \u003cspan class\u003d\"fa fa-trash-alt\"\u003e\u003c/span\u003e Deleted courses"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    \u003c/h3\u003e"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"deleted-table-heading\" class\u003d\"card-header bg-secondary text-white cursor-pointer\" (click)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded\"\u003e"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        \u003cb\u003eRecycle Bin\u003c/b\u003e"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":242,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-restore-all\" class\u003d\"btn btn-secondary btn-sm\" *ngIf\u003d\"canRestoreAll\" (click)\u003d\"$event.stopPropagation(); onRestoreAll()\""},{"lineNumber":243,"author":{"gitId":"-"},"content":"                  ngbTooltip\u003d\"Restore all deleted courses and their corresponding students and sessions\"\u003e"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"},{"lineNumber":245,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":246,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-secondary btn-sm disabled\" *ngIf\u003d\"!canRestoreAll\"\u003e"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          \u003cbutton id\u003d\"btn-delete-all\" class\u003d\"btn btn-secondary btn-sm\" *ngIf\u003d\"canDeleteAll\" (click)\u003d\"$event.stopPropagation(); onDeleteAll()\""},{"lineNumber":250,"author":{"gitId":"-"},"content":"                  ngbTooltip\u003d\"Permanently delete all courses and their corresponding students and sessions\"\u003e"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          \u003cbutton class\u003d\"btn btn-secondary btn-sm disabled\" *ngIf\u003d\"!canDeleteAll\"\u003e"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"},{"lineNumber":255,"author":{"gitId":"-"},"content":"          \u003c/button\u003e"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"isRecycleBinExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card-body recycle-bin-body table-responsive\" *ngIf\u003d\"isRecycleBinExpanded\" @collapseAnim\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        \u003ctable id\u003d\"deleted-courses-table\" class\u003d\"table table-responsive-lg table-striped table-bordered recycle-bin-table\"\u003e"},{"lineNumber":261,"author":{"gitId":"-"},"content":"          \u003cthead\u003e"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            \u003ctr class\u003d\"background-color-medium-gray text-color-gray\"\u003e"},{"lineNumber":263,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortDeletedCoursesEvent(SortBy.COURSE_ID)\"\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                Course ID"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":270,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":271,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortDeletedCoursesEvent(SortBy.COURSE_NAME)\"\u003e"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                Course Name"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":278,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":279,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortDeletedCoursesEvent(SortBy.COURSE_CREATION_DATE)\"\u003e"},{"lineNumber":280,"author":{"gitId":"-"},"content":"                Creation Date"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_CREATION_DATE \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":286,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":287,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortDeletedCoursesEvent(SortBy.COURSE_DELETION_DATE)\"\u003e"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                Deletion Date"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                \u003cspan class\u003d\"fa-stack\"\u003e"},{"lineNumber":290,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-down\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_DELETION_DATE \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003c/i\u003e"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                  \u003ci class\u003d\"fas fa-sort-up\" *ngIf\u003d\"deletedTableSortBy \u003d\u003d\u003d SortBy.COURSE_DELETION_DATE \u0026\u0026 deletedTableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003c/i\u003e"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":294,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":295,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":297,"author":{"gitId":"-"},"content":"          \u003c/thead\u003e"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          \u003ctbody\u003e"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            \u003ctr *ngFor\u003d\"let course of softDeletedCourses; let i \u003d index\"\u003e"},{"lineNumber":300,"author":{"gitId":"-"},"content":"              \u003ctd id\u003d\"deleted-course-id-{{ i }}\"\u003e{{course.course.courseId}}\u003c/td\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"              \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"              \u003ctd\u003e"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                \u003cspan container\u003d\"body\" class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                  {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":306,"author":{"gitId":"-"},"content":"              \u003c/td\u003e"},{"lineNumber":307,"author":{"gitId":"-"},"content":"              \u003ctd\u003e"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                \u003cspan container\u003d\"body\" class\u003d\"ngb-tooltip-class\" [ngbTooltip]\u003d\"course.course.deletionTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                  {{course.course.deletionTimestamp | date:\u0027d MMM yyyy\u0027}}"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                \u003c/span\u003e"},{"lineNumber":311,"author":{"gitId":"-"},"content":"              \u003c/td\u003e"},{"lineNumber":312,"author":{"gitId":"-"},"content":"              \u003ctd class\u003d\"text-center actions-cell\"\u003e"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-restore-{{ i }}\" class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\""},{"lineNumber":314,"author":{"gitId":"-"},"content":"                        (click)\u003d\"onRestore(course.course.courseId)\""},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        ngbTooltip\u003d\"Restore the deleted course and its corresponding students and sessions\"\u003e"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                  Restore"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":318,"author":{"gitId":"halfwhole"},"content":"                \u003cbutton id\u003d\"btn-restore-disabled-{{ i }}\" class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                  Restore"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u003cbutton id\u003d\"btn-delete-{{ i }}\" class\u003d\"btn btn-light btn-sm text-danger\" *ngIf\u003d\"course.canModifyCourse\""},{"lineNumber":322,"author":{"gitId":"-"},"content":"                        (click)\u003d\"onDeletePermanently(course.course.courseId)\""},{"lineNumber":323,"author":{"gitId":"-"},"content":"                        ngbTooltip\u003d\"Permanently delete the course and its corresponding students and sessions\"\u003e"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                  Delete Permanently"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":326,"author":{"gitId":"halfwhole"},"content":"                \u003cbutton id\u003d\"btn-delete-disabled-{{ i }}\" class\u003d\"btn btn-light btn-sm disabled text-danger\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                  Delete Permanently"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                \u003c/button\u003e"},{"lineNumber":329,"author":{"gitId":"-"},"content":"              \u003c/td\u003e"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          \u003c/tbody\u003e"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        \u003c/table\u003e"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":335,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e"}],"authorContributionMap":{"halfwhole":4,"-":332}},{"path":"src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":6,"author":{"gitId":"halfwhole"},"content":"import { Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"halfwhole"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"halfwhole"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":9,"author":{"gitId":"halfwhole"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":10,"author":{"gitId":"halfwhole"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":11,"author":{"gitId":"halfwhole"},"content":"import { Course, CourseArchive, Courses, JoinState, Students } from \u0027../../../types/api-output\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { AjaxLoadingModule } from \u0027../../components/ajax-loading/ajax-loading.module\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { PanelChevronModule } from \u0027../../components/panel-chevron/panel-chevron.module\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { AddCourseFormModule } from \u0027./add-course-form/add-course-form.module\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { InstructorCoursesPageComponent } from \u0027./instructor-courses-page.component\u0027;"},{"lineNumber":19,"author":{"gitId":"halfwhole"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"describe(\u0027InstructorCoursesPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  let component: InstructorCoursesPageComponent;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cInstructorCoursesPageComponent\u003e;"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"  let courseService: CourseService;"},{"lineNumber":25,"author":{"gitId":"halfwhole"},"content":"  let studentService: StudentService;"},{"lineNumber":26,"author":{"gitId":"halfwhole"},"content":"  let timezoneService: TimezoneService;"},{"lineNumber":27,"author":{"gitId":"halfwhole"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":28,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"  const date1: Date \u003d new Date(\u00272018-11-05T08:15:30\u0027);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  const date2: Date \u003d new Date(\u00272019-02-02T08:15:30\u0027);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  const date3: Date \u003d new Date(\u00272002-11-05T08:15:30\u0027);"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  const date4: Date \u003d new Date(\u00272003-11-05T08:15:30\u0027);"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  const date5: Date \u003d new Date(\u00272002-12-05T08:15:30\u0027);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  const date6: Date \u003d new Date(\u00272003-12-05T08:15:30\u0027);"},{"lineNumber":35,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":36,"author":{"gitId":"halfwhole"},"content":"  const activeCoursesSnap: any[] \u003d ["},{"lineNumber":37,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        courseId: \u0027CS3281\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        courseName: \u0027Modifiable Students and Courses\u0027,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        creationTimestamp: date1.getTime(),"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      canModifyCourse: true,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      canModifyStudent: true,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        courseId: \u0027CS3282\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        courseName: \u0027Nothing modifiable\u0027,"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        creationTimestamp: date2.getTime(),"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      canModifyCourse: false,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      canModifyStudent: false,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"halfwhole"},"content":"  const archivedCoursesSnap: any[] \u003d ["},{"lineNumber":62,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        courseId: \u0027CS2104\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        courseName: \u0027Can modify archived\u0027,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        creationTimestamp: date3.getTime(),"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      canModifyCourse: true,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        courseId: \u0027CS2106\u0027,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        courseName: \u0027Cannot modify archived\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        creationTimestamp: date3.getTime(),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      canModifyCourse: false,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"halfwhole"},"content":"  const deletedCoursesSnap: any[] \u003d ["},{"lineNumber":85,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        courseId: \u0027CS1020\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        courseName: \u0027Can modify deleted\u0027,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        creationTimestamp: date3.getTime(),"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        deletionTimestamp: date4.getTime(),"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      canModifyCourse: true,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    {"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        courseId: \u0027CS2010\u0027,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        courseName: \u0027Cannot modify deleted\u0027,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        timeZone: \u0027UTC\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        creationTimestamp: date5.getTime(),"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        deletionTimestamp: date6.getTime(),"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      canModifyCourse: false,"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  ];"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"  const courseStatsSnap: Record\u003cstring, Record\u003cstring, number\u003e\u003e \u003d {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    CS3281 : {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      sections: 1,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      teams: 1,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      students: 1,"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      unregistered: 1,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    CS3282: {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      sections: 2,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      teams: 2,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      students: 2,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      unregistered: 2,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":121,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":122,"author":{"gitId":"halfwhole"},"content":"  const courseCS1231: Course \u003d {"},{"lineNumber":123,"author":{"gitId":"halfwhole"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":124,"author":{"gitId":"halfwhole"},"content":"    courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":125,"author":{"gitId":"halfwhole"},"content":"    creationTimestamp: date1.getTime(),"},{"lineNumber":126,"author":{"gitId":"halfwhole"},"content":"    deletionTimestamp: 0,"},{"lineNumber":127,"author":{"gitId":"halfwhole"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":128,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":129,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":130,"author":{"gitId":"halfwhole"},"content":"  const courseCS3281: Course \u003d {"},{"lineNumber":131,"author":{"gitId":"halfwhole"},"content":"    courseId: \u0027CS3281\u0027,"},{"lineNumber":132,"author":{"gitId":"halfwhole"},"content":"    courseName: \u0027Thematic Systems Project I\u0027,"},{"lineNumber":133,"author":{"gitId":"halfwhole"},"content":"    creationTimestamp: date3.getTime(),"},{"lineNumber":134,"author":{"gitId":"halfwhole"},"content":"    deletionTimestamp: date4.getTime(),"},{"lineNumber":135,"author":{"gitId":"halfwhole"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":136,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":137,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":138,"author":{"gitId":"halfwhole"},"content":"  const courseCS3282: Course \u003d {"},{"lineNumber":139,"author":{"gitId":"halfwhole"},"content":"    courseId: \u0027CS3282\u0027,"},{"lineNumber":140,"author":{"gitId":"halfwhole"},"content":"    courseName: \u0027Thematic Systems Project II\u0027,"},{"lineNumber":141,"author":{"gitId":"halfwhole"},"content":"    creationTimestamp: date5.getTime(),"},{"lineNumber":142,"author":{"gitId":"halfwhole"},"content":"    deletionTimestamp: date6.getTime(),"},{"lineNumber":143,"author":{"gitId":"halfwhole"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":144,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":145,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":146,"author":{"gitId":"halfwhole"},"content":"  const courseST4234: Course \u003d {"},{"lineNumber":147,"author":{"gitId":"halfwhole"},"content":"    courseId: \u0027ST4234\u0027,"},{"lineNumber":148,"author":{"gitId":"halfwhole"},"content":"    courseName: \u0027Bayesian Statistics\u0027,"},{"lineNumber":149,"author":{"gitId":"halfwhole"},"content":"    creationTimestamp: date2.getTime(),"},{"lineNumber":150,"author":{"gitId":"halfwhole"},"content":"    deletionTimestamp: 0,"},{"lineNumber":151,"author":{"gitId":"halfwhole"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":152,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":153,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":154,"author":{"gitId":"halfwhole"},"content":"  const courseModelCS1231: any \u003d {"},{"lineNumber":155,"author":{"gitId":"halfwhole"},"content":"    course: courseCS1231,"},{"lineNumber":156,"author":{"gitId":"halfwhole"},"content":"    canModifyCourse: true,"},{"lineNumber":157,"author":{"gitId":"halfwhole"},"content":"    canModifyStudent: true,"},{"lineNumber":158,"author":{"gitId":"halfwhole"},"content":"    isLoadingCourseStats: false,"},{"lineNumber":159,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":160,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":161,"author":{"gitId":"halfwhole"},"content":"  const courseModelCS3281: any \u003d {"},{"lineNumber":162,"author":{"gitId":"halfwhole"},"content":"    course: courseCS3281,"},{"lineNumber":163,"author":{"gitId":"halfwhole"},"content":"    canModifyCourse: true,"},{"lineNumber":164,"author":{"gitId":"halfwhole"},"content":"    canModifyStudent: true,"},{"lineNumber":165,"author":{"gitId":"halfwhole"},"content":"    isLoadingCourseStats: false,"},{"lineNumber":166,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":167,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":168,"author":{"gitId":"halfwhole"},"content":"  const courseModelCS3282: any \u003d {"},{"lineNumber":169,"author":{"gitId":"halfwhole"},"content":"    course: courseCS3282,"},{"lineNumber":170,"author":{"gitId":"halfwhole"},"content":"    canModifyCourse: true,"},{"lineNumber":171,"author":{"gitId":"halfwhole"},"content":"    canModifyStudent: false,"},{"lineNumber":172,"author":{"gitId":"halfwhole"},"content":"    isLoadingCourseStats: false,"},{"lineNumber":173,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":174,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":175,"author":{"gitId":"halfwhole"},"content":"  const courseModelST4234: any \u003d {"},{"lineNumber":176,"author":{"gitId":"halfwhole"},"content":"    course: courseST4234,"},{"lineNumber":177,"author":{"gitId":"halfwhole"},"content":"    canModifyCourse: false,"},{"lineNumber":178,"author":{"gitId":"halfwhole"},"content":"    canModifyStudent: true,"},{"lineNumber":179,"author":{"gitId":"halfwhole"},"content":"    isLoadingCourseStats: false,"},{"lineNumber":180,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":181,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":182,"author":{"gitId":"halfwhole"},"content":"  const students: Students \u003d {"},{"lineNumber":183,"author":{"gitId":"halfwhole"},"content":"    students: ["},{"lineNumber":184,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":185,"author":{"gitId":"halfwhole"},"content":"        email: \u0027alice.b.tmms@gmail.tmt\u0027,"},{"lineNumber":186,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":187,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Alice Betsy\u0027,"},{"lineNumber":188,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Betsy\u0027,"},{"lineNumber":189,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Alice Betsy\","},{"lineNumber":190,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":191,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 1\u0027,"},{"lineNumber":192,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":193,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":194,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":195,"author":{"gitId":"halfwhole"},"content":"        email: \u0027benny.c.tmms@gmail.tmt\u0027,"},{"lineNumber":196,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":197,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Benny Charles\u0027,"},{"lineNumber":198,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Charles\u0027,"},{"lineNumber":199,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Benny Charles\","},{"lineNumber":200,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":201,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 1\u0027,"},{"lineNumber":202,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":203,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":204,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":205,"author":{"gitId":"halfwhole"},"content":"        email: \u0027charlie.d.tmms@gmail.tmt\u0027,"},{"lineNumber":206,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":207,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Charlie Davis\u0027,"},{"lineNumber":208,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Davis\u0027,"},{"lineNumber":209,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Charlie Davis\","},{"lineNumber":210,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":211,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 2\u0027,"},{"lineNumber":212,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 2\u0027,"},{"lineNumber":213,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":214,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":215,"author":{"gitId":"halfwhole"},"content":"        email: \u0027danny.e.tmms@gmail.tmt\u0027,"},{"lineNumber":216,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":217,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Danny Engrid\u0027,"},{"lineNumber":218,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Engrid\u0027,"},{"lineNumber":219,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Danny Engrid\","},{"lineNumber":220,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":221,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 1\u0027,"},{"lineNumber":222,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":223,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":224,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":225,"author":{"gitId":"halfwhole"},"content":"        email: \u0027emma.f.tmms@gmail.tmt\u0027,"},{"lineNumber":226,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":227,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Emma Farrell\u0027,"},{"lineNumber":228,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Farrell\u0027,"},{"lineNumber":229,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Emma Farrell\","},{"lineNumber":230,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":231,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 1\u0027,"},{"lineNumber":232,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 1\u0027,"},{"lineNumber":233,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":234,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":235,"author":{"gitId":"halfwhole"},"content":"        email: \u0027francis.g.tmms@gmail.tmt\u0027,"},{"lineNumber":236,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":237,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Francis Gabriel\u0027,"},{"lineNumber":238,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Gabriel\u0027,"},{"lineNumber":239,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Francis Gabriel\","},{"lineNumber":240,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":241,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 2\u0027,"},{"lineNumber":242,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 2\u0027,"},{"lineNumber":243,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":244,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":245,"author":{"gitId":"halfwhole"},"content":"        email: \u0027gene.h.tmms@gmail.tmt\u0027,"},{"lineNumber":246,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":247,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Gene Hudson\u0027,"},{"lineNumber":248,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Hudson\u0027,"},{"lineNumber":249,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Gene Hudson\","},{"lineNumber":250,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.JOINED,"},{"lineNumber":251,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 2\u0027,"},{"lineNumber":252,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 2\u0027,"},{"lineNumber":253,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":254,"author":{"gitId":"halfwhole"},"content":"      {"},{"lineNumber":255,"author":{"gitId":"halfwhole"},"content":"        email: \u0027hugh.i.tmms@gmail.tmt\u0027,"},{"lineNumber":256,"author":{"gitId":"halfwhole"},"content":"        courseId: \u0027test.exa-demo\u0027,"},{"lineNumber":257,"author":{"gitId":"halfwhole"},"content":"        name: \u0027Hugh Ivanov\u0027,"},{"lineNumber":258,"author":{"gitId":"halfwhole"},"content":"        lastName: \u0027Ivanov\u0027,"},{"lineNumber":259,"author":{"gitId":"halfwhole"},"content":"        comments: \"This student\u0027s name is Hugh Ivanov\","},{"lineNumber":260,"author":{"gitId":"halfwhole"},"content":"        joinState: JoinState.NOT_JOINED,"},{"lineNumber":261,"author":{"gitId":"halfwhole"},"content":"        teamName: \u0027Team 3\u0027,"},{"lineNumber":262,"author":{"gitId":"halfwhole"},"content":"        sectionName: \u0027Tutorial Group 2\u0027,"},{"lineNumber":263,"author":{"gitId":"halfwhole"},"content":"      },"},{"lineNumber":264,"author":{"gitId":"halfwhole"},"content":"    ],"},{"lineNumber":265,"author":{"gitId":"halfwhole"},"content":"  };"},{"lineNumber":266,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":267,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":270,"author":{"gitId":"-"},"content":"        InstructorCoursesPageComponent,"},{"lineNumber":271,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":273,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        BrowserAnimationsModule,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        AjaxLoadingModule,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        AddCourseFormModule,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        PanelChevronModule,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(InstructorCoursesPageComponent);"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":291,"author":{"gitId":"halfwhole"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":292,"author":{"gitId":"halfwhole"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":293,"author":{"gitId":"halfwhole"},"content":"    timezoneService \u003d TestBed.inject(TimezoneService);"},{"lineNumber":294,"author":{"gitId":"halfwhole"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":296,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":301,"author":{"gitId":"-"},"content":""},{"lineNumber":302,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should load all courses by the instructor\u0027, () \u003d\u003e {"},{"lineNumber":303,"author":{"gitId":"halfwhole"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027getAllCoursesAsInstructor\u0027).and.callFake("},{"lineNumber":304,"author":{"gitId":"halfwhole"},"content":"      (courseStatus: string): Observable\u003cCourses\u003e \u003d\u003e {"},{"lineNumber":305,"author":{"gitId":"halfwhole"},"content":"        if (courseStatus \u003d\u003d\u003d \u0027active\u0027) {"},{"lineNumber":306,"author":{"gitId":"halfwhole"},"content":"          return of({ courses: [courseCS1231] });"},{"lineNumber":307,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":308,"author":{"gitId":"halfwhole"},"content":"        if (courseStatus \u003d\u003d\u003d \u0027archived\u0027) {"},{"lineNumber":309,"author":{"gitId":"halfwhole"},"content":"          return of({ courses: [courseCS3281, courseCS3282] });"},{"lineNumber":310,"author":{"gitId":"halfwhole"},"content":"        }"},{"lineNumber":311,"author":{"gitId":"halfwhole"},"content":"        // softDeleted"},{"lineNumber":312,"author":{"gitId":"halfwhole"},"content":"        return of({ courses: [courseST4234] });"},{"lineNumber":313,"author":{"gitId":"halfwhole"},"content":"      });"},{"lineNumber":314,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":315,"author":{"gitId":"halfwhole"},"content":"    component.loadInstructorCourses();"},{"lineNumber":316,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":317,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.count()).toEqual(3);"},{"lineNumber":318,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.all()[0].args[0]).toEqual(\u0027active\u0027);"},{"lineNumber":319,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.all()[1].args[0]).toEqual(\u0027archived\u0027);"},{"lineNumber":320,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.all()[2].args[0]).toEqual(\u0027softDeleted\u0027);"},{"lineNumber":321,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":322,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses.length).toEqual(1);"},{"lineNumber":323,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":324,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":325,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":326,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses.length).toEqual(2);"},{"lineNumber":327,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses[0].course.courseId).toEqual(\u0027CS3282\u0027);"},{"lineNumber":328,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses[0].course.courseName).toEqual(\u0027Thematic Systems Project II\u0027);"},{"lineNumber":329,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses[1].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":330,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses[1].course.courseName).toEqual(\u0027Thematic Systems Project I\u0027);"},{"lineNumber":331,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":332,"author":{"gitId":"halfwhole"},"content":"    expect(component.softDeletedCourses.length).toEqual(1);"},{"lineNumber":333,"author":{"gitId":"halfwhole"},"content":"    expect(component.softDeletedCourses[0].course.courseId).toEqual(\u0027ST4234\u0027);"},{"lineNumber":334,"author":{"gitId":"halfwhole"},"content":"    expect(component.softDeletedCourses[0].course.courseName).toEqual(\u0027Bayesian Statistics\u0027);"},{"lineNumber":335,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":336,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":337,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should get the course statistics\u0027, () \u003d\u003e {"},{"lineNumber":338,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS1231];"},{"lineNumber":339,"author":{"gitId":"halfwhole"},"content":"    const studentSpy: Spy \u003d spyOn(studentService, \u0027getStudentsFromCourse\u0027).and.returnValue(of(students));"},{"lineNumber":340,"author":{"gitId":"halfwhole"},"content":"    component.getCourseStats(0);"},{"lineNumber":341,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":342,"author":{"gitId":"halfwhole"},"content":"    expect(studentSpy.calls.count()).toEqual(1);"},{"lineNumber":343,"author":{"gitId":"halfwhole"},"content":"    expect(studentSpy.calls.mostRecent().args[0]).toEqual({ courseId: \u0027CS1231\u0027 });"},{"lineNumber":344,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":345,"author":{"gitId":"halfwhole"},"content":"    expect(component.courseStats.CS1231.sections).toEqual(2);"},{"lineNumber":346,"author":{"gitId":"halfwhole"},"content":"    expect(component.courseStats.CS1231.teams).toEqual(3);"},{"lineNumber":347,"author":{"gitId":"halfwhole"},"content":"    expect(component.courseStats.CS1231.students).toEqual(8);"},{"lineNumber":348,"author":{"gitId":"halfwhole"},"content":"    expect(component.courseStats.CS1231.unregistered).toEqual(1);"},{"lineNumber":349,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":350,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":351,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should archive an active course\u0027, () \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"halfwhole"},"content":"    const courseArchiveCS1231: CourseArchive \u003d {"},{"lineNumber":353,"author":{"gitId":"halfwhole"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":354,"author":{"gitId":"halfwhole"},"content":"      isArchived: true,"},{"lineNumber":355,"author":{"gitId":"halfwhole"},"content":"    };"},{"lineNumber":356,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS1231];"},{"lineNumber":357,"author":{"gitId":"halfwhole"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027changeArchiveStatus\u0027).and.returnValue(of(courseArchiveCS1231));"},{"lineNumber":358,"author":{"gitId":"halfwhole"},"content":"    component.changeArchiveStatus(\u0027CS1231\u0027, true);"},{"lineNumber":359,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":360,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":361,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.mostRecent().args[0]).toEqual(\u0027CS1231\u0027);"},{"lineNumber":362,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.mostRecent().args[1]).toEqual({ archiveStatus: true });"},{"lineNumber":363,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":364,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses.length).toEqual(0);"},{"lineNumber":365,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses.length).toEqual(1);"},{"lineNumber":366,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":367,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":368,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":369,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should unarchive an archived course\u0027, () \u003d\u003e {"},{"lineNumber":370,"author":{"gitId":"halfwhole"},"content":"    const courseArchiveCS1231: CourseArchive \u003d {"},{"lineNumber":371,"author":{"gitId":"halfwhole"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":372,"author":{"gitId":"halfwhole"},"content":"      isArchived: false,"},{"lineNumber":373,"author":{"gitId":"halfwhole"},"content":"    };"},{"lineNumber":374,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d [courseModelCS1231];"},{"lineNumber":375,"author":{"gitId":"halfwhole"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027changeArchiveStatus\u0027).and.returnValue(of(courseArchiveCS1231));"},{"lineNumber":376,"author":{"gitId":"halfwhole"},"content":"    component.changeArchiveStatus(\u0027CS1231\u0027, false);"},{"lineNumber":377,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":378,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":379,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.mostRecent().args[0]).toEqual(\u0027CS1231\u0027);"},{"lineNumber":380,"author":{"gitId":"halfwhole"},"content":"    expect(courseSpy.calls.mostRecent().args[1]).toEqual({ archiveStatus: false });"},{"lineNumber":381,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":382,"author":{"gitId":"halfwhole"},"content":"    expect(component.archivedCourses.length).toEqual(0);"},{"lineNumber":383,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses.length).toEqual(1);"},{"lineNumber":384,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":385,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":386,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":387,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should soft delete a course\u0027, (done: any) \u003d\u003e {"},{"lineNumber":388,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS1231];"},{"lineNumber":389,"author":{"gitId":"halfwhole"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027binCourse\u0027).and.returnValue(of(courseCS1231));"},{"lineNumber":390,"author":{"gitId":"halfwhole"},"content":"    spyOn(simpleModalService, \u0027openConfirmationModal\u0027).and.returnValue({ result: Promise.resolve() });"},{"lineNumber":391,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":392,"author":{"gitId":"halfwhole"},"content":"    component.onDelete(\u0027CS1231\u0027).then(() \u003d\u003e {"},{"lineNumber":393,"author":{"gitId":"halfwhole"},"content":"      expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":394,"author":{"gitId":"halfwhole"},"content":"      expect(courseSpy.calls.mostRecent().args[0]).toEqual(\u0027CS1231\u0027);"},{"lineNumber":395,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":396,"author":{"gitId":"halfwhole"},"content":"      expect(component.softDeletedCourses.length).toEqual(1);"},{"lineNumber":397,"author":{"gitId":"halfwhole"},"content":"      expect(component.activeCourses.length).toEqual(0);"},{"lineNumber":398,"author":{"gitId":"halfwhole"},"content":"      done();"},{"lineNumber":399,"author":{"gitId":"halfwhole"},"content":"    });"},{"lineNumber":400,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":401,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":402,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should permanently delete a course\u0027, (done: any) \u003d\u003e {"},{"lineNumber":403,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d [courseModelCS1231];"},{"lineNumber":404,"author":{"gitId":"halfwhole"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027deleteCourse\u0027).and.returnValue(of(courseCS1231));"},{"lineNumber":405,"author":{"gitId":"halfwhole"},"content":"    spyOn(simpleModalService, \u0027openConfirmationModal\u0027).and.returnValue({"},{"lineNumber":406,"author":{"gitId":"halfwhole"},"content":"      componentInstance: {},"},{"lineNumber":407,"author":{"gitId":"halfwhole"},"content":"      result: Promise.resolve(),"},{"lineNumber":408,"author":{"gitId":"halfwhole"},"content":"    });"},{"lineNumber":409,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":410,"author":{"gitId":"halfwhole"},"content":"    component.onDeletePermanently(\u0027CS1231\u0027).then(() \u003d\u003e {"},{"lineNumber":411,"author":{"gitId":"halfwhole"},"content":"      expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":412,"author":{"gitId":"halfwhole"},"content":"      expect(courseSpy.calls.mostRecent().args[0]).toEqual(\u0027CS1231\u0027);"},{"lineNumber":413,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":414,"author":{"gitId":"halfwhole"},"content":"      expect(component.activeCourses.length).toEqual(0);"},{"lineNumber":415,"author":{"gitId":"halfwhole"},"content":"      expect(component.softDeletedCourses.length).toEqual(0);"},{"lineNumber":416,"author":{"gitId":"halfwhole"},"content":"      done();"},{"lineNumber":417,"author":{"gitId":"halfwhole"},"content":"    });"},{"lineNumber":418,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":419,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":420,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should show add course form and disable button when clicking on add new course\u0027, () \u003d\u003e {"},{"lineNumber":421,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS3282];"},{"lineNumber":422,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":423,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-add-course\u0027);"},{"lineNumber":424,"author":{"gitId":"halfwhole"},"content":"    button.click();"},{"lineNumber":425,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":426,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":427,"author":{"gitId":"halfwhole"},"content":"    const div: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#add-course-section\u0027);"},{"lineNumber":428,"author":{"gitId":"halfwhole"},"content":"    expect(div).toBeTruthy();"},{"lineNumber":429,"author":{"gitId":"halfwhole"},"content":"    expect(button.disabled).toBeTruthy();"},{"lineNumber":430,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":431,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":432,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should disable enroll button when instructor cannot modify student\u0027, () \u003d\u003e {"},{"lineNumber":433,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS3282];"},{"lineNumber":434,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":435,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":436,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":437,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-enroll-disabled-0\u0027);"},{"lineNumber":438,"author":{"gitId":"halfwhole"},"content":"    expect(button.textContent).toEqual(\u0027 Enroll \u0027);"},{"lineNumber":439,"author":{"gitId":"halfwhole"},"content":"    expect(button.className).toContain(\u0027disabled\u0027);"},{"lineNumber":440,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":441,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":442,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should disable delete button when instructor cannot modify active course\u0027, () \u003d\u003e {"},{"lineNumber":443,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelST4234];"},{"lineNumber":444,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":445,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":446,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":447,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-soft-delete-disabled-0\u0027);"},{"lineNumber":448,"author":{"gitId":"halfwhole"},"content":"    expect(button.textContent).toEqual(\u0027 Delete \u0027);"},{"lineNumber":449,"author":{"gitId":"halfwhole"},"content":"    expect(button.className).toContain(\u0027disabled\u0027);"},{"lineNumber":450,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":451,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":452,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should disable delete button when instructor cannot modify archived course\u0027, () \u003d\u003e {"},{"lineNumber":453,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d [courseModelST4234];"},{"lineNumber":454,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":455,"author":{"gitId":"halfwhole"},"content":"    component.isArchivedCourseExpanded \u003d true;"},{"lineNumber":456,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":457,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":458,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-soft-delete-archived-disabled-0\u0027);"},{"lineNumber":459,"author":{"gitId":"halfwhole"},"content":"    expect(button.textContent).toEqual(\u0027 Delete \u0027);"},{"lineNumber":460,"author":{"gitId":"halfwhole"},"content":"    expect(button.className).toContain(\u0027disabled\u0027);"},{"lineNumber":461,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":462,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":463,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should disable restore and permanently delete buttons when instructor cannot modify deleted course\u0027, () \u003d\u003e {"},{"lineNumber":464,"author":{"gitId":"halfwhole"},"content":"    component.softDeletedCourses \u003d [courseModelST4234];"},{"lineNumber":465,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":466,"author":{"gitId":"halfwhole"},"content":"    component.isRecycleBinExpanded \u003d true;"},{"lineNumber":467,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":468,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":469,"author":{"gitId":"halfwhole"},"content":"    const restoreButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-restore-disabled-0\u0027);"},{"lineNumber":470,"author":{"gitId":"halfwhole"},"content":"    expect(restoreButton.textContent).toEqual(\u0027 Restore \u0027);"},{"lineNumber":471,"author":{"gitId":"halfwhole"},"content":"    expect(restoreButton.className).toContain(\u0027disabled\u0027);"},{"lineNumber":472,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":473,"author":{"gitId":"halfwhole"},"content":"    const disableButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-delete-disabled-0\u0027);"},{"lineNumber":474,"author":{"gitId":"halfwhole"},"content":"    expect(disableButton.textContent).toEqual(\u0027 Delete Permanently \u0027);"},{"lineNumber":475,"author":{"gitId":"halfwhole"},"content":"    expect(disableButton.className).toContain(\u0027disabled\u0027);"},{"lineNumber":476,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":477,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":478,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should sort courses by their IDs\u0027, () \u003d\u003e {"},{"lineNumber":479,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS3282, courseModelST4234, courseModelCS1231, courseModelCS3281];"},{"lineNumber":480,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":481,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":482,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":483,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#sort-course-id\u0027);"},{"lineNumber":484,"author":{"gitId":"halfwhole"},"content":"    button.click();"},{"lineNumber":485,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":486,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[1].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":487,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[2].course.courseId).toEqual(\u0027CS3282\u0027);"},{"lineNumber":488,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[3].course.courseId).toEqual(\u0027ST4234\u0027);"},{"lineNumber":489,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":490,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":491,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should sort courses by their names\u0027, () \u003d\u003e {"},{"lineNumber":492,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS3282, courseModelST4234, courseModelCS1231, courseModelCS3281];"},{"lineNumber":493,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":494,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":495,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":496,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#sort-course-name\u0027);"},{"lineNumber":497,"author":{"gitId":"halfwhole"},"content":"    button.click();"},{"lineNumber":498,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseName).toEqual(\u0027Bayesian Statistics\u0027);"},{"lineNumber":499,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[1].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":500,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[2].course.courseName).toEqual(\u0027Thematic Systems Project I\u0027);"},{"lineNumber":501,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[3].course.courseName).toEqual(\u0027Thematic Systems Project II\u0027);"},{"lineNumber":502,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":503,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":504,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should sort courses by their creation dates\u0027, () \u003d\u003e {"},{"lineNumber":505,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d [courseModelCS3282, courseModelST4234, courseModelCS1231, courseModelCS3281];"},{"lineNumber":506,"author":{"gitId":"halfwhole"},"content":"    component.isLoading \u003d false;"},{"lineNumber":507,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":508,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":509,"author":{"gitId":"halfwhole"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#sort-creation-date\u0027);"},{"lineNumber":510,"author":{"gitId":"halfwhole"},"content":"    button.click();"},{"lineNumber":511,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[0].course.courseId).toEqual(\u0027ST4234\u0027);"},{"lineNumber":512,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[1].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":513,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[2].course.courseId).toEqual(\u0027CS3282\u0027);"},{"lineNumber":514,"author":{"gitId":"halfwhole"},"content":"    expect(component.activeCourses[3].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":515,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":516,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":517,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"  it(\u0027should snap with all courses in course stats\u0027, () \u003d\u003e {"},{"lineNumber":522,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d activeCoursesSnap;"},{"lineNumber":523,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d archivedCoursesSnap;"},{"lineNumber":524,"author":{"gitId":"halfwhole"},"content":"    component.softDeletedCourses \u003d deletedCoursesSnap;"},{"lineNumber":525,"author":{"gitId":"halfwhole"},"content":"    component.courseStats \u003d courseStatsSnap;"},{"lineNumber":526,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":527,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":528,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":529,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"  it(\u0027should snap when it is undeletable and unrestorable\u0027, () \u003d\u003e {"},{"lineNumber":532,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d activeCoursesSnap;"},{"lineNumber":533,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d archivedCoursesSnap;"},{"lineNumber":534,"author":{"gitId":"halfwhole"},"content":"    component.softDeletedCourses \u003d deletedCoursesSnap;"},{"lineNumber":535,"author":{"gitId":"halfwhole"},"content":"    component.courseStats \u003d courseStatsSnap;"},{"lineNumber":536,"author":{"gitId":"-"},"content":"    component.canDeleteAll \u003d false;"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    component.canRestoreAll \u003d false;"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":541,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":542,"author":{"gitId":"-"},"content":""},{"lineNumber":543,"author":{"gitId":"-"},"content":"  it(\u0027should snap with no courses in course stats\u0027, () \u003d\u003e {"},{"lineNumber":544,"author":{"gitId":"halfwhole"},"content":"    component.activeCourses \u003d activeCoursesSnap;"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    component.isLoading \u003d false;"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":548,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":549,"author":{"gitId":"-"},"content":""},{"lineNumber":550,"author":{"gitId":"-"},"content":"  it(\u0027should snap when courses are still loading\u0027, () \u003d\u003e {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    component.isLoading \u003d true;"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":555,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":556,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should snap when new course form is expanded\u0027, () \u003d\u003e {"},{"lineNumber":557,"author":{"gitId":"halfwhole"},"content":"    component.isAddNewCourseFormExpanded \u003d true;"},{"lineNumber":558,"author":{"gitId":"halfwhole"},"content":"    // Mock the timezone service to prevent unexpected changes in time zones over time, such as daylight savings time"},{"lineNumber":559,"author":{"gitId":"halfwhole"},"content":"    const timezones: Record\u003cstring, number\u003e \u003d {"},{"lineNumber":560,"author":{"gitId":"halfwhole"},"content":"      Jamaica: -5 * 60,"},{"lineNumber":561,"author":{"gitId":"halfwhole"},"content":"      Portugal: 0,"},{"lineNumber":562,"author":{"gitId":"halfwhole"},"content":"      Singapore: 8 * 60,"},{"lineNumber":563,"author":{"gitId":"halfwhole"},"content":"      Turkey: 3 * 60,"},{"lineNumber":564,"author":{"gitId":"halfwhole"},"content":"    };"},{"lineNumber":565,"author":{"gitId":"halfwhole"},"content":"    spyOn(timezoneService, \u0027getTzOffsets\u0027).and.returnValue(timezones);"},{"lineNumber":566,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":567,"author":{"gitId":"halfwhole"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":568,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":569,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":570,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should snap when archived courses are expanded\u0027, () \u003d\u003e {"},{"lineNumber":571,"author":{"gitId":"halfwhole"},"content":"    component.archivedCourses \u003d archivedCoursesSnap;"},{"lineNumber":572,"author":{"gitId":"halfwhole"},"content":"    component.isArchivedCourseExpanded \u003d true;"},{"lineNumber":573,"author":{"gitId":"halfwhole"},"content":"    fixture.detectChanges();"},{"lineNumber":574,"author":{"gitId":"halfwhole"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":575,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":576,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"halfwhole":412,"-":164}},{"path":"src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  CourseArchive,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  JoinState,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  MessageOutput,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"interface CourseModel {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  course: Course;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  canModifyCourse: boolean;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  canModifyStudent: boolean;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  isLoadingCourseStats: boolean;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Instructor courses list page."},{"lineNumber":34,"author":{"gitId":"-"},"content":" */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-courses-page\u0027,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-courses-page.component.html\u0027,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-courses-page.component.scss\u0027],"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":40,"author":{"gitId":"-"},"content":"})"},{"lineNumber":41,"author":{"gitId":"-"},"content":"export class InstructorCoursesPageComponent implements OnInit {"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  activeCourses: CourseModel[] \u003d [];"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  archivedCourses: CourseModel[] \u003d [];"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  softDeletedCourses: CourseModel[] \u003d [];"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  courseStats: Record\u003cstring, Record\u003cstring, number\u003e\u003e \u003d {};"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  activeTableSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  activeTableSortBy: SortBy \u003d SortBy.COURSE_CREATION_DATE;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  archivedTableSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  archivedTableSortBy: SortBy \u003d SortBy.COURSE_NAME;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  deletedTableSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  deletedTableSortBy: SortBy \u003d SortBy.COURSE_NAME;"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  isLoading: boolean \u003d false;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean \u003d false;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  isRecycleBinExpanded: boolean \u003d false;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  canDeleteAll: boolean \u003d true;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  canRestoreAll: boolean \u003d true;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  isAddNewCourseFormExpanded: boolean \u003d false;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  isArchivedCourseExpanded: boolean \u003d false;"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService) { }"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      if (queryParams.isAddNewCourse) {"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.isAddNewCourseFormExpanded \u003d queryParams.isAddNewCourse;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"      this.loadInstructorCourses();"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   * Loads instructor courses required for this page."},{"lineNumber":85,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  loadInstructorCourses(): void {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    this.hasLoadingFailed \u003d false;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    this.isLoading \u003d true;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    this.activeCourses \u003d [];"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    this.archivedCourses \u003d [];"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    this.softDeletedCourses \u003d [];"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027).subscribe((resp: Courses) \u003d\u003e {"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      resp.courses.forEach((course: Course) \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        let canModifyCourse: boolean \u003d false;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        let canModifyStudent: boolean \u003d false;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (course.privileges) {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          canModifyCourse \u003d course.privileges.canModifyCourse;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"          canModifyStudent \u003d course.privileges.canModifyStudent;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        const isLoadingCourseStats: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        const activeCourse: CourseModel \u003d Object.assign({},"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            { course, canModifyCourse, canModifyStudent, isLoadingCourseStats });"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.activeCourses.push(activeCourse);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      this.activeCoursesDefaultSort();"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      this.isLoading \u003d false;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      this.isLoading \u003d false;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      this.hasLoadingFailed \u003d true;"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027archived\u0027).subscribe((resp: Courses) \u003d\u003e {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      for (const course of resp.courses) {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        let canModifyCourse: boolean \u003d false;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        let canModifyStudent: boolean \u003d false;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (course.privileges) {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"          canModifyCourse \u003d course.privileges.canModifyCourse;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          canModifyStudent \u003d course.privileges.canModifyStudent;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        const isLoadingCourseStats: boolean \u003d false;"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        const archivedCourse: CourseModel \u003d Object.assign({},"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            { course, canModifyCourse, canModifyStudent, isLoadingCourseStats });"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        this.archivedCourses.push(archivedCourse);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.archivedCoursesDefaultSort();"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      this.hasLoadingFailed \u003d true;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"    this.courseService.getAllCoursesAsInstructor(\u0027softDeleted\u0027).subscribe((resp: Courses) \u003d\u003e {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      for (const course of resp.courses) {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        let canModifyCourse: boolean \u003d false;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        let canModifyStudent: boolean \u003d false;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (course.privileges) {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          canModifyCourse \u003d course.privileges.canModifyCourse;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          canModifyStudent \u003d course.privileges.canModifyStudent;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        const isLoadingCourseStats: boolean \u003d false;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        const softDeletedCourse: CourseModel \u003d Object.assign({},"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            { course, canModifyCourse, canModifyStudent, isLoadingCourseStats });"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        this.softDeletedCourses.push(softDeletedCourse);"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        this.deletedCoursesDefaultSort();"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!softDeletedCourse.canModifyCourse) {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          this.canDeleteAll \u003d false;"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          this.canRestoreAll \u003d false;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      this.hasLoadingFailed \u003d true;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":157,"author":{"gitId":"-"},"content":"   * Constructs the url for course stats from the given course id."},{"lineNumber":158,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  getCourseStats(idx: number): void {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    const course: CourseModel \u003d this.activeCourses[idx];"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    const courseId: string \u003d course.course.courseId;"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    if (!courseId) {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    course.isLoadingCourseStats \u003d true;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId })"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e course.isLoadingCourseStats \u003d false))"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":170,"author":{"gitId":"-"},"content":"          this.courseStats[courseId] \u003d {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            sections: (new Set(students.students.map((value: Student) \u003d\u003e value.sectionName))).size,"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            teams: (new Set(students.students.map((value: Student) \u003d\u003e value.teamName))).size,"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            students: students.students.length,"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            unregistered: students.students.filter((value: Student) \u003d\u003e value.joinState \u003d\u003d\u003d JoinState.NOT_JOINED).length,"},{"lineNumber":175,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":177,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   * Changes the status of an archived course."},{"lineNumber":183,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  changeArchiveStatus(courseId: string, toArchive: boolean): void {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    if (!courseId) {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    this.courseService.changeArchiveStatus(courseId, {"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      archiveStatus: toArchive,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (courseArchive.isArchived) {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        this.changeModelFromActiveToArchived(courseId);"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(`The course ${courseId} has been archived."},{"lineNumber":195,"author":{"gitId":"-"},"content":"          It will not appear on the home page anymore.`);"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        this.changeModelFromArchivedToActive(courseId);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027The course has been unarchived.\u0027);"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   * Moves a course model from active courses list to archived list."},{"lineNumber":207,"author":{"gitId":"-"},"content":"   * This is to reduce the need to refresh the entire list of courses multiple times."},{"lineNumber":208,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  changeModelFromActiveToArchived(courseId: string): void {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    if (courseToBeRemoved !\u003d\u003d undefined) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      this.archivedCourses.push(courseToBeRemoved);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      this.archivedCourses.sort(this.sortBy(this.archivedTableSortBy, this.archivedTableSortOrder));"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * Moves a course model from archived courses list to active list."},{"lineNumber":220,"author":{"gitId":"-"},"content":"   * This is to reduce the need to refresh the entire list of courses multiple times."},{"lineNumber":221,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  changeModelFromArchivedToActive(courseId: string): void {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    if (courseToBeRemoved !\u003d\u003d undefined) {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      this.activeCourses.push(courseToBeRemoved);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      this.activeCourses.sort(this.sortBy(this.activeTableSortBy, this.activeTableSortOrder));"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":232,"author":{"gitId":"-"},"content":"   * Finds and returns a course from the target course list."},{"lineNumber":233,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  findCourse(targetList: CourseModel[], courseId: string): CourseModel | undefined {"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    return targetList.find((model: CourseModel) \u003d\u003e {"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      return model.course.courseId \u003d\u003d\u003d courseId;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"   * Removes a course from the target course list and returns the result list."},{"lineNumber":242,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  removeCourse(targetList: CourseModel[], courseId: string): CourseModel[] {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    return targetList.filter((model: CourseModel) \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      return model.course.courseId !\u003d\u003d courseId;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":250,"author":{"gitId":"-"},"content":"   * Moves an active/archived course to Recycle Bin."},{"lineNumber":251,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":252,"author":{"gitId":"halfwhole"},"content":"  onDelete(courseId: string): Promise\u003cvoid\u003e {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    if (!courseId) {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);"},{"lineNumber":255,"author":{"gitId":"halfwhole"},"content":"      return Promise.resolve();"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal(\u0027Warning: The course will be moved to the recycle bin.\u0027,"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            SimpleModalType.WARNING, \u0027Are you sure you want to continue?\u0027);"},{"lineNumber":259,"author":{"gitId":"halfwhole"},"content":"    return modalRef.result.then(() \u003d\u003e {"},{"lineNumber":260,"author":{"gitId":"-"},"content":"      this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        this.moveCourseToRecycleBin(courseId, course.deletionTimestamp);"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast("},{"lineNumber":263,"author":{"gitId":"-"},"content":"          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }).catch(() \u003d\u003e {});"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"   * Moves an active/archived course to Recycle Bin."},{"lineNumber":272,"author":{"gitId":"-"},"content":"   * This is to reduce the need to refresh the entire list of courses multiple times."},{"lineNumber":273,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  moveCourseToRecycleBin(courseId: string, deletionTimeStamp: number): void {"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    const activeCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    if (activeCourseToBeRemoved !\u003d\u003d undefined) {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      activeCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      this.softDeletedCourses.push(activeCourseToBeRemoved);"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      this.softDeletedCourses.sort(this.sortBy(this.deletedTableSortBy, this.deletedTableSortOrder));"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      const archivedCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      if (archivedCourseToBeRemoved !\u003d\u003d undefined) {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        archivedCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        this.softDeletedCourses.push(archivedCourseToBeRemoved);"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        this.softDeletedCourses.sort(this.sortBy(this.deletedTableSortBy, this.deletedTableSortOrder));"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":293,"author":{"gitId":"-"},"content":"   * Permanently deletes a soft-deleted course in Recycle Bin."},{"lineNumber":294,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":295,"author":{"gitId":"halfwhole"},"content":"  onDeletePermanently(courseId: string): Promise\u003cvoid\u003e {"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    if (!courseId) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);"},{"lineNumber":298,"author":{"gitId":"halfwhole"},"content":"      return Promise.resolve();"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `\u003cstrong\u003eAre you sure you want to permanently delete ${courseId}?\u003c/strong\u003e\u003cbr\u003e"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        This operation will delete all students and sessions in these courses."},{"lineNumber":302,"author":{"gitId":"-"},"content":"        All instructors of these courses will not be able to access them hereafter as well.`;"},{"lineNumber":303,"author":{"gitId":"-"},"content":""},{"lineNumber":304,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":305,"author":{"gitId":"-"},"content":"        `Delete course \u003cstrong\u003e${ courseId }\u003c/strong\u003e permanently?`, SimpleModalType.DANGER, modalContent);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":307,"author":{"gitId":"halfwhole"},"content":"    return modalRef.result.then(() \u003d\u003e {"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      this.courseService.deleteCourse(courseId).subscribe(() \u003d\u003e {"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        this.softDeletedCourses \u003d this.removeCourse(this.softDeletedCourses, courseId);"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(`The course ${courseId} has been permanently deleted.`);"},{"lineNumber":311,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }).catch(() \u003d\u003e {});"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":318,"author":{"gitId":"-"},"content":"   * Restores a soft-deleted course from Recycle Bin."},{"lineNumber":319,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":320,"author":{"gitId":"-"},"content":"  onRestore(courseId: string): void {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    if (!courseId) {"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(`Course ${courseId} is not found!`);"},{"lineNumber":323,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"-"},"content":""},{"lineNumber":326,"author":{"gitId":"-"},"content":"    this.courseService.restoreCourse(courseId).subscribe((resp: MessageOutput) \u003d\u003e {"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      this.loadInstructorCourses();"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(resp.message);"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":335,"author":{"gitId":"-"},"content":"   * Permanently deletes all soft-deleted courses in Recycle Bin."},{"lineNumber":336,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  onDeleteAll(): void {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d `\u003cstrong\u003eAre you sure you want to permanently delete all the courses in the Recycle Bin?\u003c/strong\u003e\u003cbr\u003e"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        This operation will delete all students and sessions in these courses."},{"lineNumber":340,"author":{"gitId":"-"},"content":"        All instructors of these courses will not be able to access them hereafter as well.`;"},{"lineNumber":341,"author":{"gitId":"-"},"content":""},{"lineNumber":342,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":343,"author":{"gitId":"-"},"content":"        \u0027Deleting all courses permanently?\u0027, SimpleModalType.DANGER, modalContent);"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      const deleteRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      this.softDeletedCourses.forEach((courseToDelete: CourseModel) \u003d\u003e {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        deleteRequests.push(this.courseService.deleteCourse(courseToDelete.course.courseId));"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"-"},"content":"      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        this.softDeletedCourses \u003d [];"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027All courses have been permanently deleted.\u0027);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":356,"author":{"gitId":"-"},"content":""},{"lineNumber":357,"author":{"gitId":"-"},"content":"    }).catch(() \u003d\u003e {});"},{"lineNumber":358,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":359,"author":{"gitId":"-"},"content":""},{"lineNumber":360,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":361,"author":{"gitId":"-"},"content":"   * Restores all soft-deleted courses from Recycle Bin."},{"lineNumber":362,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":363,"author":{"gitId":"-"},"content":"  onRestoreAll(): void {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    const restoreRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    this.softDeletedCourses.forEach((courseToRestore: CourseModel) \u003d\u003e {"},{"lineNumber":366,"author":{"gitId":"-"},"content":"      restoreRequests.push(this.courseService.restoreCourse(courseToRestore.course.courseId));"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":368,"author":{"gitId":"-"},"content":""},{"lineNumber":369,"author":{"gitId":"-"},"content":"    forkJoin(restoreRequests).subscribe(() \u003d\u003e {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      this.loadInstructorCourses();"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027All courses have been restored.\u0027);"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":375,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":376,"author":{"gitId":"-"},"content":""},{"lineNumber":377,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":378,"author":{"gitId":"-"},"content":"   * Sorts the active courses table"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":380,"author":{"gitId":"-"},"content":"  sortCoursesEvent(by: SortBy): void {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    this.activeTableSortOrder \u003d (this.activeTableSortBy \u003d\u003d\u003d by) ?"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        this.activeTableSortOrder \u003d\u003d\u003d SortOrder.ASC ?"},{"lineNumber":383,"author":{"gitId":"-"},"content":"            SortOrder.DESC :"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            SortOrder.ASC :"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        SortOrder.ASC;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    this.activeTableSortBy \u003d by;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    this.activeCourses.sort(this.sortBy(by, this.activeTableSortOrder));"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":389,"author":{"gitId":"-"},"content":""},{"lineNumber":390,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   * Active courses default sort on page load"},{"lineNumber":392,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  activeCoursesDefaultSort(): void {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    this.activeTableSortBy \u003d SortBy.COURSE_CREATION_DATE;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    this.activeTableSortOrder \u003d SortOrder.DESC;"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    this.activeCourses.sort(this.sortBy(this.activeTableSortBy, this.activeTableSortOrder));"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   * Sorts the archived courses table"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  sortArchivedCoursesEvent(by: SortBy): void {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    this.archivedTableSortOrder \u003d (this.archivedTableSortBy \u003d\u003d\u003d by) ?"},{"lineNumber":404,"author":{"gitId":"-"},"content":"        this.archivedTableSortOrder \u003d\u003d\u003d SortOrder.ASC ?"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            SortOrder.DESC :"},{"lineNumber":406,"author":{"gitId":"-"},"content":"            SortOrder.ASC :"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        SortOrder.ASC;"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    this.archivedTableSortBy \u003d by;"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    this.archivedCourses.sort(this.sortBy(by, this.archivedTableSortOrder));"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":411,"author":{"gitId":"-"},"content":""},{"lineNumber":412,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":413,"author":{"gitId":"-"},"content":"   * Archived courses default sort on page load"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":415,"author":{"gitId":"-"},"content":"  archivedCoursesDefaultSort(): void {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    this.archivedTableSortBy \u003d SortBy.COURSE_CREATION_DATE;"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    this.archivedTableSortOrder \u003d SortOrder.DESC;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    this.archivedCourses.sort(this.sortBy(this.archivedTableSortBy, this.archivedTableSortOrder));"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   * Sorts the soft-deleted courses table"},{"lineNumber":423,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  sortDeletedCoursesEvent(by: SortBy): void {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    this.deletedTableSortOrder \u003d (this.deletedTableSortBy \u003d\u003d\u003d by) ?"},{"lineNumber":426,"author":{"gitId":"-"},"content":"        this.deletedTableSortOrder \u003d\u003d\u003d SortOrder.ASC ?"},{"lineNumber":427,"author":{"gitId":"-"},"content":"            SortOrder.DESC :"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            SortOrder.ASC :"},{"lineNumber":429,"author":{"gitId":"-"},"content":"        SortOrder.ASC;"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    this.deletedTableSortBy \u003d by;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    this.softDeletedCourses.sort(this.sortBy(by, this.deletedTableSortOrder));"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":435,"author":{"gitId":"-"},"content":"   * Deleted courses default sort on page load"},{"lineNumber":436,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  deletedCoursesDefaultSort(): void {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"    this.deletedTableSortBy \u003d SortBy.COURSE_DELETION_DATE;"},{"lineNumber":439,"author":{"gitId":"-"},"content":"    this.deletedTableSortOrder \u003d SortOrder.DESC;"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    this.softDeletedCourses.sort(this.sortBy(this.deletedTableSortBy, this.deletedTableSortOrder));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   * Returns a function to determine the order of sort"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  sortBy(by: SortBy, order: SortOrder):"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      ((a: CourseModel , b: CourseModel) \u003d\u003e number) {"},{"lineNumber":448,"author":{"gitId":"-"},"content":"    return (a: CourseModel, b: CourseModel): number \u003d\u003e {"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":450,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_ID:"},{"lineNumber":453,"author":{"gitId":"-"},"content":"          strA \u003d a.course.courseId ? a.course.courseId : \u0027\u0027;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"          strB \u003d b.course.courseId ? b.course.courseId : \u0027\u0027;"},{"lineNumber":455,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_NAME:"},{"lineNumber":457,"author":{"gitId":"-"},"content":"          strA \u003d a.course.courseName;"},{"lineNumber":458,"author":{"gitId":"-"},"content":"          strB \u003d b.course.courseName;"},{"lineNumber":459,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":460,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_CREATION_DATE:"},{"lineNumber":461,"author":{"gitId":"-"},"content":"          strA \u003d a.course.creationTimestamp.toString();"},{"lineNumber":462,"author":{"gitId":"-"},"content":"          strB \u003d b.course.creationTimestamp.toString();"},{"lineNumber":463,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":464,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":466,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":470,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":471,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":6,"-":465}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003eHome\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card bg-light\" style\u003d\"margin-bottom: 20px;\" *ngIf\u003d\"isNewUser\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    New to TEAMMATES? You may wish to have a look at our \u003ca href\u003d\"/web/instructor/getting-started\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003eGetting Started Guide\u003c/a\u003e."},{"lineNumber":6,"author":{"gitId":"-"},"content":"    A video tour is also available in our \u003ca href\u003d\"/web\" target\u003d\"_blank\" rel\u003d\"noopener noreferrer\"\u003ehome page\u003c/a\u003e."},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row mb-3\" *tmIsLoading\u003d\"!hasCoursesLoaded\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-4\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003ca tmRouterLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-success\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/a\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-id\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-name\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cbutton id\u003d\"sort-course-date\" class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Something went wrong\u0027\" (retryEvent)\u003d\"loadCourses()\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"!hasCoursesLoaded\"\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-tab\" class\u003d\"card\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"},{"lineNumber":32,"author":{"gitId":"Derek-Hardy"},"content":"        \u003cdiv id\u003d\"course-tab-header\" class\u003d\"card-header bg-primary text-white cursor-pointer\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(idx);\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cb id\u003d\"course-details\"\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\" *ngIf\u003d\"courseTabModel.isAjaxSuccess\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/courses/edit\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"              \u003cbutton class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\"/web/instructor/sessions\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            \u003cspan ngbDropdown\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003cbutton id\u003d\"btn-course\" class\u003d\"btn btn-primary btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003cdiv ngbDropdownMenu (click)\u003d\"$event.stopPropagation()\"\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u003ca id\u003d\"btn-archive-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""},{"lineNumber":69,"author":{"gitId":"-"},"content":"                   (click)\u003d\"archiveCourse(courseTabModel.course.courseId)\"\u003e Archive"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":72,"author":{"gitId":"-"},"content":"                   tmRouterLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u003c/a\u003e"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                  \u003ca id\u003d\"btn-delete-course\" class\u003d\"btn btn-light btn-sm dropdown-item\""},{"lineNumber":76,"author":{"gitId":"-"},"content":"                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     (click)\u003d\"deleteCourse(courseTabModel.course.courseId)\"\u003e Delete"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/span\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          \u003ctm-panel-chevron [isExpanded]\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\" @collapseAnim\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          \u003ctm-loading-retry [shouldShowRetry]\u003d\"courseTabModel.hasLoadingFailed\" [message]\u003d\"\u0027Error loading feedback sessions\u0027\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                            (retryEvent)\u003d\"loadFeedbackSessions(idx)\"\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003ctm-sessions-table *tmIsLoading\u003d\"!courseTabModel.hasPopulated\""},{"lineNumber":89,"author":{"gitId":"-"},"content":"                [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""},{"lineNumber":90,"author":{"gitId":"-"},"content":"                [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""},{"lineNumber":91,"author":{"gitId":"-"},"content":"                [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\""},{"lineNumber":92,"author":{"gitId":"-"},"content":"                (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""},{"lineNumber":93,"author":{"gitId":"-"},"content":"                (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\" (editSessionEvent)\u003d\"editSessionEventHandler(idx, $event)\""},{"lineNumber":94,"author":{"gitId":"-"},"content":"                (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""},{"lineNumber":95,"author":{"gitId":"-"},"content":"                (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler(idx, $event)\""},{"lineNumber":96,"author":{"gitId":"-"},"content":"                (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""},{"lineNumber":97,"author":{"gitId":"-"},"content":"                (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler(idx, $event)\""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""},{"lineNumber":99,"author":{"gitId":"-"},"content":"                (sendRemindersToStudentsEvent)\u003d\"sendRemindersToRespondentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          \u003c/tm-loading-retry\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"Derek-Hardy":1,"-":104}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { BrowserAnimationsModule } from \u0027@angular/platform-browser/animations\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"Derek-Hardy"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"Derek-Hardy"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"Derek-Hardy"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"Derek-Hardy"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":10,"author":{"gitId":"Derek-Hardy"},"content":"  Course, CourseArchive, Courses,"},{"lineNumber":11,"author":{"gitId":"Derek-Hardy"},"content":"  FeedbackSession,"},{"lineNumber":12,"author":{"gitId":"Derek-Hardy"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":13,"author":{"gitId":"Derek-Hardy"},"content":"  FeedbackSessions,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":20,"author":{"gitId":"Derek-Hardy"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":22,"author":{"gitId":"Derek-Hardy"},"content":"import { CourseTabModel, InstructorHomePageComponent } from \u0027./instructor-home-page.component\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { InstructorHomePageModule } from \u0027./instructor-home-page.module\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Derek-Hardy"},"content":"const testInstructorPrivilege: InstructorPrivilege \u003d {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  canModifyCourse: true,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  canModifySession: true,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  canModifyStudent: true,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  canSubmitSessionInSections: true,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  canModifyInstructor: false,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  canViewStudentInSections: false,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  canModifySessionCommentsInSections: false,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  canViewSessionInSections: false,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"};"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"Derek-Hardy"},"content":"const testCourse1: Course \u003d {"},{"lineNumber":37,"author":{"gitId":"Derek-Hardy"},"content":"  courseId: \u0027CS1231\u0027,"},{"lineNumber":38,"author":{"gitId":"Derek-Hardy"},"content":"  courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":39,"author":{"gitId":"Derek-Hardy"},"content":"  creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  deletionTimestamp: 0,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"};"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"Derek-Hardy"},"content":"const testCourse2: Course \u003d {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  courseId: \u0027CS3281\u0027,"},{"lineNumber":46,"author":{"gitId":"Derek-Hardy"},"content":"  courseName: \u0027Thematic Systems I\u0027,"},{"lineNumber":47,"author":{"gitId":"Derek-Hardy"},"content":"  creationTimestamp: 1611580917000, // Monday, 25 January 2021 21:21:57 GMT+08:00"},{"lineNumber":48,"author":{"gitId":"Derek-Hardy"},"content":"  deletionTimestamp: 0,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":50,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":51,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":52,"author":{"gitId":"Derek-Hardy"},"content":"const testFeedbackSession1: FeedbackSession \u003d {"},{"lineNumber":53,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":54,"author":{"gitId":"Derek-Hardy"},"content":"  courseId: \u0027CS1231\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":56,"author":{"gitId":"Derek-Hardy"},"content":"  instructions: \u0027\u0027,"},{"lineNumber":57,"author":{"gitId":"Derek-Hardy"},"content":"  submissionStartTimestamp: 0,"},{"lineNumber":58,"author":{"gitId":"Derek-Hardy"},"content":"  submissionEndTimestamp: 1610371317000, // Monday, 11 January 2021 21:21:57 GMT+08:00"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  gracePeriod: 0,"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":62,"author":{"gitId":"Derek-Hardy"},"content":"  submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":63,"author":{"gitId":"Derek-Hardy"},"content":"  publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  isClosingEmailEnabled: true,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  isPublishedEmailEnabled: true,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  createdAtTimestamp: 0,"},{"lineNumber":67,"author":{"gitId":"-"},"content":"};"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"Derek-Hardy"},"content":"const testFeedbackSession2: FeedbackSession \u003d {"},{"lineNumber":70,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessionName: \u0027Second Session\u0027,"},{"lineNumber":71,"author":{"gitId":"Derek-Hardy"},"content":"  courseId: \u0027CS1231\u0027,"},{"lineNumber":72,"author":{"gitId":"Derek-Hardy"},"content":"  timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":73,"author":{"gitId":"Derek-Hardy"},"content":"  instructions: \u0027\u0027,"},{"lineNumber":74,"author":{"gitId":"Derek-Hardy"},"content":"  submissionStartTimestamp: 0,"},{"lineNumber":75,"author":{"gitId":"Derek-Hardy"},"content":"  submissionEndTimestamp: 1611148917000, // Wednesday, 20 January 2021 21:21:57 GMT+08:00"},{"lineNumber":76,"author":{"gitId":"Derek-Hardy"},"content":"  gracePeriod: 0,"},{"lineNumber":77,"author":{"gitId":"Derek-Hardy"},"content":"  sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":78,"author":{"gitId":"Derek-Hardy"},"content":"  responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":79,"author":{"gitId":"Derek-Hardy"},"content":"  submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":80,"author":{"gitId":"Derek-Hardy"},"content":"  publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":81,"author":{"gitId":"Derek-Hardy"},"content":"  isClosingEmailEnabled: true,"},{"lineNumber":82,"author":{"gitId":"Derek-Hardy"},"content":"  isPublishedEmailEnabled: true,"},{"lineNumber":83,"author":{"gitId":"Derek-Hardy"},"content":"  createdAtTimestamp: 0,"},{"lineNumber":84,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":85,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":86,"author":{"gitId":"Derek-Hardy"},"content":"const activeCourseTabModels: CourseTabModel[] \u003d ["},{"lineNumber":87,"author":{"gitId":"Derek-Hardy"},"content":"  {"},{"lineNumber":88,"author":{"gitId":"Derek-Hardy"},"content":"    course: testCourse1,"},{"lineNumber":89,"author":{"gitId":"Derek-Hardy"},"content":"    instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":90,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModels: [],"},{"lineNumber":91,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":92,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":93,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":94,"author":{"gitId":"Derek-Hardy"},"content":"    hasPopulated: false,"},{"lineNumber":95,"author":{"gitId":"Derek-Hardy"},"content":"    isAjaxSuccess: true,"},{"lineNumber":96,"author":{"gitId":"Derek-Hardy"},"content":"    isTabExpanded: true,"},{"lineNumber":97,"author":{"gitId":"Derek-Hardy"},"content":"    hasLoadingFailed: false,"},{"lineNumber":98,"author":{"gitId":"Derek-Hardy"},"content":"  },"},{"lineNumber":99,"author":{"gitId":"Derek-Hardy"},"content":"  {"},{"lineNumber":100,"author":{"gitId":"Derek-Hardy"},"content":"    course: testCourse2,"},{"lineNumber":101,"author":{"gitId":"Derek-Hardy"},"content":"    instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":102,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModels: [],"},{"lineNumber":103,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":104,"author":{"gitId":"Derek-Hardy"},"content":"    sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":105,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":106,"author":{"gitId":"Derek-Hardy"},"content":"    hasPopulated: false,"},{"lineNumber":107,"author":{"gitId":"Derek-Hardy"},"content":"    isAjaxSuccess: true,"},{"lineNumber":108,"author":{"gitId":"Derek-Hardy"},"content":"    isTabExpanded: true,"},{"lineNumber":109,"author":{"gitId":"Derek-Hardy"},"content":"    hasLoadingFailed: false,"},{"lineNumber":110,"author":{"gitId":"Derek-Hardy"},"content":"  },"},{"lineNumber":111,"author":{"gitId":"Derek-Hardy"},"content":"];"},{"lineNumber":112,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"describe(\u0027InstructorHomePageComponent\u0027, () \u003d\u003e {"},{"lineNumber":114,"author":{"gitId":"Derek-Hardy"},"content":"  let courseService: CourseService;"},{"lineNumber":115,"author":{"gitId":"Derek-Hardy"},"content":"  let simpleModalService: SimpleModalService;"},{"lineNumber":116,"author":{"gitId":"Derek-Hardy"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  let component: InstructorHomePageComponent;"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cInstructorHomePageComponent\u003e;"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":123,"author":{"gitId":"-"},"content":"        InstructorHomePageModule,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        BrowserAnimationsModule,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(InstructorHomePageComponent);"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":136,"author":{"gitId":"Derek-Hardy"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":137,"author":{"gitId":"Derek-Hardy"},"content":"    simpleModalService \u003d TestBed.inject(SimpleModalService);"},{"lineNumber":138,"author":{"gitId":"Derek-Hardy"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should get course candidates\u0027, () \u003d\u003e {"},{"lineNumber":147,"author":{"gitId":"Derek-Hardy"},"content":"    component.courseTabModels \u003d activeCourseTabModels;"},{"lineNumber":148,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":149,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":150,"author":{"gitId":"Derek-Hardy"},"content":"    const courses: Course[] \u003d component.courseCandidates;"},{"lineNumber":151,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":152,"author":{"gitId":"Derek-Hardy"},"content":"    expect(courses.length).toEqual(2);"},{"lineNumber":153,"author":{"gitId":"Derek-Hardy"},"content":"    expect(courses[0].courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":154,"author":{"gitId":"Derek-Hardy"},"content":"    expect(courses[0].courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":155,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":156,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":157,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should expand the course tab model upon clicking\u0027, () \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"Derek-Hardy"},"content":"    component.courseTabModels \u003d activeCourseTabModels;"},{"lineNumber":159,"author":{"gitId":"Derek-Hardy"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":160,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":161,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":162,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#course-tab-header\u0027);"},{"lineNumber":163,"author":{"gitId":"Derek-Hardy"},"content":"    button.click();"},{"lineNumber":164,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].isTabExpanded).toBeFalsy();"},{"lineNumber":165,"author":{"gitId":"Derek-Hardy"},"content":"    button.click();"},{"lineNumber":166,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].isTabExpanded).toBeTruthy();"},{"lineNumber":167,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":168,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":169,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should archive the entire course from the instructor\u0027, () \u003d\u003e {"},{"lineNumber":170,"author":{"gitId":"Derek-Hardy"},"content":"    const courseArchive: CourseArchive \u003d {"},{"lineNumber":171,"author":{"gitId":"Derek-Hardy"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":172,"author":{"gitId":"Derek-Hardy"},"content":"      isArchived: true,"},{"lineNumber":173,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":174,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":175,"author":{"gitId":"Derek-Hardy"},"content":"    component.courseTabModels \u003d activeCourseTabModels;"},{"lineNumber":176,"author":{"gitId":"Derek-Hardy"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":177,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":178,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":179,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels.length).toEqual(2);"},{"lineNumber":180,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":181,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":182,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":183,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(simpleModalService, \u0027openConfirmationModal\u0027).and.callFake(() \u003d\u003e {"},{"lineNumber":184,"author":{"gitId":"Derek-Hardy"},"content":"      return {"},{"lineNumber":185,"author":{"gitId":"Derek-Hardy"},"content":"        componentInstance: {"},{"lineNumber":186,"author":{"gitId":"Derek-Hardy"},"content":"          header: \u0027mock header\u0027, content: \u0027mock content\u0027, type: SimpleModalType.INFO,"},{"lineNumber":187,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":188,"author":{"gitId":"Derek-Hardy"},"content":"        result: Promise.resolve(),"},{"lineNumber":189,"author":{"gitId":"Derek-Hardy"},"content":"      };"},{"lineNumber":190,"author":{"gitId":"Derek-Hardy"},"content":"    });"},{"lineNumber":191,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027changeArchiveStatus\u0027).and.returnValue(of(courseArchive));"},{"lineNumber":192,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":193,"author":{"gitId":"Derek-Hardy"},"content":"    const courseButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-course\u0027);"},{"lineNumber":194,"author":{"gitId":"Derek-Hardy"},"content":"    courseButton.click();"},{"lineNumber":195,"author":{"gitId":"Derek-Hardy"},"content":"    const archiveButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-archive-course\u0027);"},{"lineNumber":196,"author":{"gitId":"Derek-Hardy"},"content":"    archiveButton.click();"},{"lineNumber":197,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":198,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels.length).toEqual(1);"},{"lineNumber":199,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":200,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseName).toEqual(\u0027Thematic Systems I\u0027);"},{"lineNumber":201,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":202,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":203,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should delete the entire course from the instructor\u0027, () \u003d\u003e {"},{"lineNumber":204,"author":{"gitId":"Derek-Hardy"},"content":"    const courseToDelete: Course \u003d testCourse1;"},{"lineNumber":205,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":206,"author":{"gitId":"Derek-Hardy"},"content":"    component.courseTabModels \u003d activeCourseTabModels;"},{"lineNumber":207,"author":{"gitId":"Derek-Hardy"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":208,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":209,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":210,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels.length).toEqual(2);"},{"lineNumber":211,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":212,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":213,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":214,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(simpleModalService, \u0027openConfirmationModal\u0027).and.callFake(() \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"Derek-Hardy"},"content":"      return {"},{"lineNumber":216,"author":{"gitId":"Derek-Hardy"},"content":"        componentInstance: {"},{"lineNumber":217,"author":{"gitId":"Derek-Hardy"},"content":"          header: \u0027mock header\u0027, content: \u0027mock content\u0027, type: SimpleModalType.WARNING,"},{"lineNumber":218,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":219,"author":{"gitId":"Derek-Hardy"},"content":"        result: Promise.resolve(),"},{"lineNumber":220,"author":{"gitId":"Derek-Hardy"},"content":"      };"},{"lineNumber":221,"author":{"gitId":"Derek-Hardy"},"content":"    });"},{"lineNumber":222,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027binCourse\u0027).and.returnValue(of(courseToDelete));"},{"lineNumber":223,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":224,"author":{"gitId":"Derek-Hardy"},"content":"    const courseButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-course\u0027);"},{"lineNumber":225,"author":{"gitId":"Derek-Hardy"},"content":"    courseButton.click();"},{"lineNumber":226,"author":{"gitId":"Derek-Hardy"},"content":"    const archiveButton: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-delete-course\u0027);"},{"lineNumber":227,"author":{"gitId":"Derek-Hardy"},"content":"    archiveButton.click();"},{"lineNumber":228,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":229,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels.length).toEqual(1);"},{"lineNumber":230,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":231,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseName).toEqual(\u0027Thematic Systems I\u0027);"},{"lineNumber":232,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":233,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":234,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should load courses of the current instructor\u0027, () \u003d\u003e {"},{"lineNumber":235,"author":{"gitId":"Derek-Hardy"},"content":"    const activeCourses: Courses \u003d {"},{"lineNumber":236,"author":{"gitId":"Derek-Hardy"},"content":"      courses: [testCourse1, testCourse2],"},{"lineNumber":237,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":238,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":239,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027getInstructorCoursesThatAreActive\u0027).and.returnValue(of(activeCourses));"},{"lineNumber":240,"author":{"gitId":"Derek-Hardy"},"content":"    component.loadCourses();"},{"lineNumber":241,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":242,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.hasCoursesLoaded).toBeTruthy();"},{"lineNumber":243,"author":{"gitId":"Derek-Hardy"},"content":"    // panels are sorted in descending order by default"},{"lineNumber":244,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":245,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].course.courseName).toEqual(\u0027Thematic Systems I\u0027);"},{"lineNumber":246,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[1].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":247,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[1].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":248,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels.length).toEqual(2);"},{"lineNumber":249,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.isNewUser).toBeFalsy();"},{"lineNumber":250,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":251,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":252,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should load feedbackSessions in the course\u0027, () \u003d\u003e {"},{"lineNumber":253,"author":{"gitId":"Derek-Hardy"},"content":"    const courseSessions: FeedbackSessions \u003d {"},{"lineNumber":254,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: [testFeedbackSession1, testFeedbackSession2],"},{"lineNumber":255,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":256,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":257,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSessionsForInstructor\u0027).and.returnValue(of(courseSessions));"},{"lineNumber":258,"author":{"gitId":"Derek-Hardy"},"content":"    component.courseTabModels \u003d activeCourseTabModels;"},{"lineNumber":259,"author":{"gitId":"Derek-Hardy"},"content":"    component.loadFeedbackSessions(0);"},{"lineNumber":260,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":261,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":262,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].hasLoadingFailed).toBeFalsy();"},{"lineNumber":263,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].hasPopulated).toBeTruthy();"},{"lineNumber":264,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].isAjaxSuccess).toBeTruthy();"},{"lineNumber":265,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].sessionsTableRowModels.length).toEqual(2);"},{"lineNumber":266,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":267,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].sessionsTableRowModels[0]"},{"lineNumber":268,"author":{"gitId":"Derek-Hardy"},"content":"            .feedbackSession.feedbackSessionName).toEqual(\u0027Second Session\u0027);"},{"lineNumber":269,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courseTabModels[0].sessionsTableRowModels[1]"},{"lineNumber":270,"author":{"gitId":"Derek-Hardy"},"content":"            .feedbackSession.feedbackSessionName).toEqual(\u0027First Session\u0027);"},{"lineNumber":271,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":272,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course without feedback session\u0027, () \u003d\u003e {"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":279,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":280,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse1,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [],"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      hasPopulated: true,"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course with unpopulated feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":296,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":297,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse2,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [],"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      hasPopulated: false,"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":303,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course with error loading feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":313,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":314,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse2,"},{"lineNumber":315,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [],"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      hasPopulated: false,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      isAjaxSuccess: false,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course with unexpanded course tab\u0027, () \u003d\u003e {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":330,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":331,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse2,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [],"},{"lineNumber":333,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      hasPopulated: false,"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      isTabExpanded: false,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course with one feedback session with instructor privilege\u0027, () \u003d\u003e {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    const sessionsTableRowModel: any \u003d {"},{"lineNumber":347,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSession: testFeedbackSession1,"},{"lineNumber":348,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      responseRate: \u00270 / 6\u0027,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      isLoadingResponseRate: false,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":353,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":354,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse1,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [sessionsTableRowModel],"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"      hasPopulated: true,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":366,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":367,"author":{"gitId":"-"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"  it(\u0027should snap with one course with two feedback sessions with tutor privilege\u0027, () \u003d\u003e {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    const tutorPrivilege: any \u003d {"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      canModifyCourse: false,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"      canModifySession: false,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      canModifyStudent: false,"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      canSubmitSessionInSections: false,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    const sessionsTableRowModel1: any \u003d {"},{"lineNumber":376,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSession: testFeedbackSession1,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"      instructorPrivilege: tutorPrivilege,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      responseRate: \u00270 / 6\u0027,"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      isLoadingResponseRate: false,"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    const sessionsTableRowModel2: any \u003d {"},{"lineNumber":382,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSession: testFeedbackSession2,"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      instructorPrivilege: tutorPrivilege,"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      responseRate: \u00275 / 6\u0027,"},{"lineNumber":385,"author":{"gitId":"-"},"content":"      isLoadingResponseRate: false,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":388,"author":{"gitId":"-"},"content":"      instructorPrivilege: tutorPrivilege,"},{"lineNumber":389,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse2,"},{"lineNumber":390,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [sessionsTableRowModel1, sessionsTableRowModel2],"},{"lineNumber":391,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.COURSE_CREATION_DATE,"},{"lineNumber":392,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":393,"author":{"gitId":"-"},"content":"      hasPopulated: true,"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":395,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d true;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":402,"author":{"gitId":"-"},"content":""},{"lineNumber":403,"author":{"gitId":"-"},"content":"  it(\u0027should snap when courses are still loading\u0027, () \u003d\u003e {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    const courseTabModels: any \u003d {"},{"lineNumber":405,"author":{"gitId":"Derek-Hardy"},"content":"      instructorPrivilege: testInstructorPrivilege,"},{"lineNumber":406,"author":{"gitId":"Derek-Hardy"},"content":"      course: testCourse2,"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      sessionsTableRowModels: [],"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"      sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      hasPopulated: true,"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      isAjaxSuccess: true,"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      isTabExpanded: true,"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    component.hasCoursesLoaded \u003d false;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    component.courseTabModels \u003d [courseTabModels];"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":419,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"Derek-Hardy":223,"-":196}},{"path":"src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { forkJoin, Observable } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":11,"author":{"gitId":"teikjun"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  CourseArchive,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  InstructorPrivilege,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  CopySessionResult,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SessionsTableColumn,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"} from \u0027../../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"Derek-Hardy"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"Derek-Hardy"},"content":" * Data model for the course tab."},{"lineNumber":39,"author":{"gitId":"Derek-Hardy"},"content":" */"},{"lineNumber":40,"author":{"gitId":"Derek-Hardy"},"content":"export interface CourseTabModel {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  course: Course;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  instructorPrivilege: InstructorPrivilege;"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  sessionsTableRowModels: SessionsTableRowModel[];"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortBy: SortBy;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortOrder: SortOrder;"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"  hasPopulated: boolean;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  isAjaxSuccess: boolean;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  hasLoadingFailed: boolean;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":54,"author":{"gitId":"-"},"content":" * Instructor home page."},{"lineNumber":55,"author":{"gitId":"-"},"content":" */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-home-page\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-home-page.component.html\u0027,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-home-page.component.scss\u0027],"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":61,"author":{"gitId":"-"},"content":"})"},{"lineNumber":62,"author":{"gitId":"-"},"content":"export class InstructorHomePageComponent extends InstructorSessionModalPageComponent implements OnInit {"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"  private static readonly coursesToLoad: number \u003d 3;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"  instructorCoursesSortBy: SortBy \u003d SortBy.COURSE_CREATION_DATE;"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  // data"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  courseTabModels: CourseTabModel[] \u003d [];"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  hasCoursesLoaded: boolean \u003d false;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  hasCoursesLoadingFailed: boolean \u003d false;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  isNewUser: boolean \u003d false;"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"              studentService: StudentService,"},{"lineNumber":86,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":88,"author":{"gitId":"teikjun"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":89,"author":{"gitId":"teikjun"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"              private courseService: CourseService) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService, feedbackSessionsService,"},{"lineNumber":92,"author":{"gitId":"teikjun"},"content":"        feedbackQuestionsService, tableComparatorService, ngbModal, simpleModalService,"},{"lineNumber":93,"author":{"gitId":"teikjun"},"content":"        progressBarService, studentService);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    this.loadCourses();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"   * Gets a list of courses belong to current user."},{"lineNumber":102,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  get courseCandidates(): Course[] {"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    return this.courseTabModels.map((m: CourseTabModel) \u003d\u003e m.course);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   * Handles click events on the course tab model."},{"lineNumber":109,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  handleClick(event: Event, courseTabModel: CourseTabModel): boolean {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    if (event.target \u0026\u0026"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        !(event.target as HTMLElement).className.includes(\u0027dropdown-toggle\u0027)) {"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      return !courseTabModel.isTabExpanded;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    return courseTabModel.isTabExpanded;"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   * Archives the entire course from the instructor"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  archiveCourse(courseId: string): void {"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027This action can be reverted by going to the \"Courses\" tab and unarchiving the desired course(s).\u0027;"},{"lineNumber":123,"author":{"gitId":"-"},"content":""},{"lineNumber":124,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        this.simpleModalService.openConfirmationModal("},{"lineNumber":126,"author":{"gitId":"-"},"content":"            `Archive course \u003cstrong\u003e${courseId}\u003c/strong\u003e?`, SimpleModalType.INFO, modalContent);"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      this.courseService.changeArchiveStatus(courseId, {"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        archiveStatus: true,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"},{"lineNumber":132,"author":{"gitId":"-"},"content":"          return model.course.courseId !\u003d\u003d courseId;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(`The course ${courseArchive.courseId} has been archived."},{"lineNumber":135,"author":{"gitId":"-"},"content":"            You can retrieve it from the Courses page.`);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   * Deletes the entire course from the instructor"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  deleteCourse(courseId: string): void {"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    const modalContent: string \u003d \u0027This action can be reverted by going to the \"Courses\" tab and restoring the desired course(s).\u0027;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":149,"author":{"gitId":"-"},"content":"        `Move course \u003cstrong\u003e${courseId}\u003c/strong\u003e to Recycle Bin`, SimpleModalType.WARNING, modalContent);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":151,"author":{"gitId":"-"},"content":"      this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          return model.course.courseId !\u003d\u003d courseId;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast("},{"lineNumber":156,"author":{"gitId":"-"},"content":"            `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   * Loads courses of current instructor."},{"lineNumber":164,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  loadCourses(): void {"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    this.hasCoursesLoaded \u003d false;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    this.hasCoursesLoadingFailed \u003d false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.courseTabModels \u003d [];"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      .pipe(finalize(() \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        this.hasCoursesLoaded \u003d true;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      })).subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        courses.courses.forEach((course: Course) \u003d\u003e {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          const model: CourseTabModel \u003d {"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            course,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            instructorPrivilege: course.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            sessionsTableRowModels: [],"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            isAjaxSuccess: true,"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            hasPopulated: false,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            hasLoadingFailed: false,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            sessionsTableRowModelsSortBy: SortBy.NONE,"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            sessionsTableRowModelsSortOrder: SortOrder.ASC,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":185,"author":{"gitId":"-"},"content":""},{"lineNumber":186,"author":{"gitId":"-"},"content":"          this.courseTabModels.push(model);"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        this.isNewUser \u003d !courses.courses.some((course: Course) \u003d\u003e !/-demo\\d*$/.test(course.courseId));"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        this.sortCoursesBy(this.instructorCoursesSortBy);"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        this.hasCoursesLoadingFailed \u003d true;"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":193,"author":{"gitId":"-"},"content":""},{"lineNumber":194,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":198,"author":{"gitId":"-"},"content":"   * Loads the feedback session in the course and sorts them according to end date."},{"lineNumber":199,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  loadFeedbackSessions(index: number): void {"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    const model: CourseTabModel \u003d this.courseTabModels[index];"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    model.hasLoadingFailed \u003d false;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    if (!model.hasPopulated) {"},{"lineNumber":204,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionsForInstructor(model.course.courseId)"},{"lineNumber":205,"author":{"gitId":"-"},"content":"          .subscribe((response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"              const m: SessionsTableRowModel \u003d {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                feedbackSession,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                responseRate: \u0027\u0027,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                isLoadingResponseRate: false,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                instructorPrivilege: feedbackSession.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":212,"author":{"gitId":"-"},"content":"              };"},{"lineNumber":213,"author":{"gitId":"-"},"content":"              model.sessionsTableRowModels.push(m);"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            model.hasPopulated \u003d true;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!model.isAjaxSuccess) {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"              model.isAjaxSuccess \u003d true;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":219,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            model.hasLoadingFailed \u003d true;"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":222,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e this.sortSessionsTableRowModelsEvent(index, SortBy.SESSION_END_DATE));"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":225,"author":{"gitId":"-"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   * Checks the option selected to sort courses."},{"lineNumber":228,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  isSelectedForSorting(by: SortBy): boolean {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return this.instructorCoursesSortBy \u003d\u003d\u003d by;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Sorts the courses according to selected option."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  sortCoursesBy(by: SortBy): void {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    this.instructorCoursesSortBy \u003d by;"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"-"},"content":"    if (this.courseTabModels.length \u003e 1) {"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      const modelCopy: CourseTabModel[] \u003d JSON.parse(JSON.stringify(this.courseTabModels));"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      modelCopy.sort(this.sortPanelsBy(by));"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      this.courseTabModels \u003d modelCopy;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.loadLatestCourses();"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * Loads and expand the latest number of courses."},{"lineNumber":249,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  loadLatestCourses(): void {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c this.courseTabModels.length; i +\u003d 1) {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      if (i \u003e\u003d InstructorHomePageComponent.coursesToLoad) {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":254,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      this.courseTabModels[i].isTabExpanded \u003d true;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      this.loadFeedbackSessions(i);"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":261,"author":{"gitId":"-"},"content":"   * Sorts the panels of courses in order."},{"lineNumber":262,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  sortPanelsBy(by: SortBy):"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      ((a: { course: Course }, b: { course: Course }) \u003d\u003e number) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    return ((a: { course: Course }, b: { course: Course }): number \u003d\u003e {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":267,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"      let order: SortOrder;"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_NAME:"},{"lineNumber":271,"author":{"gitId":"-"},"content":"          strA \u003d a.course.courseName;"},{"lineNumber":272,"author":{"gitId":"-"},"content":"          strB \u003d b.course.courseName;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":274,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_ID:"},{"lineNumber":276,"author":{"gitId":"-"},"content":"          strA \u003d a.course.courseId;"},{"lineNumber":277,"author":{"gitId":"-"},"content":"          strB \u003d b.course.courseId;"},{"lineNumber":278,"author":{"gitId":"-"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_CREATION_DATE:"},{"lineNumber":281,"author":{"gitId":"-"},"content":"          strA \u003d String(a.course.creationTimestamp);"},{"lineNumber":282,"author":{"gitId":"-"},"content":"          strB \u003d String(b.course.creationTimestamp);"},{"lineNumber":283,"author":{"gitId":"-"},"content":"          order \u003d SortOrder.DESC;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":287,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":288,"author":{"gitId":"-"},"content":"          order \u003d SortOrder.ASC;"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":295,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":296,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModelsEvent(tabIndex: number, by: SortBy): void {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    const tab: CourseTabModel \u003d this.courseTabModels[tabIndex];"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    tab.sessionsTableRowModelsSortBy \u003d by;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    // reverse the sort order"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    tab.sessionsTableRowModelsSortOrder \u003d"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        tab.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    tab.sessionsTableRowModels.sort(this.sortModelsBy(by, tab.sessionsTableRowModelsSortOrder));"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":308,"author":{"gitId":"-"},"content":"   * Loads response rate of a feedback session."},{"lineNumber":309,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  loadResponseRateEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    this.loadResponseRate(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":315,"author":{"gitId":"-"},"content":"   * Edits the feedback session."},{"lineNumber":316,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  editSessionEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    this.editSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":320,"author":{"gitId":"-"},"content":""},{"lineNumber":321,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":322,"author":{"gitId":"-"},"content":"   * Moves the feedback session to the recycle bin."},{"lineNumber":323,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBinEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex];"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin("},{"lineNumber":328,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        .subscribe(() \u003d\u003e {"},{"lineNumber":332,"author":{"gitId":"-"},"content":"          this.courseTabModels[tabIndex].sessionsTableRowModels.splice("},{"lineNumber":333,"author":{"gitId":"-"},"content":"              this.courseTabModels[tabIndex].sessionsTableRowModels.indexOf(model), 1);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast("},{"lineNumber":335,"author":{"gitId":"-"},"content":"              \"The feedback session has been deleted. You can restore it from the \u0027Sessions\u0027 tab.\");"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":338,"author":{"gitId":"-"},"content":""},{"lineNumber":339,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":340,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":341,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  copySessionEventHandler(tabIndex: number, result: CopySessionResult): void {"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    this.failedToCopySessions \u003d {};"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromRowModel("},{"lineNumber":345,"author":{"gitId":"-"},"content":"        this.courseTabModels[tabIndex].sessionsTableRowModels[result.sessionToCopyRowIndex], result);"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      this.copySingleSession(requestList[0]);"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    if (requestList.length \u003e 1) {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      forkJoin(requestList).subscribe((newSessions: FeedbackSession[]) \u003d\u003e {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        if (newSessions.length \u003e 0) {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"          newSessions.forEach((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"            const model: SessionsTableRowModel \u003d {"},{"lineNumber":354,"author":{"gitId":"-"},"content":"              feedbackSession: session,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"              responseRate: \u0027\u0027,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              isLoadingResponseRate: false,"},{"lineNumber":357,"author":{"gitId":"-"},"content":"              instructorPrivilege: session.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":358,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            const courseModel: CourseTabModel | undefined \u003d this.courseTabModels.find((tabModel: CourseTabModel) \u003d\u003e"},{"lineNumber":360,"author":{"gitId":"-"},"content":"                tabModel.course.courseId \u003d\u003d\u003d session.courseId);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"            if (courseModel) {"},{"lineNumber":362,"author":{"gitId":"-"},"content":"              courseModel.sessionsTableRowModels.push(model);"},{"lineNumber":363,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":364,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        this.showCopyStatusMessage();"},{"lineNumber":367,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":372,"author":{"gitId":"-"},"content":"   * Submits the feedback session as instructor."},{"lineNumber":373,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  submitSessionAsInstructorEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    this.submitSessionAsInstructor(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":377,"author":{"gitId":"-"},"content":""},{"lineNumber":378,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":379,"author":{"gitId":"-"},"content":"   * Views the result of a feedback session."},{"lineNumber":380,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":381,"author":{"gitId":"-"},"content":"  viewSessionResultEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    this.viewSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":384,"author":{"gitId":"-"},"content":""},{"lineNumber":385,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":386,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":387,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":388,"author":{"gitId":"-"},"content":"  publishSessionEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    this.publishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":394,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":395,"author":{"gitId":"-"},"content":"  unpublishSessionEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    this.unpublishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":400,"author":{"gitId":"-"},"content":"   * Downloads the result of a feedback session in csv."},{"lineNumber":401,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":402,"author":{"gitId":"-"},"content":"  downloadSessionResultEventHandler(tabIndex: number, rowIndex: number): void {"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    this.downloadSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":405,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Derek-Hardy":4,"teikjun":5,"-":396}},{"path":"src/web/app/pages-instructor/instructor-pages.module.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { CommonModule } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgModule } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterModule, Routes } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageNotFoundComponent } from \u0027../page-not-found/page-not-found.component\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { PageNotFoundModule } from \u0027../page-not-found/page-not-found.module\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"const routes: Routes \u003d ["},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    path: \u0027home\u0027,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./instructor-home-page/instructor-home-page.module\u0027)"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.InstructorHomePageModule),"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    path: \u0027courses\u0027,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    children: ["},{"lineNumber":17,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        path: \u0027\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        data: {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          pageTitle: \u0027Courses\u0027,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-courses-page/instructor-courses-page.module\u0027)"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorCoursesPageModule),"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        path: \u0027edit\u0027,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-course-edit-page/instructor-course-edit-page.module\u0027)"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorCourseEditPageModule),"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        data: {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          pageTitle: \u0027Edit Course Details\u0027,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        path: \u0027details\u0027,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-course-details-page/instructor-course-details-page.module\u0027)"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorCourseDetailsPageModule),"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        path: \u0027enroll\u0027,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-course-enroll-page/instructor-course-enroll-page.module\u0027)"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorCourseEnrollPageModule),"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        path: \u0027student\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        children: ["},{"lineNumber":46,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            path: \u0027details\u0027,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            loadChildren: () \u003d\u003e import(\u0027./instructor-course-student-details-page/instructor-course-student-details-page.module\u0027)"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .then((m: any) \u003d\u003e m.InstructorCourseStudentDetailsPageModule),"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            path: \u0027edit\u0027,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            loadChildren: () \u003d\u003e import(\u0027./instructor-course-student-edit-page/instructor-course-student-edit-page.module\u0027)"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .then((m: any) \u003d\u003e m.InstructorCourseStudentEditPageModule),"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            data: {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              pageTitle: \u0027Edit Student Details\u0027,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            },"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ],"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    path: \u0027sessions\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    children: ["},{"lineNumber":66,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        path: \u0027\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-sessions-page/instructor-sessions-page.module\u0027)"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorSessionsPageModule),"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        data: {"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          pageTitle: \u0027Feedback Sessions\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        path: \u0027edit\u0027,"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-session-edit-page/instructor-session-edit-page.module\u0027)"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorSessionEditPageModule),"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        data: {"},{"lineNumber":79,"author":{"gitId":"-"},"content":"          pageTitle: \u0027Edit Feedback Session\u0027,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        path: \u0027submission\u0027,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027../pages-session/session-submission-page/session-submission-page.module\u0027)"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.SessionSubmissionPageModule),"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        data: {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"          pageTitle: \u0027Submit Feedback\u0027,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"          intent: Intent.INSTRUCTOR_SUBMISSION,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        path: \u0027result\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-session-result-page/instructor-session-result-page.module\u0027)"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorSessionResultPageModule),"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    path: \u0027students\u0027,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    children: ["},{"lineNumber":101,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        path: \u0027\u0027,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-student-list-page/instructor-student-list-page.module\u0027)"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorStudentListPageModule),"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      {"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        path: \u0027records\u0027,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        loadChildren: () \u003d\u003e import(\u0027./instructor-student-records-page/instructor-student-records-page.module\u0027)"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            .then((m: any) \u003d\u003e m.InstructorStudentRecordsPageModule),"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ],"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    path: \u0027search\u0027,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027./instructor-search-page/instructor-search-page.module\u0027)"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.InstructorSearchPageModule),"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      pageTitle: \u0027Search Students\u0027,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":121,"author":{"gitId":"t-cheepeng"},"content":"  {"},{"lineNumber":122,"author":{"gitId":"t-cheepeng"},"content":"    path: \u0027logs\u0027,"},{"lineNumber":123,"author":{"gitId":"t-cheepeng"},"content":"    loadChildren: () \u003d\u003e import(\u0027./instructor-audit-logs-page/instructor-audit-logs-page.module\u0027)"},{"lineNumber":124,"author":{"gitId":"t-cheepeng"},"content":"        .then((m: any) \u003d\u003e m.InstructorAuditLogsPageModule),"},{"lineNumber":125,"author":{"gitId":"t-cheepeng"},"content":"  },"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    path: \u0027help\u0027,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027../pages-help/instructor-help-page/instructor-help-page.module\u0027)"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.InstructorHelpPageModule),"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      instructorGettingStartedPath: \u0027/web/instructor/getting-started\u0027,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    path: \u0027getting-started\u0027,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    loadChildren: () \u003d\u003e import(\u0027../pages-help/instructor-help-page/instructor-help-getting-started-page.module\u0027)"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        .then((m: any) \u003d\u003e m.InstructorHelpGettingStartedPageModule),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    data: {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      instructorHelpPath: \u0027/web/instructor/help\u0027,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    },"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    path: \u0027\u0027,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    pathMatch: \u0027full\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    redirectTo: \u0027home\u0027,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    path: \u0027**\u0027,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    pathMatch: \u0027full\u0027,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    component: PageNotFoundComponent,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  },"},{"lineNumber":152,"author":{"gitId":"-"},"content":"];"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Module for instructor pages."},{"lineNumber":156,"author":{"gitId":"-"},"content":" */"},{"lineNumber":157,"author":{"gitId":"-"},"content":"@NgModule({"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  imports: ["},{"lineNumber":159,"author":{"gitId":"-"},"content":"    CommonModule,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    PageNotFoundModule,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    RouterModule.forChild(routes),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  ],"},{"lineNumber":163,"author":{"gitId":"-"},"content":"})"},{"lineNumber":164,"author":{"gitId":"-"},"content":"export class InstructorPagesModule {}"}],"authorContributionMap":{"t-cheepeng":5,"-":159}},{"path":"src/web/app/pages-instructor/instructor-session-base-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { saveAs } from \u0027file-saver\u0027;"},{"lineNumber":4,"author":{"gitId":"teikjun"},"content":"import { concat, from, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":5,"author":{"gitId":"teikjun"},"content":"import { catchError, concatMap, finalize, last, switchMap, takeWhile } from \u0027rxjs/operators\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../services/instructor.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":10,"author":{"gitId":"teikjun"},"content":"import { ProgressBarService } from \u0027../../services/progress-bar.service\u0027;"},{"lineNumber":11,"author":{"gitId":"teikjun"},"content":"import { SimpleModalService } from \u0027../../services/simple-modal.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  FeedbackSessionStats,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"} from \u0027../../types/api-output\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../types/default-retry-attempts\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../types/sort-properties\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../components/error-report/error-report.component\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { CopySessionResult, SessionsTableRowModel } from \u0027../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":26,"author":{"gitId":"teikjun"},"content":"import { SimpleModalType } from \u0027../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * The base page for session related page."},{"lineNumber":31,"author":{"gitId":"-"},"content":" */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"export abstract class InstructorSessionBasePageComponent {"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  isResultActionLoading: boolean \u003d false;"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  protected failedToCopySessions: Record\u003cstring, string\u003e \u003d {}; // Map of failed session copy to error message"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"  private publishUnpublishRetryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  protected constructor(protected router: Router,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        protected instructorService: InstructorService,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        protected statusMessageService: StatusMessageService,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        protected navigationService: NavigationService,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                        protected feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        protected feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        protected tableComparatorService: TableComparatorService,"},{"lineNumber":47,"author":{"gitId":"teikjun"},"content":"                        protected ngbModal: NgbModal,"},{"lineNumber":48,"author":{"gitId":"teikjun"},"content":"                        protected simpleModalService: SimpleModalService,"},{"lineNumber":49,"author":{"gitId":"teikjun"},"content":"                        protected progressBarService: ProgressBarService) { }"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * Copies a feedback session."},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  protected copyFeedbackSession(fromFeedbackSession: FeedbackSession, newSessionName: string, newCourseId: string):"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      Observable\u003cFeedbackSession\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    let createdFeedbackSession!: FeedbackSession;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    return this.feedbackSessionsService.createFeedbackSession(newCourseId, {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      feedbackSessionName: newSessionName,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      instructions: fromFeedbackSession.instructions,"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"      submissionStartTimestamp: fromFeedbackSession.submissionStartTimestamp,"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      submissionEndTimestamp: fromFeedbackSession.submissionEndTimestamp,"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      gracePeriod: fromFeedbackSession.gracePeriod,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: fromFeedbackSession.sessionVisibleSetting,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      customSessionVisibleTimestamp: fromFeedbackSession.customSessionVisibleTimestamp,"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"      responseVisibleSetting: fromFeedbackSession.responseVisibleSetting,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      customResponseVisibleTimestamp: fromFeedbackSession.customResponseVisibleTimestamp,"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: fromFeedbackSession.isClosingEmailEnabled,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: fromFeedbackSession.isPublishedEmailEnabled,"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":74,"author":{"gitId":"-"},"content":"        switchMap((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          createdFeedbackSession \u003d feedbackSession;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"          // copy questions"},{"lineNumber":78,"author":{"gitId":"-"},"content":"          return this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            courseId: fromFeedbackSession.courseId,"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            feedbackSessionName: fromFeedbackSession.feedbackSessionName,"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            intent: Intent.FULL_DETAIL,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        switchMap((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"          if (response.questions.length \u003d\u003d\u003d 0) {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            // no questions to copy"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return of(createdFeedbackSession);"},{"lineNumber":89,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          return from(response.questions).pipe("},{"lineNumber":91,"author":{"gitId":"-"},"content":"              concatMap((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                return this.feedbackQuestionsService.createFeedbackQuestion("},{"lineNumber":93,"author":{"gitId":"-"},"content":"                    createdFeedbackSession.courseId, createdFeedbackSession.feedbackSessionName, {"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"                      questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                      questionType: feedbackQuestion.questionType,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"                      giverType: feedbackQuestion.giverType,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"                      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"                      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                    });"},{"lineNumber":111,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":112,"author":{"gitId":"-"},"content":"              last(),"},{"lineNumber":113,"author":{"gitId":"-"},"content":"              switchMap(() \u003d\u003e of(createdFeedbackSession)),"},{"lineNumber":114,"author":{"gitId":"-"},"content":"          );"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   * Generates a sorting function."},{"lineNumber":121,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  protected sortModelsBy(by: SortBy, order: SortOrder):"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      ((a: { feedbackSession: FeedbackSession }, b: { feedbackSession: FeedbackSession }) \u003d\u003e number) {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    return ((a: { feedbackSession: FeedbackSession }, b: { feedbackSession: FeedbackSession }): number \u003d\u003e {"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      let strA: string;"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      let strB: string;"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      switch (by) {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_NAME:"},{"lineNumber":129,"author":{"gitId":"-"},"content":"          strA \u003d a.feedbackSession.feedbackSessionName;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"          strB \u003d b.feedbackSession.feedbackSessionName;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        case SortBy.COURSE_ID:"},{"lineNumber":133,"author":{"gitId":"-"},"content":"          strA \u003d a.feedbackSession.courseId;"},{"lineNumber":134,"author":{"gitId":"-"},"content":"          strB \u003d b.feedbackSession.courseId;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_START_DATE:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          strA \u003d String(a.feedbackSession.submissionStartTimestamp);"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          strB \u003d String(b.feedbackSession.submissionStartTimestamp);"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_END_DATE:"},{"lineNumber":141,"author":{"gitId":"-"},"content":"          strA \u003d String(a.feedbackSession.submissionEndTimestamp);"},{"lineNumber":142,"author":{"gitId":"-"},"content":"          strB \u003d String(b.feedbackSession.submissionEndTimestamp);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_CREATION_DATE:"},{"lineNumber":145,"author":{"gitId":"-"},"content":"          strA \u003d String(a.feedbackSession.createdAtTimestamp);"},{"lineNumber":146,"author":{"gitId":"-"},"content":"          strB \u003d String(b.feedbackSession.createdAtTimestamp);"},{"lineNumber":147,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        case SortBy.SESSION_DELETION_DATE:"},{"lineNumber":149,"author":{"gitId":"-"},"content":"          strA \u003d String(a.feedbackSession.deletedAtTimestamp);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"          strB \u003d String(b.feedbackSession.deletedAtTimestamp);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"          break;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        default:"},{"lineNumber":153,"author":{"gitId":"-"},"content":"          strA \u003d \u0027\u0027;"},{"lineNumber":154,"author":{"gitId":"-"},"content":"          strB \u003d \u0027\u0027;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(by, order, strA, strB);"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"   * Loads response rate of a feedback session."},{"lineNumber":162,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  loadResponseRate(model: SessionsTableRowModel): void {"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    model.isLoadingResponseRate \u003d true;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.loadSessionStatistics("},{"lineNumber":166,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e model.isLoadingResponseRate \u003d false))"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        .subscribe((resp: FeedbackSessionStats) \u003d\u003e {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"          model.responseRate \u003d `${resp.submittedTotal} / ${resp.expectedTotal}`;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   * Edits the feedback session."},{"lineNumber":177,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  editSession(model: SessionsTableRowModel): void {"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":180,"author":{"gitId":"-"},"content":"        this.router,"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        \u0027/web/instructor/sessions/edit\u0027,"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"   * Creates list of copy session requests from params"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   * @param model the source session model"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   * @param result the result of the copy session modal"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   * @returns the list of copy session requests"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  createSessionCopyRequestsFromRowModel("},{"lineNumber":192,"author":{"gitId":"-"},"content":"      model: SessionsTableRowModel, result: CopySessionResult): Observable\u003cFeedbackSession\u003e[] {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    const copySessionRequests: Observable\u003cFeedbackSession\u003e[] \u003d [];"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    result.copyToCourseList.forEach((copyToCourseId: string) \u003d\u003e {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      copySessionRequests.push("},{"lineNumber":196,"author":{"gitId":"-"},"content":"          this.copyFeedbackSession(model.feedbackSession, result.newFeedbackSessionName, copyToCourseId)"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              .pipe(catchError((err: any) \u003d\u003e {"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                this.failedToCopySessions[copyToCourseId] \u003d err.error.message;"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                return of(err);"},{"lineNumber":200,"author":{"gitId":"-"},"content":"              })),"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    return copySessionRequests;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   * Creates list of copy session requests from params"},{"lineNumber":208,"author":{"gitId":"-"},"content":"   * @param result the result of the copy session modal"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * @param courseId the source courseId"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * @param feedbackSessionName the source feedback session name"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * @returns the list of copy session requests"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  createSessionCopyRequestsFromModal(result: CopySessionModalResult, courseId: string, feedbackSessionName: string)"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      : Observable\u003cFeedbackSession\u003e[] {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    const copySessionRequests: Observable\u003cFeedbackSession\u003e[] \u003d [];"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    result.copyToCourseList.forEach((copyToCourseId: string) \u003d\u003e {"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      copySessionRequests.push(this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        feedbackSessionName,"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":222,"author":{"gitId":"-"},"content":"          switchMap((feedbackSession: FeedbackSession) \u003d\u003e"},{"lineNumber":223,"author":{"gitId":"-"},"content":"              this.copyFeedbackSession(feedbackSession, result.newFeedbackSessionName, copyToCourseId)),"},{"lineNumber":224,"author":{"gitId":"-"},"content":"          catchError((err: any) \u003d\u003e {"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.failedToCopySessions[copyToCourseId] \u003d err.error.message;"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return of(err);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      ));"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    return copySessionRequests;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":234,"author":{"gitId":"-"},"content":"   * Submits a single copy session request."},{"lineNumber":235,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  copySingleSession(copySessionRequest: Observable\u003cFeedbackSession\u003e): void {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    copySessionRequest.subscribe((createdSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      if (Object.keys(this.failedToCopySessions).length \u003d\u003d\u003d 0) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithSuccessMessage(this.router,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            \u0027/web/instructor/sessions/edit\u0027,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027,"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            { courseid: createdSession.courseId, fsname: createdSession.feedbackSessionName });"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(this.getCopyErrorMessage());"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":"  showCopyStatusMessage(): void {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    if (Object.keys(this.failedToCopySessions).length \u003e 0) {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(this.getCopyErrorMessage());"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027Feedback session copied successfully to all courses.\u0027);"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"  getCopyErrorMessage(): string {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    return Object.keys(this.failedToCopySessions).map((key: string) \u003d\u003e"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        `Error copying to ${key}: ${this.failedToCopySessions[key]}`).join(\u0027 \u0027);"},{"lineNumber":260,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":261,"author":{"gitId":"-"},"content":""},{"lineNumber":262,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":263,"author":{"gitId":"-"},"content":"   * Submits the feedback session as instructor."},{"lineNumber":264,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  submitSessionAsInstructor(model: SessionsTableRowModel): void {"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":267,"author":{"gitId":"-"},"content":"        this.router,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        \u0027/web/instructor/sessions/submission\u0027,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":273,"author":{"gitId":"-"},"content":"   * Views the result of a feedback session."},{"lineNumber":274,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  viewSessionResult(model: SessionsTableRowModel): void {"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":277,"author":{"gitId":"-"},"content":"        this.router,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        \u0027/web/instructor/sessions/result\u0027,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        { courseid: model.feedbackSession.courseId, fsname: model.feedbackSession.feedbackSessionName });"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":281,"author":{"gitId":"-"},"content":""},{"lineNumber":282,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":283,"author":{"gitId":"-"},"content":"   * Downloads the result of a feedback session in csv."},{"lineNumber":284,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  downloadSessionResult(model: SessionsTableRowModel): void {"},{"lineNumber":286,"author":{"gitId":"teikjun"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":287,"author":{"gitId":"teikjun"},"content":"      courseId: model.feedbackSession.courseId,"},{"lineNumber":288,"author":{"gitId":"teikjun"},"content":"      feedbackSessionName: model.feedbackSession.feedbackSessionName,"},{"lineNumber":289,"author":{"gitId":"teikjun"},"content":"      intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":290,"author":{"gitId":"teikjun"},"content":"    }).subscribe((feedbackQuestions: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":291,"author":{"gitId":"teikjun"},"content":"      const questions: FeedbackQuestion[] \u003d feedbackQuestions.questions;"},{"lineNumber":292,"author":{"gitId":"teikjun"},"content":"      this.downloadSessionResultHelper(questions, model);"},{"lineNumber":293,"author":{"gitId":"teikjun"},"content":"    });"},{"lineNumber":294,"author":{"gitId":"teikjun"},"content":"  }"},{"lineNumber":295,"author":{"gitId":"teikjun"},"content":""},{"lineNumber":296,"author":{"gitId":"teikjun"},"content":"  downloadSessionResultHelper(questions: FeedbackQuestion[], model: SessionsTableRowModel): void {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    this.isResultActionLoading \u003d true;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    const filename: string \u003d"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        `${model.feedbackSession.courseId}_${model.feedbackSession.feedbackSessionName}_result.csv`;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    let blob: any;"},{"lineNumber":301,"author":{"gitId":"teikjun"},"content":"    let downloadAborted: boolean \u003d false;"},{"lineNumber":302,"author":{"gitId":"teikjun"},"content":"    const outputData: string[] \u003d [];"},{"lineNumber":303,"author":{"gitId":"teikjun"},"content":""},{"lineNumber":304,"author":{"gitId":"teikjun"},"content":"    const modalContent: string \u003d \u0027Downloading the results of your feedback session...\u0027;"},{"lineNumber":305,"author":{"gitId":"teikjun"},"content":"    const loadingModal: NgbModalRef \u003d this.simpleModalService.openLoadingModal("},{"lineNumber":306,"author":{"gitId":"teikjun"},"content":"        \u0027Download Progress\u0027, SimpleModalType.LOAD, modalContent);"},{"lineNumber":307,"author":{"gitId":"teikjun"},"content":"    loadingModal.result.then(() \u003d\u003e {"},{"lineNumber":308,"author":{"gitId":"teikjun"},"content":"      this.isResultActionLoading \u003d false;"},{"lineNumber":309,"author":{"gitId":"teikjun"},"content":"      downloadAborted \u003d true;"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"teikjun"},"content":"    concat("},{"lineNumber":313,"author":{"gitId":"teikjun"},"content":"      ...questions.map((question: FeedbackQuestion) \u003d\u003e"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        this.feedbackSessionsService.downloadSessionResults("},{"lineNumber":315,"author":{"gitId":"-"},"content":"            model.feedbackSession.courseId,"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            model.feedbackSession.feedbackSessionName,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            Intent.INSTRUCTOR_RESULT,"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            true,"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            true,"},{"lineNumber":320,"author":{"gitId":"teikjun"},"content":"            question.feedbackQuestionId,"},{"lineNumber":321,"author":{"gitId":"teikjun"},"content":"        ),"},{"lineNumber":322,"author":{"gitId":"teikjun"},"content":"      ),"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    ).pipe(finalize(() \u003d\u003e this.isResultActionLoading \u003d false))"},{"lineNumber":324,"author":{"gitId":"teikjun"},"content":"      .pipe(takeWhile(() \u003d\u003e this.isResultActionLoading \u0026\u0026 !downloadAborted))"},{"lineNumber":325,"author":{"gitId":"teikjun"},"content":"      .subscribe({"},{"lineNumber":326,"author":{"gitId":"teikjun"},"content":"        next: (resp: string) \u003d\u003e {"},{"lineNumber":327,"author":{"gitId":"teikjun"},"content":"          outputData.push(resp);"},{"lineNumber":328,"author":{"gitId":"teikjun"},"content":"          const numberOfQuestionsDownloaded: number \u003d outputData.length;"},{"lineNumber":329,"author":{"gitId":"teikjun"},"content":"          const totalNumberOfQuestions: number \u003d questions.length;"},{"lineNumber":330,"author":{"gitId":"teikjun"},"content":"          const progressPercentage: number \u003d Math.round(100 * numberOfQuestionsDownloaded / totalNumberOfQuestions);"},{"lineNumber":331,"author":{"gitId":"teikjun"},"content":"          this.progressBarService.updateProgress(progressPercentage);"},{"lineNumber":332,"author":{"gitId":"teikjun"},"content":"        },"},{"lineNumber":333,"author":{"gitId":"teikjun"},"content":"        complete: () \u003d\u003e {"},{"lineNumber":334,"author":{"gitId":"teikjun"},"content":"          if (downloadAborted) {"},{"lineNumber":335,"author":{"gitId":"teikjun"},"content":"            return;"},{"lineNumber":336,"author":{"gitId":"teikjun"},"content":"          }"},{"lineNumber":337,"author":{"gitId":"teikjun"},"content":"          loadingModal.close();"},{"lineNumber":338,"author":{"gitId":"teikjun"},"content":"          blob \u003d new Blob(outputData, { type: \u0027text/csv\u0027 });"},{"lineNumber":339,"author":{"gitId":"-"},"content":"          saveAs(blob, filename);"},{"lineNumber":340,"author":{"gitId":"teikjun"},"content":"        },"},{"lineNumber":341,"author":{"gitId":"teikjun"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":343,"author":{"gitId":"teikjun"},"content":"          loadingModal.close();"},{"lineNumber":344,"author":{"gitId":"teikjun"},"content":"        },"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":346,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":347,"author":{"gitId":"-"},"content":""},{"lineNumber":348,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":349,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":350,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  publishSession(model: SessionsTableRowModel): void {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    this.isResultActionLoading \u003d true;"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.publishFeedbackSession("},{"lineNumber":354,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isResultActionLoading \u003d false))"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"          model.feedbackSession \u003d feedbackSession;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"          model.responseRate \u003d \u0027\u0027;"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been published. \u0027"},{"lineNumber":363,"author":{"gitId":"-"},"content":"              + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":366,"author":{"gitId":"-"},"content":"          if (!this.publishUnpublishRetryAttempts) {"},{"lineNumber":367,"author":{"gitId":"-"},"content":"            this.openErrorReportModal(resp);"},{"lineNumber":368,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"            this.publishUnpublishRetryAttempts -\u003d 1;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":371,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":372,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":375,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":376,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  unpublishSession(model: SessionsTableRowModel): void {"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    this.isResultActionLoading \u003d true;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.unpublishFeedbackSession("},{"lineNumber":380,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isResultActionLoading \u003d false))"},{"lineNumber":384,"author":{"gitId":"-"},"content":"        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          model.feedbackSession \u003d feedbackSession;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"          model.responseRate \u003d \u0027\u0027;"},{"lineNumber":387,"author":{"gitId":"-"},"content":""},{"lineNumber":388,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been unpublished.\u0027);"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":391,"author":{"gitId":"-"},"content":"          if (!this.publishUnpublishRetryAttempts) {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            this.openErrorReportModal(resp);"},{"lineNumber":393,"author":{"gitId":"-"},"content":"          } else {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"            this.publishUnpublishRetryAttempts -\u003d 1;"},{"lineNumber":395,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":398,"author":{"gitId":"-"},"content":""},{"lineNumber":399,"author":{"gitId":"-"},"content":"  openErrorReportModal(resp: ErrorMessageOutput): void {"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    const modal: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    modal.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    modal.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"teikjun":52,"-":352}},{"path":"src/web/app/pages-instructor/instructor-session-edit-page/instructor-session-edit-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { ChangeDetectorRef, Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { concatMap, finalize, flatMap, map, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  CommonVisibilitySetting,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackQuestionsService,"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  NewQuestionModel,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"} from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":16,"author":{"gitId":"teikjun"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { LOCAL_DATE_TIME_FORMAT, TimeResolvingResult, TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { VisibilityStateMachine } from \u0027../../../services/visibility-state-machine\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, FeedbackVisibilityType,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  HasResponses,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  Instructors,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import { VisibilityControl } from \u0027../../../types/visibility-control\u0027;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import { CopySessionModalResult } from \u0027../../components/copy-session-modal/copy-session-modal-model\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { CopySessionModalComponent } from \u0027../../components/copy-session-modal/copy-session-modal.component\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  QuestionEditFormMode,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  QuestionEditFormModel,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-edit-form/question-edit-form-model\u0027;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  DateFormat,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  TimeFormat,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import { InstructorSessionBasePageComponent } from \u0027../instructor-session-base-page.component\u0027;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import { QuestionToCopyCandidate } from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal-model\u0027;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import { CopyQuestionsFromOtherSessionsModalComponent } from \u0027./copy-questions-from-other-sessions-modal/copy-questions-from-other-sessions-modal.component\u0027;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import { TemplateQuestionModalComponent } from \u0027./template-question-modal/template-question-modal.component\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":66,"author":{"gitId":"-"},"content":" * Instructor feedback session edit page."},{"lineNumber":67,"author":{"gitId":"-"},"content":" */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-edit-page\u0027,"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-edit-page.component.html\u0027,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-edit-page.component.scss\u0027],"},{"lineNumber":72,"author":{"gitId":"-"},"content":"})"},{"lineNumber":73,"author":{"gitId":"-"},"content":"export class InstructorSessionEditPageComponent extends InstructorSessionBasePageComponent implements OnInit {"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  QuestionEditFormMode: typeof QuestionEditFormMode \u003d QuestionEditFormMode;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  FeedbackQuestionType: typeof FeedbackQuestionType \u003d FeedbackQuestionType;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  // url param"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  isEditingMode: boolean \u003d false;"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  courseName: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 23, minute: 59 },"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 23, minute: 59 },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.CUSTOM,"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    isEditable: false,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"  // to get the original session model on discard changes"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  feedbackSessionModelBeforeEditing: SessionEditFormModel \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  // to get the original question model"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  feedbackQuestionModels: Map\u003cstring, FeedbackQuestion\u003e \u003d new Map();"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"  questionEditFormModels: QuestionEditFormModel[] \u003d [];"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  newQuestionEditFormModel: QuestionEditFormModel \u003d {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    feedbackQuestionId: \u0027\u0027,"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    questionNumber: 0,"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    questionBrief: \u0027\u0027,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"    isQuestionHasResponses: false,"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"    questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    questionDetails: {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      questionType: FeedbackQuestionType.TEXT,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      questionText: \u0027\u0027,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    } as FeedbackTextQuestionDetails,"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    recipientType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 1,"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"    showResponsesTo: [],"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    showGiverNameTo: [],"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    showRecipientNameTo: [],"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    isCollapsed: false,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    isVisibilityChanged: false,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    isFeedbackPathChanged: false,"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    isQuestionDetailsChanged: false,"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"  isAddingQuestionPanelExpanded: boolean \u003d false;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  isLoadingFeedbackSession: boolean \u003d false;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackSessionFailed: boolean \u003d false;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  isLoadingFeedbackQuestions: boolean \u003d false;"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  hasLoadingFeedbackQuestionsFailed: boolean \u003d false;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  isCopyingQuestion: boolean \u003d false;"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"  // all students of the course"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  studentsOfCourse: Student[] \u003d [];"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  emailOfStudentToPreview: string \u003d \u0027\u0027;"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  // instructors which can be previewed as"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  instructorsCanBePreviewedAs: Instructor[] \u003d [];"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  emailOfInstructorToPreview: string \u003d \u0027\u0027;"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  get isAllCollapsed(): boolean {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    return this.questionEditFormModels.some((model: QuestionEditFormModel) \u003d\u003e {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"      return model.isCollapsed;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":186,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":187,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":189,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":190,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"              ngbModal: NgbModal,"},{"lineNumber":193,"author":{"gitId":"teikjun"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":194,"author":{"gitId":"teikjun"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":196,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":199,"author":{"gitId":"-"},"content":"              private changeDetectorRef: ChangeDetectorRef) {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":201,"author":{"gitId":"teikjun"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":202,"author":{"gitId":"teikjun"},"content":"        ngbModal, simpleModalService, progressBarService);"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"      this.isEditingMode \u003d queryParams.editingMode \u003d\u003d\u003d \u0027true\u0027;"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"-"},"content":"      this.loadFeedbackSession();"},{"lineNumber":212,"author":{"gitId":"-"},"content":"      this.loadFeedbackQuestions();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      this.getAllStudentsOfCourse();"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      this.getAllInstructorsCanBePreviewedAs();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":219,"author":{"gitId":"-"},"content":"   * Loads a feedback session."},{"lineNumber":220,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackSessionFailed \u003d false;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackSession \u003d true;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    // load the course of the feedback session first"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    this.courseService.getCourseAsInstructor(this.courseId).subscribe((course: Course) \u003d\u003e {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      this.courseName \u003d course.courseName;"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        courseId: this.courseId,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      }).pipe(finalize(() \u003d\u003e this.isLoadingFeedbackSession \u003d false))"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession, this.isEditingMode);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        this.feedbackSessionModelBeforeEditing \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":236,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      this.isLoadingFeedbackSession \u003d false;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      this.hasLoadingFeedbackSessionFailed \u003d true;"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":248,"author":{"gitId":"-"},"content":"   * Copies the feedback session."},{"lineNumber":249,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  copyCurrentSession(): void {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    // load course candidates first"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isCopying \u003d true;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    .subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      const modalRef: NgbModalRef \u003d this.ngbModal.open(CopySessionModalComponent);"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.newFeedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.courseCandidates \u003d courses.courses;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      modalRef.componentInstance.sessionToCopyCourseId \u003d this.courseId;"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"      modalRef.result.then((result: CopySessionModalResult) \u003d\u003e {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        this.failedToCopySessions \u003d {};"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromModal("},{"lineNumber":263,"author":{"gitId":"-"},"content":"            result, this.courseId, this.feedbackSessionName);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":265,"author":{"gitId":"-"},"content":"          this.copySingleSession(requestList[0]);"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (requestList.length \u003e 1) {"},{"lineNumber":268,"author":{"gitId":"-"},"content":"          forkJoin(requestList)"},{"lineNumber":269,"author":{"gitId":"-"},"content":"           .pipe(finalize(() \u003d\u003e this.sessionEditFormModel.isCopying \u003d false))"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           .subscribe(() \u003d\u003e {"},{"lineNumber":271,"author":{"gitId":"-"},"content":"             this.showCopyStatusMessage();"},{"lineNumber":272,"author":{"gitId":"-"},"content":"           });"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); })"},{"lineNumber":275,"author":{"gitId":"-"},"content":"      .catch(() \u003d\u003e {});"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":280,"author":{"gitId":"-"},"content":"   * Gets the {@code sessionEditFormModel} with {@link FeedbackSession} entity."},{"lineNumber":281,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  getSessionEditFormModel(feedbackSession: FeedbackSession, isEditable: boolean \u003d false): SessionEditFormModel {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    const submissionStart: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone);"},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"    const submissionEnd: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        this.getDateTimeAtTimezone(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone);"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"    const model: SessionEditFormModel \u003d {"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      isEditable,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"      courseId: feedbackSession.courseId,"},{"lineNumber":292,"author":{"gitId":"-"},"content":"      timeZone: feedbackSession.timeZone,"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      courseName: this.courseName,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      feedbackSessionName: feedbackSession.feedbackSessionName,"},{"lineNumber":295,"author":{"gitId":"-"},"content":"      instructions: feedbackSession.instructions,"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":"      submissionStartTime: submissionStart.time,"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      submissionStartDate: submissionStart.date,"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      submissionEndTime: submissionEnd.time,"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      submissionEndDate: submissionEnd.date,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      gracePeriod: feedbackSession.gracePeriod,"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"      sessionVisibleSetting: feedbackSession.sessionVisibleSetting,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"      customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":305,"author":{"gitId":"-"},"content":"      customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"-"},"content":"      responseVisibleSetting: feedbackSession.responseVisibleSetting,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":309,"author":{"gitId":"-"},"content":"      customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"      submissionStatus: feedbackSession.submissionStatus,"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      publishStatus: feedbackSession.publishStatus,"},{"lineNumber":313,"author":{"gitId":"-"},"content":""},{"lineNumber":314,"author":{"gitId":"-"},"content":"      templateSessionName: \u0027\u0027,"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"      isClosingEmailEnabled: feedbackSession.isClosingEmailEnabled,"},{"lineNumber":317,"author":{"gitId":"-"},"content":"      isPublishedEmailEnabled: feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":318,"author":{"gitId":"-"},"content":""},{"lineNumber":319,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      isDeleting: false,"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      isCopying: false,"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      hasVisibleSettingsPanelExpanded: feedbackSession.sessionVisibleSetting !\u003d\u003d SessionVisibleSetting.AT_OPEN"},{"lineNumber":323,"author":{"gitId":"-"},"content":"          || feedbackSession.responseVisibleSetting !\u003d\u003d ResponseVisibleSetting.LATER,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"      hasEmailSettingsPanelExpanded: !feedbackSession.isClosingEmailEnabled || !feedbackSession.isPublishedEmailEnabled,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"    if (feedbackSession.customSessionVisibleTimestamp) {"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      const customSessionVisible: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":329,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customSessionVisibleTimestamp, feedbackSession.timeZone);"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      model.customSessionVisibleTime \u003d customSessionVisible.time;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      model.customSessionVisibleDate \u003d customSessionVisible.date;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"    if (feedbackSession.customResponseVisibleTimestamp) {"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      const customResponseVisible: {date: DateFormat; time: TimeFormat} \u003d"},{"lineNumber":336,"author":{"gitId":"-"},"content":"          this.getDateTimeAtTimezone(feedbackSession.customResponseVisibleTimestamp, feedbackSession.timeZone);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      model.customResponseVisibleTime \u003d customResponseVisible.time;"},{"lineNumber":338,"author":{"gitId":"-"},"content":"      model.customResponseVisibleDate \u003d customResponseVisible.date;"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":340,"author":{"gitId":"-"},"content":""},{"lineNumber":341,"author":{"gitId":"-"},"content":"    return model;"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":343,"author":{"gitId":"-"},"content":""},{"lineNumber":344,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":345,"author":{"gitId":"-"},"content":"   * Get the local date and time of timezone from timestamp."},{"lineNumber":346,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":347,"author":{"gitId":"-"},"content":"  private getDateTimeAtTimezone(timestamp: number, timeZone: string): {date: DateFormat; time: TimeFormat} {"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    const momentInstance: any \u003d this.timezoneService.getMomentInstance(timestamp, timeZone);"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    const date: DateFormat \u003d {"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      year: momentInstance.year(),"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      month: momentInstance.month() + 1, // moment return 0-11 for month"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      day: momentInstance.date(),"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    const time: TimeFormat \u003d {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      minute: momentInstance.minute(),"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      hour: momentInstance.hour(),"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      date,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      time,"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":365,"author":{"gitId":"-"},"content":"   * Handles editing existing session event."},{"lineNumber":366,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  editExistingSessionHandler(): void {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isEditable \u003d false;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    this.feedbackSessionModelBeforeEditing \u003d JSON.parse(JSON.stringify(this.sessionEditFormModel));"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":371,"author":{"gitId":"-"},"content":""},{"lineNumber":372,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":373,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"          \u0027Submission opening time\u0027),"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"          \u0027Submission closing time\u0027),"},{"lineNumber":379,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"},{"lineNumber":380,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"},{"lineNumber":381,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":382,"author":{"gitId":"-"},"content":"              \u0027Session visible time\u0027)"},{"lineNumber":383,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":384,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"},{"lineNumber":386,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":387,"author":{"gitId":"-"},"content":"              \u0027Response visible time\u0027)"},{"lineNumber":388,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":390,"author":{"gitId":"-"},"content":"        switchMap((vals: number[]) \u003d\u003e {"},{"lineNumber":391,"author":{"gitId":"-"},"content":"          return this.feedbackSessionsService.updateFeedbackSession(this.courseId, this.feedbackSessionName, {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"            instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":393,"author":{"gitId":"-"},"content":""},{"lineNumber":394,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: vals[0],"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            submissionEndTimestamp: vals[1],"},{"lineNumber":396,"author":{"gitId":"-"},"content":"            gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"            customSessionVisibleTimestamp: vals[2],"},{"lineNumber":400,"author":{"gitId":"-"},"content":""},{"lineNumber":401,"author":{"gitId":"-"},"content":"            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            customResponseVisibleTimestamp: vals[3],"},{"lineNumber":403,"author":{"gitId":"-"},"content":""},{"lineNumber":404,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":406,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":409,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":412,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel \u003d this.getSessionEditFormModel(feedbackSession);"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"-"},"content":"      this.statusMessageService.showSuccessToast(\u0027The feedback session has been updated.\u0027);"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":419,"author":{"gitId":"-"},"content":""},{"lineNumber":420,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   * Handles canceling existing session event without saving changes."},{"lineNumber":422,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":423,"author":{"gitId":"-"},"content":"  cancelEditingSessionHandler(): void {"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel \u003d JSON.parse(JSON.stringify(this.feedbackSessionModelBeforeEditing));"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":428,"author":{"gitId":"-"},"content":"   * Resolves the local date time to an UNIX timestamp."},{"lineNumber":429,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  private resolveLocalDateTime("},{"lineNumber":431,"author":{"gitId":"-"},"content":"      date: DateFormat, time: TimeFormat, timeZone: string, fieldName: string): Observable\u003cnumber\u003e {"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    const inst: any \u003d moment();"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":434,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    inst.set(\u0027hour\u0027, time.hour);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"    inst.set(\u0027minute\u0027, time.minute);"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("},{"lineNumber":441,"author":{"gitId":"-"},"content":"        tap((result: TimeResolvingResult) \u003d\u003e {"},{"lineNumber":442,"author":{"gitId":"-"},"content":"          if (result.message.length !\u003d\u003d 0) {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"            this.statusMessageService.showWarningToast(result.message);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":446,"author":{"gitId":"-"},"content":"        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"},{"lineNumber":447,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   * Handles deleting current feedback session."},{"lineNumber":451,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":452,"author":{"gitId":"-"},"content":"  deleteExistingSessionHandler(): void {"},{"lineNumber":453,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isDeleting \u003d true;"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin(this.courseId, this.feedbackSessionName)"},{"lineNumber":455,"author":{"gitId":"-"},"content":"     .pipe(finalize(() \u003d\u003e this.sessionEditFormModel.isDeleting \u003d false))"},{"lineNumber":456,"author":{"gitId":"-"},"content":"     .subscribe(() \u003d\u003e {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"       this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions\u0027,"},{"lineNumber":458,"author":{"gitId":"-"},"content":"      \u0027The feedback session has been deleted. You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"     },"},{"lineNumber":460,"author":{"gitId":"-"},"content":"     (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":461,"author":{"gitId":"-"},"content":"       this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":462,"author":{"gitId":"-"},"content":"     });"},{"lineNumber":463,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":464,"author":{"gitId":"-"},"content":""},{"lineNumber":465,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":466,"author":{"gitId":"-"},"content":"   * Loads feedback questions."},{"lineNumber":467,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"    this.questionEditFormModels \u003d [];"},{"lineNumber":470,"author":{"gitId":"-"},"content":"    this.hasLoadingFeedbackQuestionsFailed \u003d false;"},{"lineNumber":471,"author":{"gitId":"-"},"content":"    this.isLoadingFeedbackQuestions \u003d true;"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":473,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":475,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isLoadingFeedbackQuestions \u003d false))"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":479,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            const addedQuestionEditFormModel: QuestionEditFormModel \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.push(addedQuestionEditFormModel);"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            this.loadResponseStatusForQuestion(addedQuestionEditFormModel);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.set(feedbackQuestion.feedbackQuestionId, feedbackQuestion);"},{"lineNumber":484,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":485,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"          this.hasLoadingFeedbackQuestionsFailed \u003d true;"},{"lineNumber":487,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   * Tracks the question edit form by feedback question id."},{"lineNumber":493,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":494,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":496,"author":{"gitId":"-"},"content":"  trackQuestionEditFormByFn(_: any, item: QuestionEditFormModel): any {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":498,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":499,"author":{"gitId":"-"},"content":""},{"lineNumber":500,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   * Converts feedback question to the question edit form model."},{"lineNumber":502,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":503,"author":{"gitId":"-"},"content":"  private getQuestionEditFormModel(feedbackQuestion: FeedbackQuestion): QuestionEditFormModel {"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"      feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"      questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":512,"author":{"gitId":"-"},"content":""},{"lineNumber":513,"author":{"gitId":"-"},"content":"      questionType: feedbackQuestion.questionType,"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      questionDetails: this.deepCopy(feedbackQuestion.questionDetails),"},{"lineNumber":515,"author":{"gitId":"-"},"content":""},{"lineNumber":516,"author":{"gitId":"-"},"content":"      giverType: feedbackQuestion.giverType,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"      recipientType: feedbackQuestion.recipientType,"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":521,"author":{"gitId":"-"},"content":"          ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":522,"author":{"gitId":"-"},"content":""},{"lineNumber":523,"author":{"gitId":"-"},"content":"      showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":526,"author":{"gitId":"-"},"content":""},{"lineNumber":527,"author":{"gitId":"-"},"content":"      isEditable: false,"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   * Loads the isQuestionHasResponses value for a question edit for model."},{"lineNumber":539,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  private loadResponseStatusForQuestion(model: QuestionEditFormModel): void {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.hasResponsesForQuestion(model.feedbackQuestionId)"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        .subscribe((resp: HasResponses) \u003d\u003e {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"          model.isQuestionHasResponses \u003d resp.hasResponses;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   * Saves the existing question."},{"lineNumber":549,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  saveExistingQuestionHandler(index: number): void {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    const originalQuestionNumber: number \u003d"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":554,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber;"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.saveFeedbackQuestion(questionEditFormModel.feedbackQuestionId, {"},{"lineNumber":558,"author":{"gitId":"-"},"content":"      questionNumber: questionEditFormModel.questionNumber,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":561,"author":{"gitId":"-"},"content":""},{"lineNumber":562,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":564,"author":{"gitId":"-"},"content":""},{"lineNumber":565,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":567,"author":{"gitId":"-"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":576,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":577,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":579,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        .subscribe((updatedQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":581,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(updatedQuestion);"},{"lineNumber":582,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(updatedQuestion.feedbackQuestionId, updatedQuestion);"},{"lineNumber":583,"author":{"gitId":"-"},"content":"          this.loadResponseStatusForQuestion(this.questionEditFormModels[index]);"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"          // shift question if needed"},{"lineNumber":586,"author":{"gitId":"-"},"content":"          if (originalQuestionNumber !\u003d\u003d updatedQuestion.questionNumber) {"},{"lineNumber":587,"author":{"gitId":"-"},"content":"            // move question form"},{"lineNumber":588,"author":{"gitId":"-"},"content":"            this.moveQuestionForm("},{"lineNumber":589,"author":{"gitId":"-"},"content":"                originalQuestionNumber - 1, updatedQuestion.questionNumber - 1);"},{"lineNumber":590,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The changes to the question have been updated.\u0027);"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":595,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":596,"author":{"gitId":"-"},"content":""},{"lineNumber":597,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":598,"author":{"gitId":"-"},"content":"   * Moves question edit form from the original position to the new position."},{"lineNumber":599,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":600,"author":{"gitId":"-"},"content":"  private moveQuestionForm(originalPosition: number, newPosition: number): void {"},{"lineNumber":601,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.splice(newPosition, 0,"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.splice(originalPosition, 1)[0]);"},{"lineNumber":603,"author":{"gitId":"-"},"content":""},{"lineNumber":604,"author":{"gitId":"-"},"content":"    // all expanded questions that were moved upwards must be re-expanded to reload rich text editor"},{"lineNumber":605,"author":{"gitId":"-"},"content":"    const start: number \u003d Math.min(originalPosition, newPosition);"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    const movedExpandedQuestions: QuestionEditFormModel[] \u003d this.questionEditFormModels"},{"lineNumber":607,"author":{"gitId":"-"},"content":"      .slice(start, newPosition + 1)"},{"lineNumber":608,"author":{"gitId":"-"},"content":"      .filter((model: QuestionEditFormModel) \u003d\u003e !model.isCollapsed);"},{"lineNumber":609,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e model.isCollapsed \u003d true);"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    this.changeDetectorRef.detectChanges();"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    movedExpandedQuestions.forEach((model: QuestionEditFormModel) \u003d\u003e model.isCollapsed \u003d false);"},{"lineNumber":612,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":613,"author":{"gitId":"-"},"content":""},{"lineNumber":614,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":615,"author":{"gitId":"-"},"content":"   * Normalizes question number in question forms by setting question number in sequence (i.e. 1, 2, 3, 4 ...)."},{"lineNumber":616,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":617,"author":{"gitId":"-"},"content":"  private normalizeQuestionNumberInQuestionForms(): void {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 1; i \u003c\u003d this.questionEditFormModels.length; i +\u003d 1) {"},{"lineNumber":619,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[i - 1];"},{"lineNumber":620,"author":{"gitId":"-"},"content":"      questionEditFormModel.questionNumber \u003d i;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!.questionNumber \u003d i;"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":624,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":625,"author":{"gitId":"-"},"content":""},{"lineNumber":626,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":627,"author":{"gitId":"-"},"content":"   * Discards the changes made to the existing question."},{"lineNumber":628,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":629,"author":{"gitId":"-"},"content":"  discardExistingQuestionHandler(index: number): void {"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":631,"author":{"gitId":"-"},"content":"    const feedbackQuestion: FeedbackQuestion \u003d"},{"lineNumber":632,"author":{"gitId":"-"},"content":"        // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":633,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.get(questionEditFormModel.feedbackQuestionId)!;"},{"lineNumber":634,"author":{"gitId":"-"},"content":"    this.questionEditFormModels[index] \u003d this.getQuestionEditFormModel(feedbackQuestion);"},{"lineNumber":635,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":638,"author":{"gitId":"-"},"content":"   * Duplicates the question."},{"lineNumber":639,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":640,"author":{"gitId":"-"},"content":"  duplicateCurrentQuestionHandler(index: number): void {"},{"lineNumber":641,"author":{"gitId":"-"},"content":"    const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"    questionEditFormModel.isSaving \u003d true;"},{"lineNumber":644,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1, // add the duplicated question at the end"},{"lineNumber":646,"author":{"gitId":"-"},"content":"      questionBrief: questionEditFormModel.questionBrief,"},{"lineNumber":647,"author":{"gitId":"-"},"content":"      questionDescription: questionEditFormModel.questionDescription,"},{"lineNumber":648,"author":{"gitId":"-"},"content":""},{"lineNumber":649,"author":{"gitId":"-"},"content":"      questionDetails: questionEditFormModel.questionDetails,"},{"lineNumber":650,"author":{"gitId":"-"},"content":"      questionType: questionEditFormModel.questionType,"},{"lineNumber":651,"author":{"gitId":"-"},"content":""},{"lineNumber":652,"author":{"gitId":"-"},"content":"      giverType: questionEditFormModel.giverType,"},{"lineNumber":653,"author":{"gitId":"-"},"content":"      recipientType: questionEditFormModel.recipientType,"},{"lineNumber":654,"author":{"gitId":"-"},"content":""},{"lineNumber":655,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: questionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":656,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: questionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":657,"author":{"gitId":"-"},"content":""},{"lineNumber":658,"author":{"gitId":"-"},"content":"      showResponsesTo: questionEditFormModel.showResponsesTo,"},{"lineNumber":659,"author":{"gitId":"-"},"content":"      showGiverNameTo: questionEditFormModel.showGiverNameTo,"},{"lineNumber":660,"author":{"gitId":"-"},"content":"      showRecipientNameTo: questionEditFormModel.showRecipientNameTo,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":662,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":663,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":664,"author":{"gitId":"-"},"content":"              questionEditFormModel.isSaving \u003d false;"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":666,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":667,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":668,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":669,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":670,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been duplicated below.\u0027);"},{"lineNumber":671,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":672,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":675,"author":{"gitId":"-"},"content":"   * Deletes the existing question."},{"lineNumber":676,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":677,"author":{"gitId":"-"},"content":"  deleteExistingQuestionHandler(index: number): void {"},{"lineNumber":678,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.simpleModalService"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        .openConfirmationModal(\u0027Delete the question?\u0027, SimpleModalType.DANGER,"},{"lineNumber":680,"author":{"gitId":"-"},"content":"            \u0027Warning: Deleted question cannot be recovered. \u003cb\u003eAll existing responses for this question to be deleted.\u003c/b\u003e\u0027);"},{"lineNumber":681,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      const questionEditFormModel: QuestionEditFormModel \u003d this.questionEditFormModels[index];"},{"lineNumber":683,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.deleteFeedbackQuestion(questionEditFormModel.feedbackQuestionId).subscribe("},{"lineNumber":684,"author":{"gitId":"-"},"content":"          () \u003d\u003e {"},{"lineNumber":685,"author":{"gitId":"-"},"content":"            // remove form model"},{"lineNumber":686,"author":{"gitId":"-"},"content":"            this.feedbackQuestionModels.delete(questionEditFormModel.feedbackQuestionId);"},{"lineNumber":687,"author":{"gitId":"-"},"content":"            this.questionEditFormModels.splice(index, 1);"},{"lineNumber":688,"author":{"gitId":"-"},"content":"            this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":689,"author":{"gitId":"-"},"content":""},{"lineNumber":690,"author":{"gitId":"-"},"content":"            this.statusMessageService.showSuccessToast(\u0027The question has been deleted.\u0027);"},{"lineNumber":691,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":692,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":693,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":694,"author":{"gitId":"-"},"content":""},{"lineNumber":695,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":696,"author":{"gitId":"-"},"content":"   * Handles display of template question modal."},{"lineNumber":697,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":698,"author":{"gitId":"-"},"content":"  templateQuestionModalHandler(): void {"},{"lineNumber":699,"author":{"gitId":"halfwhole"},"content":"    const windowClass: string \u003d \u0027modal-large\u0027;"},{"lineNumber":700,"author":{"gitId":"halfwhole"},"content":"    this.ngbModal.open(TemplateQuestionModalComponent, { windowClass }).result.then((questions: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":701,"author":{"gitId":"-"},"content":"      let questionNumber: number \u003d this.questionEditFormModels.length; // append the questions at the end"},{"lineNumber":702,"author":{"gitId":"-"},"content":"      of(...questions).pipe("},{"lineNumber":703,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":704,"author":{"gitId":"-"},"content":"            questionNumber +\u003d 1;"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":706,"author":{"gitId":"-"},"content":"              questionNumber,"},{"lineNumber":707,"author":{"gitId":"-"},"content":"              questionBrief: question.questionBrief,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"              questionDescription: question.questionDescription,"},{"lineNumber":709,"author":{"gitId":"-"},"content":""},{"lineNumber":710,"author":{"gitId":"-"},"content":"              questionDetails: question.questionDetails,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"              questionType: question.questionType,"},{"lineNumber":712,"author":{"gitId":"-"},"content":""},{"lineNumber":713,"author":{"gitId":"-"},"content":"              giverType: question.giverType,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"              recipientType: question.recipientType,"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":717,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":718,"author":{"gitId":"-"},"content":""},{"lineNumber":719,"author":{"gitId":"-"},"content":"              showResponsesTo: question.showResponsesTo,"},{"lineNumber":720,"author":{"gitId":"-"},"content":"              showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":721,"author":{"gitId":"-"},"content":"              showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":722,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":723,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":725,"author":{"gitId":"-"},"content":"        this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":726,"author":{"gitId":"-"},"content":"        this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":727,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"        if (questions.length \u003d\u003d\u003d 1) {"},{"lineNumber":729,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":730,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":731,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The questions have been added to this feedback session.\u0027);"},{"lineNumber":732,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":733,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":734,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":735,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":736,"author":{"gitId":"-"},"content":""},{"lineNumber":737,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":738,"author":{"gitId":"-"},"content":"   * Populates and shows new question edit form."},{"lineNumber":739,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":740,"author":{"gitId":"-"},"content":"  populateAndShowNewQuestionForm(type: FeedbackQuestionType): void {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"    this.isAddingQuestionPanelExpanded \u003d true;"},{"lineNumber":742,"author":{"gitId":"-"},"content":""},{"lineNumber":743,"author":{"gitId":"-"},"content":"    const newQuestionModel: NewQuestionModel \u003d"},{"lineNumber":744,"author":{"gitId":"-"},"content":"        this.feedbackQuestionsService.getNewQuestionModel(type);"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel \u003d {"},{"lineNumber":747,"author":{"gitId":"-"},"content":"      feedbackQuestionId: \u0027\u0027,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"      questionNumber: this.questionEditFormModels.length + 1,"},{"lineNumber":749,"author":{"gitId":"-"},"content":"      questionBrief: newQuestionModel.questionBrief,"},{"lineNumber":750,"author":{"gitId":"-"},"content":"      questionDescription: newQuestionModel.questionDescription,"},{"lineNumber":751,"author":{"gitId":"-"},"content":""},{"lineNumber":752,"author":{"gitId":"-"},"content":"      isQuestionHasResponses: false,"},{"lineNumber":753,"author":{"gitId":"-"},"content":""},{"lineNumber":754,"author":{"gitId":"-"},"content":"      questionType: newQuestionModel.questionType,"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      questionDetails: newQuestionModel.questionDetails,"},{"lineNumber":756,"author":{"gitId":"-"},"content":""},{"lineNumber":757,"author":{"gitId":"-"},"content":"      giverType: newQuestionModel.giverType,"},{"lineNumber":758,"author":{"gitId":"-"},"content":"      recipientType: newQuestionModel.recipientType,"},{"lineNumber":759,"author":{"gitId":"-"},"content":""},{"lineNumber":760,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: newQuestionModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":761,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":762,"author":{"gitId":"-"},"content":"          ? newQuestionModel.customNumberOfEntitiesToGiveFeedbackTo : 1,"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"      showResponsesTo: newQuestionModel.showResponsesTo,"},{"lineNumber":765,"author":{"gitId":"-"},"content":"      showGiverNameTo: newQuestionModel.showGiverNameTo,"},{"lineNumber":766,"author":{"gitId":"-"},"content":"      showRecipientNameTo: newQuestionModel.showRecipientNameTo,"},{"lineNumber":767,"author":{"gitId":"-"},"content":""},{"lineNumber":768,"author":{"gitId":"-"},"content":"      isEditable: true,"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      isSaving: false,"},{"lineNumber":770,"author":{"gitId":"-"},"content":"      isCollapsed: false,"},{"lineNumber":771,"author":{"gitId":"-"},"content":""},{"lineNumber":772,"author":{"gitId":"-"},"content":"      isVisibilityChanged: false,"},{"lineNumber":773,"author":{"gitId":"-"},"content":"      isFeedbackPathChanged: false,"},{"lineNumber":774,"author":{"gitId":"-"},"content":"      isQuestionDetailsChanged: false,"},{"lineNumber":775,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":776,"author":{"gitId":"-"},"content":""},{"lineNumber":777,"author":{"gitId":"-"},"content":"    // inherit some settings from the last question"},{"lineNumber":778,"author":{"gitId":"-"},"content":"    if (this.questionEditFormModels.length \u003e 0) {"},{"lineNumber":779,"author":{"gitId":"-"},"content":"      const lastQuestionEditFormModel: QuestionEditFormModel \u003d"},{"lineNumber":780,"author":{"gitId":"-"},"content":"          this.questionEditFormModels[this.questionEditFormModels.length - 1];"},{"lineNumber":781,"author":{"gitId":"-"},"content":""},{"lineNumber":782,"author":{"gitId":"-"},"content":"      const newQuestionAllowedFeedbackPaths: Map\u003cFeedbackParticipantType, FeedbackParticipantType[]\u003e \u003d"},{"lineNumber":783,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getAllowedFeedbackPaths(type);"},{"lineNumber":784,"author":{"gitId":"-"},"content":"      // inherit feedback path if applicable"},{"lineNumber":785,"author":{"gitId":"-"},"content":"      if (newQuestionAllowedFeedbackPaths.has(lastQuestionEditFormModel.giverType)"},{"lineNumber":786,"author":{"gitId":"-"},"content":"          // tslint:disable-next-line:no-non-null-assertion"},{"lineNumber":787,"author":{"gitId":"-"},"content":"          \u0026\u0026 newQuestionAllowedFeedbackPaths.get(lastQuestionEditFormModel.giverType)!"},{"lineNumber":788,"author":{"gitId":"-"},"content":"              .indexOf(lastQuestionEditFormModel.recipientType) !\u003d\u003d -1) {"},{"lineNumber":789,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.giverType \u003d lastQuestionEditFormModel.giverType;"},{"lineNumber":790,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.recipientType \u003d lastQuestionEditFormModel.recipientType;"},{"lineNumber":791,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":792,"author":{"gitId":"-"},"content":""},{"lineNumber":793,"author":{"gitId":"-"},"content":"      const newQuestionVisibilityStateMachine: VisibilityStateMachine \u003d"},{"lineNumber":794,"author":{"gitId":"-"},"content":"          this.feedbackQuestionsService.getNewVisibilityStateMachine("},{"lineNumber":795,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.giverType, this.newQuestionEditFormModel.recipientType);"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      // inherit visibility settings if applicable, the state machine will automatically filter out invalid choices"},{"lineNumber":797,"author":{"gitId":"-"},"content":"      newQuestionVisibilityStateMachine.applyVisibilitySettings({"},{"lineNumber":798,"author":{"gitId":"-"},"content":"        SHOW_RESPONSE: lastQuestionEditFormModel.showResponsesTo,"},{"lineNumber":799,"author":{"gitId":"-"},"content":"        SHOW_GIVER_NAME: lastQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":800,"author":{"gitId":"-"},"content":"        SHOW_RECIPIENT_NAME: lastQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":801,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":802,"author":{"gitId":"-"},"content":"      const newQuestionShowResponsesTo: FeedbackVisibilityType[]  \u003d"},{"lineNumber":803,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RESPONSE);"},{"lineNumber":804,"author":{"gitId":"-"},"content":"      const newQuestionShowGiverNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":805,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine.getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_GIVER_NAME);"},{"lineNumber":806,"author":{"gitId":"-"},"content":"      const newQuestionShowRecipientNameTo: FeedbackVisibilityType[] \u003d"},{"lineNumber":807,"author":{"gitId":"-"},"content":"          newQuestionVisibilityStateMachine"},{"lineNumber":808,"author":{"gitId":"-"},"content":"              .getVisibilityTypesUnderVisibilityControl(VisibilityControl.SHOW_RECIPIENT_NAME);"},{"lineNumber":809,"author":{"gitId":"-"},"content":""},{"lineNumber":810,"author":{"gitId":"-"},"content":"      let isAllowedToUseInheritedVisibility: boolean \u003d false;"},{"lineNumber":811,"author":{"gitId":"-"},"content":"      if (this.feedbackQuestionsService"},{"lineNumber":812,"author":{"gitId":"-"},"content":"          .isCustomFeedbackVisibilitySettingAllowed(this.newQuestionEditFormModel.questionType)) {"},{"lineNumber":813,"author":{"gitId":"-"},"content":"        isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":814,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":815,"author":{"gitId":"-"},"content":"        const commonFeedbackVisibilitySettings: CommonVisibilitySetting[] \u003d"},{"lineNumber":816,"author":{"gitId":"-"},"content":"            this.feedbackQuestionsService.getCommonFeedbackVisibilitySettings("},{"lineNumber":817,"author":{"gitId":"-"},"content":"                newQuestionVisibilityStateMachine, this.newQuestionEditFormModel.questionType);"},{"lineNumber":818,"author":{"gitId":"-"},"content":"        // new question is only allowed to have common visibility settings"},{"lineNumber":819,"author":{"gitId":"-"},"content":"        // check whether the inherited settings fall into that or not"},{"lineNumber":820,"author":{"gitId":"-"},"content":"        for (const commonVisibilityOption of commonFeedbackVisibilitySettings) {"},{"lineNumber":821,"author":{"gitId":"-"},"content":"          if (this.isSameSet(newQuestionShowResponsesTo, commonVisibilityOption.visibilitySettings.SHOW_RESPONSE)"},{"lineNumber":822,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowGiverNameTo,"},{"lineNumber":823,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_GIVER_NAME)"},{"lineNumber":824,"author":{"gitId":"-"},"content":"              \u0026\u0026 this.isSameSet(newQuestionShowRecipientNameTo,"},{"lineNumber":825,"author":{"gitId":"-"},"content":"                  commonVisibilityOption.visibilitySettings.SHOW_RECIPIENT_NAME)) {"},{"lineNumber":826,"author":{"gitId":"-"},"content":"            isAllowedToUseInheritedVisibility \u003d true;"},{"lineNumber":827,"author":{"gitId":"-"},"content":"            break;"},{"lineNumber":828,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":829,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":830,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":831,"author":{"gitId":"-"},"content":""},{"lineNumber":832,"author":{"gitId":"-"},"content":"      if (isAllowedToUseInheritedVisibility) {"},{"lineNumber":833,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showResponsesTo \u003d newQuestionShowResponsesTo;"},{"lineNumber":834,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showGiverNameTo \u003d newQuestionShowGiverNameTo;"},{"lineNumber":835,"author":{"gitId":"-"},"content":"        this.newQuestionEditFormModel.showRecipientNameTo \u003d newQuestionShowRecipientNameTo;"},{"lineNumber":836,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":837,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":838,"author":{"gitId":"-"},"content":""},{"lineNumber":839,"author":{"gitId":"-"},"content":"    this.scrollToNewEditForm();"},{"lineNumber":840,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":841,"author":{"gitId":"-"},"content":""},{"lineNumber":842,"author":{"gitId":"-"},"content":"  private isSameSet(setA: FeedbackVisibilityType[], setB: FeedbackVisibilityType[]): boolean {"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    return setA.length \u003d\u003d\u003d setB.length \u0026\u0026 setA.every((ele: FeedbackVisibilityType) \u003d\u003e setB.includes(ele));"},{"lineNumber":844,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":845,"author":{"gitId":"-"},"content":""},{"lineNumber":846,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":847,"author":{"gitId":"-"},"content":"   * Creates a new question."},{"lineNumber":848,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":849,"author":{"gitId":"-"},"content":"  createNewQuestionHandler(): void {"},{"lineNumber":850,"author":{"gitId":"-"},"content":"    this.newQuestionEditFormModel.isSaving \u003d true;"},{"lineNumber":851,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":852,"author":{"gitId":"-"},"content":"      questionNumber: this.newQuestionEditFormModel.questionNumber,"},{"lineNumber":853,"author":{"gitId":"-"},"content":"      questionBrief: this.newQuestionEditFormModel.questionBrief,"},{"lineNumber":854,"author":{"gitId":"-"},"content":"      questionDescription: this.newQuestionEditFormModel.questionDescription,"},{"lineNumber":855,"author":{"gitId":"-"},"content":""},{"lineNumber":856,"author":{"gitId":"-"},"content":"      questionDetails: this.newQuestionEditFormModel.questionDetails,"},{"lineNumber":857,"author":{"gitId":"-"},"content":"      questionType: this.newQuestionEditFormModel.questionType,"},{"lineNumber":858,"author":{"gitId":"-"},"content":""},{"lineNumber":859,"author":{"gitId":"-"},"content":"      giverType: this.newQuestionEditFormModel.giverType,"},{"lineNumber":860,"author":{"gitId":"-"},"content":"      recipientType: this.newQuestionEditFormModel.recipientType,"},{"lineNumber":861,"author":{"gitId":"-"},"content":""},{"lineNumber":862,"author":{"gitId":"-"},"content":"      numberOfEntitiesToGiveFeedbackToSetting: this.newQuestionEditFormModel.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":863,"author":{"gitId":"-"},"content":"      customNumberOfEntitiesToGiveFeedbackTo: this.newQuestionEditFormModel.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":864,"author":{"gitId":"-"},"content":""},{"lineNumber":865,"author":{"gitId":"-"},"content":"      showResponsesTo: this.newQuestionEditFormModel.showResponsesTo,"},{"lineNumber":866,"author":{"gitId":"-"},"content":"      showGiverNameTo: this.newQuestionEditFormModel.showGiverNameTo,"},{"lineNumber":867,"author":{"gitId":"-"},"content":"      showRecipientNameTo: this.newQuestionEditFormModel.showRecipientNameTo,"},{"lineNumber":868,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":869,"author":{"gitId":"-"},"content":"        .pipe("},{"lineNumber":870,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e {"},{"lineNumber":871,"author":{"gitId":"-"},"content":"              this.newQuestionEditFormModel.isSaving \u003d false;"},{"lineNumber":872,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":873,"author":{"gitId":"-"},"content":"        )"},{"lineNumber":874,"author":{"gitId":"-"},"content":"        .subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":875,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":876,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":877,"author":{"gitId":"-"},"content":""},{"lineNumber":878,"author":{"gitId":"-"},"content":"          this.moveQuestionForm("},{"lineNumber":879,"author":{"gitId":"-"},"content":"              this.questionEditFormModels.length - 1, newQuestion.questionNumber - 1);"},{"lineNumber":880,"author":{"gitId":"-"},"content":"          this.normalizeQuestionNumberInQuestionForms();"},{"lineNumber":881,"author":{"gitId":"-"},"content":"          this.isAddingQuestionPanelExpanded \u003d false;"},{"lineNumber":882,"author":{"gitId":"-"},"content":""},{"lineNumber":883,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":884,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":885,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":886,"author":{"gitId":"-"},"content":""},{"lineNumber":887,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":888,"author":{"gitId":"-"},"content":"   * Handles \u0027Copy Question\u0027 click event."},{"lineNumber":889,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":890,"author":{"gitId":"-"},"content":"  copyQuestionsFromOtherSessionsHandler(): void {"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    this.isCopyingQuestion \u003d true;"},{"lineNumber":892,"author":{"gitId":"-"},"content":"    const questionToCopyCandidates: QuestionToCopyCandidate[] \u003d [];"},{"lineNumber":893,"author":{"gitId":"-"},"content":""},{"lineNumber":894,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor().pipe("},{"lineNumber":895,"author":{"gitId":"-"},"content":"        switchMap((sessions: FeedbackSessions) \u003d\u003e of(...sessions.feedbackSessions)),"},{"lineNumber":896,"author":{"gitId":"-"},"content":"        flatMap((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":897,"author":{"gitId":"-"},"content":"          return this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":898,"author":{"gitId":"-"},"content":"            courseId: session.courseId,"},{"lineNumber":899,"author":{"gitId":"-"},"content":"            feedbackSessionName: session.feedbackSessionName,"},{"lineNumber":900,"author":{"gitId":"-"},"content":"            intent: Intent.FULL_DETAIL,"},{"lineNumber":901,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":902,"author":{"gitId":"-"},"content":"          )"},{"lineNumber":903,"author":{"gitId":"-"},"content":"              .pipe("},{"lineNumber":904,"author":{"gitId":"-"},"content":"                  map((questions: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":905,"author":{"gitId":"-"},"content":"                    return questions.questions.map((q: FeedbackQuestion) \u003d\u003e ({"},{"lineNumber":906,"author":{"gitId":"-"},"content":"                      courseId: session.courseId,"},{"lineNumber":907,"author":{"gitId":"-"},"content":"                      feedbackSessionName: session.feedbackSessionName,"},{"lineNumber":908,"author":{"gitId":"-"},"content":"                      question: q,"},{"lineNumber":909,"author":{"gitId":"-"},"content":""},{"lineNumber":910,"author":{"gitId":"-"},"content":"                      isSelected: false,"},{"lineNumber":911,"author":{"gitId":"-"},"content":"                    } as QuestionToCopyCandidate));"},{"lineNumber":912,"author":{"gitId":"-"},"content":"                  }),"},{"lineNumber":913,"author":{"gitId":"-"},"content":"              );"},{"lineNumber":914,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":915,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e this.isCopyingQuestion \u003d false),"},{"lineNumber":916,"author":{"gitId":"-"},"content":"    ).subscribe((questionToCopyCandidate: QuestionToCopyCandidate[]) \u003d\u003e {"},{"lineNumber":917,"author":{"gitId":"-"},"content":"      questionToCopyCandidates.push(...questionToCopyCandidate);"},{"lineNumber":918,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); }, () \u003d\u003e {"},{"lineNumber":919,"author":{"gitId":"-"},"content":"      const ref: NgbModalRef \u003d this.ngbModal.open(CopyQuestionsFromOtherSessionsModalComponent);"},{"lineNumber":920,"author":{"gitId":"-"},"content":"      ref.componentInstance.questionToCopyCandidates \u003d questionToCopyCandidates;"},{"lineNumber":921,"author":{"gitId":"-"},"content":""},{"lineNumber":922,"author":{"gitId":"-"},"content":"      ref.result.then((questionsToCopy: FeedbackQuestion[]) \u003d\u003e {"},{"lineNumber":923,"author":{"gitId":"-"},"content":"        this.isCopyingQuestion \u003d true;"},{"lineNumber":924,"author":{"gitId":"-"},"content":"        of(...questionsToCopy).pipe("},{"lineNumber":925,"author":{"gitId":"-"},"content":"            concatMap((questionToCopy: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":926,"author":{"gitId":"-"},"content":"              return this.feedbackQuestionsService.createFeedbackQuestion(this.courseId, this.feedbackSessionName, {"},{"lineNumber":927,"author":{"gitId":"-"},"content":"                questionNumber: this.questionEditFormModels.length + 1, // add the copied question at the end"},{"lineNumber":928,"author":{"gitId":"-"},"content":"                questionBrief: questionToCopy.questionBrief,"},{"lineNumber":929,"author":{"gitId":"-"},"content":"                questionDescription: questionToCopy.questionDescription,"},{"lineNumber":930,"author":{"gitId":"-"},"content":""},{"lineNumber":931,"author":{"gitId":"-"},"content":"                questionDetails: questionToCopy.questionDetails,"},{"lineNumber":932,"author":{"gitId":"-"},"content":"                questionType: questionToCopy.questionType,"},{"lineNumber":933,"author":{"gitId":"-"},"content":""},{"lineNumber":934,"author":{"gitId":"-"},"content":"                giverType: questionToCopy.giverType,"},{"lineNumber":935,"author":{"gitId":"-"},"content":"                recipientType: questionToCopy.recipientType,"},{"lineNumber":936,"author":{"gitId":"-"},"content":""},{"lineNumber":937,"author":{"gitId":"-"},"content":"                numberOfEntitiesToGiveFeedbackToSetting: questionToCopy.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":938,"author":{"gitId":"-"},"content":"                customNumberOfEntitiesToGiveFeedbackTo: questionToCopy.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":939,"author":{"gitId":"-"},"content":""},{"lineNumber":940,"author":{"gitId":"-"},"content":"                showResponsesTo: questionToCopy.showResponsesTo,"},{"lineNumber":941,"author":{"gitId":"-"},"content":"                showGiverNameTo: questionToCopy.showGiverNameTo,"},{"lineNumber":942,"author":{"gitId":"-"},"content":"                showRecipientNameTo: questionToCopy.showRecipientNameTo,"},{"lineNumber":943,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":944,"author":{"gitId":"-"},"content":"            }),"},{"lineNumber":945,"author":{"gitId":"-"},"content":"            finalize(() \u003d\u003e this.isCopyingQuestion \u003d false),"},{"lineNumber":946,"author":{"gitId":"-"},"content":"        ).subscribe((newQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":947,"author":{"gitId":"-"},"content":"          this.questionEditFormModels.push(this.getQuestionEditFormModel(newQuestion));"},{"lineNumber":948,"author":{"gitId":"-"},"content":"          this.feedbackQuestionModels.set(newQuestion.feedbackQuestionId, newQuestion);"},{"lineNumber":949,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The question has been added to this feedback session.\u0027);"},{"lineNumber":950,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":952,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":953,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":954,"author":{"gitId":"-"},"content":""},{"lineNumber":955,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":956,"author":{"gitId":"-"},"content":"   * Gets all students of a course."},{"lineNumber":957,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":958,"author":{"gitId":"-"},"content":"  getAllStudentsOfCourse(): void {"},{"lineNumber":959,"author":{"gitId":"-"},"content":"    this.studentService.getStudentsFromCourse({ courseId: this.courseId })"},{"lineNumber":960,"author":{"gitId":"-"},"content":"        .subscribe((students: Students) \u003d\u003e {"},{"lineNumber":961,"author":{"gitId":"-"},"content":"          this.studentsOfCourse \u003d students.students;"},{"lineNumber":962,"author":{"gitId":"-"},"content":""},{"lineNumber":963,"author":{"gitId":"-"},"content":"          // sort the student list based on team name and student name"},{"lineNumber":964,"author":{"gitId":"-"},"content":"          this.studentsOfCourse.sort((a: Student, b: Student): number \u003d\u003e {"},{"lineNumber":965,"author":{"gitId":"-"},"content":"            const teamNameCompare: number \u003d a.teamName.localeCompare(b.teamName);"},{"lineNumber":966,"author":{"gitId":"-"},"content":"            if (teamNameCompare \u003d\u003d\u003d 0) {"},{"lineNumber":967,"author":{"gitId":"-"},"content":"              return a.name.localeCompare(b.name);"},{"lineNumber":968,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":969,"author":{"gitId":"-"},"content":"            return teamNameCompare;"},{"lineNumber":970,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":971,"author":{"gitId":"-"},"content":""},{"lineNumber":972,"author":{"gitId":"-"},"content":"          // select the first student"},{"lineNumber":973,"author":{"gitId":"-"},"content":"          if (this.studentsOfCourse.length \u003e\u003d 1) {"},{"lineNumber":974,"author":{"gitId":"-"},"content":"            this.emailOfStudentToPreview \u003d this.studentsOfCourse[0].email;"},{"lineNumber":975,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":976,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":977,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":978,"author":{"gitId":"-"},"content":""},{"lineNumber":979,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":980,"author":{"gitId":"-"},"content":"   * Gets all instructors of a course which can be previewed as."},{"lineNumber":981,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":982,"author":{"gitId":"-"},"content":"  getAllInstructorsCanBePreviewedAs(): void {"},{"lineNumber":983,"author":{"gitId":"-"},"content":"    this.instructorService.loadInstructors({"},{"lineNumber":984,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":985,"author":{"gitId":"-"},"content":"      intent: Intent.FULL_DETAIL,"},{"lineNumber":986,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":987,"author":{"gitId":"-"},"content":"        .subscribe((instructors: Instructors) \u003d\u003e {"},{"lineNumber":988,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs \u003d instructors.instructors;"},{"lineNumber":989,"author":{"gitId":"-"},"content":""},{"lineNumber":990,"author":{"gitId":"-"},"content":"          // TODO use privilege API to filter instructors who has INSTRUCTOR_PERMISSION_SUBMIT_SESSION_IN_SECTIONS"},{"lineNumber":991,"author":{"gitId":"-"},"content":"          // in the feedback session"},{"lineNumber":992,"author":{"gitId":"-"},"content":""},{"lineNumber":993,"author":{"gitId":"-"},"content":"          // sort the instructor list based on name"},{"lineNumber":994,"author":{"gitId":"-"},"content":"          this.instructorsCanBePreviewedAs.sort((a: Instructor, b: Instructor): number \u003d\u003e {"},{"lineNumber":995,"author":{"gitId":"-"},"content":"            return a.name.localeCompare(b.name);"},{"lineNumber":996,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":997,"author":{"gitId":"-"},"content":""},{"lineNumber":998,"author":{"gitId":"-"},"content":"          // select the first instructor"},{"lineNumber":999,"author":{"gitId":"-"},"content":"          if (this.instructorsCanBePreviewedAs.length \u003e\u003d 1) {"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"            this.emailOfInstructorToPreview \u003d this.instructorsCanBePreviewedAs[0].email;"},{"lineNumber":1001,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":1002,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1004,"author":{"gitId":"-"},"content":""},{"lineNumber":1005,"author":{"gitId":"-"},"content":"  expandAll(): void {"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1007,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d false;"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1009,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1010,"author":{"gitId":"-"},"content":""},{"lineNumber":1011,"author":{"gitId":"-"},"content":"  collapseAll(): void {"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"    this.questionEditFormModels.forEach(((model: QuestionEditFormModel): void \u003d\u003e {"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"      model.isCollapsed \u003d true;"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1016,"author":{"gitId":"-"},"content":""},{"lineNumber":1017,"author":{"gitId":"-"},"content":"  private deepCopy\u003cT\u003e(obj: T): T {"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"    return JSON.parse(JSON.stringify(obj));"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1020,"author":{"gitId":"-"},"content":""},{"lineNumber":1021,"author":{"gitId":"-"},"content":"  private scrollToNewEditForm(): void {"},{"lineNumber":1022,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"      const allEditForms: NodeListOf\u003cElement\u003e \u003d document.querySelectorAll(\u0027tm-question-edit-form\u0027);"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"      const newEditForm: Element \u003d allEditForms[allEditForms.length - 1];"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"      const yOffset: number \u003d -70; // Need offset because of the navBar"},{"lineNumber":1026,"author":{"gitId":"-"},"content":"      const y: number \u003d newEditForm.getBoundingClientRect().top + window.pageYOffset + yOffset;"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"      window.scrollTo({ top: y, behavior: \u0027smooth\u0027 });"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"    }, 0);"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"teikjun":5,"halfwhole":2,"-":1023}},{"path":"src/web/app/pages-instructor/instructor-session-modal-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Router } from \u0027@angular/router\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { forkJoin } from \u0027rxjs\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { finalize } from \u0027rxjs/operators\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../services/feedback-questions.service\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../services/feedback-sessions.service\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../services/instructor.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../services/navigation.service\u0027;"},{"lineNumber":9,"author":{"gitId":"teikjun"},"content":"import { ProgressBarService } from \u0027../../services/progress-bar.service\u0027;"},{"lineNumber":10,"author":{"gitId":"teikjun"},"content":"import { SimpleModalService } from \u0027../../services/simple-modal.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../services/status-message.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../services/student.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../services/table-comparator.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet, Instructor, Instructors,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  Student, Students,"},{"lineNumber":17,"author":{"gitId":"-"},"content":"} from \u0027../../types/api-output\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../types/api-request\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  ResendResultsLinkToRespondentModalComponent,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"} from \"../components/sessions-table/resend-results-link-to-respondent-modal/resend-results-link-to-respondent-modal.component\"; // tslint:disable-line"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    InstructorListInfoTableRowModel,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    StudentListInfoTableRowModel,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  SendRemindersToRespondentsModalComponent,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/send-reminders-to-respondents-modal/send-reminders-to-respondents-modal.component\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"} from \u0027../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../error-message-output\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  InstructorSessionBasePageComponent,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"} from \u0027./instructor-session-base-page.component\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * The base page for session related page."},{"lineNumber":39,"author":{"gitId":"-"},"content":" */"},{"lineNumber":40,"author":{"gitId":"-"},"content":"export abstract class InstructorSessionModalPageComponent extends InstructorSessionBasePageComponent {"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"  isSendReminderLoading: boolean \u003d false;"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  protected constructor(router: Router,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        instructorService: InstructorService,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                        statusMessageService: StatusMessageService,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                        navigationService: NavigationService,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        tableComparatorService: TableComparatorService,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        ngbModal: NgbModal,"},{"lineNumber":52,"author":{"gitId":"teikjun"},"content":"                        simpleModalService: SimpleModalService,"},{"lineNumber":53,"author":{"gitId":"teikjun"},"content":"                        progressBarService: ProgressBarService,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                        protected studentService: StudentService) {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService,"},{"lineNumber":56,"author":{"gitId":"teikjun"},"content":"        feedbackSessionsService, feedbackQuestionsService, tableComparatorService,"},{"lineNumber":57,"author":{"gitId":"teikjun"},"content":"        ngbModal, simpleModalService, progressBarService);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents on the published results link."},{"lineNumber":62,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  resendResultsLinkToRespondentsEventHandler(model: SessionsTableRowModel): void {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":69,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e this.isSendReminderLoading \u003d false))"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[1] as Instructors).instructors;"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(ResendResultsLinkToRespondentModalComponent);"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":81,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":82,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":83,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"          hasSubmittedSession: false,"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"          isSelected: false,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            instructors.map((instructor: Instructor) \u003d\u003e ({"},{"lineNumber":92,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"              hasSubmittedSession: false,"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"              isSelected: false,"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindResultsLinkToRespondents(courseId, feedbackSessionName, {"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e this.isSendReminderLoading \u003d false))"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":107,"author":{"gitId":"-"},"content":"                  \u0027Session published notification emails have been resent to those students and instructors. \u0027"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   * Sends e-mails to remind respondents who have not submitted their feedback."},{"lineNumber":116,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":117,"author":{"gitId":"-"},"content":"  sendRemindersToRespondentsEventHandler(model: SessionsTableRowModel): void {"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    this.isSendReminderLoading \u003d true;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const courseId: string \u003d model.feedbackSession.courseId;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    const feedbackSessionName: string \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":123,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({ courseId }),"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({ courseId, feedbackSessionName }),"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      this.instructorService.loadInstructors({ courseId, intent: Intent.FULL_DETAIL }),"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ]).pipe(finalize(() \u003d\u003e this.isSendReminderLoading \u003d false))"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      .subscribe((result: any[]) \u003d\u003e {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        const students: Student[] \u003d (result[0] as Students).students;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        const giverSet: Set\u003cstring\u003e \u003d new Set((result[1] as FeedbackSessionSubmittedGiverSet).giverIdentifiers);"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        const instructors: Instructor[] \u003d (result[2] as Instructors).instructors;"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"        const modalRef: NgbModalRef \u003d this.ngbModal.open(SendRemindersToRespondentsModalComponent);"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.courseId \u003d courseId;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.feedbackSessionName \u003d feedbackSessionName;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.studentListInfoTableRowModels \u003d students.map((student: Student) \u003d\u003e ({"},{"lineNumber":137,"author":{"gitId":"-"},"content":"          email: student.email,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"          name: student.name,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"          teamName: student.teamName,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"          sectionName: student.sectionName,"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"          hasSubmittedSession: giverSet.has(student.email),"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"-"},"content":"          isSelected: false,"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } as StudentListInfoTableRowModel));"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        modalRef.componentInstance.instructorListInfoTableRowModels \u003d instructors.map("},{"lineNumber":147,"author":{"gitId":"-"},"content":"            (instructor: Instructor) \u003d\u003e ({"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              email: instructor.email,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              name: instructor.name,"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"              hasSubmittedSession: giverSet.has(instructor.email),"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"              isSelected: false,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            } as InstructorListInfoTableRowModel));"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"        modalRef.result.then((respondentsToRemind: any[]) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"          this.isSendReminderLoading \u003d true;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.remindFeedbackSessionSubmissionForRespondents(courseId, feedbackSessionName, {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            usersToRemind: respondentsToRemind.map((m: any) \u003d\u003e m.email),"},{"lineNumber":160,"author":{"gitId":"-"},"content":"          }).pipe(finalize(() \u003d\u003e this.isSendReminderLoading \u003d false))"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            .subscribe(() \u003d\u003e {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast("},{"lineNumber":163,"author":{"gitId":"-"},"content":"                  \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                  + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e {});"},{"lineNumber":167,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"teikjun":6,"-":163}},{"path":"src/web/app/pages-instructor/instructor-session-result-page/instructor-session-result-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit, ViewChild } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { saveAs } from \u0027file-saver\u0027;"},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"import { concat, Observable } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"import { finalize, takeWhile } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  CourseSectionNames,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  FeedbackQuestions,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus, FeedbackSessionSubmissionStatus,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmittedGiverSet,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  QuestionOutput,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ResponseOutput, ResponseVisibleSetting,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  SessionResults, SessionVisibleSetting,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  Students,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { CommentToCommentRowModelPipe } from \u0027../../components/comment-box/comment-to-comment-row-model.pipe\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { CommentsToCommentTableModelPipe } from \u0027../../components/comment-box/comments-to-comment-table-model.pipe\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import { StudentListInfoTableRowModel } from \u0027../../components/sessions-table/respondent-list-info-table/respondent-list-info-table-model\u0027;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { InstructorCommentsComponent } from \u0027../instructor-comments.component\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { InstructorSessionNoResponsePanelComponent } from \u0027./instructor-session-no-response-panel.component\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { InstructorSessionResultSectionType } from \u0027./instructor-session-result-section-type.enum\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { InstructorSessionResultViewType } from \u0027./instructor-session-result-view-type.enum\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Per section view tab model."},{"lineNumber":45,"author":{"gitId":"-"},"content":" */"},{"lineNumber":46,"author":{"gitId":"-"},"content":"export interface SectionTabModel {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  questions: QuestionOutput[];"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  hasPopulated: boolean;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":54,"author":{"gitId":"-"},"content":" * Per question view tab model."},{"lineNumber":55,"author":{"gitId":"-"},"content":" */"},{"lineNumber":56,"author":{"gitId":"-"},"content":"export interface QuestionTabModel {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  question: FeedbackQuestion;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  responses: ResponseOutput[];"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  statistics: string; // TODO will define types later"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  hasPopulated: boolean;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  isTabExpanded: boolean;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":67,"author":{"gitId":"-"},"content":" * Instructor feedback session result page."},{"lineNumber":68,"author":{"gitId":"-"},"content":" */"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-session-result-page\u0027,"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-session-result-page.component.html\u0027,"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-session-result-page.component.scss\u0027],"},{"lineNumber":73,"author":{"gitId":"-"},"content":"})"},{"lineNumber":74,"author":{"gitId":"-"},"content":"export class InstructorSessionResultPageComponent extends InstructorCommentsComponent implements OnInit {"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  InstructorSessionResultSectionType: typeof InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  InstructorSessionResultViewType: typeof InstructorSessionResultViewType \u003d InstructorSessionResultViewType;"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  formattedResultVisibleFromTime: string \u003d \u0027\u0027;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  fsName: string \u003d \u0027\u0027;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  viewType: string \u003d InstructorSessionResultViewType.QUESTION;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  viewTooltipText: string \u003d \u0027View results in different formats\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  section: string \u003d \u0027\u0027;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  sectionType: InstructorSessionResultSectionType \u003d InstructorSessionResultSectionType.EITHER;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  groupByTeam: boolean \u003d true;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  showStatistics: boolean \u003d true;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  indicateMissingResponses: boolean \u003d true;"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"  // below are two models contain similar and duplicate data"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  // they are for different views"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  sectionsModel: Record\u003cstring, SectionTabModel\u003e \u003d {};"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  isSectionsLoaded: boolean \u003d false;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"  hasSectionsLoadingFailed: boolean \u003d false;"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  questionsModel: Record\u003cstring, QuestionTabModel\u003e \u003d {};"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isQuestionsLoaded: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  hasQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d false;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  hasFeedbackSessionLoadingFailed: boolean \u003d false;"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  isDownloadingResults: boolean \u003d false;"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"  noResponseStudents: Student[] \u003d [];"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  isNoResponsePanelLoaded: boolean \u003d false;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  hasNoResponseLoadingFailed: boolean \u003d false;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  allStudentsInCourse: Student[] \u003d [];"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus: typeof FeedbackSessionPublishStatus \u003d FeedbackSessionPublishStatus;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"  isExpandAll: boolean \u003d false;"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"  session: FeedbackSession \u003d {"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    timeZone: \u0027\u0027,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    submissionEndTimestamp: 0,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    gracePeriod: 0,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  @ViewChild(InstructorSessionNoResponsePanelComponent) noResponsePanel?:"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    InstructorSessionNoResponsePanelComponent;"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  constructor(private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":137,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":138,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":139,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":140,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":141,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":142,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":143,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":144,"author":{"gitId":"-"},"content":"              private commentsToCommentTableModel: CommentsToCommentTableModelPipe,"},{"lineNumber":145,"author":{"gitId":"moziliar"},"content":"              private progressBarService: ProgressBarService,"},{"lineNumber":146,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"              commentService: FeedbackResponseCommentService,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"              commentToCommentRowModel: CommentToCommentRowModelPipe,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService) {"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    super(commentToCommentRowModel, commentService, statusMessageService, tableComparatorService);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      this.fsName \u003d queryParams.fsname;"},{"lineNumber":158,"author":{"gitId":"-"},"content":"      this.loadFeedbackSessionResults(this.courseId, this.fsName);"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":160,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"  loadFeedbackSessionResults(courseId: string, feedbackSessionName: string): void {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    this.hasQuestionsLoadingFailed \u003d false;"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    this.hasSectionsLoadingFailed \u003d false;"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionLoadingFailed \u003d false;"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      feedbackSessionName,"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"      this.session \u003d feedbackSession;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"      this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":174,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionStartTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":176,"author":{"gitId":"-"},"content":"          .formatToString(this.session.submissionEndTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      if (this.session.resultVisibleFromTimestamp) {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":180,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        this.formattedResultVisibleFromTime \u003d \u0027Not applicable\u0027;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"      // load section tabs"},{"lineNumber":186,"author":{"gitId":"-"},"content":"      this.courseService.getCourseSectionNames(courseId)"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        .subscribe((courseSectionNames: CourseSectionNames) \u003d\u003e {"},{"lineNumber":188,"author":{"gitId":"-"},"content":"          this.sectionsModel.None \u003d {"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            questions: [],"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            hasPopulated: false,"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":192,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          for (const sectionName of courseSectionNames.sectionNames) {"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.sectionsModel[sectionName] \u003d {"},{"lineNumber":195,"author":{"gitId":"-"},"content":"              questions: [],"},{"lineNumber":196,"author":{"gitId":"-"},"content":"              hasPopulated: false,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              isTabExpanded: false,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":200,"author":{"gitId":"-"},"content":"          this.isSectionsLoaded \u003d true;"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":202,"author":{"gitId":"-"},"content":"          this.hasSectionsLoadingFailed \u003d true;"},{"lineNumber":203,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"      // load question tabs"},{"lineNumber":207,"author":{"gitId":"-"},"content":"      this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        feedbackSessionName,"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      }).subscribe((feedbackQuestions: FeedbackQuestions) \u003d\u003e {"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        for (const question of feedbackQuestions.questions) {"},{"lineNumber":213,"author":{"gitId":"-"},"content":"          this.questionsModel[question.feedbackQuestionId] \u003d {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            question,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            responses: [],"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            statistics: \u0027\u0027,"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            hasPopulated: false,"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            isTabExpanded: false,"},{"lineNumber":219,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        this.isQuestionsLoaded \u003d true;"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        this.hasQuestionsLoadingFailed \u003d true;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":225,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":"      // load all students in course"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      this.studentService.getStudentsFromCourse({"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      }).subscribe((allStudents: Students) \u003d\u003e {"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        this.allStudentsInCourse \u003d allStudents.students;"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        this.loadNoResponseStudents(courseId, feedbackSessionName);"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":235,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"      // load current instructor name"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      this.instructorService.getInstructor({"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        courseId,"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        intent: Intent.FULL_DETAIL,"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        this.currInstructorName \u003d instructor.name;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      this.isFeedbackSessionLoading \u003d false;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      this.hasFeedbackSessionLoadingFailed \u003d true;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":250,"author":{"gitId":"-"},"content":""},{"lineNumber":251,"author":{"gitId":"-"},"content":"  loadNoResponseStudents(courseId: string, feedbackSessionName: string): void {"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    this.hasNoResponseLoadingFailed \u003d false;"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    // load no response students"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionSubmittedGiverSet({"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      courseId,"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      feedbackSessionName,"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }).subscribe((feedbackSessionSubmittedGiverSet: FeedbackSessionSubmittedGiverSet) \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      // TODO team is missing"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      this.noResponseStudents \u003d this.allStudentsInCourse.filter((student: Student) \u003d\u003e"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        !feedbackSessionSubmittedGiverSet.giverIdentifiers.includes(student.email));"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      this.hasNoResponseLoadingFailed \u003d true;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    this.isNoResponsePanelLoaded \u003d true;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":269,"author":{"gitId":"-"},"content":"   * Toggles the question tab in per question view."},{"lineNumber":270,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  toggleQuestionTab(questionId: string): void {"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    this.questionsModel[questionId].isTabExpanded \u003d !this.questionsModel[questionId].isTabExpanded;"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    if (this.questionsModel[questionId].isTabExpanded) {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"      this.loadQuestionTab(questionId);"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":277,"author":{"gitId":"-"},"content":""},{"lineNumber":278,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":279,"author":{"gitId":"-"},"content":"   * Loads all the responses and response statistics for the specified question."},{"lineNumber":280,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  loadQuestionTab(questionId: string): void {"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    if (this.questionsModel[questionId].hasPopulated) {"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      // Do not re-fetch data"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      questionId,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      courseId: this.session.courseId,"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.session.feedbackSessionName,"},{"lineNumber":290,"author":{"gitId":"-"},"content":"      intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    .subscribe((resp: SessionResults) \u003d\u003e {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      if (resp.questions.length) {"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        const responses: QuestionOutput \u003d resp.questions[0];"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].responses \u003d responses.allResponses;"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].statistics \u003d responses.questionStatistics;"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].hasPopulated \u003d true;"},{"lineNumber":298,"author":{"gitId":"-"},"content":""},{"lineNumber":299,"author":{"gitId":"-"},"content":"        this.preprocessComments(responses.allResponses);"},{"lineNumber":300,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":302,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":304,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":307,"author":{"gitId":"-"},"content":"   * Toggles the section tab in per section view."},{"lineNumber":308,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  toggleSectionTab(sectionName: string): void {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    this.sectionsModel[sectionName].isTabExpanded \u003d !this.sectionsModel[sectionName].isTabExpanded;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    if (this.sectionsModel[sectionName].isTabExpanded) {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      this.loadSectionTab(sectionName);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":317,"author":{"gitId":"-"},"content":"   * Loads all the responses and response statistics for the specified section."},{"lineNumber":318,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  loadSectionTab(sectionName: string): void {"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    if (this.sectionsModel[sectionName].hasPopulated) {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"      // Do not re-fetch data"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionResults({"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      courseId: this.session.courseId,"},{"lineNumber":326,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.session.feedbackSessionName,"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      intent: Intent.INSTRUCTOR_RESULT,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      groupBySection: sectionName,"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    .subscribe((resp: SessionResults) \u003d\u003e {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].questions \u003d resp.questions;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].hasPopulated \u003d true;"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":"      // sort questions by question number"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      resp.questions.sort((a: QuestionOutput, b: QuestionOutput) \u003d\u003e"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        a.feedbackQuestion.questionNumber - b.feedbackQuestion.questionNumber);"},{"lineNumber":337,"author":{"gitId":"-"},"content":"      resp.questions.forEach((question: QuestionOutput) \u003d\u003e {"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        this.preprocessComments(question.allResponses);"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   * Preprocesses the comments from instructor."},{"lineNumber":347,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":348,"author":{"gitId":"-"},"content":"   * \u003cp\u003eThe instructor comment will be moved to map {@code instructorCommentTableModel}. The original"},{"lineNumber":349,"author":{"gitId":"-"},"content":"   * instructor comments associated with the response will be deleted."},{"lineNumber":350,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":351,"author":{"gitId":"-"},"content":"  preprocessComments(responses: ResponseOutput[]): void {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    responses.forEach((response: ResponseOutput) \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"      this.instructorCommentTableModel[response.responseId] \u003d"},{"lineNumber":354,"author":{"gitId":"-"},"content":"         this.commentsToCommentTableModel.transform(response.instructorComments, false, this.session.timeZone);"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      this.sortComments(this.instructorCommentTableModel[response.responseId]);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      // clear the original comments for safe as instructorCommentTableModel will become the single point of truth"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      response.instructorComments \u003d [];"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":362,"author":{"gitId":"-"},"content":"   * Handle publish result button event."},{"lineNumber":363,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":364,"author":{"gitId":"-"},"content":"  publishResultHandler(): void {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    const isPublished: boolean \u003d this.session.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    let modalRef: NgbModalRef;"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    if (isPublished) {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"      const modalContent: string \u003d `An email will be sent to students to inform them that the session has been unpublished and the session responses"},{"lineNumber":369,"author":{"gitId":"-"},"content":"          will no longer be viewable by students.`;"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      modalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":371,"author":{"gitId":"-"},"content":"          `Unpublish this session \u003cstrong\u003e${this.session.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":372,"author":{"gitId":"-"},"content":"          SimpleModalType.WARNING, modalContent);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":374,"author":{"gitId":"-"},"content":"      const modalContent: string \u003d \u0027An email will be sent to students to inform them that the responses are ready for viewing.\u0027;"},{"lineNumber":375,"author":{"gitId":"-"},"content":"      modalRef \u003d this.simpleModalService.openConfirmationModal("},{"lineNumber":376,"author":{"gitId":"-"},"content":"          `Publish this session \u003cstrong\u003e${this.session.feedbackSessionName}\u003c/strong\u003e?`,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"          SimpleModalType.WARNING, modalContent);"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":379,"author":{"gitId":"-"},"content":""},{"lineNumber":380,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      const response: Observable\u003cany\u003e \u003d isPublished ?"},{"lineNumber":382,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.unpublishFeedbackSession("},{"lineNumber":383,"author":{"gitId":"-"},"content":"            this.session.courseId, this.session.feedbackSessionName,"},{"lineNumber":384,"author":{"gitId":"-"},"content":"          ) :"},{"lineNumber":385,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.publishFeedbackSession("},{"lineNumber":386,"author":{"gitId":"-"},"content":"            this.session.courseId, this.session.feedbackSessionName,"},{"lineNumber":387,"author":{"gitId":"moziliar"},"content":"          );"},{"lineNumber":388,"author":{"gitId":"-"},"content":""},{"lineNumber":389,"author":{"gitId":"-"},"content":"      response.subscribe((res: FeedbackSession) \u003d\u003e {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        this.session \u003d res;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        if (this.session.resultVisibleFromTimestamp) {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d this.timezoneService"},{"lineNumber":393,"author":{"gitId":"-"},"content":"            .formatToString(this.session.resultVisibleFromTimestamp, this.session.timeZone, TIME_FORMAT);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been published. \u0027"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":397,"author":{"gitId":"-"},"content":"          this.formattedResultVisibleFromTime \u003d \u0027Not applicable\u0027;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been unpublished.\u0027);"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    }, () \u003d\u003e {});"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":405,"author":{"gitId":"-"},"content":""},{"lineNumber":406,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":407,"author":{"gitId":"-"},"content":"   * Handle print view button event."},{"lineNumber":408,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":409,"author":{"gitId":"-"},"content":"  printViewHandler(): void {"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    window.print();"},{"lineNumber":411,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   * Handle download results button event."},{"lineNumber":415,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  downloadResultHandler(): void {"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    this.isDownloadingResults \u003d true;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    const filename: string \u003d `${this.session.courseId}_${this.session.feedbackSessionName}_result.csv`;"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    let blob: any;"},{"lineNumber":420,"author":{"gitId":"moziliar"},"content":"    let downloadAborted: boolean \u003d false;"},{"lineNumber":421,"author":{"gitId":"moziliar"},"content":"    const out: string[] \u003d [];"},{"lineNumber":422,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":423,"author":{"gitId":"moziliar"},"content":"    let numberOfQuestionsDownloaded: number \u003d 0;"},{"lineNumber":424,"author":{"gitId":"moziliar"},"content":"    const modalContent: string \u003d"},{"lineNumber":425,"author":{"gitId":"moziliar"},"content":"        \u0027Downloading the results of your feedback session...\u0027;"},{"lineNumber":426,"author":{"gitId":"moziliar"},"content":"    const loadingModal: NgbModalRef \u003d this.simpleModalService.openLoadingModal("},{"lineNumber":427,"author":{"gitId":"moziliar"},"content":"        \u0027Download Progress\u0027, SimpleModalType.LOAD, modalContent);"},{"lineNumber":428,"author":{"gitId":"moziliar"},"content":"    loadingModal.result.then(() \u003d\u003e {"},{"lineNumber":429,"author":{"gitId":"moziliar"},"content":"      this.isDownloadingResults \u003d false;"},{"lineNumber":430,"author":{"gitId":"moziliar"},"content":"      downloadAborted \u003d true;"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":432,"author":{"gitId":"-"},"content":""},{"lineNumber":433,"author":{"gitId":"moziliar"},"content":"    concat("},{"lineNumber":434,"author":{"gitId":"moziliar"},"content":"        ...Object.keys(this.questionsModel).map((k: string) \u003d\u003e"},{"lineNumber":435,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.downloadSessionResults("},{"lineNumber":436,"author":{"gitId":"-"},"content":"              this.session.courseId,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"              this.session.feedbackSessionName,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"              Intent.INSTRUCTOR_RESULT,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"              this.indicateMissingResponses,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"              this.showStatistics,"},{"lineNumber":441,"author":{"gitId":"moziliar"},"content":"              this.questionsModel[k].question.feedbackQuestionId,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"              this.section.length \u003d\u003d\u003d 0 ? undefined : this.section,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"              this.section.length \u003d\u003d\u003d 0 ? undefined : this.sectionType,"},{"lineNumber":444,"author":{"gitId":"moziliar"},"content":"          ),"},{"lineNumber":445,"author":{"gitId":"moziliar"},"content":"        ),"},{"lineNumber":446,"author":{"gitId":"moziliar"},"content":"    ).pipe(finalize(() \u003d\u003e this.isDownloadingResults \u003d false))"},{"lineNumber":447,"author":{"gitId":"moziliar"},"content":"      .pipe(takeWhile(() \u003d\u003e this.isDownloadingResults))"},{"lineNumber":448,"author":{"gitId":"moziliar"},"content":"      .subscribe({"},{"lineNumber":449,"author":{"gitId":"moziliar"},"content":"        next: (resp: string) \u003d\u003e {"},{"lineNumber":450,"author":{"gitId":"moziliar"},"content":"          out.push(resp);"},{"lineNumber":451,"author":{"gitId":"moziliar"},"content":"          numberOfQuestionsDownloaded +\u003d 1;"},{"lineNumber":452,"author":{"gitId":"moziliar"},"content":"          const totalNumberOfQuestions: number \u003d Object.keys(this.questionsModel).length;"},{"lineNumber":453,"author":{"gitId":"moziliar"},"content":"          const progressPercentage: number \u003d Math.round(100 * numberOfQuestionsDownloaded / totalNumberOfQuestions);"},{"lineNumber":454,"author":{"gitId":"moziliar"},"content":"          this.progressBarService.updateProgress(progressPercentage);"},{"lineNumber":455,"author":{"gitId":"moziliar"},"content":"        },"},{"lineNumber":456,"author":{"gitId":"moziliar"},"content":"        complete: () \u003d\u003e {"},{"lineNumber":457,"author":{"gitId":"moziliar"},"content":"          if (downloadAborted) {"},{"lineNumber":458,"author":{"gitId":"moziliar"},"content":"            return;"},{"lineNumber":459,"author":{"gitId":"moziliar"},"content":"          }"},{"lineNumber":460,"author":{"gitId":"moziliar"},"content":"          loadingModal.close();"},{"lineNumber":461,"author":{"gitId":"moziliar"},"content":"          blob \u003d new Blob(out, { type: \u0027text/csv\u0027 });"},{"lineNumber":462,"author":{"gitId":"-"},"content":"          saveAs(blob, filename);"},{"lineNumber":463,"author":{"gitId":"moziliar"},"content":"        },"},{"lineNumber":464,"author":{"gitId":"moziliar"},"content":"        error: (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":466,"author":{"gitId":"moziliar"},"content":"          loadingModal.close();"},{"lineNumber":467,"author":{"gitId":"moziliar"},"content":"        },"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":469,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":470,"author":{"gitId":"-"},"content":""},{"lineNumber":471,"author":{"gitId":"-"},"content":"  downloadQuestionResultHandler(question: { questionNumber: number, questionId: string }): void {"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    const filename: string \u003d"},{"lineNumber":473,"author":{"gitId":"-"},"content":"        `${this.session.courseId}_${this.session.feedbackSessionName}_question${question.questionNumber}.csv`;"},{"lineNumber":474,"author":{"gitId":"-"},"content":""},{"lineNumber":475,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.downloadSessionResults("},{"lineNumber":476,"author":{"gitId":"-"},"content":"        this.session.courseId,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"        this.session.feedbackSessionName,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        Intent.INSTRUCTOR_RESULT,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"        this.indicateMissingResponses,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        this.showStatistics,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        question.questionId,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    ).subscribe((resp: string) \u003d\u003e {"},{"lineNumber":483,"author":{"gitId":"-"},"content":"      const blob: any \u003d new Blob([resp], { type: \u0027text/csv\u0027 });"},{"lineNumber":484,"author":{"gitId":"-"},"content":"      saveAs(blob, filename);"},{"lineNumber":485,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":486,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":487,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":488,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":489,"author":{"gitId":"-"},"content":""},{"lineNumber":490,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":491,"author":{"gitId":"-"},"content":"   * Handle expand all questions button event."},{"lineNumber":492,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":493,"author":{"gitId":"-"},"content":"  toggleExpandAllHandler(): void {"},{"lineNumber":494,"author":{"gitId":"-"},"content":"    if (!this.isExpandAll) {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"      this.expandAllTabs();"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      this.collapseAllTabs();"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":502,"author":{"gitId":"-"},"content":"   * Expands the tab of all sections."},{"lineNumber":503,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":504,"author":{"gitId":"-"},"content":"  expandAllTabs(): void {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"    this.isExpandAll \u003d true;"},{"lineNumber":506,"author":{"gitId":"-"},"content":""},{"lineNumber":507,"author":{"gitId":"-"},"content":"    if (this.noResponsePanel !\u003d\u003d undefined) {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"      this.noResponsePanel.expandTab();"},{"lineNumber":509,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":510,"author":{"gitId":"-"},"content":""},{"lineNumber":511,"author":{"gitId":"-"},"content":"    if (this.viewType \u003d\u003d\u003d InstructorSessionResultViewType.QUESTION) {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"      for (const questionId of Object.keys(this.questionsModel)) {"},{"lineNumber":513,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].isTabExpanded \u003d true;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"        this.loadQuestionTab(questionId);"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"    for (const sectionName of Object.keys(this.sectionsModel)) {"},{"lineNumber":520,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].isTabExpanded \u003d true;"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      this.loadSectionTab(sectionName);"},{"lineNumber":522,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":524,"author":{"gitId":"-"},"content":""},{"lineNumber":525,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   * Collapses the tab of all sections."},{"lineNumber":527,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":528,"author":{"gitId":"-"},"content":"  collapseAllTabs(): void {"},{"lineNumber":529,"author":{"gitId":"-"},"content":"    this.isExpandAll \u003d false;"},{"lineNumber":530,"author":{"gitId":"-"},"content":""},{"lineNumber":531,"author":{"gitId":"-"},"content":"    if (this.noResponsePanel !\u003d\u003d undefined) {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      this.noResponsePanel.collapseTab();"},{"lineNumber":533,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"    if (this.viewType \u003d\u003d\u003d InstructorSessionResultViewType.QUESTION) {"},{"lineNumber":536,"author":{"gitId":"-"},"content":"      for (const questionId of Object.keys(this.questionsModel)) {"},{"lineNumber":537,"author":{"gitId":"-"},"content":"        this.questionsModel[questionId].isTabExpanded \u003d false;"},{"lineNumber":538,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":539,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"    for (const sectionName of Object.keys(this.sectionsModel)) {"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      this.sectionsModel[sectionName].isTabExpanded \u003d false;"},{"lineNumber":544,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":546,"author":{"gitId":"-"},"content":""},{"lineNumber":547,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   * Handles the sending of reminders to students."},{"lineNumber":549,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  sendReminderToStudents(studentsToRemindData: StudentListInfoTableRowModel[]): void {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService"},{"lineNumber":552,"author":{"gitId":"-"},"content":"      .remindFeedbackSessionSubmissionForRespondents(this.session.courseId, this.session.feedbackSessionName, {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"        usersToRemind: studentsToRemindData.map((m: StudentListInfoTableRowModel) \u003d\u003e m.email),"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      }).subscribe(() \u003d\u003e {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast("},{"lineNumber":556,"author":{"gitId":"-"},"content":"          \u0027Reminder e-mails have been sent out to those students and instructors. \u0027"},{"lineNumber":557,"author":{"gitId":"-"},"content":"          + \u0027Please allow up to 1 hour for all the notification emails to be sent out.\u0027);"},{"lineNumber":558,"author":{"gitId":"-"},"content":""},{"lineNumber":559,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":561,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":563,"author":{"gitId":"-"},"content":""},{"lineNumber":564,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   * Handles view type changes."},{"lineNumber":566,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":567,"author":{"gitId":"-"},"content":"  handleViewTypeChange(newViewType: InstructorSessionResultViewType): void {"},{"lineNumber":568,"author":{"gitId":"-"},"content":"    if (this.viewType \u003d\u003d\u003d newViewType) {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      // do nothing"},{"lineNumber":570,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":571,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    this.viewType \u003d newViewType;"},{"lineNumber":573,"author":{"gitId":"-"},"content":""},{"lineNumber":574,"author":{"gitId":"-"},"content":"    // change tooltip text based on currently selected view type"},{"lineNumber":575,"author":{"gitId":"-"},"content":"    switch (this.viewType) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      case InstructorSessionResultViewType.QUESTION:"},{"lineNumber":577,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027Group responses by question\u0027;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"      case InstructorSessionResultViewType.GRQ:"},{"lineNumber":580,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027Group responses by giver, then by recipient, and then by question\u0027;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":582,"author":{"gitId":"-"},"content":"      case InstructorSessionResultViewType.RGQ:"},{"lineNumber":583,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027Group responses by recipient, then by giver, and then by question\u0027;"},{"lineNumber":584,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      case InstructorSessionResultViewType.GQR:"},{"lineNumber":586,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027Group responses by giver, then by question, and then by recipient\u0027;"},{"lineNumber":587,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":588,"author":{"gitId":"-"},"content":"      case InstructorSessionResultViewType.RQG:"},{"lineNumber":589,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027Group responses by recipient, then by question, and then by giver\u0027;"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        this.viewTooltipText \u003d \u0027View results in different formats\u0027;"},{"lineNumber":593,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":594,"author":{"gitId":"-"},"content":""},{"lineNumber":595,"author":{"gitId":"-"},"content":"    // the expand all will be reset if the view type changed"},{"lineNumber":596,"author":{"gitId":"-"},"content":"    this.collapseAllTabs();"},{"lineNumber":597,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":598,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":41,"-":557}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"alert alert-warning\" role\u003d\"alert\" *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courseCandidates.length \u003d\u003d\u003d 0 \u0026\u0026 !hasCourseLoadingFailed\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  You have not created any courses yet, or you have no active courses. Go \u003ca tmRouterLink\u003d\"/web/instructor/courses\"\u003ehere\u003c/a\u003e to create or unarchive a course."},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cdiv\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cbutton id\u003d\"btn-add-session\" class\u003d\"btn btn-success\" (click)\u003d\"isSessionEditFormExpanded \u003d true\""},{"lineNumber":7,"author":{"gitId":"jianhandev"},"content":"          [disabled]\u003d\"isSessionEditFormExpanded || isCoursesLoading\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Feedback Session"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003c/button\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"jianhandev"},"content":"\u003cdiv class\u003d\"margin-top-30px\" *ngIf\u003d\"isSessionEditFormExpanded \u0026\u0026 !isCoursesLoading\" @collapseAnim\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d \"isCopyOtherSessionLoading\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ctm-session-edit-form [formMode]\u003d\"SessionEditFormMode.ADD\" [(model)]\u003d\"sessionEditFormModel\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                          [courseCandidates]\u003d\"courseCandidates\" [templateSessions]\u003d\"templateSessions\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                          (addNewSessionEvent)\u003d\"addNewSessionHandler()\" (copyOtherSessionsEvent)\u003d\"copyFromOtherSessionsHandler()\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                          (closeEditFormEvent)\u003d\"isSessionEditFormExpanded \u003d false\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003e\u003c/tm-session-edit-form\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCourseLoadingFailed || hasFeedbackSessionLoadingFailed\" [message]\u003d\"\u0027Failed to load data\u0027\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"                  (retryEvent)\u003d\"retryLoadingAllData()\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv *tmIsLoading\u003d\"isCoursesLoading || isMoveToRecycleBinLoading || isCopySessionLoading || isSendReminderLoading || isResultActionLoading\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"alert alert-warning margin-top-30px\" role\u003d\"alert\" *ngIf\u003d\"sessionsTableRowModels.length \u003d\u003d\u003d 0 \u0026\u0026 !isFeedbackSessionsLoading\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        You have not created any sessions yet. Use the form above to create a session."},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003ctm-sessions-table *tmIsLoading\u003d\"isFeedbackSessionsLoading\""},{"lineNumber":29,"author":{"gitId":"-"},"content":"                         [sessionsTableRowModels]\u003d\"sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"sessionsTableRowModelsSortBy\" [sessionsTableRowModelsSortOrder]\u003d\"sessionsTableRowModelsSortOrder\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"                         [courseCandidates]\u003d\"courseCandidates\" [columnsToShow]\u003d\"[ SessionsTableColumn.COURSE_ID ]\""},{"lineNumber":31,"author":{"gitId":"-"},"content":"                         [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.BLUE\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"                         (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent($event)\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"                         (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler($event)\" (editSessionEvent)\u003d\"editSessionEventHandler($event)\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"                         (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler($event)\" (copySessionEvent)\u003d\"copySessionEventHandler($event)\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"                         (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler($event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler($event)\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"                         (publishSessionEvent)\u003d\"publishSessionEventHandler($event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler($event)\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                         (downloadSessionResultsEvent)\u003d\"downloadSessionResultEventHandler($event)\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                         (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToRespondentsEventHandler(sessionsTableRowModels[$event])\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                         (sendRemindersToStudentsEvent)\u003d\"sendRemindersToRespondentsEventHandler(sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003cbr/\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"row\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"col-12 text-muted\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u003cp\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Note: The table above doesn\u0027t contain sessions from archived courses and soft-deleted courses."},{"lineNumber":48,"author":{"gitId":"-"},"content":"        To view sessions from an archived course, unarchive the course first; to view sessions from a course in recycle bin, restore the course first."},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003c/p\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"margin-top-30px\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003ctm-sessions-recycle-bin-table"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        *tmIsLoading\u003d\"isRecycleBinLoading || isRestoreFeedbackSessionLoading || isPermanentDeleteLoading\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"        [isRecycleBinExpanded]\u003d\"isRecycleBinExpanded\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModels]\u003d\"recycleBinFeedbackSessionRowModels\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortBy]\u003d\"recycleBinFeedbackSessionRowModelsSortBy\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        [recycleBinFeedbackSessionRowModelsSortOrder]\u003d\"recycleBinFeedbackSessionRowModelsSortOrder\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"        (restoreSessionEvent)\u003d\"restoreRecycleBinFeedbackSession($event)\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        (restoreAllRecycleBinFeedbackSessionEvent)\u003d\"restoreAllRecycleBinFeedbackSession()\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"        (permanentlyDeleteSessionEvent)\u003d\"permanentDeleteSession($event)\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"        (permanentDeleteAllSessionsEvent)\u003d\"permanentDeleteAllSessions()\""},{"lineNumber":64,"author":{"gitId":"-"},"content":"        (sortRecycleBinFeedbackSessionRowsEvent)\u003d\"sortRecycleBinFeedbackSessionRowsEvent($event)\""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        (recycleBinExpandEvent)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded;\"\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c/tm-sessions-recycle-bin-table\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"jianhandev":2,"-":66}},{"path":"src/web/app/pages-instructor/instructor-sessions-page/instructor-sessions-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Component, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import moment from \u0027moment-timezone\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { concatMap, finalize, map, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService, TemplateSession } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":12,"author":{"gitId":"teikjun"},"content":"import { ProgressBarService } from \u0027../../../services/progress-bar.service\u0027;"},{"lineNumber":13,"author":{"gitId":"teikjun"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027../../../services/table-comparator.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  LOCAL_DATE_TIME_FORMAT,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  TimeResolvingResult,"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  TimezoneService,"},{"lineNumber":21,"author":{"gitId":"-"},"content":"} from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  Course,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  Courses,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackSessions,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../../../types/sort-properties\u0027;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  DateFormat,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  SessionEditFormMode,"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  SessionEditFormModel,"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  TimeFormat,"},{"lineNumber":40,"author":{"gitId":"-"},"content":"} from \u0027../../components/session-edit-form/session-edit-form-model\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  CopySessionResult,"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  SessionsTableColumn,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  SessionsTableRowModel,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"} from \u0027../../components/sessions-table/sessions-table-model\u0027;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import { collapseAnim } from \u0027../../components/teammates-common/collapse-anim\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { CopyFromOtherSessionsResult } from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal-model\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  CopyFromOtherSessionsModalComponent,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"} from \u0027./copy-from-other-sessions-modal/copy-from-other-sessions-modal.component\u0027;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  SessionPermanentDeletionConfirmModalComponent,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"} from \u0027./session-permanent-deletion-confirm-modal/session-permanent-deletion-confirm-modal.component\u0027;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  SessionsPermanentDeletionConfirmModalComponent,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"} from \u0027./sessions-permanent-deletion-confirm-modal/sessions-permanent-deletion-confirm-modal.component\u0027;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"interface RecycleBinFeedbackSessionRowModel {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  feedbackSession: FeedbackSession;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Instructor feedback sessions list page."},{"lineNumber":65,"author":{"gitId":"-"},"content":" */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  selector: \u0027tm-instructor-sessions-page\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./instructor-sessions-page.component.html\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./instructor-sessions-page.component.scss\u0027],"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  animations: [collapseAnim],"},{"lineNumber":71,"author":{"gitId":"-"},"content":"})"},{"lineNumber":72,"author":{"gitId":"-"},"content":"export class InstructorSessionsPageComponent extends InstructorSessionModalPageComponent implements OnInit {"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  SortBy: typeof SortBy \u003d SortBy;"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  SortOrder: typeof SortOrder \u003d SortOrder;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  SessionEditFormMode: typeof SessionEditFormMode \u003d SessionEditFormMode;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  // url params"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":"  // data"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  courseCandidates: Course[] \u003d [];"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  templateSessions: TemplateSession[] \u003d [];"},{"lineNumber":87,"author":{"gitId":"-"},"content":""},{"lineNumber":88,"author":{"gitId":"-"},"content":"  // models"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  sessionEditFormModel: SessionEditFormModel \u003d {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    courseId: \u0027\u0027,"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    timeZone: \u0027UTC\u0027,"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    courseName: \u0027\u0027,"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    feedbackSessionName: \u0027\u0027,"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    instructions: \u0027Please answer all the given questions.\u0027,"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"    submissionStartTime: { hour: 23, minute: 59 },"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    submissionStartDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    submissionEndTime: { hour: 23, minute: 59 },"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    submissionEndDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    gracePeriod: 15,"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    customSessionVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    customSessionVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"    responseVisibleSetting: ResponseVisibleSetting.LATER,"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    customResponseVisibleTime: { hour: 23, minute: 59 },"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    customResponseVisibleDate: { year: 0, month: 0, day: 0 },"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"    templateSessionName: \u0027\u0027,"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"    isSaving: false,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    isEditable: true,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    isDeleting: false,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    isCopying: false,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    hasVisibleSettingsPanelExpanded: false,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    hasEmailSettingsPanelExpanded: false,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  };"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  isSessionEditFormExpanded: boolean \u003d false;"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"  sessionsTableRowModels: SessionsTableRowModel[] \u003d [];"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  sessionsTableRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"  isRecycleBinExpanded: boolean \u003d false;"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  recycleBinFeedbackSessionRowModels: RecycleBinFeedbackSessionRowModel[] \u003d [];"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  recycleBinFeedbackSessionRowModelsSortBy: SortBy \u003d SortBy.NONE;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  recycleBinFeedbackSessionRowModelsSortOrder: SortOrder \u003d SortOrder.ASC;"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"  isCopyOtherSessionLoading: boolean \u003d false;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  isCoursesLoading: boolean \u003d true;"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  isFeedbackSessionsLoading: boolean \u003d true;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  isMoveToRecycleBinLoading: boolean \u003d false;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  isCopySessionLoading: boolean \u003d false;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  isRecycleBinLoading: boolean \u003d true;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  isRestoreFeedbackSessionLoading: boolean \u003d false;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  isPermanentDeleteLoading: boolean \u003d false;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  hasCourseLoadingFailed: boolean \u003d false;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  hasFeedbackSessionLoadingFailed: boolean \u003d false;"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"  constructor(router: Router,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"              statusMessageService: StatusMessageService,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"              navigationService: NavigationService,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"              feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"              feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"              ngbModalService: NgbModal,"},{"lineNumber":154,"author":{"gitId":"-"},"content":"              studentService: StudentService,"},{"lineNumber":155,"author":{"gitId":"-"},"content":"              instructorService: InstructorService,"},{"lineNumber":156,"author":{"gitId":"-"},"content":"              tableComparatorService: TableComparatorService,"},{"lineNumber":157,"author":{"gitId":"teikjun"},"content":"              simpleModalService: SimpleModalService,"},{"lineNumber":158,"author":{"gitId":"teikjun"},"content":"              progressBarService: ProgressBarService,"},{"lineNumber":159,"author":{"gitId":"-"},"content":"              private courseService: CourseService,"},{"lineNumber":160,"author":{"gitId":"-"},"content":"              private route: ActivatedRoute,"},{"lineNumber":161,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    super(router, instructorService, statusMessageService, navigationService, feedbackSessionsService,"},{"lineNumber":163,"author":{"gitId":"teikjun"},"content":"        feedbackQuestionsService, tableComparatorService, ngbModalService,"},{"lineNumber":164,"author":{"gitId":"teikjun"},"content":"        simpleModalService, progressBarService, studentService);"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"    this.isSessionEditFormExpanded \u003d !!this.courseId;"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    this.templateSessions \u003d this.feedbackSessionsService.getTemplateSessions();"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    this.loadCandidatesCourse();"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    this.loadFeedbackSessions();"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    this.loadRecycleBinFeedbackSessions();"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":180,"author":{"gitId":"-"},"content":"   * Copies from other sessions."},{"lineNumber":181,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  copyFromOtherSessionsHandler(): void {"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    this.isCopyOtherSessionLoading \u003d true;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(CopyFromOtherSessionsModalComponent);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    // select the current course Id."},{"lineNumber":186,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.copyToCourseId \u003d this.sessionEditFormModel.courseId;"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseCandidates \u003d this.courseCandidates;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.existingFeedbackSession \u003d"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        this.sessionsTableRowModels.map((model: SessionsTableRowModel) \u003d\u003e model.feedbackSession);"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"    modalRef.result.then((result: CopyFromOtherSessionsResult) \u003d\u003e {"},{"lineNumber":193,"author":{"gitId":"-"},"content":"      this.copyFeedbackSession(result.fromFeedbackSession, result.newFeedbackSessionName, result.copyToCourseId)"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          .pipe(finalize(() \u003d\u003e this.isCopyOtherSessionLoading \u003d false))"},{"lineNumber":195,"author":{"gitId":"-"},"content":"          .subscribe((createdFeedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/sessions/edit\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                \u0027The feedback session has been copied. Please modify settings/questions as necessary.\u0027,"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                { courseid: createdFeedbackSession.courseId, fsname: createdFeedbackSession.feedbackSessionName });"},{"lineNumber":199,"author":{"gitId":"-"},"content":"          }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * Loads courses owned by the current user."},{"lineNumber":205,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  loadCandidatesCourse(): void {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    this.isCoursesLoading \u003d true;"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    this.courseService.getInstructorCoursesThatAreActive()"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isCoursesLoading \u003d false)).subscribe((courses: Courses) \u003d\u003e {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"          this.courseCandidates \u003d courses.courses;"},{"lineNumber":211,"author":{"gitId":"-"},"content":""},{"lineNumber":212,"author":{"gitId":"-"},"content":"          this.initDefaultValuesForSessionEditForm();"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"          this.resetAllModels();"},{"lineNumber":215,"author":{"gitId":"-"},"content":"          this.hasCourseLoadingFailed \u003d true;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   * Sets default values for the session edit form."},{"lineNumber":222,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  initDefaultValuesForSessionEditForm(): void {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    // if specified in the query and is valid, select that course"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    // otherwise, select the first course by default"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    const course: Course | undefined \u003d this.courseCandidates.find((c: Course) \u003d\u003e c.courseId \u003d\u003d\u003d this.courseId);"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    if (course) {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.courseId \u003d course.courseId;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.courseName \u003d course.courseName;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.timeZone \u003d course.timeZone;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    } else if (this.courseCandidates.length !\u003d\u003d 0) {"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.courseId \u003d this.courseCandidates[0].courseId;"},{"lineNumber":233,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.courseName \u003d this.courseCandidates[0].courseName;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.timeZone \u003d this.courseCandidates[0].timeZone;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"    // select the first template session"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    if (this.templateSessions.length !\u003d\u003d 0) {"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.templateSessionName \u003d this.templateSessions[0].name;"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"-"},"content":""},{"lineNumber":242,"author":{"gitId":"-"},"content":"    // set opening time to near future"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    const nearFuture: any \u003d moment().add(1, \u0027hours\u0027);"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.submissionStartDate \u003d {"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      year: nearFuture.year(),"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      month: nearFuture.month() + 1, // moment return 0-11 for month"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      day: nearFuture.date(),"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.submissionStartTime \u003d {"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      minute: nearFuture.hour() \u003d\u003d\u003d 0 ? 59 : 0, // for 00:00 midnight, we use 23:59"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      hour: nearFuture.hour() \u003d\u003d\u003d 0 ? 23 : nearFuture.hour(),"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    // set the closing time to tomorrow"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    const tomorrow: any \u003d moment().add(1, \u0027days\u0027);"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.submissionEndDate \u003d {"},{"lineNumber":256,"author":{"gitId":"-"},"content":"      year: tomorrow.year(),"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      month: tomorrow.month() + 1, // moment return 0-11 for month"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      day: tomorrow.date(),"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.submissionEndTime \u003d {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      minute: 59,"},{"lineNumber":262,"author":{"gitId":"-"},"content":"      hour: 23,"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":265,"author":{"gitId":"-"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":267,"author":{"gitId":"-"},"content":"   * Adds a new feedback session."},{"lineNumber":268,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  addNewSessionHandler(): void {"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    this.sessionEditFormModel.isSaving \u003d true;"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"    const resolvingResultMessages: string[] \u003d [];"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    forkJoin(["},{"lineNumber":274,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionStartDate,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionStartTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"          \u0027Submission opening time\u0027, resolvingResultMessages),"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      this.resolveLocalDateTime(this.sessionEditFormModel.submissionEndDate,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"          this.sessionEditFormModel.submissionEndTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"          \u0027Submission closing time\u0027, resolvingResultMessages),"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.sessionVisibleSetting \u003d\u003d\u003d SessionVisibleSetting.CUSTOM ?"},{"lineNumber":281,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customSessionVisibleDate,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customSessionVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"              \u0027Session visible time\u0027, resolvingResultMessages)"},{"lineNumber":284,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.responseVisibleSetting \u003d\u003d\u003d ResponseVisibleSetting.CUSTOM ?"},{"lineNumber":286,"author":{"gitId":"-"},"content":"          this.resolveLocalDateTime(this.sessionEditFormModel.customResponseVisibleDate,"},{"lineNumber":287,"author":{"gitId":"-"},"content":"              this.sessionEditFormModel.customResponseVisibleTime, this.sessionEditFormModel.timeZone,"},{"lineNumber":288,"author":{"gitId":"-"},"content":"              \u0027Response visible time\u0027, resolvingResultMessages)"},{"lineNumber":289,"author":{"gitId":"-"},"content":"          : of(0),"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    ]).pipe("},{"lineNumber":291,"author":{"gitId":"-"},"content":"        switchMap((vals: number[]) \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"          return this.feedbackSessionsService.createFeedbackSession(this.sessionEditFormModel.courseId, {"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            feedbackSessionName: this.sessionEditFormModel.feedbackSessionName,"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            instructions: this.sessionEditFormModel.instructions,"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: vals[0],"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            submissionEndTimestamp: vals[1],"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            gracePeriod: this.sessionEditFormModel.gracePeriod,"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: this.sessionEditFormModel.sessionVisibleSetting,"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            customSessionVisibleTimestamp: vals[2],"},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"-"},"content":"            responseVisibleSetting: this.sessionEditFormModel.responseVisibleSetting,"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            customResponseVisibleTimestamp: vals[3],"},{"lineNumber":305,"author":{"gitId":"-"},"content":""},{"lineNumber":306,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: this.sessionEditFormModel.isClosingEmailEnabled,"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: this.sessionEditFormModel.isPublishedEmailEnabled,"},{"lineNumber":308,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    ).subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":311,"author":{"gitId":"-"},"content":""},{"lineNumber":312,"author":{"gitId":"-"},"content":"      // begin to populate session with template"},{"lineNumber":313,"author":{"gitId":"-"},"content":"      const templateSession: TemplateSession | undefined \u003d"},{"lineNumber":314,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.getTemplateSessions().find("},{"lineNumber":315,"author":{"gitId":"-"},"content":"              (t: TemplateSession) \u003d\u003e t.name \u003d\u003d\u003d this.sessionEditFormModel.templateSessionName);"},{"lineNumber":316,"author":{"gitId":"-"},"content":"      if (!templateSession) {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        return;"},{"lineNumber":318,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      of(...templateSession.questions).pipe("},{"lineNumber":320,"author":{"gitId":"-"},"content":"          concatMap((question: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            return this.feedbackQuestionsService.createFeedbackQuestion("},{"lineNumber":322,"author":{"gitId":"-"},"content":"                feedbackSession.courseId, feedbackSession.feedbackSessionName, {"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                  questionNumber: question.questionNumber,"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                  questionBrief: question.questionBrief,"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                  questionDescription: question.questionDescription,"},{"lineNumber":326,"author":{"gitId":"-"},"content":""},{"lineNumber":327,"author":{"gitId":"-"},"content":"                  questionDetails: question.questionDetails,"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                  questionType: question.questionType,"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"                  giverType: question.giverType,"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                  recipientType: question.recipientType,"},{"lineNumber":332,"author":{"gitId":"-"},"content":""},{"lineNumber":333,"author":{"gitId":"-"},"content":"                  numberOfEntitiesToGiveFeedbackToSetting: question.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":334,"author":{"gitId":"-"},"content":"                  customNumberOfEntitiesToGiveFeedbackTo: question.customNumberOfEntitiesToGiveFeedbackTo,"},{"lineNumber":335,"author":{"gitId":"-"},"content":""},{"lineNumber":336,"author":{"gitId":"-"},"content":"                  showResponsesTo: question.showResponsesTo,"},{"lineNumber":337,"author":{"gitId":"-"},"content":"                  showGiverNameTo: question.showGiverNameTo,"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                  showRecipientNameTo: question.showRecipientNameTo,"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":340,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      ).subscribe(() \u003d\u003e {}, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast("},{"lineNumber":344,"author":{"gitId":"-"},"content":"            `The session is created but the template questions cannot be created: ${resp.error.message}`);"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        this.navigationService.navigateByURLWithParamEncoding("},{"lineNumber":347,"author":{"gitId":"-"},"content":"            this.router,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            \u0027/web/instructor/sessions/edit\u0027,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"            { courseid: feedbackSession.courseId, fsname: feedbackSession.feedbackSessionName })"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            .then(() \u003d\u003e {"},{"lineNumber":351,"author":{"gitId":"-"},"content":"              resolvingResultMessages.forEach((msg: string) \u003d\u003e {"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                this.statusMessageService.showWarningToast(msg);"},{"lineNumber":353,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":354,"author":{"gitId":"-"},"content":"              this.statusMessageService.showSuccessToast(\u0027The feedback session has been added.\u0027"},{"lineNumber":355,"author":{"gitId":"-"},"content":"                  + \u0027Click the \"Add New Question\" button below to begin adding questions for the feedback session.\u0027);"},{"lineNumber":356,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":357,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":359,"author":{"gitId":"-"},"content":"      this.sessionEditFormModel.isSaving \u003d false;"},{"lineNumber":360,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":363,"author":{"gitId":"-"},"content":""},{"lineNumber":364,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":365,"author":{"gitId":"-"},"content":"   * Resolves the local date time to an UNIX timestamp."},{"lineNumber":366,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  private resolveLocalDateTime(date: DateFormat, time: TimeFormat, timeZone: string,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"                               fieldName: string, resolvingResultMessages: string[]): Observable\u003cnumber\u003e {"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    const inst: any \u003d moment();"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    inst.set(\u0027year\u0027, date.year);"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    inst.set(\u0027month\u0027, date.month - 1); // moment month is from 0-11"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    inst.set(\u0027date\u0027, date.day);"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    inst.set(\u0027hour\u0027, time.hour);"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    inst.set(\u0027minute\u0027, time.minute);"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"    const localDateTime: string \u003d inst.format(LOCAL_DATE_TIME_FORMAT);"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    return this.timezoneService.getResolvedTimestamp(localDateTime, timeZone, fieldName).pipe("},{"lineNumber":378,"author":{"gitId":"-"},"content":"        tap((result: TimeResolvingResult) \u003d\u003e {"},{"lineNumber":379,"author":{"gitId":"-"},"content":"          if (result.message.length !\u003d\u003d 0) {"},{"lineNumber":380,"author":{"gitId":"-"},"content":"            resolvingResultMessages.push(result.message);"},{"lineNumber":381,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":382,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        map((result: TimeResolvingResult) \u003d\u003e result.timestamp));"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   * Loads all feedback sessions that can be accessed by current user."},{"lineNumber":388,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":389,"author":{"gitId":"-"},"content":"  loadFeedbackSessions(): void {"},{"lineNumber":390,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionsLoading \u003d true;"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsForInstructor()"},{"lineNumber":392,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isFeedbackSessionsLoading \u003d false))"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":394,"author":{"gitId":"-"},"content":"          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            const model: SessionsTableRowModel \u003d {"},{"lineNumber":396,"author":{"gitId":"-"},"content":"              feedbackSession: session,"},{"lineNumber":397,"author":{"gitId":"-"},"content":"              responseRate: \u0027\u0027,"},{"lineNumber":398,"author":{"gitId":"-"},"content":"              isLoadingResponseRate: false,"},{"lineNumber":399,"author":{"gitId":"-"},"content":"              instructorPrivilege: session.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":401,"author":{"gitId":"-"},"content":"            this.sessionsTableRowModels.push(model);"},{"lineNumber":402,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":404,"author":{"gitId":"-"},"content":"          this.resetAllModels();"},{"lineNumber":405,"author":{"gitId":"-"},"content":"          this.hasFeedbackSessionLoadingFailed \u003d true;"},{"lineNumber":406,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e this.sortSessionsTableRowModelsEvent(SortBy.COURSE_ID));"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":411,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session row."},{"lineNumber":412,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":413,"author":{"gitId":"-"},"content":"  sortSessionsTableRowModelsEvent(by: SortBy): void {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    this.sessionsTableRowModelsSortBy \u003d by;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    // reverse the sort order"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    this.sessionsTableRowModelsSortOrder \u003d"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        this.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":418,"author":{"gitId":"-"},"content":"    this.sessionsTableRowModels.sort(this.sortModelsBy(by, this.sessionsTableRowModelsSortOrder));"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":420,"author":{"gitId":"-"},"content":""},{"lineNumber":421,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":422,"author":{"gitId":"-"},"content":"   * Sorts the list of feedback session rows in recycle bin table."},{"lineNumber":423,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  sortRecycleBinFeedbackSessionRowsEvent(by: SortBy): void {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    this.recycleBinFeedbackSessionRowModelsSortBy \u003d by;"},{"lineNumber":426,"author":{"gitId":"-"},"content":"    // reverse the sort order"},{"lineNumber":427,"author":{"gitId":"-"},"content":"    this.recycleBinFeedbackSessionRowModelsSortOrder \u003d"},{"lineNumber":428,"author":{"gitId":"-"},"content":"        this.recycleBinFeedbackSessionRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    this.recycleBinFeedbackSessionRowModels.sort("},{"lineNumber":430,"author":{"gitId":"-"},"content":"        this.sortModelsBy(by, this.recycleBinFeedbackSessionRowModelsSortOrder));"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   * Loads response rate of a feedback session."},{"lineNumber":434,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":435,"author":{"gitId":"-"},"content":"  loadResponseRateEventHandler(rowIndex: number): void {"},{"lineNumber":436,"author":{"gitId":"-"},"content":"    this.loadResponseRate(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":437,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":438,"author":{"gitId":"-"},"content":""},{"lineNumber":439,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":440,"author":{"gitId":"-"},"content":"   * Edits the feedback session."},{"lineNumber":441,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":442,"author":{"gitId":"-"},"content":"  editSessionEventHandler(rowIndex: number): void {"},{"lineNumber":443,"author":{"gitId":"-"},"content":"    this.editSession(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":444,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":447,"author":{"gitId":"-"},"content":"   * Restores a recycle bin feedback session."},{"lineNumber":448,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":449,"author":{"gitId":"-"},"content":"  restoreRecycleBinFeedbackSession(model: RecycleBinFeedbackSessionRowModel): void {"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    this.isRestoreFeedbackSessionLoading \u003d true;"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.deleteSessionFromRecycleBin("},{"lineNumber":452,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":453,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":454,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isRestoreFeedbackSessionLoading \u003d false))"},{"lineNumber":456,"author":{"gitId":"-"},"content":"        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":457,"author":{"gitId":"-"},"content":"          this.recycleBinFeedbackSessionRowModels.splice("},{"lineNumber":458,"author":{"gitId":"-"},"content":"              this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"},{"lineNumber":459,"author":{"gitId":"-"},"content":"          const m: SessionsTableRowModel \u003d {"},{"lineNumber":460,"author":{"gitId":"-"},"content":"            feedbackSession,"},{"lineNumber":461,"author":{"gitId":"-"},"content":"            responseRate: \u0027\u0027,"},{"lineNumber":462,"author":{"gitId":"-"},"content":"            isLoadingResponseRate: false,"},{"lineNumber":463,"author":{"gitId":"-"},"content":"            instructorPrivilege: feedbackSession.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":464,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":465,"author":{"gitId":"-"},"content":"          this.sessionsTableRowModels.push(m);"},{"lineNumber":466,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been restored.\u0027);"},{"lineNumber":467,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":468,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   * Moves the feedback session to the recycle bin."},{"lineNumber":472,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":473,"author":{"gitId":"-"},"content":"  moveSessionToRecycleBinEventHandler(rowIndex: number): void {"},{"lineNumber":474,"author":{"gitId":"-"},"content":"    this.isMoveToRecycleBinLoading \u003d true;"},{"lineNumber":475,"author":{"gitId":"-"},"content":"    const model: SessionsTableRowModel \u003d this.sessionsTableRowModels[rowIndex];"},{"lineNumber":476,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.moveSessionToRecycleBin("},{"lineNumber":477,"author":{"gitId":"-"},"content":"        model.feedbackSession.courseId,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"        model.feedbackSession.feedbackSessionName,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"    )"},{"lineNumber":480,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isMoveToRecycleBinLoading \u003d false))"},{"lineNumber":481,"author":{"gitId":"-"},"content":"        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":482,"author":{"gitId":"-"},"content":"          this.sessionsTableRowModels.splice(this.sessionsTableRowModels.indexOf(model), 1);"},{"lineNumber":483,"author":{"gitId":"-"},"content":"          this.recycleBinFeedbackSessionRowModels.push({"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            feedbackSession,"},{"lineNumber":485,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":486,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been deleted. \u0027"},{"lineNumber":487,"author":{"gitId":"-"},"content":"              + \u0027You can restore it from the deleted sessions table below.\u0027);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorToast(resp.error.message); });"},{"lineNumber":489,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":492,"author":{"gitId":"-"},"content":"   * Edits the feedback session."},{"lineNumber":493,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":494,"author":{"gitId":"-"},"content":"  copySessionEventHandler(result: CopySessionResult): void {"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    this.isCopySessionLoading \u003d true;"},{"lineNumber":496,"author":{"gitId":"-"},"content":"    this.failedToCopySessions \u003d {};"},{"lineNumber":497,"author":{"gitId":"-"},"content":"    const requestList: Observable\u003cFeedbackSession\u003e[] \u003d this.createSessionCopyRequestsFromRowModel("},{"lineNumber":498,"author":{"gitId":"-"},"content":"        this.sessionsTableRowModels[result.sessionToCopyRowIndex], result);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    if (requestList.length \u003d\u003d\u003d 1) {"},{"lineNumber":500,"author":{"gitId":"-"},"content":"      this.copySingleSession(requestList[0]);"},{"lineNumber":501,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    if (requestList.length \u003e 1) {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      forkJoin(requestList).pipe(finalize(() \u003d\u003e this.isCopySessionLoading \u003d false))"},{"lineNumber":504,"author":{"gitId":"-"},"content":"        .subscribe((newSessions: FeedbackSession[]) \u003d\u003e {"},{"lineNumber":505,"author":{"gitId":"-"},"content":"          if (newSessions.length \u003e 0) {"},{"lineNumber":506,"author":{"gitId":"-"},"content":"            newSessions.forEach((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"              const model: SessionsTableRowModel \u003d {"},{"lineNumber":508,"author":{"gitId":"-"},"content":"                feedbackSession: session,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"                responseRate: \u0027\u0027,"},{"lineNumber":510,"author":{"gitId":"-"},"content":"                isLoadingResponseRate: false,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"                instructorPrivilege: session.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":512,"author":{"gitId":"-"},"content":"              };"},{"lineNumber":513,"author":{"gitId":"-"},"content":"              this.sessionsTableRowModels.push(model);"},{"lineNumber":514,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":515,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":516,"author":{"gitId":"-"},"content":"          this.showCopyStatusMessage();"},{"lineNumber":517,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":519,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":520,"author":{"gitId":"-"},"content":""},{"lineNumber":521,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   * Submits the feedback session as instructor."},{"lineNumber":523,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":524,"author":{"gitId":"-"},"content":"  submitSessionAsInstructorEventHandler(rowIndex: number): void {"},{"lineNumber":525,"author":{"gitId":"-"},"content":"    this.submitSessionAsInstructor(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":526,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":527,"author":{"gitId":"-"},"content":""},{"lineNumber":528,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   * Views the result of a feedback session."},{"lineNumber":530,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":531,"author":{"gitId":"-"},"content":"  viewSessionResultEventHandler(rowIndex: number): void {"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    this.viewSessionResult(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":533,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":534,"author":{"gitId":"-"},"content":""},{"lineNumber":535,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":536,"author":{"gitId":"-"},"content":"   * Publishes a feedback session."},{"lineNumber":537,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":538,"author":{"gitId":"-"},"content":"  publishSessionEventHandler(rowIndex: number): void {"},{"lineNumber":539,"author":{"gitId":"-"},"content":"    this.publishSession(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":541,"author":{"gitId":"-"},"content":""},{"lineNumber":542,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":543,"author":{"gitId":"-"},"content":"   * Unpublishes a feedback session."},{"lineNumber":544,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":545,"author":{"gitId":"-"},"content":"  unpublishSessionEventHandler(rowIndex: number): void {"},{"lineNumber":546,"author":{"gitId":"-"},"content":"    this.unpublishSession(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":547,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":548,"author":{"gitId":"-"},"content":""},{"lineNumber":549,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   * Downloads the result of a feedback session in csv."},{"lineNumber":551,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":552,"author":{"gitId":"-"},"content":"  downloadSessionResultEventHandler(rowIndex: number): void {"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    this.downloadSessionResult(this.sessionsTableRowModels[rowIndex]);"},{"lineNumber":554,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":555,"author":{"gitId":"-"},"content":""},{"lineNumber":556,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   * Loads all feedback sessions in recycle bin that can be accessed by current user."},{"lineNumber":558,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":559,"author":{"gitId":"-"},"content":"  loadRecycleBinFeedbackSessions(): void {"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    this.isRecycleBinLoading \u003d true;"},{"lineNumber":561,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSessionsInRecycleBinForInstructor()"},{"lineNumber":562,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isRecycleBinLoading \u003d false))"},{"lineNumber":563,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackSessions) \u003d\u003e {"},{"lineNumber":564,"author":{"gitId":"-"},"content":"          response.feedbackSessions.forEach((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            this.recycleBinFeedbackSessionRowModels.push({"},{"lineNumber":566,"author":{"gitId":"-"},"content":"              feedbackSession: session,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":568,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":569,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":570,"author":{"gitId":"-"},"content":"          this.resetAllModels();"},{"lineNumber":571,"author":{"gitId":"-"},"content":"          this.hasFeedbackSessionLoadingFailed \u003d true;"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":573,"author":{"gitId":"-"},"content":"        }, () \u003d\u003e this.sortRecycleBinFeedbackSessionRowsEvent(SortBy.SESSION_DELETION_DATE));"},{"lineNumber":574,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":575,"author":{"gitId":"-"},"content":""},{"lineNumber":576,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   * Restores all feedback sessions in recycle bin."},{"lineNumber":578,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  restoreAllRecycleBinFeedbackSession(): void {"},{"lineNumber":580,"author":{"gitId":"-"},"content":"    this.isRestoreFeedbackSessionLoading \u003d true;"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    const restoreRequests: Observable\u003cFeedbackSession\u003e[] \u003d [];"},{"lineNumber":582,"author":{"gitId":"-"},"content":"    this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"},{"lineNumber":583,"author":{"gitId":"-"},"content":"      restoreRequests.push("},{"lineNumber":584,"author":{"gitId":"-"},"content":"          this.feedbackSessionsService.deleteSessionFromRecycleBin("},{"lineNumber":585,"author":{"gitId":"-"},"content":"              model.feedbackSession.courseId,"},{"lineNumber":586,"author":{"gitId":"-"},"content":"              model.feedbackSession.feedbackSessionName,"},{"lineNumber":587,"author":{"gitId":"-"},"content":"          ));"},{"lineNumber":588,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":589,"author":{"gitId":"-"},"content":""},{"lineNumber":590,"author":{"gitId":"-"},"content":"    forkJoin(restoreRequests).pipe(finalize(() \u003d\u003e this.isRestoreFeedbackSessionLoading \u003d false))"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      .subscribe((restoredSessions: FeedbackSession[]) \u003d\u003e {"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        restoredSessions.forEach((session: FeedbackSession) \u003d\u003e {"},{"lineNumber":593,"author":{"gitId":"-"},"content":"          this.recycleBinFeedbackSessionRowModels \u003d [];"},{"lineNumber":594,"author":{"gitId":"-"},"content":"          const m: SessionsTableRowModel \u003d {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            feedbackSession: session,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"            responseRate: \u0027\u0027,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            isLoadingResponseRate: false,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"            instructorPrivilege: session.privileges || DEFAULT_INSTRUCTOR_PRIVILEGE,"},{"lineNumber":599,"author":{"gitId":"-"},"content":"          };"},{"lineNumber":600,"author":{"gitId":"-"},"content":"          this.sessionsTableRowModels.push(m);"},{"lineNumber":601,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":602,"author":{"gitId":"-"},"content":"        this.statusMessageService.showSuccessToast(\u0027All sessions have been restored.\u0027);"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"        this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":607,"author":{"gitId":"-"},"content":""},{"lineNumber":608,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   * Deletes the feedback session permanently."},{"lineNumber":610,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":611,"author":{"gitId":"-"},"content":"  permanentDeleteSession(model: RecycleBinFeedbackSessionRowModel): void {"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    this.isPermanentDeleteLoading \u003d true;"},{"lineNumber":613,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(SessionPermanentDeletionConfirmModalComponent);"},{"lineNumber":614,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.courseId \u003d model.feedbackSession.courseId;"},{"lineNumber":615,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.feedbackSessionName \u003d model.feedbackSession.feedbackSessionName;"},{"lineNumber":616,"author":{"gitId":"-"},"content":""},{"lineNumber":617,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":618,"author":{"gitId":"-"},"content":"      this.feedbackSessionsService.deleteFeedbackSession("},{"lineNumber":619,"author":{"gitId":"-"},"content":"          model.feedbackSession.courseId,"},{"lineNumber":620,"author":{"gitId":"-"},"content":"          model.feedbackSession.feedbackSessionName,"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      )"},{"lineNumber":622,"author":{"gitId":"-"},"content":"        .pipe(finalize(() \u003d\u003e this.isPermanentDeleteLoading \u003d false))"},{"lineNumber":623,"author":{"gitId":"-"},"content":"        .subscribe(() \u003d\u003e {"},{"lineNumber":624,"author":{"gitId":"-"},"content":"          this.recycleBinFeedbackSessionRowModels.splice("},{"lineNumber":625,"author":{"gitId":"-"},"content":"              this.recycleBinFeedbackSessionRowModels.indexOf(model), 1);"},{"lineNumber":626,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027The feedback session has been permanently deleted.\u0027);"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":628,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":629,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":630,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":632,"author":{"gitId":"-"},"content":""},{"lineNumber":633,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":634,"author":{"gitId":"-"},"content":"   * Deletes all feedback sessions in the recycle bin permanently."},{"lineNumber":635,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":636,"author":{"gitId":"-"},"content":"  permanentDeleteAllSessions(): void {"},{"lineNumber":637,"author":{"gitId":"-"},"content":"    this.isPermanentDeleteLoading \u003d true;"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(SessionsPermanentDeletionConfirmModalComponent);"},{"lineNumber":639,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.sessionsToDelete \u003d"},{"lineNumber":640,"author":{"gitId":"-"},"content":"        this.recycleBinFeedbackSessionRowModels.map("},{"lineNumber":641,"author":{"gitId":"-"},"content":"            (model: RecycleBinFeedbackSessionRowModel) \u003d\u003e model.feedbackSession);"},{"lineNumber":642,"author":{"gitId":"-"},"content":""},{"lineNumber":643,"author":{"gitId":"-"},"content":"    modalRef.result.then(() \u003d\u003e {"},{"lineNumber":644,"author":{"gitId":"-"},"content":"      const deleteRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":645,"author":{"gitId":"-"},"content":""},{"lineNumber":646,"author":{"gitId":"-"},"content":"      this.recycleBinFeedbackSessionRowModels.forEach((model: RecycleBinFeedbackSessionRowModel) \u003d\u003e {"},{"lineNumber":647,"author":{"gitId":"-"},"content":"        deleteRequests.push(this.feedbackSessionsService.deleteFeedbackSession("},{"lineNumber":648,"author":{"gitId":"-"},"content":"            model.feedbackSession.courseId,"},{"lineNumber":649,"author":{"gitId":"-"},"content":"            model.feedbackSession.feedbackSessionName,"},{"lineNumber":650,"author":{"gitId":"-"},"content":"        ));"},{"lineNumber":651,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":652,"author":{"gitId":"-"},"content":""},{"lineNumber":653,"author":{"gitId":"-"},"content":"      forkJoin(deleteRequests).pipe(finalize(() \u003d\u003e this.isPermanentDeleteLoading \u003d false))"},{"lineNumber":654,"author":{"gitId":"-"},"content":"        .subscribe(() \u003d\u003e {"},{"lineNumber":655,"author":{"gitId":"-"},"content":"          this.recycleBinFeedbackSessionRowModels \u003d [];"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027All sessions have been permanently deleted.\u0027);"},{"lineNumber":657,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":658,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":659,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":660,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":661,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":662,"author":{"gitId":"-"},"content":""},{"lineNumber":663,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   * Attempts to load all data again."},{"lineNumber":665,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":666,"author":{"gitId":"-"},"content":"  retryLoadingAllData(): void {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionLoadingFailed \u003d false;"},{"lineNumber":668,"author":{"gitId":"-"},"content":"    this.hasCourseLoadingFailed \u003d false;"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    this.loadCandidatesCourse();"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    this.loadFeedbackSessions();"},{"lineNumber":671,"author":{"gitId":"-"},"content":"    this.loadRecycleBinFeedbackSessions();"},{"lineNumber":672,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":673,"author":{"gitId":"-"},"content":""},{"lineNumber":674,"author":{"gitId":"-"},"content":"  resetAllModels(): void {"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    this.courseCandidates \u003d [];"},{"lineNumber":676,"author":{"gitId":"-"},"content":"    this.sessionsTableRowModels \u003d [];"},{"lineNumber":677,"author":{"gitId":"-"},"content":"    this.recycleBinFeedbackSessionRowModels \u003d [];"},{"lineNumber":678,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":679,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"teikjun":6,"-":673}},{"path":"src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003eStudent List\u003c/h1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003cp\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  This page gives the student details for all your courses. Expand the cards below to view your students."},{"lineNumber":4,"author":{"gitId":"-"},"content":"  Use the \u003ca tmRouterLink\u003d\"/web/instructor/search\"\u003esearch function\u003c/a\u003e if you need to filter for a specific"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  student."},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/p\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003chr\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadCourses()\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isLoadingCourses\"\u003e\u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cng-container\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"course-table\" *ngFor\u003d\"let courseTab of courseTabList\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header cursor-pointer bg-primary text-white\" (click)\u003d\"toggleCard(courseTab)\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003cstrong\u003e[{{courseTab.course.courseId}}]: {{courseTab.course.courseName}}\u003c/strong\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003ctm-panel-chevron [isExpanded]\u003d\"courseTab.hasTabExpanded\"\u003e\u003c/tm-panel-chevron\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cdiv *ngIf\u003d\"courseTab.hasTabExpanded\" @collapseAnim\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003ctm-loading-retry [shouldShowRetry]\u003d\"courseTab.hasLoadingFailed\" [message]\u003d\"\u0027Failed to load students\u0027\" (retryEvent)\u003d\"loadStudents(courseTab)\"\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cdiv *tmIsLoading\u003d\"!courseTab.hasStudentLoaded\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              \u003cdiv *ngIf\u003d\"!courseTab.hasLoadingFailed\" class\u003d\"card-body\"\u003e"},{"lineNumber":25,"author":{"gitId":"jianhandev"},"content":"                \u003cng-container *ngIf\u003d\"courseTab.hasStudentLoaded \u0026\u0026 courseTab.stats.numOfStudents \u003e 0, else noStudentsTemplate\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                  \u003cdiv class\u003d\"card-deck text-center text-sm-left\" *ngIf\u003d\"courseTab.stats\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"card-body\" id\u003d\"num-students\"\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003ch3 class\u003d\"card-title inline\"\u003e{{courseTab.stats.numOfStudents}}\u003c/h3\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003ch4 class\u003d\"card-text inline\"\u003e students\u003c/h4\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"card-body\" id\u003d\"num-sections\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003ch3 class\u003d\"card-title inline\"\u003e{{courseTab.stats.numOfSections}}\u003c/h3\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                        \u003ch4 class\u003d\"card-text inline\"\u003e sections\u003c/h4\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003cdiv class\u003d\"card\"\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                      \u003cdiv class\u003d\"card-body\" id\u003d\"num-teams\"\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003ch3 class\u003d\"card-title inline\"\u003e{{courseTab.stats.numOfTeams}}\u003c/h3\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        \u003ch4 class\u003d\"card-text inline\"\u003e teams\u003c/h4\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                      \u003c/div\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003c/div\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                  \u003c/div\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"                  \u003chr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  \u003ca id\u003d\"btn-enroll\" class\u003d\"btn btn-success\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                      tmRouterLink\u003d\"/web/instructor/courses/enroll\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                      [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                    Enroll Students"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                  \u003cbr\u003e\u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                  \u003ctm-student-list"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      [courseId]\u003d\"courseTab.course.courseId\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                      [students]\u003d\"courseTab.studentList\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      [tableSortBy]\u003d\"courseTab.studentSortBy\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                      [tableSortOrder]\u003d\"courseTab.studentSortOrder\""},{"lineNumber":60,"author":{"gitId":"-"},"content":"                      [useGrayHeading]\u003d\"false\""},{"lineNumber":61,"author":{"gitId":"-"},"content":"                      [enableRemindButton]\u003d\"true\""},{"lineNumber":62,"author":{"gitId":"-"},"content":"                      (sortStudentListEvent)\u003d\"sortStudentList(courseTab, $event)\""},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      (removeStudentFromCourseEvent)\u003d\"removeStudentFromCourse(courseTab, $event)\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                  \u003c/tm-student-list\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u003c/ng-container\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"              \u003c/div\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003c/div\u003e"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/tm-loading-retry\u003e"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cng-template #noStudentsTemplate\u003e"},{"lineNumber":72,"author":{"gitId":"-"},"content":"          \u003ch5\u003eThere are no students in this course.\u003c/h5\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003ca id\u003d\"btn-enroll\" class\u003d\"btn btn-success\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"              tmRouterLink\u003d\"/web/instructor/courses/enroll\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"              [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Enroll Students"},{"lineNumber":77,"author":{"gitId":"-"},"content":"          \u003c/a\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003c/ng-template\u003e"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  \u003c/ng-container\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"jianhandev":1,"-":82}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ch1\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  Feedback Session Results"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/h1\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"loggedInUser\"\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. If you wish to link your Google account ({{ loggedInUser }}) with this user,"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"        \u003ca href\u003d\"#\" id\u003d\"join-course-btn\" (click)\u003d\"joinCourseForUnregisteredStudent(); $event.preventDefault()\"\u003eclick here\u003c/a\u003e."},{"lineNumber":10,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"      \u003cdiv *ngIf\u003d\"!loggedInUser\"\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        You are viewing feedback results as {{ personName }}. You may submit feedback for sessions that are currently open and view results without logging in."},{"lineNumber":13,"author":{"gitId":"-"},"content":"        To access other features you need to \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredStudent(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (recommended)."},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cdiv class\u003d\"card card-plain mt-3\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"card-body\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"course-id\" class\u003d\"col-md-5 text-md-left\"\u003e{{ session.courseId }}\u003c/div\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"session-name\" class\u003d\"col-md-5 text-md-left\"\u003e{{ session.feedbackSessionName }}\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eOpening time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"opening-time\" class\u003d\"col-md-5 text-md-left\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"row text-center\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-md-2 text-md-right\"\u003e\u003cb\u003eClosing time:\u003c/b\u003e\u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"closing-time\" class\u003d\"col-md-5 text-md-left\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003cbr/\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasFeedbackSessionResultsLoadingFailed\" [message]\u003d\"\u0027Failed to load results\u0027\" (retryEvent)\u003d\"retryLoadingFeedbackSessionResults()\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isFeedbackSessionResultsLoading\"\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"card bg-light mt-4\" *ngFor\u003d\"let question of questions\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003cdiv id\u003d\"question-{{ question.feedbackQuestion.questionNumber }}-responses\" class\u003d\"card-body\"\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003ctm-question-text-with-info [questionNumber]\u003d\"question.feedbackQuestion.questionNumber\" [questionDetails]\u003d\"question.feedbackQuestion.questionDetails\" class\u003d\"question-text\"\u003e\u003c/tm-question-text-with-info\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003ctm-single-statistics [question]\u003d\"question.feedbackQuestion.questionDetails\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"                              [responses]\u003d\"question.allResponses\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"                              [statistics]\u003d\"question.questionStatistics\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"                              [isStudent]\u003d\"true\"\u003e\u003c/tm-single-statistics\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003ctm-student-view-responses *ngIf\u003d\"question.responsesToSelf.length\" [responses]\u003d\"question.responsesToSelf\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"session.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cdiv *ngFor\u003d\"let responsesForOtherRecipient of question.otherResponses\"\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003ctm-student-view-responses *ngIf\u003d\"responsesForOtherRecipient.length\" [responses]\u003d\"responsesForOtherRecipient\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"session.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cdiv id\u003d\"given-responses\" class\u003d\"mt-4\" *ngIf\u003d\"question.responsesFromSelf.length\"\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cstrong\u003eYour own responses (to others):\u003c/strong\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003cdiv *ngFor\u003d\"let responseFromSelf of question.responsesFromSelf\"\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003ctm-student-view-responses [responses]\u003d\"[responseFromSelf]\" [isSelfResponses]\u003d\"true\" [feedbackQuestion]\u003d\"question.feedbackQuestion\" [timezone]\u003d\"session.timeZone\" [statistics]\u003d\"question.questionStatistics\"\u003e\u003c/tm-student-view-responses\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"t-cheepeng":1,"-":65}},{"path":"src/web/app/pages-session/session-result-page/session-result-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":9,"author":{"gitId":"t-cheepeng"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"import {"},{"lineNumber":11,"author":{"gitId":"t-cheepeng"},"content":"  AuthInfo, FeedbackContributionQuestionDetails, FeedbackContributionResponseDetails,"},{"lineNumber":12,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackMcqQuestionDetails, FeedbackMcqResponseDetails,"},{"lineNumber":13,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackParticipantType,"},{"lineNumber":14,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackQuestion,"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackQuestionType, FeedbackRubricQuestionDetails, FeedbackRubricResponseDetails,"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSession,"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":18,"author":{"gitId":"t-cheepeng"},"content":"  FeedbackSessionSubmissionStatus, NumberOfEntitiesToGiveFeedbackToSetting, QuestionOutput,"},{"lineNumber":19,"author":{"gitId":"t-cheepeng"},"content":"  RegkeyValidity,"},{"lineNumber":20,"author":{"gitId":"t-cheepeng"},"content":"  ResponseVisibleSetting, SessionResults,"},{"lineNumber":21,"author":{"gitId":"t-cheepeng"},"content":"  SessionVisibleSetting,"},{"lineNumber":22,"author":{"gitId":"t-cheepeng"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":23,"author":{"gitId":"t-cheepeng"},"content":"import { Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import { SingleStatisticsModule } from \u0027../../components/question-responses/single-statistics/single-statistics.module\u0027;"},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"import { StudentViewResponsesModule } from \u0027../../components/question-responses/student-view-responses/student-view-responses.module\u0027;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import { QuestionTextWithInfoModule } from \u0027../../components/question-text-with-info/question-text-with-info.module\u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import { SessionResultPageComponent } from \u0027./session-result-page.component\u0027;"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"describe(\u0027SessionResultPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"  const testFeedbackSession: FeedbackSession \u003d {"},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"    instructions: \u0027\u0027,"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":"    submissionStartTimestamp: 0,"},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"    submissionEndTimestamp: 1549095330000,"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":"    gracePeriod: 0,"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":"    sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":42,"author":{"gitId":"t-cheepeng"},"content":"    responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":43,"author":{"gitId":"t-cheepeng"},"content":"    submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":44,"author":{"gitId":"t-cheepeng"},"content":"    publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":45,"author":{"gitId":"t-cheepeng"},"content":"    isClosingEmailEnabled: true,"},{"lineNumber":46,"author":{"gitId":"t-cheepeng"},"content":"    isPublishedEmailEnabled: true,"},{"lineNumber":47,"author":{"gitId":"t-cheepeng"},"content":"    createdAtTimestamp: 0,"},{"lineNumber":48,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":"  const testInfo: AuthInfo \u003d {"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":"    masquerade: false,"},{"lineNumber":52,"author":{"gitId":"t-cheepeng"},"content":"    user: {"},{"lineNumber":53,"author":{"gitId":"t-cheepeng"},"content":"      id: \u0027user-id\u0027,"},{"lineNumber":54,"author":{"gitId":"t-cheepeng"},"content":"      isAdmin: false,"},{"lineNumber":55,"author":{"gitId":"t-cheepeng"},"content":"      isInstructor: true,"},{"lineNumber":56,"author":{"gitId":"t-cheepeng"},"content":"      isStudent: false,"},{"lineNumber":57,"author":{"gitId":"t-cheepeng"},"content":"    },"},{"lineNumber":58,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":59,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":60,"author":{"gitId":"t-cheepeng"},"content":"  const testQuestion1: FeedbackQuestion \u003d {"},{"lineNumber":61,"author":{"gitId":"t-cheepeng"},"content":"    feedbackQuestionId: \u0027feedbackQuestion1\u0027,"},{"lineNumber":62,"author":{"gitId":"t-cheepeng"},"content":"    questionNumber: 1,"},{"lineNumber":63,"author":{"gitId":"t-cheepeng"},"content":"    questionBrief: \u0027How well did team member perform?\u0027,"},{"lineNumber":64,"author":{"gitId":"t-cheepeng"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":65,"author":{"gitId":"t-cheepeng"},"content":"    questionDetails: {"},{"lineNumber":66,"author":{"gitId":"t-cheepeng"},"content":"      hasAssignedWeights: false,"},{"lineNumber":67,"author":{"gitId":"t-cheepeng"},"content":"      mcqWeights: [],"},{"lineNumber":68,"author":{"gitId":"t-cheepeng"},"content":"      mcqOtherWeight: 0,"},{"lineNumber":69,"author":{"gitId":"t-cheepeng"},"content":"      numOfMcqChoices: 3,"},{"lineNumber":70,"author":{"gitId":"t-cheepeng"},"content":"      mcqChoices: ["},{"lineNumber":71,"author":{"gitId":"t-cheepeng"},"content":"        \u0027\u003cp\u003eGood\u003c/p\u003e\u0027,"},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"        \u0027\u003cp\u003eNormal\u003c/p\u003e\u0027,"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":"        \u0027\u003cp\u003eBad\u003c/p\u003e\u0027,"},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"      ],"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"      otherEnabled: false,"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"      generateOptionsFor: \u0027NONE\u0027,"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":"      questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"      questionText: \u0027How well did team member perform?\u0027,"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":"    } as FeedbackMcqQuestionDetails,"},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"    questionType: FeedbackQuestionType.MCQ,"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS_INCLUDING_SELF,"},{"lineNumber":83,"author":{"gitId":"t-cheepeng"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":84,"author":{"gitId":"t-cheepeng"},"content":"    showResponsesTo: [],"},{"lineNumber":85,"author":{"gitId":"t-cheepeng"},"content":"    showGiverNameTo: [],"},{"lineNumber":86,"author":{"gitId":"t-cheepeng"},"content":"    showRecipientNameTo: [],"},{"lineNumber":87,"author":{"gitId":"t-cheepeng"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":88,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":89,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":90,"author":{"gitId":"t-cheepeng"},"content":"  const testQuestion2: FeedbackQuestion \u003d {"},{"lineNumber":91,"author":{"gitId":"t-cheepeng"},"content":"    feedbackQuestionId: \u0027feedbackQuestion2\u0027,"},{"lineNumber":92,"author":{"gitId":"t-cheepeng"},"content":"    questionNumber: 2,"},{"lineNumber":93,"author":{"gitId":"t-cheepeng"},"content":"    questionBrief: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":94,"author":{"gitId":"t-cheepeng"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":95,"author":{"gitId":"t-cheepeng"},"content":"    questionDetails: {"},{"lineNumber":96,"author":{"gitId":"t-cheepeng"},"content":"      questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":97,"author":{"gitId":"t-cheepeng"},"content":"      questionText: \u0027Rate your teammates in contribution\u0027,"},{"lineNumber":98,"author":{"gitId":"t-cheepeng"},"content":"      isNotSureAllowed: false,"},{"lineNumber":99,"author":{"gitId":"t-cheepeng"},"content":"    } as FeedbackContributionQuestionDetails,"},{"lineNumber":100,"author":{"gitId":"t-cheepeng"},"content":"    questionType: FeedbackQuestionType.CONTRIB,"},{"lineNumber":101,"author":{"gitId":"t-cheepeng"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":102,"author":{"gitId":"t-cheepeng"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":103,"author":{"gitId":"t-cheepeng"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":104,"author":{"gitId":"t-cheepeng"},"content":"    showResponsesTo: [],"},{"lineNumber":105,"author":{"gitId":"t-cheepeng"},"content":"    showGiverNameTo: [],"},{"lineNumber":106,"author":{"gitId":"t-cheepeng"},"content":"    showRecipientNameTo: [],"},{"lineNumber":107,"author":{"gitId":"t-cheepeng"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":108,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":109,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":110,"author":{"gitId":"t-cheepeng"},"content":"  const testQuestion3: FeedbackQuestion \u003d {"},{"lineNumber":111,"author":{"gitId":"t-cheepeng"},"content":"    feedbackQuestionId: \u0027feedbackQuestion3\u0027,"},{"lineNumber":112,"author":{"gitId":"t-cheepeng"},"content":"    questionNumber: 3,"},{"lineNumber":113,"author":{"gitId":"t-cheepeng"},"content":"    questionBrief: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":114,"author":{"gitId":"t-cheepeng"},"content":"    questionDescription: \u0027\u0027,"},{"lineNumber":115,"author":{"gitId":"t-cheepeng"},"content":"    questionDetails: {"},{"lineNumber":116,"author":{"gitId":"t-cheepeng"},"content":"      questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":117,"author":{"gitId":"t-cheepeng"},"content":"      questionText: \u0027Rate your teammates proficiency\u0027,"},{"lineNumber":118,"author":{"gitId":"t-cheepeng"},"content":"      hasAssignedWeights: false,"},{"lineNumber":119,"author":{"gitId":"t-cheepeng"},"content":"      rubricWeightsForEachCell: [[]],"},{"lineNumber":120,"author":{"gitId":"t-cheepeng"},"content":"      numOfRubricChoices: 3,"},{"lineNumber":121,"author":{"gitId":"t-cheepeng"},"content":"      rubricChoices: [\u0027Poor\u0027, \u0027Average\u0027, \u0027Good\u0027],"},{"lineNumber":122,"author":{"gitId":"t-cheepeng"},"content":"      numOfRubricSubQuestions: 0,"},{"lineNumber":123,"author":{"gitId":"t-cheepeng"},"content":"      rubricSubQuestions: [],"},{"lineNumber":124,"author":{"gitId":"t-cheepeng"},"content":"      rubricDescriptions: [[]],"},{"lineNumber":125,"author":{"gitId":"t-cheepeng"},"content":"    } as FeedbackRubricQuestionDetails,"},{"lineNumber":126,"author":{"gitId":"t-cheepeng"},"content":"    questionType: FeedbackQuestionType.RUBRIC,"},{"lineNumber":127,"author":{"gitId":"t-cheepeng"},"content":"    giverType: FeedbackParticipantType.STUDENTS,"},{"lineNumber":128,"author":{"gitId":"t-cheepeng"},"content":"    recipientType: FeedbackParticipantType.OWN_TEAM_MEMBERS,"},{"lineNumber":129,"author":{"gitId":"t-cheepeng"},"content":"    numberOfEntitiesToGiveFeedbackToSetting: NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED,"},{"lineNumber":130,"author":{"gitId":"t-cheepeng"},"content":"    showResponsesTo: [],"},{"lineNumber":131,"author":{"gitId":"t-cheepeng"},"content":"    showGiverNameTo: [],"},{"lineNumber":132,"author":{"gitId":"t-cheepeng"},"content":"    showRecipientNameTo: [],"},{"lineNumber":133,"author":{"gitId":"t-cheepeng"},"content":"    customNumberOfEntitiesToGiveFeedbackTo: 0,"},{"lineNumber":134,"author":{"gitId":"t-cheepeng"},"content":"  };"},{"lineNumber":135,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  let component: SessionResultPageComponent;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cSessionResultPageComponent\u003e;"},{"lineNumber":138,"author":{"gitId":"t-cheepeng"},"content":"  let authService: AuthService;"},{"lineNumber":139,"author":{"gitId":"t-cheepeng"},"content":"  let navService: NavigationService;"},{"lineNumber":140,"author":{"gitId":"t-cheepeng"},"content":"  let studentService: StudentService;"},{"lineNumber":141,"author":{"gitId":"t-cheepeng"},"content":"  let feedbackSessionService: FeedbackSessionsService;"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":146,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        StudentViewResponsesModule,"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        QuestionTextWithInfoModule,"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        SingleStatisticsModule,"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      declarations: [SessionResultPageComponent],"},{"lineNumber":155,"author":{"gitId":"t-cheepeng"},"content":"      providers: ["},{"lineNumber":156,"author":{"gitId":"t-cheepeng"},"content":"        AuthService,"},{"lineNumber":157,"author":{"gitId":"t-cheepeng"},"content":"        NavigationService,"},{"lineNumber":158,"author":{"gitId":"t-cheepeng"},"content":"        StudentService,"},{"lineNumber":159,"author":{"gitId":"t-cheepeng"},"content":"        FeedbackSessionsService,"},{"lineNumber":160,"author":{"gitId":"t-cheepeng"},"content":"        {"},{"lineNumber":161,"author":{"gitId":"t-cheepeng"},"content":"          provide: ActivatedRoute,"},{"lineNumber":162,"author":{"gitId":"t-cheepeng"},"content":"          useValue: {"},{"lineNumber":163,"author":{"gitId":"t-cheepeng"},"content":"            queryParams: of({"},{"lineNumber":164,"author":{"gitId":"t-cheepeng"},"content":"              courseid: \u0027CS3281\u0027,"},{"lineNumber":165,"author":{"gitId":"t-cheepeng"},"content":"              fsname: \u0027Peer Feedback\u0027,"},{"lineNumber":166,"author":{"gitId":"t-cheepeng"},"content":"              key: \u0027reg-key\u0027,"},{"lineNumber":167,"author":{"gitId":"t-cheepeng"},"content":"            }),"},{"lineNumber":168,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":169,"author":{"gitId":"t-cheepeng"},"content":"        },"},{"lineNumber":170,"author":{"gitId":"t-cheepeng"},"content":"      ],"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(SessionResultPageComponent);"},{"lineNumber":177,"author":{"gitId":"t-cheepeng"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":178,"author":{"gitId":"t-cheepeng"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":179,"author":{"gitId":"t-cheepeng"},"content":"    studentService \u003d TestBed.inject(StudentService);"},{"lineNumber":180,"author":{"gitId":"t-cheepeng"},"content":"    feedbackSessionService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":188,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":189,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":190,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":191,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":192,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":193,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with session results are loading\u0027, () \u003d\u003e {"},{"lineNumber":194,"author":{"gitId":"t-cheepeng"},"content":"    component.isFeedbackSessionResultsLoading \u003d true;"},{"lineNumber":195,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":196,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":197,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":198,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":199,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap when session results failed to load\u0027, () \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"t-cheepeng"},"content":"    component.isFeedbackSessionResultsLoading \u003d false;"},{"lineNumber":201,"author":{"gitId":"t-cheepeng"},"content":"    component.hasFeedbackSessionResultsLoadingFailed \u003d true;"},{"lineNumber":202,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":203,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":204,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":205,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":206,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with user that is logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":207,"author":{"gitId":"t-cheepeng"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":208,"author":{"gitId":"t-cheepeng"},"content":"    component.loggedInUser \u003d \u0027alice\u0027;"},{"lineNumber":209,"author":{"gitId":"t-cheepeng"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":210,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":211,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":212,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":213,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":214,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with user that is not logged in and using session link\u0027, () \u003d\u003e {"},{"lineNumber":215,"author":{"gitId":"t-cheepeng"},"content":"    component.regKey \u003d \u0027session-link-key\u0027;"},{"lineNumber":216,"author":{"gitId":"t-cheepeng"},"content":"    component.loggedInUser \u003d \u0027\u0027;"},{"lineNumber":217,"author":{"gitId":"t-cheepeng"},"content":"    component.personName \u003d \u0027alice\u0027;"},{"lineNumber":218,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":219,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":220,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":221,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":222,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with an open feedback session with no questions\u0027, () \u003d\u003e {"},{"lineNumber":223,"author":{"gitId":"t-cheepeng"},"content":"    component.session \u003d {"},{"lineNumber":224,"author":{"gitId":"t-cheepeng"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":225,"author":{"gitId":"t-cheepeng"},"content":"      timeZone: \u0027UTC\u0027,"},{"lineNumber":226,"author":{"gitId":"t-cheepeng"},"content":"      feedbackSessionName: \u0027Peer Review 1\u0027,"},{"lineNumber":227,"author":{"gitId":"t-cheepeng"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":228,"author":{"gitId":"t-cheepeng"},"content":"      submissionStartTimestamp: 1555232400,"},{"lineNumber":229,"author":{"gitId":"t-cheepeng"},"content":"      submissionEndTimestamp: 1555233400,"},{"lineNumber":230,"author":{"gitId":"t-cheepeng"},"content":"      gracePeriod: 0,"},{"lineNumber":231,"author":{"gitId":"t-cheepeng"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":232,"author":{"gitId":"t-cheepeng"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":233,"author":{"gitId":"t-cheepeng"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":234,"author":{"gitId":"t-cheepeng"},"content":"      publishStatus: FeedbackSessionPublishStatus.NOT_PUBLISHED,"},{"lineNumber":235,"author":{"gitId":"t-cheepeng"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":236,"author":{"gitId":"t-cheepeng"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":237,"author":{"gitId":"t-cheepeng"},"content":"      createdAtTimestamp: 1555231400,"},{"lineNumber":238,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":239,"author":{"gitId":"t-cheepeng"},"content":"    component.questions \u003d [];"},{"lineNumber":240,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":241,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":242,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":243,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":244,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with feedback session with questions\u0027, () \u003d\u003e {"},{"lineNumber":245,"author":{"gitId":"t-cheepeng"},"content":"    component.session \u003d testFeedbackSession;"},{"lineNumber":246,"author":{"gitId":"t-cheepeng"},"content":"    component.questions \u003d ["},{"lineNumber":247,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":248,"author":{"gitId":"t-cheepeng"},"content":"        feedbackQuestion: testQuestion1,"},{"lineNumber":249,"author":{"gitId":"t-cheepeng"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":250,"author":{"gitId":"t-cheepeng"},"content":"        allResponses: [],"},{"lineNumber":251,"author":{"gitId":"t-cheepeng"},"content":"        responsesToSelf: [],"},{"lineNumber":252,"author":{"gitId":"t-cheepeng"},"content":"        responsesFromSelf: ["},{"lineNumber":253,"author":{"gitId":"t-cheepeng"},"content":"          {"},{"lineNumber":254,"author":{"gitId":"t-cheepeng"},"content":"            isMissingResponse: false,"},{"lineNumber":255,"author":{"gitId":"t-cheepeng"},"content":"            responseId: \u0027resp-id-1\u0027,"},{"lineNumber":256,"author":{"gitId":"t-cheepeng"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":257,"author":{"gitId":"t-cheepeng"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":258,"author":{"gitId":"t-cheepeng"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":259,"author":{"gitId":"t-cheepeng"},"content":"            recipient: \u0027recipient1\u0027,"},{"lineNumber":260,"author":{"gitId":"t-cheepeng"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":261,"author":{"gitId":"t-cheepeng"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":262,"author":{"gitId":"t-cheepeng"},"content":"            responseDetails: {"},{"lineNumber":263,"author":{"gitId":"t-cheepeng"},"content":"              answer: \u0027Good\u0027,"},{"lineNumber":264,"author":{"gitId":"t-cheepeng"},"content":"              isOther: false,"},{"lineNumber":265,"author":{"gitId":"t-cheepeng"},"content":"              otherFieldContent: \u0027\u0027,"},{"lineNumber":266,"author":{"gitId":"t-cheepeng"},"content":"            } as FeedbackMcqResponseDetails,"},{"lineNumber":267,"author":{"gitId":"t-cheepeng"},"content":"            instructorComments: [],"},{"lineNumber":268,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":269,"author":{"gitId":"t-cheepeng"},"content":"        ],"},{"lineNumber":270,"author":{"gitId":"t-cheepeng"},"content":"        otherResponses: [[]],"},{"lineNumber":271,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":272,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":273,"author":{"gitId":"t-cheepeng"},"content":"        feedbackQuestion: testQuestion2,"},{"lineNumber":274,"author":{"gitId":"t-cheepeng"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":275,"author":{"gitId":"t-cheepeng"},"content":"        allResponses: [],"},{"lineNumber":276,"author":{"gitId":"t-cheepeng"},"content":"        responsesToSelf: ["},{"lineNumber":277,"author":{"gitId":"t-cheepeng"},"content":"          {"},{"lineNumber":278,"author":{"gitId":"t-cheepeng"},"content":"            isMissingResponse: false,"},{"lineNumber":279,"author":{"gitId":"t-cheepeng"},"content":"            responseId: \u0027resp-id-2\u0027,"},{"lineNumber":280,"author":{"gitId":"t-cheepeng"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":281,"author":{"gitId":"t-cheepeng"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":282,"author":{"gitId":"t-cheepeng"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":283,"author":{"gitId":"t-cheepeng"},"content":"            recipient: \u0027giver1\u0027,"},{"lineNumber":284,"author":{"gitId":"t-cheepeng"},"content":"            recipientTeam: \u0027team1\u0027,"},{"lineNumber":285,"author":{"gitId":"t-cheepeng"},"content":"            recipientSection: \u0027section1\u0027,"},{"lineNumber":286,"author":{"gitId":"t-cheepeng"},"content":"            responseDetails: {"},{"lineNumber":287,"author":{"gitId":"t-cheepeng"},"content":"              answer: 120,"},{"lineNumber":288,"author":{"gitId":"t-cheepeng"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":289,"author":{"gitId":"t-cheepeng"},"content":"            instructorComments: [],"},{"lineNumber":290,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":291,"author":{"gitId":"t-cheepeng"},"content":"        ],"},{"lineNumber":292,"author":{"gitId":"t-cheepeng"},"content":"        responsesFromSelf: ["},{"lineNumber":293,"author":{"gitId":"t-cheepeng"},"content":"          {"},{"lineNumber":294,"author":{"gitId":"t-cheepeng"},"content":"            isMissingResponse: false,"},{"lineNumber":295,"author":{"gitId":"t-cheepeng"},"content":"            responseId: \u0027resp-id-3\u0027,"},{"lineNumber":296,"author":{"gitId":"t-cheepeng"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":297,"author":{"gitId":"t-cheepeng"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":298,"author":{"gitId":"t-cheepeng"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":299,"author":{"gitId":"t-cheepeng"},"content":"            recipient: \u0027recipient2\u0027,"},{"lineNumber":300,"author":{"gitId":"t-cheepeng"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":301,"author":{"gitId":"t-cheepeng"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":302,"author":{"gitId":"t-cheepeng"},"content":"            responseDetails: {"},{"lineNumber":303,"author":{"gitId":"t-cheepeng"},"content":"              answer: 110,"},{"lineNumber":304,"author":{"gitId":"t-cheepeng"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":305,"author":{"gitId":"t-cheepeng"},"content":"            instructorComments: [],"},{"lineNumber":306,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":307,"author":{"gitId":"t-cheepeng"},"content":"          {"},{"lineNumber":308,"author":{"gitId":"t-cheepeng"},"content":"            isMissingResponse: false,"},{"lineNumber":309,"author":{"gitId":"t-cheepeng"},"content":"            responseId: \u0027resp-id-4\u0027,"},{"lineNumber":310,"author":{"gitId":"t-cheepeng"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":311,"author":{"gitId":"t-cheepeng"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":312,"author":{"gitId":"t-cheepeng"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":313,"author":{"gitId":"t-cheepeng"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":314,"author":{"gitId":"t-cheepeng"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":315,"author":{"gitId":"t-cheepeng"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":316,"author":{"gitId":"t-cheepeng"},"content":"            responseDetails: {"},{"lineNumber":317,"author":{"gitId":"t-cheepeng"},"content":"              answer: 100,"},{"lineNumber":318,"author":{"gitId":"t-cheepeng"},"content":"            } as FeedbackContributionResponseDetails,"},{"lineNumber":319,"author":{"gitId":"t-cheepeng"},"content":"            instructorComments: [],"},{"lineNumber":320,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":321,"author":{"gitId":"t-cheepeng"},"content":"        ],"},{"lineNumber":322,"author":{"gitId":"t-cheepeng"},"content":"        otherResponses: [[]],"},{"lineNumber":323,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":324,"author":{"gitId":"t-cheepeng"},"content":"      {"},{"lineNumber":325,"author":{"gitId":"t-cheepeng"},"content":"        feedbackQuestion: testQuestion3,"},{"lineNumber":326,"author":{"gitId":"t-cheepeng"},"content":"        questionStatistics: \u0027\u0027,"},{"lineNumber":327,"author":{"gitId":"t-cheepeng"},"content":"        allResponses: [],"},{"lineNumber":328,"author":{"gitId":"t-cheepeng"},"content":"        responsesToSelf: [],"},{"lineNumber":329,"author":{"gitId":"t-cheepeng"},"content":"        responsesFromSelf: ["},{"lineNumber":330,"author":{"gitId":"t-cheepeng"},"content":"          {"},{"lineNumber":331,"author":{"gitId":"t-cheepeng"},"content":"            isMissingResponse: false,"},{"lineNumber":332,"author":{"gitId":"t-cheepeng"},"content":"            responseId: \u0027resp-id-5\u0027,"},{"lineNumber":333,"author":{"gitId":"t-cheepeng"},"content":"            giver: \u0027giver1\u0027,"},{"lineNumber":334,"author":{"gitId":"t-cheepeng"},"content":"            giverTeam: \u0027team1\u0027,"},{"lineNumber":335,"author":{"gitId":"t-cheepeng"},"content":"            giverSection: \u0027section1\u0027,"},{"lineNumber":336,"author":{"gitId":"t-cheepeng"},"content":"            recipient: \u0027recipient3\u0027,"},{"lineNumber":337,"author":{"gitId":"t-cheepeng"},"content":"            recipientTeam: \u0027team2\u0027,"},{"lineNumber":338,"author":{"gitId":"t-cheepeng"},"content":"            recipientSection: \u0027section2\u0027,"},{"lineNumber":339,"author":{"gitId":"t-cheepeng"},"content":"            responseDetails: {"},{"lineNumber":340,"author":{"gitId":"t-cheepeng"},"content":"              answer: [1],"},{"lineNumber":341,"author":{"gitId":"t-cheepeng"},"content":"            } as FeedbackRubricResponseDetails,"},{"lineNumber":342,"author":{"gitId":"t-cheepeng"},"content":"            instructorComments: ["},{"lineNumber":343,"author":{"gitId":"t-cheepeng"},"content":"              {"},{"lineNumber":344,"author":{"gitId":"t-cheepeng"},"content":"                commentGiver: \u0027comment-giver-1\u0027,"},{"lineNumber":345,"author":{"gitId":"t-cheepeng"},"content":"                lastEditorEmail: \u0027comment@egeg.com\u0027,"},{"lineNumber":346,"author":{"gitId":"t-cheepeng"},"content":"                feedbackResponseCommentId: 1,"},{"lineNumber":347,"author":{"gitId":"t-cheepeng"},"content":"                commentText: \u0027this is a text\u0027,"},{"lineNumber":348,"author":{"gitId":"t-cheepeng"},"content":"                createdAt: 1402775804,"},{"lineNumber":349,"author":{"gitId":"t-cheepeng"},"content":"                lastEditedAt: 1402775804,"},{"lineNumber":350,"author":{"gitId":"t-cheepeng"},"content":"                isVisibilityFollowingFeedbackQuestion: true,"},{"lineNumber":351,"author":{"gitId":"t-cheepeng"},"content":"                showGiverNameTo: [],"},{"lineNumber":352,"author":{"gitId":"t-cheepeng"},"content":"                showCommentTo: [],"},{"lineNumber":353,"author":{"gitId":"t-cheepeng"},"content":"              },"},{"lineNumber":354,"author":{"gitId":"t-cheepeng"},"content":"            ],"},{"lineNumber":355,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":356,"author":{"gitId":"t-cheepeng"},"content":"        ],"},{"lineNumber":357,"author":{"gitId":"t-cheepeng"},"content":"        otherResponses: [[]],"},{"lineNumber":358,"author":{"gitId":"t-cheepeng"},"content":"      },"},{"lineNumber":359,"author":{"gitId":"t-cheepeng"},"content":"    ];"},{"lineNumber":360,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":361,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":362,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":363,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":364,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":365,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should fetch auth info on init\u0027, () \u003d\u003e {"},{"lineNumber":366,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":367,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":368,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":369,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":370,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.courseId).toEqual(\u0027CS3281\u0027);"},{"lineNumber":371,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.feedbackSessionName).toEqual(\u0027Peer Feedback\u0027);"},{"lineNumber":372,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.regKey).toEqual(\u0027reg-key\u0027);"},{"lineNumber":373,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.loggedInUser).toEqual(\u0027user-id\u0027);"},{"lineNumber":374,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":375,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":376,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should verify allowed access and used reg key\u0027, () \u003d\u003e {"},{"lineNumber":377,"author":{"gitId":"t-cheepeng"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":378,"author":{"gitId":"t-cheepeng"},"content":"      isAllowedAccess: true,"},{"lineNumber":379,"author":{"gitId":"t-cheepeng"},"content":"      isUsed: true,"},{"lineNumber":380,"author":{"gitId":"t-cheepeng"},"content":"      isValid: false,"},{"lineNumber":381,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":382,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":383,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":384,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURLWithParamEncoding\u0027);"},{"lineNumber":385,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":386,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":387,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":388,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":389,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1])"},{"lineNumber":390,"author":{"gitId":"t-cheepeng"},"content":"        .toEqual(\u0027/web/student/sessions/result\u0027);"},{"lineNumber":391,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":392,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":393,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should load info for unused reg key that is allowed\u0027, () \u003d\u003e {"},{"lineNumber":394,"author":{"gitId":"t-cheepeng"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":395,"author":{"gitId":"t-cheepeng"},"content":"      isAllowedAccess: true,"},{"lineNumber":396,"author":{"gitId":"t-cheepeng"},"content":"      isUsed: false,"},{"lineNumber":397,"author":{"gitId":"t-cheepeng"},"content":"      isValid: false,"},{"lineNumber":398,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":399,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":400,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":401,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(studentService, \u0027getStudent\u0027).and.returnValue(of({ name: \u0027student-name\u0027 }));"},{"lineNumber":402,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).and.returnValue(of(testFeedbackSession));"},{"lineNumber":403,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":404,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":405,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":406,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.personName).toEqual(\u0027student-name\u0027);"},{"lineNumber":407,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.session.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":408,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":409,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":410,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should fetch session results when loading feedback session\u0027, () \u003d\u003e {"},{"lineNumber":411,"author":{"gitId":"t-cheepeng"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":412,"author":{"gitId":"t-cheepeng"},"content":"      isAllowedAccess: true,"},{"lineNumber":413,"author":{"gitId":"t-cheepeng"},"content":"      isUsed: false,"},{"lineNumber":414,"author":{"gitId":"t-cheepeng"},"content":"      isValid: false,"},{"lineNumber":415,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":416,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":417,"author":{"gitId":"t-cheepeng"},"content":"    const testFeedbackSessionResult: SessionResults \u003d {"},{"lineNumber":418,"author":{"gitId":"t-cheepeng"},"content":"      feedbackSession: testFeedbackSession,"},{"lineNumber":419,"author":{"gitId":"t-cheepeng"},"content":"      questions: ["},{"lineNumber":420,"author":{"gitId":"t-cheepeng"},"content":"        {"},{"lineNumber":421,"author":{"gitId":"t-cheepeng"},"content":"          feedbackQuestion: testQuestion1,"},{"lineNumber":422,"author":{"gitId":"t-cheepeng"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":423,"author":{"gitId":"t-cheepeng"},"content":"          allResponses: [],"},{"lineNumber":424,"author":{"gitId":"t-cheepeng"},"content":"          responsesToSelf: [],"},{"lineNumber":425,"author":{"gitId":"t-cheepeng"},"content":"          responsesFromSelf: [],"},{"lineNumber":426,"author":{"gitId":"t-cheepeng"},"content":"          otherResponses: [],"},{"lineNumber":427,"author":{"gitId":"t-cheepeng"},"content":"        },"},{"lineNumber":428,"author":{"gitId":"t-cheepeng"},"content":"        {"},{"lineNumber":429,"author":{"gitId":"t-cheepeng"},"content":"          feedbackQuestion: testQuestion3,"},{"lineNumber":430,"author":{"gitId":"t-cheepeng"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":431,"author":{"gitId":"t-cheepeng"},"content":"          allResponses: [],"},{"lineNumber":432,"author":{"gitId":"t-cheepeng"},"content":"          responsesToSelf: [],"},{"lineNumber":433,"author":{"gitId":"t-cheepeng"},"content":"          responsesFromSelf: [],"},{"lineNumber":434,"author":{"gitId":"t-cheepeng"},"content":"          otherResponses: [],"},{"lineNumber":435,"author":{"gitId":"t-cheepeng"},"content":"        },"},{"lineNumber":436,"author":{"gitId":"t-cheepeng"},"content":"        {"},{"lineNumber":437,"author":{"gitId":"t-cheepeng"},"content":"          feedbackQuestion: testQuestion2,"},{"lineNumber":438,"author":{"gitId":"t-cheepeng"},"content":"          questionStatistics: \u0027\u0027,"},{"lineNumber":439,"author":{"gitId":"t-cheepeng"},"content":"          allResponses: [],"},{"lineNumber":440,"author":{"gitId":"t-cheepeng"},"content":"          responsesToSelf: [],"},{"lineNumber":441,"author":{"gitId":"t-cheepeng"},"content":"          responsesFromSelf: [],"},{"lineNumber":442,"author":{"gitId":"t-cheepeng"},"content":"          otherResponses: [],"},{"lineNumber":443,"author":{"gitId":"t-cheepeng"},"content":"        },"},{"lineNumber":444,"author":{"gitId":"t-cheepeng"},"content":"      ],"},{"lineNumber":445,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":446,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":447,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":448,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":449,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(feedbackSessionService, \u0027getFeedbackSession\u0027).and.returnValue(of(testFeedbackSession));"},{"lineNumber":450,"author":{"gitId":"t-cheepeng"},"content":"    const fsSpy: Spy \u003d spyOn(feedbackSessionService, \u0027getFeedbackSessionResults\u0027)"},{"lineNumber":451,"author":{"gitId":"t-cheepeng"},"content":"        .and.returnValue(of(testFeedbackSessionResult));"},{"lineNumber":452,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":453,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":454,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":455,"author":{"gitId":"t-cheepeng"},"content":"    expect(fsSpy.calls.count()).toEqual(1);"},{"lineNumber":456,"author":{"gitId":"t-cheepeng"},"content":"    expect(fsSpy.calls.mostRecent().args[0]).toEqual({"},{"lineNumber":457,"author":{"gitId":"t-cheepeng"},"content":"      courseId: \u0027CS3281\u0027,"},{"lineNumber":458,"author":{"gitId":"t-cheepeng"},"content":"      feedbackSessionName: \u0027Peer Feedback\u0027,"},{"lineNumber":459,"author":{"gitId":"t-cheepeng"},"content":"      intent: Intent.STUDENT_RESULT,"},{"lineNumber":460,"author":{"gitId":"t-cheepeng"},"content":"      key: \u0027reg-key\u0027,"},{"lineNumber":461,"author":{"gitId":"t-cheepeng"},"content":"    });"},{"lineNumber":462,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.questions.map((question: QuestionOutput) \u003d\u003e question.feedbackQuestion.questionNumber))"},{"lineNumber":463,"author":{"gitId":"t-cheepeng"},"content":"        .toEqual([1, 2, 3]);"},{"lineNumber":464,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":465,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":466,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should deny access for reg key not belonging to logged in user\u0027, () \u003d\u003e {"},{"lineNumber":467,"author":{"gitId":"t-cheepeng"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":468,"author":{"gitId":"t-cheepeng"},"content":"      isAllowedAccess: false,"},{"lineNumber":469,"author":{"gitId":"t-cheepeng"},"content":"      isUsed: false,"},{"lineNumber":470,"author":{"gitId":"t-cheepeng"},"content":"      isValid: true,"},{"lineNumber":471,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":472,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":473,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":474,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateWithErrorMessage\u0027);"},{"lineNumber":475,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":476,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":477,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":478,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":479,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/front\u0027);"},{"lineNumber":480,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[2]).toEqual(\u0027You are not authorized to view this page.\u0027);"},{"lineNumber":481,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":482,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":483,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should deny access for invalid reg key\u0027, () \u003d\u003e {"},{"lineNumber":484,"author":{"gitId":"t-cheepeng"},"content":"    const testValidity: RegkeyValidity \u003d {"},{"lineNumber":485,"author":{"gitId":"t-cheepeng"},"content":"      isAllowedAccess: false,"},{"lineNumber":486,"author":{"gitId":"t-cheepeng"},"content":"      isUsed: false,"},{"lineNumber":487,"author":{"gitId":"t-cheepeng"},"content":"      isValid: false,"},{"lineNumber":488,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":489,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(of(testInfo));"},{"lineNumber":490,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthRegkeyValidity\u0027).and.returnValue(of(testValidity));"},{"lineNumber":491,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateWithErrorMessage\u0027);"},{"lineNumber":492,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":493,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":494,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":495,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":496,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/front\u0027);"},{"lineNumber":497,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[2])"},{"lineNumber":498,"author":{"gitId":"t-cheepeng"},"content":"        .toEqual(\u0027You are not authorized to view this page.\u0027);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":500,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":501,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should navigate away when error occurs\u0027, () \u003d\u003e {"},{"lineNumber":502,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(authService, \u0027getAuthUser\u0027).and.returnValue(throwError({"},{"lineNumber":503,"author":{"gitId":"t-cheepeng"},"content":"      error: { message: \u0027This is error\u0027 },"},{"lineNumber":504,"author":{"gitId":"t-cheepeng"},"content":"    }));"},{"lineNumber":505,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateWithErrorMessage\u0027);"},{"lineNumber":506,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":507,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":508,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":509,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":510,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toBe(1);"},{"lineNumber":511,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/front\u0027);"},{"lineNumber":512,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[2])"},{"lineNumber":513,"author":{"gitId":"t-cheepeng"},"content":"        .toEqual(\u0027You are not authorized to view this page.\u0027);"},{"lineNumber":514,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":515,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":516,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should navigate to join course when user click on join course link\u0027, () \u003d\u003e {"},{"lineNumber":517,"author":{"gitId":"t-cheepeng"},"content":"    component.regKey \u003d \u0027reg-key\u0027;"},{"lineNumber":518,"author":{"gitId":"t-cheepeng"},"content":"    component.loggedInUser \u003d \u0027user\u0027;"},{"lineNumber":519,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":520,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":521,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":522,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":523,"author":{"gitId":"t-cheepeng"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement"},{"lineNumber":524,"author":{"gitId":"t-cheepeng"},"content":"        .querySelector(\u0027#join-course-btn\u0027);"},{"lineNumber":525,"author":{"gitId":"t-cheepeng"},"content":"    btn.click();"},{"lineNumber":526,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":527,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toBe(1);"},{"lineNumber":528,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/join\u0027);"},{"lineNumber":529,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":530,"author":{"gitId":"t-cheepeng"},"content":"})"},{"lineNumber":531,"author":{"gitId":"t-cheepeng"},"content":";"}],"authorContributionMap":{"t-cheepeng":492,"-":39}},{"path":"src/web/app/pages-session/session-submission-page/session-submission-page.component.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { DOCUMENT } from \u0027@angular/common\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import { forkJoin, Observable, of } from \u0027rxjs\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { environment } from \u0027../../../environments/environment\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { AuthService } from \u0027../../../services/auth.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { FeedbackResponseCommentService } from \u0027../../../services/feedback-response-comment.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import { InstructorService } from \u0027../../../services/instructor.service\u0027;"},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"import { LogService } from \u0027../../../services/log.service\u0027;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import { NavigationService } from \u0027../../../services/navigation.service\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { SimpleModalService } from \u0027../../../services/simple-modal.service\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { StudentService } from \u0027../../../services/student.service\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"},{"lineNumber":21,"author":{"gitId":"halfwhole"},"content":"import { LogType } from \u0027../../../types/api-const\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  AuthInfo,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  FeedbackParticipantType,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  FeedbackQuestion,"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipient,"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  FeedbackQuestionRecipients,"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  FeedbackResponse,"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  FeedbackResponseComment,"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  FeedbackResponses,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  FeedbackSession,"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  Instructor,"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  NumberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  RegkeyValidity,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  Student,"},{"lineNumber":37,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import { FeedbackResponseRequest, Intent } from \u0027../../../types/api-request\u0027;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import { DEFAULT_NUMBER_OF_RETRY_ATTEMPTS } from \u0027../../../types/default-retry-attempts\u0027;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import { CommentRowModel } from \u0027../../components/comment-box/comment-row/comment-row.component\u0027;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import { ErrorReportComponent } from \u0027../../components/error-report/error-report.component\u0027;"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipient,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  FeedbackResponseRecipientSubmissionFormModel,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormMode,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  QuestionSubmissionFormModel,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../../components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import { SavingCompleteModalComponent } from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"interface FeedbackQuestionsResponse {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  questions: FeedbackQuestion[];"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":57,"author":{"gitId":"-"},"content":" * A collection of feedback responses."},{"lineNumber":58,"author":{"gitId":"-"},"content":" */"},{"lineNumber":59,"author":{"gitId":"-"},"content":"export interface FeedbackResponsesResponse {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  responses: FeedbackResponse[];"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Feedback session submission page."},{"lineNumber":65,"author":{"gitId":"-"},"content":" */"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@Component({"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  selector: \u0027tm-session-submission-page\u0027,"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  templateUrl: \u0027./session-submission-page.component.html\u0027,"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"},{"lineNumber":70,"author":{"gitId":"-"},"content":"})"},{"lineNumber":71,"author":{"gitId":"-"},"content":"export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  // enum"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  Intent: typeof Intent \u003d Intent;"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  courseId: string \u003d \u0027\u0027;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  feedbackSessionName: string \u003d \u0027\u0027;"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  regKey: string \u003d \u0027\u0027;"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  loggedInUser: string \u003d \u0027\u0027;"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"  moderatedPerson: string \u003d \u0027\u0027;"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  previewAsPerson: string \u003d \u0027\u0027;"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  // the name of the person involved"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  // (e.g. the student name for unregistered student, the name of instructor being moderated)"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  personName: string \u003d \u0027\u0027;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  personEmail: string \u003d \u0027\u0027;"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  formattedSessionOpeningTime: string \u003d \u0027\u0027;"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  formattedSessionClosingTime: string \u003d \u0027\u0027;"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  feedbackSessionInstructions: string \u003d \u0027\u0027;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  feedbackSessionTimezone: string \u003d \u0027\u0027;"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"  isSavingResponses: boolean \u003d false;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  isSubmissionFormsDisabled: boolean \u003d false;"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"  isModerationHintExpanded: boolean \u003d false;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  moderatedQuestionId: string \u003d \u0027\u0027;"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"  isFeedbackSessionLoading: boolean \u003d true;"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionsLoading: boolean \u003d true;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  hasFeedbackSessionQuestionsLoadingFailed: boolean \u003d false;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  isFeedbackSessionQuestionResponsesLoading: boolean \u003d true;"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  retryAttempts: number \u003d DEFAULT_NUMBER_OF_RETRY_ATTEMPTS;"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"  private backendUrl: string \u003d environment.backendUrl;"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"  constructor(private route: ActivatedRoute,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"              private router: Router,"},{"lineNumber":115,"author":{"gitId":"-"},"content":"              private statusMessageService: StatusMessageService,"},{"lineNumber":116,"author":{"gitId":"-"},"content":"              private timezoneService: TimezoneService,"},{"lineNumber":117,"author":{"gitId":"-"},"content":"              private feedbackQuestionsService: FeedbackQuestionsService,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"              private feedbackResponsesService: FeedbackResponsesService,"},{"lineNumber":119,"author":{"gitId":"-"},"content":"              private feedbackSessionsService: FeedbackSessionsService,"},{"lineNumber":120,"author":{"gitId":"-"},"content":"              private studentService: StudentService,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"              private instructorService: InstructorService,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"              private ngbModal: NgbModal,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"              private simpleModalService: SimpleModalService,"},{"lineNumber":124,"author":{"gitId":"-"},"content":"              private pageScrollService: PageScrollService,"},{"lineNumber":125,"author":{"gitId":"-"},"content":"              private authService: AuthService,"},{"lineNumber":126,"author":{"gitId":"-"},"content":"              private navigationService: NavigationService,"},{"lineNumber":127,"author":{"gitId":"-"},"content":"              private commentService: FeedbackResponseCommentService,"},{"lineNumber":128,"author":{"gitId":"AdithyaNarayan"},"content":"              private logService: LogService,"},{"lineNumber":129,"author":{"gitId":"-"},"content":"              @Inject(DOCUMENT) private document: any) {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"  ngOnInit(): void {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    this.route.data.pipe("},{"lineNumber":135,"author":{"gitId":"-"},"content":"        tap((data: any) \u003d\u003e {"},{"lineNumber":136,"author":{"gitId":"-"},"content":"          this.intent \u003d data.intent;"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        switchMap(() \u003d\u003e this.route.queryParams),"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    ).subscribe((queryParams: any) \u003d\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      this.courseId \u003d queryParams.courseid;"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      this.feedbackSessionName \u003d queryParams.fsname;"},{"lineNumber":142,"author":{"gitId":"-"},"content":"      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // disable submission in the preview mode"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":150,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"      const nextUrl: string \u003d `${window.location.pathname}${window.location.search}`;"},{"lineNumber":153,"author":{"gitId":"-"},"content":"      this.authService.getAuthUser(undefined, nextUrl).subscribe((auth: AuthInfo) \u003d\u003e {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        const isPreviewOrModeration: boolean \u003d !!(auth.user \u0026\u0026 (this.moderatedPerson || this.previewAsPerson));"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (auth.user) {"},{"lineNumber":156,"author":{"gitId":"-"},"content":"          this.loggedInUser \u003d auth.user.id;"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (this.regKey \u0026\u0026 !isPreviewOrModeration) {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          this.authService.getAuthRegkeyValidity(this.regKey, this.intent).subscribe((resp: RegkeyValidity) \u003d\u003e {"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            if (resp.isAllowedAccess) {"},{"lineNumber":161,"author":{"gitId":"-"},"content":"              if (resp.isUsed) {"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                // The logged in user matches the registration key; redirect to the logged in URL"},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"                this.navigationService.navigateByURLWithParamEncoding(this.router, \u0027/web/student/sessions/submission\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                    { courseid: this.courseId, fsname: this.feedbackSessionName });"},{"lineNumber":166,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                // Valid, unused registration key; load information based on the key"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                this.loadPersonName();"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                this.loadFeedbackSession();"},{"lineNumber":170,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            } else if (resp.isValid) {"},{"lineNumber":172,"author":{"gitId":"-"},"content":"              // At this point, registration key must already be used, otherwise access would be granted"},{"lineNumber":173,"author":{"gitId":"-"},"content":"              if (this.loggedInUser) {"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                // Registration key belongs to another user who is not the logged in user"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":177,"author":{"gitId":"-"},"content":"              } else {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                // There is no logged in user for a valid, used registration key, redirect to login page"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                window.location.href \u003d `${this.backendUrl}${auth.studentLoginUrl}`;"},{"lineNumber":180,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            } else {"},{"lineNumber":182,"author":{"gitId":"-"},"content":"              // The registration key is invalid"},{"lineNumber":183,"author":{"gitId":"-"},"content":"              this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                  \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"-"},"content":"          }, () \u003d\u003e {"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":189,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } else if (this.loggedInUser) {"},{"lineNumber":191,"author":{"gitId":"-"},"content":"          // Load information based on logged in user"},{"lineNumber":192,"author":{"gitId":"-"},"content":"          // This will also cover moderation/preview cases"},{"lineNumber":193,"author":{"gitId":"-"},"content":"          this.loadPersonName();"},{"lineNumber":194,"author":{"gitId":"-"},"content":"          this.loadFeedbackSession();"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } else {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":197,"author":{"gitId":"-"},"content":"              \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      }, () \u003d\u003e {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/front\u0027,"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            \u0027You are not authorized to view this page.\u0027);"},{"lineNumber":202,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"-"},"content":"  ngAfterViewInit(): void {"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    if (!this.moderatedQuestionId) {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    setTimeout(() \u003d\u003e {"},{"lineNumber":211,"author":{"gitId":"-"},"content":"      this.pageScrollService.scroll({"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        document: this.document,"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        scrollTarget: `#${this.moderatedQuestionId}`,"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        scrollOffset: 70,"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }, 500);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":220,"author":{"gitId":"AdithyaNarayan"},"content":"   * Loads the name of the person involved in the submission."},{"lineNumber":221,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  loadPersonName(): void {"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    switch (this.intent) {"},{"lineNumber":224,"author":{"gitId":"-"},"content":"      case Intent.STUDENT_SUBMISSION:"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        this.studentService.getStudent("},{"lineNumber":226,"author":{"gitId":"-"},"content":"            this.courseId,"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.moderatedPerson || this.previewAsPerson,"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.regKey,"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        ).subscribe((student: Student) \u003d\u003e {"},{"lineNumber":230,"author":{"gitId":"-"},"content":"          this.personName \u003d student.name;"},{"lineNumber":231,"author":{"gitId":"-"},"content":"          this.personEmail \u003d student.email;"},{"lineNumber":232,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":233,"author":{"gitId":"AdithyaNarayan"},"content":"          this.logService.createFeedbackSessionLog({"},{"lineNumber":234,"author":{"gitId":"AdithyaNarayan"},"content":"            courseId: this.courseId,"},{"lineNumber":235,"author":{"gitId":"AdithyaNarayan"},"content":"            feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":236,"author":{"gitId":"AdithyaNarayan"},"content":"            studentEmail: this.personEmail,"},{"lineNumber":237,"author":{"gitId":"halfwhole"},"content":"            logType: LogType.FEEDBACK_SESSION_ACCESS,"},{"lineNumber":238,"author":{"gitId":"AdithyaNarayan"},"content":"          }).subscribe(() \u003d\u003e {"},{"lineNumber":239,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":240,"author":{"gitId":"AdithyaNarayan"},"content":"          }, () \u003d\u003e {"},{"lineNumber":241,"author":{"gitId":"AdithyaNarayan"},"content":"            this.statusMessageService.showWarningToast(\u0027Failed to log feedback session access\u0027);"},{"lineNumber":242,"author":{"gitId":"AdithyaNarayan"},"content":"          });"},{"lineNumber":243,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":244,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":246,"author":{"gitId":"-"},"content":"      case Intent.INSTRUCTOR_SUBMISSION:"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        this.instructorService.getInstructor({"},{"lineNumber":248,"author":{"gitId":"-"},"content":"          courseId: this.courseId,"},{"lineNumber":249,"author":{"gitId":"-"},"content":"          feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":250,"author":{"gitId":"-"},"content":"          intent: this.intent,"},{"lineNumber":251,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":252,"author":{"gitId":"-"},"content":"          moderatedPerson: this.moderatedPerson,"},{"lineNumber":253,"author":{"gitId":"-"},"content":"          previewAs: this.previewAsPerson,"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }).subscribe((instructor: Instructor) \u003d\u003e {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"          this.personName \u003d instructor.name;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"          this.personEmail \u003d instructor.email;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        break;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":264,"author":{"gitId":"-"},"content":"   * Redirects to join course link for unregistered student."},{"lineNumber":265,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  joinCourseForUnregisteredStudent(): void {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    this.navigationService.navigateByURL(this.router, \u0027/web/join\u0027, { entitytype: \u0027student\u0027, key: this.regKey });"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"   * Loads the feedback session information."},{"lineNumber":272,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  loadFeedbackSession(): void {"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionLoading \u003d true;"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    this.feedbackSessionsService.getFeedbackSession({"},{"lineNumber":277,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":279,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionLoading \u003d false))"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        this.feedbackSessionInstructions \u003d feedbackSession.instructions;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        this.formattedSessionOpeningTime \u003d this.timezoneService"},{"lineNumber":287,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionStartTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":288,"author":{"gitId":"-"},"content":""},{"lineNumber":289,"author":{"gitId":"-"},"content":"        this.formattedSessionClosingTime \u003d this.timezoneService"},{"lineNumber":290,"author":{"gitId":"-"},"content":"          .formatToString(feedbackSession.submissionEndTimestamp, feedbackSession.timeZone, TIME_FORMAT);"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":"        this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        this.feedbackSessionTimezone \u003d feedbackSession.timeZone;"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // don\u0027t show alert modal in moderation"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        if (!this.moderatedPerson) {"},{"lineNumber":297,"author":{"gitId":"-"},"content":"          let modalContent: string;"},{"lineNumber":298,"author":{"gitId":"-"},"content":"          switch (feedbackSession.submissionStatus) {"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"},{"lineNumber":300,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":301,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eThe feedback session is currently not open for submissions.\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":304,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":305,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Not Open\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":306,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.OPEN:"},{"lineNumber":308,"author":{"gitId":"-"},"content":"              // closing in 15 minutes"},{"lineNumber":309,"author":{"gitId":"-"},"content":"              if (feedbackSession.submissionEndTimestamp - Date.now() \u003c 15 * 60 * 1000) {"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                modalContent \u003d \u0027Warning: you have less than 15 minutes before the submission deadline expires!\u0027;"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                this.simpleModalService.openInformationModal("},{"lineNumber":312,"author":{"gitId":"-"},"content":"                  \u0027Feedback Session Will Be Closing Soon!\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":313,"author":{"gitId":"-"},"content":"              }"},{"lineNumber":314,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.CLOSED:"},{"lineNumber":316,"author":{"gitId":"-"},"content":"              this.isSubmissionFormsDisabled \u003d true;"},{"lineNumber":317,"author":{"gitId":"-"},"content":"              modalContent \u003d `\u003cp\u003e\u003cstrong\u003eFeedback Session is Closed\u003c/strong\u003e\u003c/p\u003e"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u003cp\u003eYou can view the questions and any submitted responses"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                for this feedback session but cannot submit new responses.\u003c/p\u003e`;"},{"lineNumber":320,"author":{"gitId":"-"},"content":"              this.simpleModalService.openInformationModal("},{"lineNumber":321,"author":{"gitId":"-"},"content":"                \u0027Feedback Session Closed\u0027, SimpleModalType.WARNING, modalContent);"},{"lineNumber":322,"author":{"gitId":"-"},"content":"              break;"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"},{"lineNumber":324,"author":{"gitId":"-"},"content":"            default:"},{"lineNumber":325,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":"        this.loadFeedbackQuestions();"},{"lineNumber":329,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        if (resp.status \u003d\u003d\u003d 404) {"},{"lineNumber":331,"author":{"gitId":"-"},"content":"          this.simpleModalService.openInformationModal(\u0027Feedback Session Does Not Exist!\u0027, SimpleModalType.DANGER,"},{"lineNumber":332,"author":{"gitId":"-"},"content":"            \u0027The session does not exist (most likely deleted by the instructor after the submission link was sent).\u0027);"},{"lineNumber":333,"author":{"gitId":"-"},"content":"          this.navigationService.navigateWithErrorMessage(this.router, \u0027/web/student/home\u0027, resp.error.message);"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":336,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":339,"author":{"gitId":"-"},"content":"   * Loads feedback questions to submit."},{"lineNumber":340,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  loadFeedbackQuestions(): void {"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionsLoading \u003d true;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms \u003d [];"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.getFeedbackQuestions({"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      courseId: this.courseId,"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":347,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":348,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionQuestionsLoading \u003d false))"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"-"},"content":"          this.isFeedbackSessionQuestionResponsesLoading \u003d response.questions.length !\u003d\u003d 0;"},{"lineNumber":354,"author":{"gitId":"-"},"content":"          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"            const model: QuestionSubmissionFormModel \u003d {"},{"lineNumber":356,"author":{"gitId":"-"},"content":"              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"},{"lineNumber":357,"author":{"gitId":"-"},"content":""},{"lineNumber":358,"author":{"gitId":"-"},"content":"              questionNumber: feedbackQuestion.questionNumber,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"              questionBrief: feedbackQuestion.questionBrief,"},{"lineNumber":360,"author":{"gitId":"-"},"content":"              questionDescription: feedbackQuestion.questionDescription,"},{"lineNumber":361,"author":{"gitId":"-"},"content":""},{"lineNumber":362,"author":{"gitId":"-"},"content":"              giverType: feedbackQuestion.giverType,"},{"lineNumber":363,"author":{"gitId":"-"},"content":"              recipientType: feedbackQuestion.recipientType,"},{"lineNumber":364,"author":{"gitId":"-"},"content":"              recipientList: [],"},{"lineNumber":365,"author":{"gitId":"-"},"content":"              recipientSubmissionForms: [],"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":"              questionType: feedbackQuestion.questionType,"},{"lineNumber":368,"author":{"gitId":"-"},"content":"              questionDetails: feedbackQuestion.questionDetails,"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"},{"lineNumber":371,"author":{"gitId":"-"},"content":"              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"},{"lineNumber":372,"author":{"gitId":"-"},"content":"                      ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"},{"lineNumber":373,"author":{"gitId":"-"},"content":""},{"lineNumber":374,"author":{"gitId":"-"},"content":"              showGiverNameTo: feedbackQuestion.showGiverNameTo,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"              showResponsesTo: feedbackQuestion.showResponsesTo,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":378,"author":{"gitId":"-"},"content":"            this.questionSubmissionForms.push(model);"},{"lineNumber":379,"author":{"gitId":"-"},"content":"            this.loadFeedbackQuestionRecipientsForQuestion(model);"},{"lineNumber":380,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":381,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":382,"author":{"gitId":"-"},"content":"          this.handleError(resp);"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":385,"author":{"gitId":"-"},"content":""},{"lineNumber":386,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   * Tracks the question submission form by feedback question id."},{"lineNumber":388,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":389,"author":{"gitId":"-"},"content":"   * @see https://angular.io/api/common/NgForOf#properties"},{"lineNumber":390,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":391,"author":{"gitId":"-"},"content":"  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    return item.feedbackQuestionId;"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":394,"author":{"gitId":"-"},"content":""},{"lineNumber":395,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   * Loads the feedback question recipients for the question."},{"lineNumber":397,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    this.feedbackQuestionsService.loadFeedbackQuestionRecipients({"},{"lineNumber":400,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":401,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":402,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":403,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":404,"author":{"gitId":"-"},"content":"      previewAs: this.previewAsPerson,"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    }).subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"      response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"},{"lineNumber":407,"author":{"gitId":"-"},"content":"        model.recipientList.push({"},{"lineNumber":408,"author":{"gitId":"-"},"content":"          recipientIdentifier: recipient.identifier,"},{"lineNumber":409,"author":{"gitId":"-"},"content":"          recipientName: recipient.name,"},{"lineNumber":410,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":412,"author":{"gitId":"-"},"content":""},{"lineNumber":413,"author":{"gitId":"-"},"content":"      if (this.previewAsPerson) {"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        // don\u0027t load responses in preview mode"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        // generate a list of empty response box"},{"lineNumber":416,"author":{"gitId":"-"},"content":"        const formMode: QuestionSubmissionFormMode \u003d this.getQuestionSubmissionFormMode(model);"},{"lineNumber":417,"author":{"gitId":"-"},"content":"        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":418,"author":{"gitId":"-"},"content":"          if (formMode \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT \u0026\u0026"},{"lineNumber":419,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.length \u003e\u003d"},{"lineNumber":420,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo) {"},{"lineNumber":421,"author":{"gitId":"-"},"content":"            return;"},{"lineNumber":422,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":423,"author":{"gitId":"-"},"content":""},{"lineNumber":424,"author":{"gitId":"-"},"content":"          let recipientIdentifier: string \u003d \u0027\u0027;"},{"lineNumber":425,"author":{"gitId":"-"},"content":"          if (formMode !\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            recipientIdentifier \u003d recipient.recipientIdentifier;"},{"lineNumber":427,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"          model.recipientSubmissionForms.push({"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            recipientIdentifier,"},{"lineNumber":431,"author":{"gitId":"-"},"content":"            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            responseId: \u0027\u0027,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            isValid: true,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":435,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":436,"author":{"gitId":"-"},"content":"        this.isFeedbackSessionQuestionResponsesLoading \u003d false;"},{"lineNumber":437,"author":{"gitId":"-"},"content":"      } else {"},{"lineNumber":438,"author":{"gitId":"-"},"content":"        this.loadFeedbackResponses(model);"},{"lineNumber":439,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":440,"author":{"gitId":"-"},"content":"    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":442,"author":{"gitId":"-"},"content":""},{"lineNumber":443,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   * Gets the form mode of the question submission form."},{"lineNumber":445,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":446,"author":{"gitId":"-"},"content":"  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean"},{"lineNumber":448,"author":{"gitId":"-"},"content":"        \u003d (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"},{"lineNumber":449,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"},{"lineNumber":450,"author":{"gitId":"-"},"content":"        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"},{"lineNumber":451,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"},{"lineNumber":452,"author":{"gitId":"-"},"content":"        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"},{"lineNumber":453,"author":{"gitId":"-"},"content":""},{"lineNumber":454,"author":{"gitId":"-"},"content":"    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"},{"lineNumber":455,"author":{"gitId":"-"},"content":"        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"},{"lineNumber":456,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":457,"author":{"gitId":"-"},"content":""},{"lineNumber":458,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."},{"lineNumber":460,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":461,"author":{"gitId":"-"},"content":"  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"},{"lineNumber":462,"author":{"gitId":"-"},"content":"    this.isFeedbackSessionQuestionResponsesLoading \u003d true;"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    this.feedbackResponsesService.getFeedbackResponse({"},{"lineNumber":464,"author":{"gitId":"-"},"content":"      questionId: model.feedbackQuestionId,"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      intent: this.intent,"},{"lineNumber":466,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":467,"author":{"gitId":"-"},"content":"      moderatedPerson: this.moderatedPerson,"},{"lineNumber":468,"author":{"gitId":"-"},"content":"    }).pipe(finalize(() \u003d\u003e this.isFeedbackSessionQuestionResponsesLoading \u003d false))"},{"lineNumber":469,"author":{"gitId":"-"},"content":"      .subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"},{"lineNumber":470,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"},{"lineNumber":471,"author":{"gitId":"-"},"content":"          // need to generate a full list of submission forms"},{"lineNumber":472,"author":{"gitId":"-"},"content":"          model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            const matchedExistingResponse: FeedbackResponse | undefined \u003d"},{"lineNumber":474,"author":{"gitId":"-"},"content":"              existingResponses.responses.find("},{"lineNumber":475,"author":{"gitId":"-"},"content":"                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            const submissionForm: FeedbackResponseRecipientSubmissionFormModel \u003d {"},{"lineNumber":477,"author":{"gitId":"-"},"content":"              recipientIdentifier: recipient.recipientIdentifier,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"              responseDetails: matchedExistingResponse"},{"lineNumber":479,"author":{"gitId":"-"},"content":"                ? matchedExistingResponse.responseDetails"},{"lineNumber":480,"author":{"gitId":"-"},"content":"                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":481,"author":{"gitId":"-"},"content":"              responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            };"},{"lineNumber":484,"author":{"gitId":"-"},"content":"            if (matchedExistingResponse \u0026\u0026 matchedExistingResponse.giverComment) {"},{"lineNumber":485,"author":{"gitId":"-"},"content":"              submissionForm.commentByGiver \u003d this.getCommentModel(matchedExistingResponse.giverComment);"},{"lineNumber":486,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":487,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push(submissionForm);"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":490,"author":{"gitId":"-"},"content":""},{"lineNumber":491,"author":{"gitId":"-"},"content":"        if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"},{"lineNumber":492,"author":{"gitId":"-"},"content":"          // need to generate limited number of submission forms"},{"lineNumber":493,"author":{"gitId":"-"},"content":"          let numberOfRecipientSubmissionFormsNeeded: number \u003d"},{"lineNumber":494,"author":{"gitId":"-"},"content":"            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"},{"lineNumber":495,"author":{"gitId":"-"},"content":""},{"lineNumber":496,"author":{"gitId":"-"},"content":"          existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":497,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":498,"author":{"gitId":"-"},"content":"              recipientIdentifier: response.recipientIdentifier,"},{"lineNumber":499,"author":{"gitId":"-"},"content":"              responseDetails: response.responseDetails,"},{"lineNumber":500,"author":{"gitId":"-"},"content":"              responseId: response.feedbackResponseId,"},{"lineNumber":501,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":502,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":503,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":504,"author":{"gitId":"-"},"content":""},{"lineNumber":505,"author":{"gitId":"-"},"content":"          // generate empty submission forms"},{"lineNumber":506,"author":{"gitId":"-"},"content":"          while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"},{"lineNumber":507,"author":{"gitId":"-"},"content":"            model.recipientSubmissionForms.push({"},{"lineNumber":508,"author":{"gitId":"-"},"content":"              recipientIdentifier: \u0027\u0027,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"              responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"},{"lineNumber":510,"author":{"gitId":"-"},"content":"              responseId: \u0027\u0027,"},{"lineNumber":511,"author":{"gitId":"-"},"content":"              isValid: true,"},{"lineNumber":512,"author":{"gitId":"-"},"content":"            });"},{"lineNumber":513,"author":{"gitId":"-"},"content":"            numberOfRecipientSubmissionFormsNeeded -\u003d 1;"},{"lineNumber":514,"author":{"gitId":"-"},"content":"          }"},{"lineNumber":515,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorToast(resp.error.message));"},{"lineNumber":517,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":518,"author":{"gitId":"-"},"content":""},{"lineNumber":519,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   * Gets the comment model for a given comment."},{"lineNumber":521,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":522,"author":{"gitId":"-"},"content":"  getCommentModel(comment: FeedbackResponseComment): CommentRowModel {"},{"lineNumber":523,"author":{"gitId":"-"},"content":"    return {"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      originalComment: comment,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"      commentEditFormModel: {"},{"lineNumber":526,"author":{"gitId":"-"},"content":"        commentText: comment.commentText,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"        // the participant comment shall not use custom visibilities"},{"lineNumber":528,"author":{"gitId":"-"},"content":"        isUsingCustomVisibilities: false,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":530,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":531,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      timezone: this.feedbackSessionTimezone,"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      isEditing: false,"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":535,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":536,"author":{"gitId":"-"},"content":""},{"lineNumber":537,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":538,"author":{"gitId":"-"},"content":"   * Checks whether there is any submission forms in the current page."},{"lineNumber":539,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":540,"author":{"gitId":"-"},"content":"  get hasAnyResponseToSubmit(): boolean {"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    return this.questionSubmissionForms"},{"lineNumber":542,"author":{"gitId":"-"},"content":"        .some((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"},{"lineNumber":543,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":544,"author":{"gitId":"-"},"content":""},{"lineNumber":545,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   * Saves all feedback response."},{"lineNumber":547,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."},{"lineNumber":549,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":550,"author":{"gitId":"-"},"content":"  saveFeedbackResponses(): void {"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    const requestIds: Record\u003cstring, string\u003e \u003d {};"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    const answers: Record\u003cstring, FeedbackResponse[]\u003e \u003d {};"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    const failToSaveQuestions: Record\u003cnumber, string\u003e \u003d {}; // Map of question number to error message"},{"lineNumber":555,"author":{"gitId":"-"},"content":"    const savingRequests: Observable\u003cany\u003e[] \u003d [];"},{"lineNumber":556,"author":{"gitId":"-"},"content":""},{"lineNumber":557,"author":{"gitId":"AdithyaNarayan"},"content":"    this.logService.createFeedbackSessionLog({"},{"lineNumber":558,"author":{"gitId":"AdithyaNarayan"},"content":"      courseId: this.courseId,"},{"lineNumber":559,"author":{"gitId":"AdithyaNarayan"},"content":"      feedbackSessionName: this.feedbackSessionName,"},{"lineNumber":560,"author":{"gitId":"AdithyaNarayan"},"content":"      studentEmail: this.personEmail,"},{"lineNumber":561,"author":{"gitId":"halfwhole"},"content":"      logType: LogType.FEEDBACK_SESSION_SUBMISSION,"},{"lineNumber":562,"author":{"gitId":"AdithyaNarayan"},"content":"    }).subscribe(() \u003d\u003e {"},{"lineNumber":563,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":564,"author":{"gitId":"AdithyaNarayan"},"content":"    }, () \u003d\u003e {"},{"lineNumber":565,"author":{"gitId":"AdithyaNarayan"},"content":"      this.statusMessageService.showWarningToast(\u0027Failed to log feedback session submission\u0027);"},{"lineNumber":566,"author":{"gitId":"AdithyaNarayan"},"content":"    });"},{"lineNumber":567,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":568,"author":{"gitId":"-"},"content":"    this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"},{"lineNumber":569,"author":{"gitId":"-"},"content":"      let isQuestionFullyAnswered: boolean \u003d true;"},{"lineNumber":570,"author":{"gitId":"-"},"content":""},{"lineNumber":571,"author":{"gitId":"-"},"content":"      const responses: FeedbackResponseRequest[] \u003d [];"},{"lineNumber":572,"author":{"gitId":"-"},"content":""},{"lineNumber":573,"author":{"gitId":"-"},"content":"      questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":574,"author":{"gitId":"-"},"content":"          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":575,"author":{"gitId":"-"},"content":"            if (!recipientSubmissionFormModel.isValid) {"},{"lineNumber":576,"author":{"gitId":"-"},"content":"              failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d"},{"lineNumber":577,"author":{"gitId":"-"},"content":"                  \u0027Invalid responses provided. Please check question constraints.\u0027;"},{"lineNumber":578,"author":{"gitId":"-"},"content":"              return;"},{"lineNumber":579,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":580,"author":{"gitId":"-"},"content":"            const isFeedbackResponseDetailsEmpty: boolean \u003d"},{"lineNumber":581,"author":{"gitId":"-"},"content":"                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("},{"lineNumber":582,"author":{"gitId":"-"},"content":"                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"},{"lineNumber":583,"author":{"gitId":"-"},"content":"            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"},{"lineNumber":584,"author":{"gitId":"-"},"content":""},{"lineNumber":585,"author":{"gitId":"-"},"content":"            if (!isFeedbackResponseDetailsEmpty) {"},{"lineNumber":586,"author":{"gitId":"-"},"content":"              responses.push({"},{"lineNumber":587,"author":{"gitId":"-"},"content":"                recipient: recipientSubmissionFormModel.recipientIdentifier,"},{"lineNumber":588,"author":{"gitId":"-"},"content":"                responseDetails: recipientSubmissionFormModel.responseDetails,"},{"lineNumber":589,"author":{"gitId":"-"},"content":"              });"},{"lineNumber":590,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":591,"author":{"gitId":"-"},"content":"          });"},{"lineNumber":592,"author":{"gitId":"-"},"content":""},{"lineNumber":593,"author":{"gitId":"-"},"content":"      savingRequests.push("},{"lineNumber":594,"author":{"gitId":"-"},"content":"          this.feedbackResponsesService.submitFeedbackResponses(questionSubmissionFormModel.feedbackQuestionId, {"},{"lineNumber":595,"author":{"gitId":"-"},"content":"            intent: this.intent,"},{"lineNumber":596,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":597,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":598,"author":{"gitId":"-"},"content":"          }, {"},{"lineNumber":599,"author":{"gitId":"-"},"content":"            responses,"},{"lineNumber":600,"author":{"gitId":"-"},"content":"          }).pipe("},{"lineNumber":601,"author":{"gitId":"-"},"content":"              tap((resp: FeedbackResponses) \u003d\u003e {"},{"lineNumber":602,"author":{"gitId":"-"},"content":"                const responsesMap: Record\u003cstring, FeedbackResponse\u003e \u003d {};"},{"lineNumber":603,"author":{"gitId":"-"},"content":"                resp.responses.forEach((response: FeedbackResponse) \u003d\u003e {"},{"lineNumber":604,"author":{"gitId":"-"},"content":"                  responsesMap[response.recipientIdentifier] \u003d response;"},{"lineNumber":605,"author":{"gitId":"-"},"content":"                  answers[questionSubmissionFormModel.feedbackQuestionId] \u003d"},{"lineNumber":606,"author":{"gitId":"-"},"content":"                      answers[questionSubmissionFormModel.feedbackQuestionId] || [];"},{"lineNumber":607,"author":{"gitId":"-"},"content":"                  answers[questionSubmissionFormModel.feedbackQuestionId].push(response);"},{"lineNumber":608,"author":{"gitId":"-"},"content":"                });"},{"lineNumber":609,"author":{"gitId":"-"},"content":"                requestIds[questionSubmissionFormModel.feedbackQuestionId] \u003d resp.requestId || \u0027\u0027;"},{"lineNumber":610,"author":{"gitId":"-"},"content":""},{"lineNumber":611,"author":{"gitId":"-"},"content":"                questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":612,"author":{"gitId":"-"},"content":"                    .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"},{"lineNumber":613,"author":{"gitId":"-"},"content":"                      if (responsesMap[recipientSubmissionFormModel.recipientIdentifier]) {"},{"lineNumber":614,"author":{"gitId":"-"},"content":"                        const correspondingResp: FeedbackResponse \u003d"},{"lineNumber":615,"author":{"gitId":"-"},"content":"                            responsesMap[recipientSubmissionFormModel.recipientIdentifier];"},{"lineNumber":616,"author":{"gitId":"-"},"content":"                        recipientSubmissionFormModel.responseId \u003d correspondingResp.feedbackResponseId;"},{"lineNumber":617,"author":{"gitId":"-"},"content":"                        recipientSubmissionFormModel.responseDetails \u003d correspondingResp.responseDetails;"},{"lineNumber":618,"author":{"gitId":"-"},"content":"                        recipientSubmissionFormModel.recipientIdentifier \u003d correspondingResp.recipientIdentifier;"},{"lineNumber":619,"author":{"gitId":"-"},"content":"                      } else {"},{"lineNumber":620,"author":{"gitId":"-"},"content":"                        recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"},{"lineNumber":621,"author":{"gitId":"-"},"content":"                        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":622,"author":{"gitId":"-"},"content":"                      }"},{"lineNumber":623,"author":{"gitId":"-"},"content":"                    });"},{"lineNumber":624,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":625,"author":{"gitId":"-"},"content":"              switchMap(() \u003d\u003e"},{"lineNumber":626,"author":{"gitId":"-"},"content":"                  forkJoin(questionSubmissionFormModel.recipientSubmissionForms"},{"lineNumber":627,"author":{"gitId":"-"},"content":"                      .map((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e"},{"lineNumber":628,"author":{"gitId":"-"},"content":"                          this.createCommentRequest(recipientSubmissionFormModel))),"},{"lineNumber":629,"author":{"gitId":"-"},"content":"              ),"},{"lineNumber":630,"author":{"gitId":"-"},"content":"              catchError((error: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"                failToSaveQuestions[questionSubmissionFormModel.questionNumber] \u003d error.error.message;"},{"lineNumber":632,"author":{"gitId":"-"},"content":"                return of(error);"},{"lineNumber":633,"author":{"gitId":"-"},"content":"              }),"},{"lineNumber":634,"author":{"gitId":"-"},"content":"          ),"},{"lineNumber":635,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":636,"author":{"gitId":"-"},"content":""},{"lineNumber":637,"author":{"gitId":"-"},"content":"      if (!isQuestionFullyAnswered) {"},{"lineNumber":638,"author":{"gitId":"-"},"content":"        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":640,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":641,"author":{"gitId":"-"},"content":""},{"lineNumber":642,"author":{"gitId":"-"},"content":"    this.isSavingResponses \u003d true;"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    forkJoin(savingRequests).pipe("},{"lineNumber":644,"author":{"gitId":"-"},"content":"        finalize(() \u003d\u003e {"},{"lineNumber":645,"author":{"gitId":"-"},"content":"          this.isSavingResponses \u003d false;"},{"lineNumber":646,"author":{"gitId":"-"},"content":""},{"lineNumber":647,"author":{"gitId":"-"},"content":"          const modalRef: NgbModalRef \u003d this.ngbModal.open(SavingCompleteModalComponent);"},{"lineNumber":648,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.requestIds \u003d requestIds;"},{"lineNumber":649,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.courseId \u003d this.courseId;"},{"lineNumber":650,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionName \u003d this.feedbackSessionName;"},{"lineNumber":651,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.feedbackSessionTimezone \u003d this.feedbackSessionTimezone;"},{"lineNumber":652,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personEmail \u003d this.personEmail;"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.personName \u003d this.personName;"},{"lineNumber":654,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.questions \u003d this.questionSubmissionForms;"},{"lineNumber":655,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.answers \u003d answers;"},{"lineNumber":656,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values());"},{"lineNumber":657,"author":{"gitId":"-"},"content":"          modalRef.componentInstance.failToSaveQuestions \u003d failToSaveQuestions;"},{"lineNumber":658,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":659,"author":{"gitId":"-"},"content":"    ).subscribe();"},{"lineNumber":660,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":661,"author":{"gitId":"-"},"content":""},{"lineNumber":662,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":663,"author":{"gitId":"-"},"content":"   * Creates comment request."},{"lineNumber":664,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":665,"author":{"gitId":"-"},"content":"  createCommentRequest(recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel): Observable\u003cany\u003e {"},{"lineNumber":666,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.responseId) {"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      // responseId not set, cannot set comment"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":669,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":670,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver) {"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      // comment not given, do nothing"},{"lineNumber":672,"author":{"gitId":"-"},"content":"      return of({});"},{"lineNumber":673,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":674,"author":{"gitId":"-"},"content":""},{"lineNumber":675,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      // comment is new"},{"lineNumber":677,"author":{"gitId":"-"},"content":""},{"lineNumber":678,"author":{"gitId":"-"},"content":"      if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":679,"author":{"gitId":"-"},"content":"        // new comment is empty"},{"lineNumber":680,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":681,"author":{"gitId":"-"},"content":"        return of({});"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":683,"author":{"gitId":"-"},"content":""},{"lineNumber":684,"author":{"gitId":"-"},"content":"      // create new comment"},{"lineNumber":685,"author":{"gitId":"-"},"content":"      return this.commentService.createComment({"},{"lineNumber":686,"author":{"gitId":"-"},"content":"        commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":687,"author":{"gitId":"-"},"content":"        // we ignore the fields in comment edit model as participant comment"},{"lineNumber":688,"author":{"gitId":"-"},"content":"        // will follow visibilities from question by design"},{"lineNumber":689,"author":{"gitId":"-"},"content":"        showCommentTo: [],"},{"lineNumber":690,"author":{"gitId":"-"},"content":"        showGiverNameTo: [],"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      }, recipientSubmissionFormModel.responseId, this.intent, {"},{"lineNumber":692,"author":{"gitId":"-"},"content":"        key: this.regKey,"},{"lineNumber":693,"author":{"gitId":"-"},"content":"        moderatedperson: this.moderatedPerson,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"      }).pipe("},{"lineNumber":695,"author":{"gitId":"-"},"content":"          tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":696,"author":{"gitId":"-"},"content":"            recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":697,"author":{"gitId":"-"},"content":"          }),"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      );"},{"lineNumber":699,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":700,"author":{"gitId":"-"},"content":""},{"lineNumber":701,"author":{"gitId":"-"},"content":"    // existing comment"},{"lineNumber":702,"author":{"gitId":"-"},"content":""},{"lineNumber":703,"author":{"gitId":"-"},"content":"    if (recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText \u003d\u003d\u003d \u0027\u0027) {"},{"lineNumber":704,"author":{"gitId":"-"},"content":"      // comment is empty, create delete request"},{"lineNumber":705,"author":{"gitId":"-"},"content":"      return this.commentService.deleteComment("},{"lineNumber":706,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            key: this.regKey,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            moderatedperson: this.moderatedPerson,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"          })"},{"lineNumber":710,"author":{"gitId":"-"},"content":"          .pipe("},{"lineNumber":711,"author":{"gitId":"-"},"content":"              tap(() \u003d\u003e {"},{"lineNumber":712,"author":{"gitId":"-"},"content":"                recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":713,"author":{"gitId":"-"},"content":"              }));"},{"lineNumber":714,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":715,"author":{"gitId":"-"},"content":""},{"lineNumber":716,"author":{"gitId":"-"},"content":"    // update comment"},{"lineNumber":717,"author":{"gitId":"-"},"content":"    return this.commentService.updateComment({"},{"lineNumber":718,"author":{"gitId":"-"},"content":"      commentText: recipientSubmissionFormModel.commentByGiver.commentEditFormModel.commentText,"},{"lineNumber":719,"author":{"gitId":"-"},"content":"      // we ignore the fields in comment edit model as participant comment"},{"lineNumber":720,"author":{"gitId":"-"},"content":"      // will follow visibilities from question by design"},{"lineNumber":721,"author":{"gitId":"-"},"content":"      showCommentTo: [],"},{"lineNumber":722,"author":{"gitId":"-"},"content":"      showGiverNameTo: [],"},{"lineNumber":723,"author":{"gitId":"-"},"content":"    }, recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":724,"author":{"gitId":"-"},"content":"      key: this.regKey,"},{"lineNumber":725,"author":{"gitId":"-"},"content":"      moderatedperson: this.moderatedPerson,"},{"lineNumber":726,"author":{"gitId":"-"},"content":"    }).pipe("},{"lineNumber":727,"author":{"gitId":"-"},"content":"        tap((comment: FeedbackResponseComment) \u003d\u003e {"},{"lineNumber":728,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d this.getCommentModel(comment);"},{"lineNumber":729,"author":{"gitId":"-"},"content":"        }),"},{"lineNumber":730,"author":{"gitId":"-"},"content":"    );"},{"lineNumber":731,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":732,"author":{"gitId":"-"},"content":""},{"lineNumber":733,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":734,"author":{"gitId":"-"},"content":"   * Deletes a comment by participants."},{"lineNumber":735,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":736,"author":{"gitId":"-"},"content":"  deleteParticipantComment(questionIndex: number, responseIdx: number): void {"},{"lineNumber":737,"author":{"gitId":"-"},"content":"    const recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel \u003d"},{"lineNumber":738,"author":{"gitId":"-"},"content":"        this.questionSubmissionForms[questionIndex].recipientSubmissionForms[responseIdx];"},{"lineNumber":739,"author":{"gitId":"-"},"content":""},{"lineNumber":740,"author":{"gitId":"-"},"content":"    if (!recipientSubmissionFormModel.commentByGiver || !recipientSubmissionFormModel.commentByGiver.originalComment) {"},{"lineNumber":741,"author":{"gitId":"-"},"content":"      return;"},{"lineNumber":742,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":743,"author":{"gitId":"-"},"content":""},{"lineNumber":744,"author":{"gitId":"-"},"content":"    this.commentService.deleteComment("},{"lineNumber":745,"author":{"gitId":"-"},"content":"        recipientSubmissionFormModel.commentByGiver.originalComment.feedbackResponseCommentId, this.intent, {"},{"lineNumber":746,"author":{"gitId":"-"},"content":"          key: this.regKey,"},{"lineNumber":747,"author":{"gitId":"-"},"content":"          moderatedperson: this.moderatedPerson,"},{"lineNumber":748,"author":{"gitId":"-"},"content":"        }).subscribe(() \u003d\u003e {"},{"lineNumber":749,"author":{"gitId":"-"},"content":"          recipientSubmissionFormModel.commentByGiver \u003d undefined;"},{"lineNumber":750,"author":{"gitId":"-"},"content":"          this.statusMessageService.showSuccessToast(\u0027Your comment has been deleted!\u0027);"},{"lineNumber":751,"author":{"gitId":"-"},"content":"        }, (resp: ErrorMessageOutput) \u003d\u003e {"},{"lineNumber":752,"author":{"gitId":"-"},"content":"          this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":753,"author":{"gitId":"-"},"content":"        });"},{"lineNumber":754,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":755,"author":{"gitId":"-"},"content":""},{"lineNumber":756,"author":{"gitId":"-"},"content":"  retryLoadingFeedbackSessionQuestions(): void {"},{"lineNumber":757,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d false;"},{"lineNumber":758,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003e\u003d 0) {"},{"lineNumber":759,"author":{"gitId":"-"},"content":"      this.retryAttempts -\u003d 1;"},{"lineNumber":760,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":761,"author":{"gitId":"-"},"content":"    this.loadFeedbackQuestions();"},{"lineNumber":762,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":763,"author":{"gitId":"-"},"content":""},{"lineNumber":764,"author":{"gitId":"-"},"content":"  handleError(resp: ErrorMessageOutput): void {"},{"lineNumber":765,"author":{"gitId":"-"},"content":"    this.hasFeedbackSessionQuestionsLoadingFailed \u003d true;"},{"lineNumber":766,"author":{"gitId":"-"},"content":"    if (this.retryAttempts \u003c 0) {"},{"lineNumber":767,"author":{"gitId":"-"},"content":"      const report: NgbModalRef \u003d this.ngbModal.open(ErrorReportComponent);"},{"lineNumber":768,"author":{"gitId":"-"},"content":"      report.componentInstance.requestId \u003d resp.error.requestId;"},{"lineNumber":769,"author":{"gitId":"-"},"content":"      report.componentInstance.errorMessage \u003d resp.error.message;"},{"lineNumber":770,"author":{"gitId":"-"},"content":"    } else {"},{"lineNumber":771,"author":{"gitId":"-"},"content":"      this.statusMessageService.showErrorToast(resp.error.message);"},{"lineNumber":772,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":773,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":774,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":3,"AdithyaNarayan":24,"-":747}},{"path":"src/web/app/pages-student/student-home-page/student-home-page.component.html","fileType":"html","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003ctm-loading-retry [shouldShowRetry]\u003d\"hasCoursesLoadingFailed\" [message]\u003d\"\u0027Failed to load courses\u0027\" (retryEvent)\u003d\"loadStudentCourses()\"\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003cdiv *tmIsLoading\u003d\"isCoursesLoading\"\u003e\u003c/div\u003e"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \u003cdiv *ngIf\u003d\"!isCoursesLoading \u0026\u0026 courses.length \u003d\u003d 0; else coursesContainer\"\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    You are not enrolled in any courses. Please refer to the \u003ca tmRouterLink\u003d\"/web/student/help\"\u003ehelp page\u003c/a\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    if you need more information."},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003c/div\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cng-template #coursesContainer\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cdiv *ngIf\u003d\"courses.length\" class\u003d\"row mb-2\"\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"col-12\"\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"float-right\"\u003e"},{"lineNumber":11,"author":{"gitId":"-"},"content":"          \u003cstrong class\u003d\"d-inline\"\u003e Sort By: \u003c/strong\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"btn-group\"\u003e"},{"lineNumber":13,"author":{"gitId":"Derek-Hardy"},"content":"            \u003cbutton id\u003d\"sort-course-id-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_ID\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"},{"lineNumber":14,"author":{"gitId":"Derek-Hardy"},"content":"            \u003cbutton id\u003d\"sort-course-name-btn\" class\u003d\"btn btn-light\" [disabled]\u003d\"sortBy \u003d\u003d\u003d SortBy.COURSE_NAME\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/div\u003e"},{"lineNumber":19,"author":{"gitId":"Derek-Hardy"},"content":"    \u003cng-container *ngFor\u003d\"let studentCourse of courses; index as i\"\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"card-header bg-primary text-white\" *ngIf\u003d\"studentCourse.course as course\"\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cstrong\u003e[{{ course.courseId }}]: {{ course.courseName }}\u003c/strong\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cdiv class\u003d\"card-header-btn-toolbar\"\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003ca tmRouterLink\u003d\"/web/student/course\" [queryParams]\u003d\"{courseid: course.courseId}\""},{"lineNumber":25,"author":{"gitId":"Derek-Hardy"},"content":"               id\u003d\"view-team-btn-{{i}}\" class\u003d\"btn btn-primary btn-sm button\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              View team"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/a\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003cdiv class\u003d\"table-responsive\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cthead\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"              \u003cth\u003eSession Name\u003c/th\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003cth\u003eDeadline\u003c/th\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cth\u003eSubmissions\u003c/th\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cth\u003eResponses\u003c/th\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003cth\u003eAction(s)\u003c/th\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/thead\u003e"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":43,"author":{"gitId":"Derek-Hardy"},"content":"            \u003ctr *ngFor\u003d\"let session of studentCourse.feedbackSessions; index as i\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":"              \u003cng-container\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003ctd\u003e{{ session.session.feedbackSessionName }}\u003c/td\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003ctd *ngIf\u003d\"session.session.submissionEndTimestamp\"\u003e{{ session.session.submissionEndTimestamp | formatDateDetail: session.session.timeZone }}\u003c/td\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getSubmissionStatusTooltip(session)\"\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    {{ session.isOpened | sessionSubmissionStatus: session.isWaitingToOpen : session.isSubmitted }}"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                  \u003cspan [ngbTooltip]\u003d\"getResponseStatusTooltip(session.isPublished)\"\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    {{ session.isPublished | sessionResponseStatus }}"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                  \u003c/span\u003e"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u003ctd\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                  \u003ca [ngClass]\u003d\"{\u0027disabled\u0027 : !session.isPublished}\""},{"lineNumber":59,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/result\" [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":60,"author":{"gitId":"Derek-Hardy"},"content":"                     id\u003d\"view-responses-btn-{{i}}\" class\u003d\"btn btn-light btn-sm btn-margin-right\"\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                    View Responses"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":63,"author":{"gitId":"Derek-Hardy"},"content":"                  \u003ca *ngIf\u003d\"session.isWaitingToOpen\" id\u003d\"disabled-start-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm disabled\"\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 !session.isSubmitted\""},{"lineNumber":67,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":68,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":69,"author":{"gitId":"Derek-Hardy"},"content":"                     id\u003d\"start-submit-btn-{{i}}\""},{"lineNumber":70,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    Start Submission"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"session.isOpened \u0026\u0026 session.isSubmitted\""},{"lineNumber":74,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":75,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":76,"author":{"gitId":"Derek-Hardy"},"content":"                     id\u003d\"edit-submit-btn-{{i}}\""},{"lineNumber":77,"author":{"gitId":"-"},"content":"                     class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                    Edit Submission"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                  \u003ca *ngIf\u003d\"!session.isOpened \u0026\u0026 !session.isWaitingToOpen\""},{"lineNumber":81,"author":{"gitId":"-"},"content":"                     tmRouterLink\u003d\"/web/student/sessions/submission\""},{"lineNumber":82,"author":{"gitId":"-"},"content":"                     [queryParams]\u003d\"{courseid: session.session.courseId, fsname: session.session.feedbackSessionName}\""},{"lineNumber":83,"author":{"gitId":"Derek-Hardy"},"content":"                     id\u003d\"view-submit-btn-{{i}}\" class\u003d\"btn btn-light btn-sm\"\u003e"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                    View Submission"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                  \u003c/a\u003e"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u003c/td\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"              \u003c/ng-container\u003e"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":90,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"          \u003ctable class\u003d\"table table-striped table-bordered margin-0\" *ngIf\u003d\"!(studentCourse.feedbackSessions \u0026\u0026 studentCourse.feedbackSessions.length)\"\u003e"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            \u003ctbody\u003e"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            \u003ctr\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":"              \u003cth class\u003d\"align-center white\"\u003e"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Currently, there are no open evaluation/feedback sessions in this course. When a session is open for submission you will be notified."},{"lineNumber":97,"author":{"gitId":"-"},"content":"              \u003c/th\u003e"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            \u003c/tr\u003e"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            \u003c/tbody\u003e"},{"lineNumber":100,"author":{"gitId":"-"},"content":"          \u003c/table\u003e"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        \u003c/div\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      \u003c/div\u003e"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    \u003c/ng-container\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  \u003c/ng-template\u003e"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003c/tm-loading-retry\u003e"}],"authorContributionMap":{"Derek-Hardy":10,"-":95}},{"path":"src/web/app/pages-student/student-home-page/student-home-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":5,"author":{"gitId":"Derek-Hardy"},"content":"import { of } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"Derek-Hardy"},"content":"import { CourseService } from \u0027../../../services/course.service\u0027;"},{"lineNumber":7,"author":{"gitId":"Derek-Hardy"},"content":"import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":9,"author":{"gitId":"Derek-Hardy"},"content":"  Courses,"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  FeedbackSessionPublishStatus,"},{"lineNumber":11,"author":{"gitId":"Derek-Hardy"},"content":"  FeedbackSessions,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  FeedbackSessionSubmissionStatus,"},{"lineNumber":13,"author":{"gitId":"Derek-Hardy"},"content":"  HasResponses,"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  ResponseVisibleSetting,"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  SessionVisibleSetting,"},{"lineNumber":16,"author":{"gitId":"-"},"content":"} from \u0027../../../types/api-output\u0027;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import { StudentHomePageComponent } from \u0027./student-home-page.component\u0027;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"import { LoadingRetryModule } from \u0027../../components/loading-retry/loading-retry.module\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import { LoadingSpinnerModule } from \u0027../../components/loading-spinner/loading-spinner.module\u0027;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import { TeammatesRouterModule } from \u0027../../components/teammates-router/teammates-router.module\u0027;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import { ResponseStatusPipe } from \u0027../../pipes/session-response-status.pipe\u0027;"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import { SubmissionStatusPipe } from \u0027../../pipes/session-submission-status.pipe\u0027;"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"Derek-Hardy"},"content":"const studentCourseA: any \u003d {"},{"lineNumber":27,"author":{"gitId":"Derek-Hardy"},"content":"  course: {"},{"lineNumber":28,"author":{"gitId":"Derek-Hardy"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":29,"author":{"gitId":"Derek-Hardy"},"content":"    courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":30,"author":{"gitId":"Derek-Hardy"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":31,"author":{"gitId":"Derek-Hardy"},"content":"    creationTimestamp: 1549095330000,"},{"lineNumber":32,"author":{"gitId":"Derek-Hardy"},"content":"    deletionTimestamp: 0,"},{"lineNumber":33,"author":{"gitId":"Derek-Hardy"},"content":"  },"},{"lineNumber":34,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessions: ["},{"lineNumber":35,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":36,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":37,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":38,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":39,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":40,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":41,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":42,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000,"},{"lineNumber":43,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":44,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":45,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":46,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":47,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":48,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":49,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":50,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":51,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":52,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: true,"},{"lineNumber":53,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":54,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":55,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":56,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":57,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":58,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":59,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027Second Session\u0027,"},{"lineNumber":60,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":61,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":62,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":63,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":64,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000,"},{"lineNumber":65,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":66,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":67,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":68,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":69,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":70,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":71,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":72,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":73,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":74,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: false,"},{"lineNumber":75,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":76,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":77,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":78,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":79,"author":{"gitId":"Derek-Hardy"},"content":"  ],"},{"lineNumber":80,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":81,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":82,"author":{"gitId":"Derek-Hardy"},"content":"const studentCourseB: any \u003d {"},{"lineNumber":83,"author":{"gitId":"Derek-Hardy"},"content":"  course: {"},{"lineNumber":84,"author":{"gitId":"Derek-Hardy"},"content":"    courseId: \u0027LSM1306\u0027,"},{"lineNumber":85,"author":{"gitId":"Derek-Hardy"},"content":"    courseName: \u0027Forensic Science\u0027,"},{"lineNumber":86,"author":{"gitId":"Derek-Hardy"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":87,"author":{"gitId":"Derek-Hardy"},"content":"    creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":88,"author":{"gitId":"Derek-Hardy"},"content":"    deletionTimestamp: 0,"},{"lineNumber":89,"author":{"gitId":"Derek-Hardy"},"content":"  },"},{"lineNumber":90,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessions: ["},{"lineNumber":91,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":92,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":93,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027Third Session\u0027,"},{"lineNumber":94,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027LSM1306\u0027,"},{"lineNumber":95,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":96,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":97,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":98,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":99,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":100,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":101,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":102,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":103,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":104,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":105,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":106,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":107,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":108,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: true,"},{"lineNumber":109,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":110,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":111,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":112,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":113,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":114,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":115,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027Fourth Session\u0027,"},{"lineNumber":116,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027LSM1306\u0027,"},{"lineNumber":117,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":118,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":119,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":120,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":121,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":122,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":123,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":124,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":125,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":126,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":127,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":128,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":129,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":130,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: false,"},{"lineNumber":131,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":132,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":133,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":134,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":135,"author":{"gitId":"Derek-Hardy"},"content":"  ],"},{"lineNumber":136,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":137,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":138,"author":{"gitId":"Derek-Hardy"},"content":"const studentCourseC: any \u003d {"},{"lineNumber":139,"author":{"gitId":"Derek-Hardy"},"content":"  course: {"},{"lineNumber":140,"author":{"gitId":"Derek-Hardy"},"content":"    courseId: \u0027MA1521\u0027,"},{"lineNumber":141,"author":{"gitId":"Derek-Hardy"},"content":"    courseName: \u0027Calculus for Computing\u0027,"},{"lineNumber":142,"author":{"gitId":"Derek-Hardy"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":143,"author":{"gitId":"Derek-Hardy"},"content":"    creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":144,"author":{"gitId":"Derek-Hardy"},"content":"    deletionTimestamp: 0,"},{"lineNumber":145,"author":{"gitId":"Derek-Hardy"},"content":"  },"},{"lineNumber":146,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessions: ["},{"lineNumber":147,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":148,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":149,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027Fifth Session\u0027,"},{"lineNumber":150,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027MA1521\u0027,"},{"lineNumber":151,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":152,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":153,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":154,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":155,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":156,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":157,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":158,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":159,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":160,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":161,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":162,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":163,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":164,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: true,"},{"lineNumber":165,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":166,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":167,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":168,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":169,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":170,"author":{"gitId":"Derek-Hardy"},"content":"      session: {"},{"lineNumber":171,"author":{"gitId":"Derek-Hardy"},"content":"        feedbackSessionName: \u0027Sixth Session\u0027,"},{"lineNumber":172,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027MA1521\u0027,"},{"lineNumber":173,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":174,"author":{"gitId":"Derek-Hardy"},"content":"        instructions: \u0027\u0027,"},{"lineNumber":175,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStartTimestamp: 0,"},{"lineNumber":176,"author":{"gitId":"Derek-Hardy"},"content":"        submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":177,"author":{"gitId":"Derek-Hardy"},"content":"        gracePeriod: 0,"},{"lineNumber":178,"author":{"gitId":"Derek-Hardy"},"content":"        sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":179,"author":{"gitId":"Derek-Hardy"},"content":"        responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":180,"author":{"gitId":"Derek-Hardy"},"content":"        submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":181,"author":{"gitId":"Derek-Hardy"},"content":"        publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":182,"author":{"gitId":"Derek-Hardy"},"content":"        isClosingEmailEnabled: true,"},{"lineNumber":183,"author":{"gitId":"Derek-Hardy"},"content":"        isPublishedEmailEnabled: true,"},{"lineNumber":184,"author":{"gitId":"Derek-Hardy"},"content":"        createdAtTimestamp: 0,"},{"lineNumber":185,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":186,"author":{"gitId":"Derek-Hardy"},"content":"      isOpened: false,"},{"lineNumber":187,"author":{"gitId":"Derek-Hardy"},"content":"      isWaitingToOpen: false,"},{"lineNumber":188,"author":{"gitId":"Derek-Hardy"},"content":"      isPublished: false,"},{"lineNumber":189,"author":{"gitId":"Derek-Hardy"},"content":"      isSubmitted: true,"},{"lineNumber":190,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":191,"author":{"gitId":"Derek-Hardy"},"content":"  ],"},{"lineNumber":192,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":193,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":194,"author":{"gitId":"Derek-Hardy"},"content":"const studentCourses: Courses \u003d {"},{"lineNumber":195,"author":{"gitId":"Derek-Hardy"},"content":"  courses: [{"},{"lineNumber":196,"author":{"gitId":"Derek-Hardy"},"content":"    courseId: \u0027CS1231\u0027,"},{"lineNumber":197,"author":{"gitId":"Derek-Hardy"},"content":"    courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":198,"author":{"gitId":"Derek-Hardy"},"content":"    timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":199,"author":{"gitId":"Derek-Hardy"},"content":"    creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":200,"author":{"gitId":"Derek-Hardy"},"content":"    deletionTimestamp: 0,"},{"lineNumber":201,"author":{"gitId":"Derek-Hardy"},"content":"  }],"},{"lineNumber":202,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":203,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":204,"author":{"gitId":"Derek-Hardy"},"content":"const studentFeedbackSessions: FeedbackSessions \u003d {"},{"lineNumber":205,"author":{"gitId":"Derek-Hardy"},"content":"  feedbackSessions: ["},{"lineNumber":206,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":207,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessionName: \u0027Latest update Session\u0027,"},{"lineNumber":208,"author":{"gitId":"Derek-Hardy"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":209,"author":{"gitId":"Derek-Hardy"},"content":"      timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":210,"author":{"gitId":"Derek-Hardy"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":211,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStartTimestamp: 0,"},{"lineNumber":212,"author":{"gitId":"Derek-Hardy"},"content":"      submissionEndTimestamp: 1611392191000, // Saturday, 23 January 2021 16:56:31 GMT+08:00"},{"lineNumber":213,"author":{"gitId":"Derek-Hardy"},"content":"      gracePeriod: 0,"},{"lineNumber":214,"author":{"gitId":"Derek-Hardy"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":215,"author":{"gitId":"Derek-Hardy"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":216,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":217,"author":{"gitId":"Derek-Hardy"},"content":"      publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":218,"author":{"gitId":"Derek-Hardy"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":219,"author":{"gitId":"Derek-Hardy"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":220,"author":{"gitId":"Derek-Hardy"},"content":"      createdAtTimestamp: 0,"},{"lineNumber":221,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":222,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":223,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessionName: \u0027Orientation Session\u0027,"},{"lineNumber":224,"author":{"gitId":"Derek-Hardy"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":225,"author":{"gitId":"Derek-Hardy"},"content":"      timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":226,"author":{"gitId":"Derek-Hardy"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":227,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStartTimestamp: 0,"},{"lineNumber":228,"author":{"gitId":"Derek-Hardy"},"content":"      submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":229,"author":{"gitId":"Derek-Hardy"},"content":"      gracePeriod: 0,"},{"lineNumber":230,"author":{"gitId":"Derek-Hardy"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":231,"author":{"gitId":"Derek-Hardy"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":232,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":233,"author":{"gitId":"Derek-Hardy"},"content":"      publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":234,"author":{"gitId":"Derek-Hardy"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":235,"author":{"gitId":"Derek-Hardy"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":236,"author":{"gitId":"Derek-Hardy"},"content":"      createdAtTimestamp: 0,"},{"lineNumber":237,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":238,"author":{"gitId":"Derek-Hardy"},"content":"    {"},{"lineNumber":239,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessionName: \u0027Welcome Tea Session\u0027,"},{"lineNumber":240,"author":{"gitId":"Derek-Hardy"},"content":"      courseId: \u0027CS1231\u0027,"},{"lineNumber":241,"author":{"gitId":"Derek-Hardy"},"content":"      timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":242,"author":{"gitId":"Derek-Hardy"},"content":"      instructions: \u0027\u0027,"},{"lineNumber":243,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStartTimestamp: 0,"},{"lineNumber":244,"author":{"gitId":"Derek-Hardy"},"content":"      submissionEndTimestamp: 1579769791000, // Thursday, 23 January 2020 16:56:31 GMT+08:00"},{"lineNumber":245,"author":{"gitId":"Derek-Hardy"},"content":"      gracePeriod: 0,"},{"lineNumber":246,"author":{"gitId":"Derek-Hardy"},"content":"      sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":247,"author":{"gitId":"Derek-Hardy"},"content":"      responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":248,"author":{"gitId":"Derek-Hardy"},"content":"      submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":249,"author":{"gitId":"Derek-Hardy"},"content":"      publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":250,"author":{"gitId":"Derek-Hardy"},"content":"      isClosingEmailEnabled: true,"},{"lineNumber":251,"author":{"gitId":"Derek-Hardy"},"content":"      isPublishedEmailEnabled: true,"},{"lineNumber":252,"author":{"gitId":"Derek-Hardy"},"content":"      createdAtTimestamp: 0,"},{"lineNumber":253,"author":{"gitId":"Derek-Hardy"},"content":"    },"},{"lineNumber":254,"author":{"gitId":"Derek-Hardy"},"content":"  ],"},{"lineNumber":255,"author":{"gitId":"Derek-Hardy"},"content":"};"},{"lineNumber":256,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"describe(\u0027StudentHomePageComponent\u0027, () \u003d\u003e {"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  let component: StudentHomePageComponent;"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cStudentHomePageComponent\u003e;"},{"lineNumber":260,"author":{"gitId":"Derek-Hardy"},"content":"  let courseService: CourseService;"},{"lineNumber":261,"author":{"gitId":"Derek-Hardy"},"content":"  let feedbackSessionsService: FeedbackSessionsService;"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":265,"author":{"gitId":"-"},"content":"      declarations: ["},{"lineNumber":266,"author":{"gitId":"-"},"content":"        StudentHomePageComponent,"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        ResponseStatusPipe,"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        SubmissionStatusPipe,"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":270,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":271,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        NgbModule,"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        TeammatesCommonModule,"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        LoadingSpinnerModule,"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LoadingRetryModule,"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        TeammatesRouterModule,"},{"lineNumber":278,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    .compileComponents();"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":282,"author":{"gitId":"-"},"content":""},{"lineNumber":283,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(StudentHomePageComponent);"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":286,"author":{"gitId":"Derek-Hardy"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":287,"author":{"gitId":"Derek-Hardy"},"content":"    feedbackSessionsService \u003d TestBed.inject(FeedbackSessionsService);"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":290,"author":{"gitId":"-"},"content":""},{"lineNumber":291,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":294,"author":{"gitId":"-"},"content":""},{"lineNumber":295,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should load the courses and feedback sessions involving the student\u0027, () \u003d\u003e {"},{"lineNumber":296,"author":{"gitId":"Derek-Hardy"},"content":"    const studentFeedbackSessions1: FeedbackSessions \u003d {"},{"lineNumber":297,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: ["},{"lineNumber":298,"author":{"gitId":"Derek-Hardy"},"content":"        {"},{"lineNumber":299,"author":{"gitId":"Derek-Hardy"},"content":"          feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":300,"author":{"gitId":"Derek-Hardy"},"content":"          courseId: \u0027CS1231\u0027,"},{"lineNumber":301,"author":{"gitId":"Derek-Hardy"},"content":"          timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":302,"author":{"gitId":"Derek-Hardy"},"content":"          instructions: \u0027\u0027,"},{"lineNumber":303,"author":{"gitId":"Derek-Hardy"},"content":"          submissionStartTimestamp: 0,"},{"lineNumber":304,"author":{"gitId":"Derek-Hardy"},"content":"          submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":305,"author":{"gitId":"Derek-Hardy"},"content":"          gracePeriod: 0,"},{"lineNumber":306,"author":{"gitId":"Derek-Hardy"},"content":"          sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":307,"author":{"gitId":"Derek-Hardy"},"content":"          responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":308,"author":{"gitId":"Derek-Hardy"},"content":"          submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":309,"author":{"gitId":"Derek-Hardy"},"content":"          publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":310,"author":{"gitId":"Derek-Hardy"},"content":"          isClosingEmailEnabled: true,"},{"lineNumber":311,"author":{"gitId":"Derek-Hardy"},"content":"          isPublishedEmailEnabled: true,"},{"lineNumber":312,"author":{"gitId":"Derek-Hardy"},"content":"          createdAtTimestamp: 0,"},{"lineNumber":313,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":314,"author":{"gitId":"Derek-Hardy"},"content":"      ],"},{"lineNumber":315,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":316,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":317,"author":{"gitId":"Derek-Hardy"},"content":"    const hasRes: HasResponses \u003d {"},{"lineNumber":318,"author":{"gitId":"Derek-Hardy"},"content":"      hasResponses: false,"},{"lineNumber":319,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":320,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":321,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027getAllCoursesAsStudent\u0027).and.returnValue(of(studentCourses));"},{"lineNumber":322,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSessionsForStudent\u0027).and.returnValue(of(studentFeedbackSessions1));"},{"lineNumber":323,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027hasStudentResponseForFeedbackSession\u0027).and.returnValue(of(hasRes));"},{"lineNumber":324,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":325,"author":{"gitId":"Derek-Hardy"},"content":"    component.loadStudentCourses();"},{"lineNumber":326,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":327,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses.length).toEqual(1);"},{"lineNumber":328,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].course.courseId).toEqual(\u0027CS1231\u0027);"},{"lineNumber":329,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].course.courseName).toEqual(\u0027Discrete Structures\u0027);"},{"lineNumber":330,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[0].session.feedbackSessionName).toEqual(\u0027First Session\u0027);"},{"lineNumber":331,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.isCoursesLoading).toBeFalsy();"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should sort feedback sessions first by createdAtTimestamp upon loading\u0027, () \u003d\u003e {"},{"lineNumber":335,"author":{"gitId":"Derek-Hardy"},"content":"    const hasRes: HasResponses \u003d {"},{"lineNumber":336,"author":{"gitId":"Derek-Hardy"},"content":"      hasResponses: false,"},{"lineNumber":337,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":338,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":339,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027getAllCoursesAsStudent\u0027).and.returnValue(of(studentCourses));"},{"lineNumber":340,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSessionsForStudent\u0027).and.returnValue(of(studentFeedbackSessions));"},{"lineNumber":341,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027hasStudentResponseForFeedbackSession\u0027).and.returnValue(of(hasRes));"},{"lineNumber":342,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":343,"author":{"gitId":"Derek-Hardy"},"content":"    component.loadStudentCourses();"},{"lineNumber":344,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":345,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses.length).toEqual(1);"},{"lineNumber":346,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions.length).toEqual(3);"},{"lineNumber":347,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[0].session.feedbackSessionName).toEqual(\u0027Orientation Session\u0027);"},{"lineNumber":348,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[1].session.feedbackSessionName).toEqual(\u0027Welcome Tea Session\u0027);"},{"lineNumber":349,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[2].session.feedbackSessionName).toEqual(\u0027Latest update Session\u0027);"},{"lineNumber":350,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":351,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":352,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should sort feedback sessions by submissionEndTimestamp, when createdAtTimestamps are equal\u0027, () \u003d\u003e {"},{"lineNumber":353,"author":{"gitId":"Derek-Hardy"},"content":"    const hasRes: HasResponses \u003d {"},{"lineNumber":354,"author":{"gitId":"Derek-Hardy"},"content":"      hasResponses: false,"},{"lineNumber":355,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":356,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":357,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(courseService, \u0027getAllCoursesAsStudent\u0027).and.returnValue(of(studentCourses));"},{"lineNumber":358,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027getFeedbackSessionsForStudent\u0027).and.returnValue(of(studentFeedbackSessions));"},{"lineNumber":359,"author":{"gitId":"Derek-Hardy"},"content":"    spyOn(feedbackSessionsService, \u0027hasStudentResponseForFeedbackSession\u0027).and.returnValue(of(hasRes));"},{"lineNumber":360,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":361,"author":{"gitId":"Derek-Hardy"},"content":"    component.loadStudentCourses();"},{"lineNumber":362,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":363,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses.length).toEqual(1);"},{"lineNumber":364,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions.length).toEqual(3);"},{"lineNumber":365,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[0].session.feedbackSessionName).toEqual(\u0027Orientation Session\u0027);"},{"lineNumber":366,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[1].session.feedbackSessionName).toEqual(\u0027Welcome Tea Session\u0027);"},{"lineNumber":367,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].feedbackSessions[2].session.feedbackSessionName).toEqual(\u0027Latest update Session\u0027);"},{"lineNumber":368,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":369,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":370,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should disable view response button when session is not published\u0027, () \u003d\u003e {"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":372,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":373,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":374,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":376,"author":{"gitId":"-"},"content":"        creationTimestamp: 1549095330000,"},{"lineNumber":377,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":378,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":379,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: ["},{"lineNumber":380,"author":{"gitId":"Derek-Hardy"},"content":"        {"},{"lineNumber":381,"author":{"gitId":"Derek-Hardy"},"content":"          session: {"},{"lineNumber":382,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":383,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":384,"author":{"gitId":"Derek-Hardy"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":385,"author":{"gitId":"Derek-Hardy"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":386,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":387,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":388,"author":{"gitId":"Derek-Hardy"},"content":"            gracePeriod: 0,"},{"lineNumber":389,"author":{"gitId":"Derek-Hardy"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":390,"author":{"gitId":"Derek-Hardy"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":391,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":392,"author":{"gitId":"Derek-Hardy"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":393,"author":{"gitId":"Derek-Hardy"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":394,"author":{"gitId":"Derek-Hardy"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":395,"author":{"gitId":"Derek-Hardy"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":396,"author":{"gitId":"Derek-Hardy"},"content":"          },"},{"lineNumber":397,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: true,"},{"lineNumber":398,"author":{"gitId":"Derek-Hardy"},"content":"          isWaitingToOpen: false,"},{"lineNumber":399,"author":{"gitId":"Derek-Hardy"},"content":"          isPublished: false,"},{"lineNumber":400,"author":{"gitId":"Derek-Hardy"},"content":"          isSubmitted: true,"},{"lineNumber":401,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":402,"author":{"gitId":"Derek-Hardy"},"content":"      ],"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":404,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":408,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":409,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-responses-btn-0\u0027);"},{"lineNumber":410,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.textContent).toEqual(\u0027 View Responses \u0027);"},{"lineNumber":411,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.className).toContain(\u0027disabled\u0027);"},{"lineNumber":412,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":413,"author":{"gitId":"-"},"content":""},{"lineNumber":414,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should disable start submission button when session is waiting to open\u0027, () \u003d\u003e {"},{"lineNumber":415,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":417,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":418,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":420,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":423,"author":{"gitId":"-"},"content":"      feedbackSessions: ["},{"lineNumber":424,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":425,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":426,"author":{"gitId":"-"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":427,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":428,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":429,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":430,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":431,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":432,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":433,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":434,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":435,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":436,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":437,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":438,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":439,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":440,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":441,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: false,"},{"lineNumber":442,"author":{"gitId":"-"},"content":"          isWaitingToOpen: true,"},{"lineNumber":443,"author":{"gitId":"-"},"content":"          isPublished: true,"},{"lineNumber":444,"author":{"gitId":"Derek-Hardy"},"content":"          isSubmitted: false,"},{"lineNumber":445,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":446,"author":{"gitId":"Derek-Hardy"},"content":"      ],"},{"lineNumber":447,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":448,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":449,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":450,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":451,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":452,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":453,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#disabled-start-submit-btn-0\u0027);"},{"lineNumber":454,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.textContent).toEqual(\u0027 Start Submission \u0027);"},{"lineNumber":455,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.className).toContain(\u0027disabled\u0027);"},{"lineNumber":456,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":457,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":458,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should activate start submission button when session is open and response is not submitted\u0027, () \u003d\u003e {"},{"lineNumber":459,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":460,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":461,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":462,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":463,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":464,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":465,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":466,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":467,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: ["},{"lineNumber":468,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":469,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":470,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":471,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":472,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":473,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":474,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":475,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":476,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":477,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":478,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":479,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":480,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":481,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":482,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":483,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":484,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":485,"author":{"gitId":"-"},"content":"          isOpened: true,"},{"lineNumber":486,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":487,"author":{"gitId":"Derek-Hardy"},"content":"          isPublished: true,"},{"lineNumber":488,"author":{"gitId":"-"},"content":"          isSubmitted: false,"},{"lineNumber":489,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":490,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":491,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":492,"author":{"gitId":"-"},"content":""},{"lineNumber":493,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":494,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":496,"author":{"gitId":"-"},"content":""},{"lineNumber":497,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#start-submit-btn-0\u0027);"},{"lineNumber":498,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.textContent).toEqual(\u0027 Start Submission \u0027);"},{"lineNumber":499,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":500,"author":{"gitId":"-"},"content":""},{"lineNumber":501,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should activate edit submission button when session is open and response is submitted\u0027, () \u003d\u003e {"},{"lineNumber":502,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":503,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":504,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":505,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":506,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":507,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":508,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":509,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":510,"author":{"gitId":"-"},"content":"      feedbackSessions: ["},{"lineNumber":511,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":512,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":513,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":514,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":515,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":516,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":517,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":518,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":519,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":520,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":521,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":522,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":523,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":524,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":525,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":526,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":527,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":528,"author":{"gitId":"-"},"content":"          isOpened: true,"},{"lineNumber":529,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":530,"author":{"gitId":"-"},"content":"          isPublished: false,"},{"lineNumber":531,"author":{"gitId":"-"},"content":"          isSubmitted: true,"},{"lineNumber":532,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":533,"author":{"gitId":"Derek-Hardy"},"content":"      ],"},{"lineNumber":534,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":535,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":536,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":537,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":538,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":539,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":540,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#edit-submit-btn-0\u0027);"},{"lineNumber":541,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.textContent).toEqual(\u0027 Edit Submission \u0027);"},{"lineNumber":542,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":543,"author":{"gitId":"-"},"content":""},{"lineNumber":544,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should activate view submission button when session is not open\u0027, () \u003d\u003e {"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":546,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":547,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":548,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":549,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":550,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":551,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":552,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":553,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: ["},{"lineNumber":554,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":555,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":556,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":557,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":558,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":559,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":560,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":561,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":562,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":563,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":564,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":565,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":566,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":567,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":568,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":569,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":570,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":571,"author":{"gitId":"-"},"content":"          isOpened: false,"},{"lineNumber":572,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":573,"author":{"gitId":"-"},"content":"          isPublished: false,"},{"lineNumber":574,"author":{"gitId":"-"},"content":"          isSubmitted: true,"},{"lineNumber":575,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":576,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":577,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":578,"author":{"gitId":"-"},"content":""},{"lineNumber":579,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":580,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":581,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":582,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":583,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-submit-btn-0\u0027);"},{"lineNumber":584,"author":{"gitId":"Derek-Hardy"},"content":"    expect(button.textContent).toEqual(\u0027 View Submission \u0027);"},{"lineNumber":585,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":586,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":587,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should navigate to student course page to view the corresponding team\u0027, () \u003d\u003e {"},{"lineNumber":588,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse1: any \u003d {"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":590,"author":{"gitId":"-"},"content":"        courseId: \u0027CS3281\u0027,"},{"lineNumber":591,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Thematic Systems I\u0027,"},{"lineNumber":592,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":593,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":594,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":595,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":596,"author":{"gitId":"-"},"content":"      feedbackSessions: [],"},{"lineNumber":597,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":598,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":599,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse2: any \u003d {"},{"lineNumber":600,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":601,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS3282\u0027,"},{"lineNumber":602,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Thematic Systems II\u0027,"},{"lineNumber":603,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":604,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":605,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":606,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":607,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: [],"},{"lineNumber":608,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":609,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":610,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse1, studentCourse2];"},{"lineNumber":611,"author":{"gitId":"-"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":613,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":614,"author":{"gitId":"Derek-Hardy"},"content":"    const href1: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-team-btn-0\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":615,"author":{"gitId":"Derek-Hardy"},"content":"    const href2: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-team-btn-1\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":616,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href1).toEqual(\u0027/web/student/course?courseid\u003dCS3281\u0027);"},{"lineNumber":617,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href2).toEqual(\u0027/web/student/course?courseid\u003dCS3282\u0027);"},{"lineNumber":618,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":619,"author":{"gitId":"-"},"content":""},{"lineNumber":620,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should navigate to student session result page to view responses\u0027, () \u003d\u003e {"},{"lineNumber":621,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":622,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":623,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":624,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":625,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":626,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":627,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":628,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      feedbackSessions: ["},{"lineNumber":630,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":631,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":632,"author":{"gitId":"-"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":633,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":634,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":635,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":636,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":637,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":638,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":639,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":640,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":641,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":642,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":643,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":644,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":645,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":646,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":647,"author":{"gitId":"-"},"content":"          isOpened: true,"},{"lineNumber":648,"author":{"gitId":"Derek-Hardy"},"content":"          isWaitingToOpen: false,"},{"lineNumber":649,"author":{"gitId":"-"},"content":"          isPublished: true,"},{"lineNumber":650,"author":{"gitId":"-"},"content":"          isSubmitted: true,"},{"lineNumber":651,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":652,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":653,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":654,"author":{"gitId":"-"},"content":"            feedbackSessionName: \u0027Second Session\u0027,"},{"lineNumber":655,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":656,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":657,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":658,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":659,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":660,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":661,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":662,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":663,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":664,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":665,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":666,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":667,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":668,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":669,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: false,"},{"lineNumber":670,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":671,"author":{"gitId":"Derek-Hardy"},"content":"          isPublished: true,"},{"lineNumber":672,"author":{"gitId":"Derek-Hardy"},"content":"          isSubmitted: true,"},{"lineNumber":673,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":674,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":675,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":676,"author":{"gitId":"-"},"content":""},{"lineNumber":677,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":678,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":679,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":680,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":681,"author":{"gitId":"Derek-Hardy"},"content":"    const href1: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-responses-btn-0\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":682,"author":{"gitId":"Derek-Hardy"},"content":"    const href2: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-responses-btn-1\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":683,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href1).toEqual(\u0027/web/student/sessions/result?courseid\u003dCS1231\u0026fsname\u003dFirst%20Session\u0027);"},{"lineNumber":684,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href2).toEqual(\u0027/web/student/sessions/result?courseid\u003dCS1231\u0026fsname\u003dSecond%20Session\u0027);"},{"lineNumber":685,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":686,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":687,"author":{"gitId":"Derek-Hardy"},"content":"  // start/edit/view submission button share the same router link and query params"},{"lineNumber":688,"author":{"gitId":"Derek-Hardy"},"content":"  // here we only have to test one of them"},{"lineNumber":689,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should navigate to student session submission page for viewing\u0027, () \u003d\u003e {"},{"lineNumber":690,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":691,"author":{"gitId":"-"},"content":"      course: {"},{"lineNumber":692,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS1231\u0027,"},{"lineNumber":693,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Discrete Structures\u0027,"},{"lineNumber":694,"author":{"gitId":"-"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":695,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":696,"author":{"gitId":"-"},"content":"        deletionTimestamp: 0,"},{"lineNumber":697,"author":{"gitId":"-"},"content":"      },"},{"lineNumber":698,"author":{"gitId":"-"},"content":"      feedbackSessions: ["},{"lineNumber":699,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":700,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":701,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":702,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":703,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":704,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":705,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":706,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":707,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":708,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":709,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":710,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":711,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":712,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":713,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":714,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":715,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":716,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: false,"},{"lineNumber":717,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":718,"author":{"gitId":"-"},"content":"          isPublished: false,"},{"lineNumber":719,"author":{"gitId":"-"},"content":"          isSubmitted: true,"},{"lineNumber":720,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":721,"author":{"gitId":"-"},"content":"        {"},{"lineNumber":722,"author":{"gitId":"-"},"content":"          session: {"},{"lineNumber":723,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027Second Session\u0027,"},{"lineNumber":724,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS1231\u0027,"},{"lineNumber":725,"author":{"gitId":"-"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":726,"author":{"gitId":"-"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":727,"author":{"gitId":"-"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":728,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":729,"author":{"gitId":"-"},"content":"            gracePeriod: 0,"},{"lineNumber":730,"author":{"gitId":"-"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":731,"author":{"gitId":"-"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":732,"author":{"gitId":"-"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":733,"author":{"gitId":"-"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":734,"author":{"gitId":"-"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":735,"author":{"gitId":"-"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":736,"author":{"gitId":"-"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":737,"author":{"gitId":"-"},"content":"          },"},{"lineNumber":738,"author":{"gitId":"-"},"content":"          isOpened: false,"},{"lineNumber":739,"author":{"gitId":"-"},"content":"          isWaitingToOpen: false,"},{"lineNumber":740,"author":{"gitId":"-"},"content":"          isPublished: false,"},{"lineNumber":741,"author":{"gitId":"-"},"content":"          isSubmitted: true,"},{"lineNumber":742,"author":{"gitId":"-"},"content":"        },"},{"lineNumber":743,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":744,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":745,"author":{"gitId":"-"},"content":""},{"lineNumber":746,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":747,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":748,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":749,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":750,"author":{"gitId":"Derek-Hardy"},"content":"    const href1: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-submit-btn-0\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":751,"author":{"gitId":"Derek-Hardy"},"content":"    const href2: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#view-submit-btn-1\u0027).getAttribute(\u0027href\u0027);"},{"lineNumber":752,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href1).toEqual(\u0027/web/student/sessions/submission?courseid\u003dCS1231\u0026fsname\u003dFirst%20Session\u0027);"},{"lineNumber":753,"author":{"gitId":"Derek-Hardy"},"content":"    expect(href2).toEqual(\u0027/web/student/sessions/submission?courseid\u003dCS1231\u0026fsname\u003dSecond%20Session\u0027);"},{"lineNumber":754,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":755,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":756,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should sort courses by their IDs\u0027, () \u003d\u003e {"},{"lineNumber":757,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourseB, studentCourseC, studentCourseA];"},{"lineNumber":758,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":759,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":760,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":761,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#sort-course-id-btn\u0027);"},{"lineNumber":762,"author":{"gitId":"Derek-Hardy"},"content":"    button.click();"},{"lineNumber":763,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":764,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].course.courseId).toEqual(studentCourseA.course.courseId);"},{"lineNumber":765,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[1].course.courseId).toEqual(studentCourseB.course.courseId);"},{"lineNumber":766,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[2].course.courseId).toEqual(studentCourseC.course.courseId);"},{"lineNumber":767,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":768,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":769,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should sort courses by their names\u0027, () \u003d\u003e {"},{"lineNumber":770,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourseA, studentCourseB, studentCourseC];"},{"lineNumber":771,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":772,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":773,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":774,"author":{"gitId":"Derek-Hardy"},"content":"    const button: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#sort-course-name-btn\u0027);"},{"lineNumber":775,"author":{"gitId":"Derek-Hardy"},"content":"    button.click();"},{"lineNumber":776,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":777,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[0].course.courseId).toEqual(studentCourseC.course.courseId);"},{"lineNumber":778,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[1].course.courseId).toEqual(studentCourseA.course.courseId);"},{"lineNumber":779,"author":{"gitId":"Derek-Hardy"},"content":"    expect(component.courses[2].course.courseId).toEqual(studentCourseB.course.courseId);"},{"lineNumber":780,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":781,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":782,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":783,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":784,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":785,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":786,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with no course\u0027, () \u003d\u003e {"},{"lineNumber":787,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [];"},{"lineNumber":788,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":789,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":790,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":791,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":792,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":793,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with no feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":794,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":795,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":796,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS3281\u0027,"},{"lineNumber":797,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Thematic Systems\u0027,"},{"lineNumber":798,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":799,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":800,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":801,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":802,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: [],"},{"lineNumber":803,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":804,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":805,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":806,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":807,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":808,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":809,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":810,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with no feedback session over 2 courses\u0027, () \u003d\u003e {"},{"lineNumber":811,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse1: any \u003d {"},{"lineNumber":812,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":813,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS3281\u0027,"},{"lineNumber":814,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Thematic Systems I\u0027,"},{"lineNumber":815,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":816,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":817,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":818,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":819,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: [],"},{"lineNumber":820,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":821,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":822,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse2: any \u003d {"},{"lineNumber":823,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":824,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS3282\u0027,"},{"lineNumber":825,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Thematic Systems II\u0027,"},{"lineNumber":826,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":827,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":828,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":829,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":830,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: [],"},{"lineNumber":831,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":832,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":833,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse1, studentCourse2];"},{"lineNumber":834,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":835,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":836,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":837,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":838,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":839,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with feedback sessions\u0027, () \u003d\u003e {"},{"lineNumber":840,"author":{"gitId":"Derek-Hardy"},"content":"    const studentCourse: any \u003d {"},{"lineNumber":841,"author":{"gitId":"Derek-Hardy"},"content":"      course: {"},{"lineNumber":842,"author":{"gitId":"Derek-Hardy"},"content":"        courseId: \u0027CS2103\u0027,"},{"lineNumber":843,"author":{"gitId":"Derek-Hardy"},"content":"        courseName: \u0027Software Engineering\u0027,"},{"lineNumber":844,"author":{"gitId":"Derek-Hardy"},"content":"        timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":845,"author":{"gitId":"Derek-Hardy"},"content":"        creationTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":846,"author":{"gitId":"Derek-Hardy"},"content":"        deletionTimestamp: 0,"},{"lineNumber":847,"author":{"gitId":"Derek-Hardy"},"content":"      },"},{"lineNumber":848,"author":{"gitId":"Derek-Hardy"},"content":"      feedbackSessions: ["},{"lineNumber":849,"author":{"gitId":"Derek-Hardy"},"content":"        {"},{"lineNumber":850,"author":{"gitId":"Derek-Hardy"},"content":"          session: {"},{"lineNumber":851,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027First Session\u0027,"},{"lineNumber":852,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS2103\u0027,"},{"lineNumber":853,"author":{"gitId":"Derek-Hardy"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":854,"author":{"gitId":"Derek-Hardy"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":855,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":856,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":857,"author":{"gitId":"Derek-Hardy"},"content":"            gracePeriod: 0,"},{"lineNumber":858,"author":{"gitId":"Derek-Hardy"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":859,"author":{"gitId":"Derek-Hardy"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":860,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":861,"author":{"gitId":"Derek-Hardy"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":862,"author":{"gitId":"Derek-Hardy"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":863,"author":{"gitId":"Derek-Hardy"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":864,"author":{"gitId":"Derek-Hardy"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":865,"author":{"gitId":"Derek-Hardy"},"content":"          },"},{"lineNumber":866,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: true,"},{"lineNumber":867,"author":{"gitId":"Derek-Hardy"},"content":"          isWaitingToOpen: true,"},{"lineNumber":868,"author":{"gitId":"Derek-Hardy"},"content":"          isPublished: true,"},{"lineNumber":869,"author":{"gitId":"Derek-Hardy"},"content":"          isSubmitted: true,"},{"lineNumber":870,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":871,"author":{"gitId":"Derek-Hardy"},"content":"        {"},{"lineNumber":872,"author":{"gitId":"Derek-Hardy"},"content":"          session: {"},{"lineNumber":873,"author":{"gitId":"Derek-Hardy"},"content":"            feedbackSessionName: \u0027Second Session\u0027,"},{"lineNumber":874,"author":{"gitId":"Derek-Hardy"},"content":"            courseId: \u0027CS2103\u0027,"},{"lineNumber":875,"author":{"gitId":"Derek-Hardy"},"content":"            timeZone: \u0027Asia/Singapore\u0027,"},{"lineNumber":876,"author":{"gitId":"Derek-Hardy"},"content":"            instructions: \u0027\u0027,"},{"lineNumber":877,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStartTimestamp: 0,"},{"lineNumber":878,"author":{"gitId":"Derek-Hardy"},"content":"            submissionEndTimestamp: 1549095330000, // Saturday, 2 February 2019 16:15:30 GMT+08:00"},{"lineNumber":879,"author":{"gitId":"Derek-Hardy"},"content":"            gracePeriod: 0,"},{"lineNumber":880,"author":{"gitId":"Derek-Hardy"},"content":"            sessionVisibleSetting: SessionVisibleSetting.AT_OPEN,"},{"lineNumber":881,"author":{"gitId":"Derek-Hardy"},"content":"            responseVisibleSetting: ResponseVisibleSetting.AT_VISIBLE,"},{"lineNumber":882,"author":{"gitId":"Derek-Hardy"},"content":"            submissionStatus: FeedbackSessionSubmissionStatus.OPEN,"},{"lineNumber":883,"author":{"gitId":"Derek-Hardy"},"content":"            publishStatus: FeedbackSessionPublishStatus.PUBLISHED,"},{"lineNumber":884,"author":{"gitId":"Derek-Hardy"},"content":"            isClosingEmailEnabled: true,"},{"lineNumber":885,"author":{"gitId":"Derek-Hardy"},"content":"            isPublishedEmailEnabled: true,"},{"lineNumber":886,"author":{"gitId":"Derek-Hardy"},"content":"            createdAtTimestamp: 0,"},{"lineNumber":887,"author":{"gitId":"Derek-Hardy"},"content":"          },"},{"lineNumber":888,"author":{"gitId":"Derek-Hardy"},"content":"          isOpened: true,"},{"lineNumber":889,"author":{"gitId":"Derek-Hardy"},"content":"          isWaitingToOpen: false,"},{"lineNumber":890,"author":{"gitId":"Derek-Hardy"},"content":"          isPublished: false,"},{"lineNumber":891,"author":{"gitId":"Derek-Hardy"},"content":"          isSubmitted: false,"},{"lineNumber":892,"author":{"gitId":"Derek-Hardy"},"content":"        },"},{"lineNumber":893,"author":{"gitId":"Derek-Hardy"},"content":"      ],"},{"lineNumber":894,"author":{"gitId":"Derek-Hardy"},"content":"    };"},{"lineNumber":895,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":896,"author":{"gitId":"Derek-Hardy"},"content":"    component.courses \u003d [studentCourse];"},{"lineNumber":897,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":898,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":899,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":900,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":901,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":902,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap with all feedback sessions over 2 courses\u0027, () \u003d\u003e {"},{"lineNumber":903,"author":{"gitId":"-"},"content":"    component.courses \u003d [studentCourseA, studentCourseB];"},{"lineNumber":904,"author":{"gitId":"-"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":905,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":906,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":907,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":908,"author":{"gitId":"-"},"content":""},{"lineNumber":909,"author":{"gitId":"-"},"content":"  it(\u0027should snap when courses are still loading\u0027, () \u003d\u003e {"},{"lineNumber":910,"author":{"gitId":"-"},"content":"    component.isCoursesLoading \u003d true;"},{"lineNumber":911,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":912,"author":{"gitId":"-"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":913,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":914,"author":{"gitId":"Derek-Hardy"},"content":""},{"lineNumber":915,"author":{"gitId":"Derek-Hardy"},"content":"  it(\u0027should snap when there is course loading failed\u0027, () \u003d\u003e {"},{"lineNumber":916,"author":{"gitId":"Derek-Hardy"},"content":"    component.isCoursesLoading \u003d false;"},{"lineNumber":917,"author":{"gitId":"Derek-Hardy"},"content":"    component.hasCoursesLoadingFailed \u003d true;"},{"lineNumber":918,"author":{"gitId":"Derek-Hardy"},"content":"    fixture.detectChanges();"},{"lineNumber":919,"author":{"gitId":"Derek-Hardy"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":920,"author":{"gitId":"Derek-Hardy"},"content":"  });"},{"lineNumber":921,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"Derek-Hardy":645,"-":276}},{"path":"src/web/app/user-join-page.component.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":3,"author":{"gitId":"t-cheepeng"},"content":"import { ActivatedRoute } from \u0027@angular/router\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"},{"lineNumber":5,"author":{"gitId":"t-cheepeng"},"content":"import { of, throwError } from \u0027rxjs\u0027;"},{"lineNumber":6,"author":{"gitId":"t-cheepeng"},"content":"import { AuthService } from \u0027../services/auth.service\u0027;"},{"lineNumber":7,"author":{"gitId":"t-cheepeng"},"content":"import { CourseService } from \u0027../services/course.service\u0027;"},{"lineNumber":8,"author":{"gitId":"t-cheepeng"},"content":"import { NavigationService } from \u0027../services/navigation.service\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { UserJoinPageComponent } from \u0027./user-join-page.component\u0027;"},{"lineNumber":10,"author":{"gitId":"t-cheepeng"},"content":"import Spy \u003d jasmine.Spy;"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"describe(\u0027UserJoinPageComponent\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  let component: UserJoinPageComponent;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  let fixture: ComponentFixture\u003cUserJoinPageComponent\u003e;"},{"lineNumber":15,"author":{"gitId":"t-cheepeng"},"content":"  let navService: NavigationService;"},{"lineNumber":16,"author":{"gitId":"t-cheepeng"},"content":"  let courseService: CourseService;"},{"lineNumber":17,"author":{"gitId":"t-cheepeng"},"content":"  let authService: AuthService;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"  beforeEach(async(() \u003d\u003e {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      declarations: [UserJoinPageComponent],"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      imports: ["},{"lineNumber":23,"author":{"gitId":"-"},"content":"        HttpClientTestingModule,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        RouterTestingModule,"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      ],"},{"lineNumber":26,"author":{"gitId":"t-cheepeng"},"content":"      providers: ["},{"lineNumber":27,"author":{"gitId":"t-cheepeng"},"content":"        NavigationService,"},{"lineNumber":28,"author":{"gitId":"t-cheepeng"},"content":"        CourseService,"},{"lineNumber":29,"author":{"gitId":"t-cheepeng"},"content":"        AuthService,"},{"lineNumber":30,"author":{"gitId":"t-cheepeng"},"content":"        {"},{"lineNumber":31,"author":{"gitId":"t-cheepeng"},"content":"          provide: ActivatedRoute,"},{"lineNumber":32,"author":{"gitId":"t-cheepeng"},"content":"          useValue: {"},{"lineNumber":33,"author":{"gitId":"t-cheepeng"},"content":"            queryParams: of({"},{"lineNumber":34,"author":{"gitId":"t-cheepeng"},"content":"              entitytype: \u0027student\u0027,"},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"              key: \u0027key\u0027,"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"              instructorinstitution: \u0027nus\u0027,"},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"              mac: \u0027mac\u0027,"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":"            }),"},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"          },"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":"        },"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":"      ],"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    })"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        .compileComponents();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  }));"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    fixture \u003d TestBed.createComponent(UserJoinPageComponent);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    component \u003d fixture.componentInstance;"},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":"    navService \u003d TestBed.inject(NavigationService);"},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":"    courseService \u003d TestBed.inject(CourseService);"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":"    authService \u003d TestBed.inject(AuthService);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    fixture.detectChanges();"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  it(\u0027should create\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    expect(component).toBeTruthy();"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":58,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":59,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":61,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":63,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap if user is not logged in and has a valid url\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"t-cheepeng"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":65,"author":{"gitId":"t-cheepeng"},"content":"    component.userId \u003d \u0027\u0027;"},{"lineNumber":66,"author":{"gitId":"t-cheepeng"},"content":"    component.validUrl \u003d true;"},{"lineNumber":67,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":68,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":69,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":70,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":71,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":72,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":73,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":74,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with invalid course join link\u0027, () \u003d\u003e {"},{"lineNumber":75,"author":{"gitId":"t-cheepeng"},"content":"    component.validUrl \u003d false;"},{"lineNumber":76,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":77,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":78,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":79,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":80,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":81,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":82,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":83,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with valid course join link that has been used\u0027, () \u003d\u003e {"},{"lineNumber":84,"author":{"gitId":"t-cheepeng"},"content":"    component.validUrl \u003d true;"},{"lineNumber":85,"author":{"gitId":"t-cheepeng"},"content":"    component.hasJoined \u003d true;"},{"lineNumber":86,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":87,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":88,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":89,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":90,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":91,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":92,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":93,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should snap with valid course join link that has not been used\u0027, () \u003d\u003e {"},{"lineNumber":94,"author":{"gitId":"t-cheepeng"},"content":"    component.validUrl \u003d true;"},{"lineNumber":95,"author":{"gitId":"t-cheepeng"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":96,"author":{"gitId":"t-cheepeng"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":97,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":98,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":99,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":100,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":101,"author":{"gitId":"t-cheepeng"},"content":"    expect(fixture).toMatchSnapshot();"},{"lineNumber":102,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":103,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":104,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should join course when join course button is clicked on\u0027, () \u003d\u003e {"},{"lineNumber":105,"author":{"gitId":"t-cheepeng"},"content":"    const params: string[] \u003d [\u0027key\u0027, \u0027student\u0027, \u0027NUS\u0027, \u0027mac\u0027];"},{"lineNumber":106,"author":{"gitId":"t-cheepeng"},"content":"    component.isLoading \u003d false;"},{"lineNumber":107,"author":{"gitId":"t-cheepeng"},"content":"    component.hasJoined \u003d false;"},{"lineNumber":108,"author":{"gitId":"t-cheepeng"},"content":"    component.userId \u003d \u0027user\u0027;"},{"lineNumber":109,"author":{"gitId":"t-cheepeng"},"content":"    component.key \u003d params[0];"},{"lineNumber":110,"author":{"gitId":"t-cheepeng"},"content":"    component.entityType \u003d params[1];"},{"lineNumber":111,"author":{"gitId":"t-cheepeng"},"content":"    component.institute \u003d params[2];"},{"lineNumber":112,"author":{"gitId":"t-cheepeng"},"content":"    component.mac \u003d params[3];"},{"lineNumber":113,"author":{"gitId":"t-cheepeng"},"content":"    component.validUrl \u003d true;"},{"lineNumber":114,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":115,"author":{"gitId":"t-cheepeng"},"content":"    const courseSpy: Spy \u003d spyOn(courseService, \u0027joinCourse\u0027).and.returnValue(of({}));"},{"lineNumber":116,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":117,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":118,"author":{"gitId":"t-cheepeng"},"content":"    fixture.detectChanges();"},{"lineNumber":119,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":120,"author":{"gitId":"t-cheepeng"},"content":"    const btn: any \u003d fixture.debugElement.nativeElement.querySelector(\u0027#btn-confirm\u0027);"},{"lineNumber":121,"author":{"gitId":"t-cheepeng"},"content":"    btn.click();"},{"lineNumber":122,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":123,"author":{"gitId":"t-cheepeng"},"content":"    expect(courseSpy.calls.count()).toEqual(1);"},{"lineNumber":124,"author":{"gitId":"t-cheepeng"},"content":"    expect(courseSpy.calls.mostRecent().args).toEqual(params);"},{"lineNumber":125,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":126,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(`/web/${params[1]}`);"},{"lineNumber":127,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":128,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":129,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should redirect user to home page if user is logged in\u0027, () \u003d\u003e {"},{"lineNumber":130,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(of({"},{"lineNumber":131,"author":{"gitId":"t-cheepeng"},"content":"      hasJoined: true,"},{"lineNumber":132,"author":{"gitId":"t-cheepeng"},"content":"      userId: \u0027user\u0027,"},{"lineNumber":133,"author":{"gitId":"t-cheepeng"},"content":"    }));"},{"lineNumber":134,"author":{"gitId":"t-cheepeng"},"content":"    const navSpy: Spy \u003d spyOn(navService, \u0027navigateByURL\u0027);"},{"lineNumber":135,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":136,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":137,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":138,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.hasJoined).toBeTruthy();"},{"lineNumber":139,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.userId).toEqual(\u0027user\u0027);"},{"lineNumber":140,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.count()).toEqual(1);"},{"lineNumber":141,"author":{"gitId":"t-cheepeng"},"content":"    expect(navSpy.calls.mostRecent().args[1]).toEqual(\u0027/web/student/home\u0027);"},{"lineNumber":142,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":143,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":144,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should stop loading if user is not logged in\u0027, () \u003d\u003e {"},{"lineNumber":145,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(of({"},{"lineNumber":146,"author":{"gitId":"t-cheepeng"},"content":"      hasJoined: true,"},{"lineNumber":147,"author":{"gitId":"t-cheepeng"},"content":"      userId: \u0027\u0027,"},{"lineNumber":148,"author":{"gitId":"t-cheepeng"},"content":"    }));"},{"lineNumber":149,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":150,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":151,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":152,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":153,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":154,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":155,"author":{"gitId":"t-cheepeng"},"content":"  it(\u0027should fetch user auth information on error\u0027, () \u003d\u003e {"},{"lineNumber":156,"author":{"gitId":"t-cheepeng"},"content":"    const navParams: any[] \u003d [undefined, window.location.pathname + window.location.search];"},{"lineNumber":157,"author":{"gitId":"t-cheepeng"},"content":"    spyOn(courseService, \u0027getJoinCourseStatus\u0027).and.returnValue(throwError({"},{"lineNumber":158,"author":{"gitId":"t-cheepeng"},"content":"      status: 403,"},{"lineNumber":159,"author":{"gitId":"t-cheepeng"},"content":"    }));"},{"lineNumber":160,"author":{"gitId":"t-cheepeng"},"content":"    const authSpy: Spy \u003d spyOn(authService, \u0027getAuthUser\u0027);"},{"lineNumber":161,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":162,"author":{"gitId":"t-cheepeng"},"content":"    component.ngOnInit();"},{"lineNumber":163,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":164,"author":{"gitId":"t-cheepeng"},"content":"    expect(component.isLoading).toBeFalsy();"},{"lineNumber":165,"author":{"gitId":"t-cheepeng"},"content":"    expect(authSpy.calls.count()).toEqual(1);"},{"lineNumber":166,"author":{"gitId":"t-cheepeng"},"content":"    expect(authSpy.calls.mostRecent().args).toEqual(navParams);"},{"lineNumber":167,"author":{"gitId":"t-cheepeng"},"content":"  });"},{"lineNumber":168,"author":{"gitId":"-"},"content":"});"}],"authorContributionMap":{"t-cheepeng":138,"-":30}},{"path":"src/web/services/log.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"AdithyaNarayan"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":3,"author":{"gitId":"AdithyaNarayan"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":4,"author":{"gitId":"AdithyaNarayan"},"content":"import { LogService } from \u0027./log.service\u0027;"},{"lineNumber":5,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":"describe(\u0027LogService\u0027, () \u003d\u003e {"},{"lineNumber":7,"author":{"gitId":"AdithyaNarayan"},"content":"  let service: LogService;"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"    TestBed.configureTestingModule({"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"      providers: ["},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":"        { provide: HttpRequestService },"},{"lineNumber":13,"author":{"gitId":"AdithyaNarayan"},"content":"      ],"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":"    });"},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"    service \u003d TestBed.inject(LogService);"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":"  });"},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  });"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"});"}],"authorContributionMap":{"AdithyaNarayan":21}},{"path":"src/web/services/log.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"AdithyaNarayan"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"AdithyaNarayan"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"halfwhole"},"content":"import { LogType, ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":4,"author":{"gitId":"t-cheepeng"},"content":"import { FeedbackSessionLogs } from \u0027../types/api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"AdithyaNarayan"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":6,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":7,"author":{"gitId":"AdithyaNarayan"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"AdithyaNarayan"},"content":" * Handles logging related logic provision."},{"lineNumber":9,"author":{"gitId":"AdithyaNarayan"},"content":" */"},{"lineNumber":10,"author":{"gitId":"AdithyaNarayan"},"content":"@Injectable({"},{"lineNumber":11,"author":{"gitId":"AdithyaNarayan"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":12,"author":{"gitId":"AdithyaNarayan"},"content":"})"},{"lineNumber":13,"author":{"gitId":"AdithyaNarayan"},"content":"export class LogService {"},{"lineNumber":14,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":15,"author":{"gitId":"AdithyaNarayan"},"content":"  constructor(private httpRequestService: HttpRequestService) { }"},{"lineNumber":16,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":17,"author":{"gitId":"AdithyaNarayan"},"content":"  /**"},{"lineNumber":18,"author":{"gitId":"AdithyaNarayan"},"content":"   * Creates a log for feedback session by calling API."},{"lineNumber":19,"author":{"gitId":"AdithyaNarayan"},"content":"   */"},{"lineNumber":20,"author":{"gitId":"AdithyaNarayan"},"content":"  createFeedbackSessionLog(queryParams: {"},{"lineNumber":21,"author":{"gitId":"AdithyaNarayan"},"content":"    courseId: string,"},{"lineNumber":22,"author":{"gitId":"AdithyaNarayan"},"content":"    feedbackSessionName: string,"},{"lineNumber":23,"author":{"gitId":"AdithyaNarayan"},"content":"    studentEmail: string,"},{"lineNumber":24,"author":{"gitId":"halfwhole"},"content":"    logType: LogType }): Observable\u003cstring\u003e {"},{"lineNumber":25,"author":{"gitId":"AdithyaNarayan"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":26,"author":{"gitId":"AdithyaNarayan"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":27,"author":{"gitId":"AdithyaNarayan"},"content":"      fsname: queryParams.feedbackSessionName,"},{"lineNumber":28,"author":{"gitId":"AdithyaNarayan"},"content":"      studentemail: queryParams.studentEmail,"},{"lineNumber":29,"author":{"gitId":"AdithyaNarayan"},"content":"      fsltype: queryParams.logType.toString(),"},{"lineNumber":30,"author":{"gitId":"AdithyaNarayan"},"content":"    };"},{"lineNumber":31,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":32,"author":{"gitId":"halfwhole"},"content":"    return this.httpRequestService.post(ResourceEndpoints.SESSION_LOGS, paramMap);"},{"lineNumber":33,"author":{"gitId":"AdithyaNarayan"},"content":"  }"},{"lineNumber":34,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":35,"author":{"gitId":"t-cheepeng"},"content":"  /**"},{"lineNumber":36,"author":{"gitId":"t-cheepeng"},"content":"   * Searches for feedback session logs."},{"lineNumber":37,"author":{"gitId":"t-cheepeng"},"content":"   */"},{"lineNumber":38,"author":{"gitId":"t-cheepeng"},"content":"  searchFeedbackSessionLog(queryParams: {"},{"lineNumber":39,"author":{"gitId":"t-cheepeng"},"content":"    courseId: string,"},{"lineNumber":40,"author":{"gitId":"t-cheepeng"},"content":"    searchFrom: string,"},{"lineNumber":41,"author":{"gitId":"t-cheepeng"},"content":"    searchUntil: string,"},{"lineNumber":42,"author":{"gitId":"t-cheepeng"},"content":"    studentEmail?: string,"},{"lineNumber":43,"author":{"gitId":"t-cheepeng"},"content":"  }): Observable\u003cFeedbackSessionLogs\u003e {"},{"lineNumber":44,"author":{"gitId":"t-cheepeng"},"content":"    const paramMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":45,"author":{"gitId":"t-cheepeng"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":46,"author":{"gitId":"t-cheepeng"},"content":"      fslstarttime: queryParams.searchFrom,"},{"lineNumber":47,"author":{"gitId":"t-cheepeng"},"content":"      fslendtime: queryParams.searchUntil,"},{"lineNumber":48,"author":{"gitId":"t-cheepeng"},"content":"    };"},{"lineNumber":49,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":50,"author":{"gitId":"t-cheepeng"},"content":"    if (queryParams.studentEmail) {"},{"lineNumber":51,"author":{"gitId":"t-cheepeng"},"content":"      paramMap.studentemail \u003d queryParams.studentEmail;"},{"lineNumber":52,"author":{"gitId":"t-cheepeng"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":54,"author":{"gitId":"t-cheepeng"},"content":"    return this.httpRequestService.get(ResourceEndpoints.SESSION_LOGS, paramMap);"},{"lineNumber":55,"author":{"gitId":"t-cheepeng"},"content":"  }"},{"lineNumber":56,"author":{"gitId":"AdithyaNarayan"},"content":"}"}],"authorContributionMap":{"t-cheepeng":22,"halfwhole":3,"AdithyaNarayan":31}},{"path":"src/web/services/progress-bar.service.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"import { TestBed } from \u0027@angular/core/testing\u0027;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":"import { ProgressBarService } from \u0027./progress-bar.service\u0027;"},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":"describe(\u0027ProgressBarService\u0027, () \u003d\u003e {"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":"  let service: ProgressBarService;"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"  beforeEach(() \u003d\u003e {"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"    TestBed.configureTestingModule({});"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"    service \u003d TestBed.inject(ProgressBarService);"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":"  });"},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":"  it(\u0027should be created\u0027, () \u003d\u003e {"},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"    expect(service).toBeTruthy();"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":"  });"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"});"}],"authorContributionMap":{"moziliar":16}},{"path":"src/web/services/progress-bar.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"moziliar"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"moziliar"},"content":"import { Subject } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":4,"author":{"gitId":"moziliar"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"moziliar"},"content":" * Service to handle display of the download progress bar"},{"lineNumber":6,"author":{"gitId":"moziliar"},"content":" */"},{"lineNumber":7,"author":{"gitId":"moziliar"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"moziliar"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":9,"author":{"gitId":"moziliar"},"content":"})"},{"lineNumber":10,"author":{"gitId":"moziliar"},"content":"export class ProgressBarService {"},{"lineNumber":11,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":12,"author":{"gitId":"moziliar"},"content":"  progressPercentage: Subject\u003cnumber\u003e \u003d new Subject\u003cnumber\u003e();"},{"lineNumber":13,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":14,"author":{"gitId":"moziliar"},"content":"  constructor() { }"},{"lineNumber":15,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  /**"},{"lineNumber":17,"author":{"gitId":"moziliar"},"content":"   * Update the progress percentage on the progress bar."},{"lineNumber":18,"author":{"gitId":"moziliar"},"content":"   */"},{"lineNumber":19,"author":{"gitId":"moziliar"},"content":"  updateProgress(progressPercentage: number): void {"},{"lineNumber":20,"author":{"gitId":"moziliar"},"content":"    this.progressPercentage.next(progressPercentage);"},{"lineNumber":21,"author":{"gitId":"moziliar"},"content":"  }"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":23,"author":{"gitId":"moziliar"},"content":"}"}],"authorContributionMap":{"moziliar":23}},{"path":"src/web/services/simple-modal.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable, TemplateRef } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { SimpleModalType } from \u0027../app/components/simple-modal/simple-modal-type\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { SimpleModalComponent } from \u0027../app/components/simple-modal/simple-modal.component\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Optional parameters for modal."},{"lineNumber":8,"author":{"gitId":"-"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"export interface SimpleModalOptions {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // determines if there should be 2 buttons for confirmation or only 1 button to close the modal"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  isInformationOnly?: boolean;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  confirmMessage?: string; // custom text message for confirm button"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  cancelMessage?: string; // custom text message for cancel button"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Service to handle display of confirmation modals."},{"lineNumber":18,"author":{"gitId":"-"},"content":" * For more a complicated use case, use {@link NgbModal} directly."},{"lineNumber":19,"author":{"gitId":"-"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":22,"author":{"gitId":"-"},"content":"})"},{"lineNumber":23,"author":{"gitId":"-"},"content":"export class SimpleModalService {"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  constructor(private ngbModal: NgbModal) {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * Opens a confirmation modal"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * @param header to be displayed on the modal"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * @param type which determines the look of the modal"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * @param content to be displayed in the body of the modal. content supports HTML tags"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * @param options See {@code SimpleModalOptions}"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  private open(header: string, type: SimpleModalType,"},{"lineNumber":36,"author":{"gitId":"-"},"content":"       content: string | TemplateRef\u003cany\u003e, options?: SimpleModalOptions): NgbModalRef {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    const modalRef: NgbModalRef \u003d this.ngbModal.open(SimpleModalComponent);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.header \u003d header;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.content \u003d content;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    modalRef.componentInstance.type \u003d type;"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    if (options) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      Object.entries(options).map(([key, value]: [string, string | boolean]) \u003d\u003e {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modalRef.componentInstance[key] \u003d value;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      });"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    return modalRef;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"  openConfirmationModal(header: string, type: SimpleModalType,"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                        content: string | TemplateRef\u003cany\u003e, options?: SimpleModalOptions): NgbModalRef {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"      isInformationOnly: false,"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      confirmMessage: \u0027Yes\u0027,"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      cancelMessage: \u0027No, cancel the operation\u0027,"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      ...options,"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    return this.open(header, type, content, modalOptions);"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"  openInformationModal(header: string, type: SimpleModalType,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                       content: string | TemplateRef\u003cany\u003e, options?: SimpleModalOptions): NgbModalRef {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      isInformationOnly: true,"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      confirmMessage: \u0027OK\u0027,"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      ...options,"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    return this.open(header, type, content, modalOptions);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":69,"author":{"gitId":"moziliar"},"content":""},{"lineNumber":70,"author":{"gitId":"moziliar"},"content":"  openLoadingModal(header: string, type: SimpleModalType,"},{"lineNumber":71,"author":{"gitId":"moziliar"},"content":"                       content: string | TemplateRef\u003cany\u003e, options?: SimpleModalOptions): NgbModalRef {"},{"lineNumber":72,"author":{"gitId":"moziliar"},"content":"    const modalOptions: SimpleModalOptions \u003d {"},{"lineNumber":73,"author":{"gitId":"moziliar"},"content":"      isInformationOnly: true,"},{"lineNumber":74,"author":{"gitId":"moziliar"},"content":"      confirmMessage: \u0027Abort\u0027,"},{"lineNumber":75,"author":{"gitId":"moziliar"},"content":"      ...options,"},{"lineNumber":76,"author":{"gitId":"moziliar"},"content":"    };"},{"lineNumber":77,"author":{"gitId":"moziliar"},"content":"    return this.open(header, type, content, modalOptions);"},{"lineNumber":78,"author":{"gitId":"moziliar"},"content":"  }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":10,"-":69}},{"path":"src/web/services/string-helper.spec.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { StringHelper } from \u0027./string-helper\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"describe(\u0027getTextFromHtml\u0027, () \u003d\u003e {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  it(\u0027should return the original sting if it is not HTML string\u0027, () \u003d\u003e {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    expect(StringHelper.getTextFromHtml(\u0027I am cool.\u0027)).toEqual(\u0027I am cool.\u0027);"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"  it(\u0027should return the string content in the HTML tag\u0027, () \u003d\u003e {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    expect(StringHelper.getTextFromHtml(\u0027\u003cp\u003eI am cool.\u003c/p\u003e\u0027)).toEqual(\u0027I am cool.\u0027);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  it(\u0027should handle properly for malformed HTML\u0027, () \u003d\u003e {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    expect(StringHelper.getTextFromHtml(\u0027\u003cp\u003eI am cool.\u0027)).toEqual(\u0027I am cool.\u0027);"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  it(\u0027should replace line breaks \\\\n\u0027, () \u003d\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    expect(StringHelper.getTextFromHtml(\u0027\u003cp\u003eI am cool.\\n multi-line\u0027))"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        .toEqual(\u0027I am cool.  multi-line\u0027);"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"  it(\u0027should replace line breaks \\\\n\\\\r\u0027, () \u003d\u003e {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    expect(StringHelper.getTextFromHtml(\u0027\u003cp\u003eI am cool.\\r\\n multi-line \u003c\\p\u003e\u0027))"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        .toEqual(\u0027I am cool.  multi-line \u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":25,"author":{"gitId":"-"},"content":"});"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"describe(\u0027convertImageToLinkInHtml\u0027, () \u003d\u003e {"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string if empty string is passed\u0027, () \u003d\u003e {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    expect(StringHelper.convertImageToLinkInHtml(\u0027\u0027)).toEqual(\u0027\u0027);"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string if no img tags are present\u0027, () \u003d\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    expect(StringHelper.convertImageToLinkInHtml(\u0027\u003ch1\u003eheader one\u003c/h1\u003e\u0027)).toEqual(\u0027\u0027);"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"  it(\u0027should return image links in img tags\u0027, () \u003d\u003e {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    expect(StringHelper.convertImageToLinkInHtml(\u0027\u003cimg src\u003d\"http://www.example.com/test.jpg\"\u003eBob\u003c/img\u003e\u0027))"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .toEqual(\u0027 Images Link: http://www.example.com/test.jpg \u0027);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string for malformed img tags\u0027, () \u003d\u003e {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    expect(StringHelper.convertImageToLinkInHtml(\u0027Bob\u003c/img\u003e\u0027)).toEqual(\u0027\u0027);"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":44,"author":{"gitId":"-"},"content":"});"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"describe(\u0027removeExtraSpace\u0027, () \u003d\u003e {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string for empty string\u0027, () \u003d\u003e {"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    expect(StringHelper.removeExtraSpace(\u0027\u0027)).toEqual(\u0027\u0027);"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"  it(\u0027should also remove spaces inside string\u0027, () \u003d\u003e {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    expect(StringHelper.removeExtraSpace(\u0027a    a\u0027)).toEqual(\u0027a a\u0027);"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"  it(\u0027should handle properly for Unicode string\u0027, () \u003d\u003e {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    expect(StringHelper.removeExtraSpace(\u0027 \\u00A0 a    a   \u0027)).toEqual(\u0027a a\u0027);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  it(\u0027should handle properly for multiple spaces\u0027, () \u003d\u003e {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    expect(StringHelper.removeExtraSpace(\u0027    \u0027)).toEqual(\u0027\u0027);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"  it(\u0027should remove extra spaces\u0027, () \u003d\u003e {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    expect(StringHelper.removeExtraSpace(\u0027 a      b       c       d      \u0027)).toEqual(\u0027a b c d\u0027);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":66,"author":{"gitId":"-"},"content":"});"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"describe(\u0027integerToLowerCaseAlphabeticalIndex\u0027, () \u003d\u003e {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string for negative input\u0027, () \u003d\u003e {"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(-1)).toEqual(\u0027\u0027);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"  it(\u0027should return empty string for zero input\u0027, () \u003d\u003e {"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(0)).toEqual(\u0027\u0027);"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"  it(\u0027should return alphabetical index for index 1\u0027, () \u003d\u003e {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(1)).toEqual(\u0027a\u0027);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":80,"author":{"gitId":"-"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"  it(\u0027should return alphabetical index for index 26\u0027, () \u003d\u003e {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(26)).toEqual(\u0027z\u0027);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"  it(\u0027should return alphabetical index for index 27\u0027, () \u003d\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(27)).toEqual(\u0027aa\u0027);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"  it(\u0027should return alphabetical index for index 100\u0027, () \u003d\u003e {"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    expect(StringHelper.integerToLowerCaseAlphabeticalIndex(100)).toEqual(\u0027vc\u0027);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  });"},{"lineNumber":92,"author":{"gitId":"-"},"content":"});"},{"lineNumber":93,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":94,"author":{"gitId":"halfwhole"},"content":"describe(\u0027removeAnonymousHash\u0027, () \u003d\u003e {"},{"lineNumber":95,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should remove hash for anonymous student\u0027, () \u003d\u003e {"},{"lineNumber":96,"author":{"gitId":"halfwhole"},"content":"    expect(StringHelper.removeAnonymousHash(\u0027Anonymous student 1234567890\u0027)).toEqual(\u0027Anonymous student\u0027);"},{"lineNumber":97,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":98,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":99,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should remove hash for anonymous instructor\u0027, () \u003d\u003e {"},{"lineNumber":100,"author":{"gitId":"halfwhole"},"content":"    expect(StringHelper.removeAnonymousHash(\u0027Anonymous instructor 5555\u0027)).toEqual(\u0027Anonymous instructor\u0027);"},{"lineNumber":101,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":102,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":103,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should remove hash for anonymous team\u0027, () \u003d\u003e {"},{"lineNumber":104,"author":{"gitId":"halfwhole"},"content":"    expect(StringHelper.removeAnonymousHash(\u0027Anonymous team 00001111\u0027)).toEqual(\u0027Anonymous team\u0027);"},{"lineNumber":105,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"  it(\u0027should not remove hash for regular name\u0027, () \u003d\u003e {"},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"    expect(StringHelper.removeAnonymousHash(\u0027Barry Harris\u0027)).toEqual(\u0027Barry Harris\u0027);"},{"lineNumber":109,"author":{"gitId":"halfwhole"},"content":"  });"},{"lineNumber":110,"author":{"gitId":"halfwhole"},"content":"});"}],"authorContributionMap":{"halfwhole":18,"-":92}},{"path":"src/web/services/string-helper.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * String related utility functions."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export class StringHelper {"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":7,"author":{"gitId":"-"},"content":"   * Get the human-readable text from a HTML string."},{"lineNumber":8,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  static getTextFromHtml(html: string): string {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    const domParser: DOMParser \u003d new DOMParser();"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    const document: Document \u003d domParser.parseFromString(html, \u0027text/html\u0027);"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    const text: string \u003d document.documentElement.innerText || document.documentElement.textContent || html;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    // replace all line breaks also"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    return text.replace(/\\r?\\n|\\r/g, \u0027 \u0027);"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   * Converts img tags in html to absolute links"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  static convertImageToLinkInHtml(html: string): string {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    const domParser: DOMParser \u003d new DOMParser();"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    const document: Document \u003d domParser.parseFromString(html, \u0027text/html\u0027);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    const imgElements: HTMLCollectionOf\u003cHTMLImageElement\u003e \u003d document.getElementsByTagName(\u0027img\u0027);"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    if (!imgElements.length) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      return \u0027\u0027;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    let imgLinks: string \u003d \u0027 Images Link: \u0027;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    for (let i: number \u003d 0; i \u003c imgElements.length; i +\u003d 1) {"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      const img: HTMLImageElement | null \u003d imgElements.item(i);"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      if (!img) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        continue;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      imgLinks +\u003d `${img.src} `;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    return imgLinks;"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   * Trims the string and reduces consecutive white spaces to only one space."},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Example: \" a   a  \" --\u003e \"a a\"."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * @return processed string, returns null if parameter is null"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  static removeExtraSpace(str: string): string {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    return str.trim().replace(/\\s+/g, \u0027 \u0027);"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * Converts an integer to alphabetical form (base26)."},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * \u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * 1 - a"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * 2 - b"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * ..."},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * 26 - z"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * 27 - aa"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * 28 - ab"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   * ..."},{"lineNumber":58,"author":{"gitId":"-"},"content":"   * http://stackoverflow.com/questions/11969840/how-to-convert-a-base-10-number-to-alphabetic-like-ordered-list-in-html"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * @param n - number to convert"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  static integerToLowerCaseAlphabeticalIndex(n: number): string {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    let result: string \u003d \u0027\u0027;"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    let n0: number \u003d n;"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    while (n0 \u003e 0) {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      n0 -\u003d 1; // 1 \u003d\u003e a, not 0 \u003d\u003e a"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      const remainder: number \u003d n0 % 26;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      const digit: string \u003d String.fromCharCode(remainder + 97);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      result +\u003d digit;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      n0 \u003d (n0 - remainder) / 26;"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    return result;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":74,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":75,"author":{"gitId":"halfwhole"},"content":"  /**"},{"lineNumber":76,"author":{"gitId":"halfwhole"},"content":"   * Removes the hash from the name of an anonymous student, instructor, or team."},{"lineNumber":77,"author":{"gitId":"halfwhole"},"content":"   */"},{"lineNumber":78,"author":{"gitId":"halfwhole"},"content":"  static removeAnonymousHash(str: string): string {"},{"lineNumber":79,"author":{"gitId":"halfwhole"},"content":"    return str.replace(/Anonymous (student|instructor|team) [0-9]{1,10}/, \u0027Anonymous $1\u0027);"},{"lineNumber":80,"author":{"gitId":"halfwhole"},"content":"  }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"halfwhole":7,"-":74}},{"path":"src/web/services/student.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { Observable } from \u0027rxjs\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import { map, mergeMap } from \u0027rxjs/operators\u0027;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import { JoinStatePipe } from \u0027../app/components/student-list/join-state.pipe\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { ResourceEndpoints } from \u0027../types/api-const\u0027;"},{"lineNumber":6,"author":{"gitId":"daongochieu2810"},"content":"import { Course, EnrollStudents, MessageOutput, Student, Students } from \u0027../types/api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { StudentsEnrollRequest, StudentUpdateRequest } from \u0027../types/api-request\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../types/sort-properties\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import { CourseService } from \u0027./course.service\u0027;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import { CsvHelper } from \u0027./csv-helper\u0027;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import { HttpRequestService } from \u0027./http-request.service\u0027;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import { TableComparatorService } from \u0027./table-comparator.service\u0027;"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Handles student related logic provision."},{"lineNumber":16,"author":{"gitId":"-"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":19,"author":{"gitId":"-"},"content":"})"},{"lineNumber":20,"author":{"gitId":"-"},"content":"export class StudentService {"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  constructor(private httpRequestService: HttpRequestService,"},{"lineNumber":23,"author":{"gitId":"-"},"content":"              private tableComparatorService: TableComparatorService,"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              private courseService: CourseService) {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Get a list of students of a course by calling API."},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * If teamName is provided, only students in that team will be returned."},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * Otherwise, all students in the course will be returned."},{"lineNumber":31,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  getStudentsFromCourse(queryParams: { courseId: string, teamName?: string }): Observable\u003cStudents\u003e {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    if (queryParams.teamName) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      paramsMap.teamname \u003d queryParams.teamName;"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   * Gets student of a course by calling API."},{"lineNumber":47,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   * \u003cp\u003e If both studentEmail and regKey are not provided, get the student of current logged-in user."},{"lineNumber":49,"author":{"gitId":"-"},"content":"   *"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   * @param courseId courseId of the course"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   * @param studentEmail if provided, get the student of the course of the given email"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   * @param regKey if provided, get the student of the course with regKey"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  getStudent(courseId: string, studentEmail?: string, regKey?: string): Observable\u003cStudent\u003e {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    if (studentEmail) {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      paramsMap.studentemail \u003d studentEmail;"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    if (regKey) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      paramsMap.key \u003d regKey;"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":68,"author":{"gitId":"-"},"content":"   * Updates the details of a student in a course by calling API."},{"lineNumber":69,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  updateStudent(queryParams: { courseId: string, studentEmail: string, requestBody: StudentUpdateRequest }):"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      Observable\u003cMessageOutput\u003e {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    const paramsMap: { [key: string]: string } \u003d {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      studentemail: queryParams.studentEmail,"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.STUDENT, paramsMap, queryParams.requestBody);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   * Deletes a student in a course by calling API."},{"lineNumber":81,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  deleteStudent(queryParams: {"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    googleId: string,"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    courseId: string,"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  }): Observable\u003cany\u003e {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":87,"author":{"gitId":"-"},"content":"      googleid: queryParams.googleId,"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.STUDENT, paramsMap);"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":94,"author":{"gitId":"-"},"content":"   * Regenerates the links for a student in a course."},{"lineNumber":95,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  regenerateStudentCourseLinks(courseId: string, studentEmail: string): Observable\u003cany\u003e {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      studentemail: studentEmail,"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    return this.httpRequestService.post(ResourceEndpoints.STUDENT_COURSE_LINKS_REGENERATION, paramsMap);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":105,"author":{"gitId":"-"},"content":"   * Enroll a list of students to a course by calling API."},{"lineNumber":106,"author":{"gitId":"-"},"content":"   * Students who are enrolled successfully will be returned."},{"lineNumber":107,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":108,"author":{"gitId":"daongochieu2810"},"content":"  enrollStudents(courseId: string, requestBody: StudentsEnrollRequest): Observable\u003cEnrollStudents\u003e {"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    return this.httpRequestService.put(ResourceEndpoints.STUDENTS, paramsMap, requestBody);"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   * Gets all students in a course and team as a student by calling API."},{"lineNumber":117,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  getStudentsFromCourseAndTeam(courseId: string, teamName: string): Observable\u003cStudents\u003e {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      courseid: courseId,"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      teamname: teamName,"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":127,"author":{"gitId":"-"},"content":"   * Deletes all students in a course by calling API."},{"lineNumber":128,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  deleteAllStudentsFromCourse(queryParams: { courseId: string }): Observable\u003cMessageOutput\u003e {"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    const paramsMap: Record\u003cstring, string\u003e \u003d {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      courseid: queryParams.courseId,"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    };"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    return this.httpRequestService.delete(ResourceEndpoints.STUDENTS, paramsMap);"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   * Loads list of students from a course in CSV format by calling API."},{"lineNumber":138,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  loadStudentListAsCsv(queryParams: { courseId: string }): Observable\u003cstring\u003e {"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    return this.courseService.getCourseAsInstructor(queryParams.courseId).pipe(mergeMap((course: Course) \u003d\u003e {"},{"lineNumber":141,"author":{"gitId":"-"},"content":"      return this.getStudentsFromCourse({ courseId: queryParams.courseId }).pipe(map((students: Students) \u003d\u003e {"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return this.processStudentsToCsv(course.courseId, course.courseName, students.students);"},{"lineNumber":143,"author":{"gitId":"-"},"content":"      }));"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }));"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"  processStudentsToCsv(courseId: string, courseName: string, students: Student[]): string {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    const csvRows: string[][] \u003d [];"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    csvRows.push([\u0027Course ID\u0027, courseId]);"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    csvRows.push([\u0027Course Name\u0027, courseName]);"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    csvRows.push([]);"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    const hasSection: boolean \u003d"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        students.some((student: Student) \u003d\u003e student.sectionName !\u003d\u003d \u0027None\u0027 \u0026\u0026 student.sectionName !\u003d\u003d \u0027\u0027);"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    const headers: string[] \u003d [\u0027Team\u0027, \u0027Full Name\u0027, \u0027Last Name\u0027, \u0027Status\u0027, \u0027Email\u0027];"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    csvRows.push(hasSection ? [\u0027Section\u0027].concat(headers) : headers);"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    students.sort((a: Student, b: Student) \u003d\u003e {"},{"lineNumber":157,"author":{"gitId":"-"},"content":"      return this.tableComparatorService.compare(SortBy.SECTION_NAME, SortOrder.ASC, a.sectionName, b.sectionName)"},{"lineNumber":158,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.TEAM_NAME, SortOrder.ASC, a.teamName, b.teamName)"},{"lineNumber":159,"author":{"gitId":"-"},"content":"          || this.tableComparatorService.compare(SortBy.RESPONDENT_NAME, SortOrder.ASC, a.name, b.name);"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    students.forEach((student: Student) \u003d\u003e {"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      const studentRow: string[] \u003d ["},{"lineNumber":164,"author":{"gitId":"-"},"content":"        student.teamName ? student.teamName : \u0027\u0027,"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        student.name,"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        student.lastName ? student.lastName : \u0027\u0027,"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        joinStatePipe.transform(student.joinState),"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        student.email,"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      ];"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      csvRows.push(hasSection ? [student.sectionName].concat(studentRow) : studentRow);"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    return CsvHelper.convertCsvContentsToCsvString(csvRows);"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daongochieu2810":2,"-":172}},{"path":"src/web/services/table-comparator.service.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import { Injectable } from \u0027@angular/core\u0027;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { SortBy, SortOrder } from \u0027../types/sort-properties\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Handles comparison logic between sortable table elements"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@Injectable({"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  providedIn: \u0027root\u0027,"},{"lineNumber":9,"author":{"gitId":"-"},"content":"})"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class TableComparatorService {"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"  constructor() { }"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   * Compares two strings lexicographically depending on order given."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  compareLexicographically(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.ASC) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      return strA.localeCompare(strB);"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.DESC) {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      return strB.localeCompare(strA);"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * Compares two strings naturally depending on the order given."},{"lineNumber":29,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  compareNaturally(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.ASC) {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      return strA.localeCompare(strB, undefined, { numeric: true });"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    if (order \u003d\u003d\u003d SortOrder.DESC) {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      return strB.localeCompare(strA, undefined, { numeric: true });"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    return 0;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * Compares two strings which are expected to be numbers depending on the order given."},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * If either string cannot be parsed into number, it will be seen as \u0027smaller\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * If both strings cannot be parsed into number, strA will always be seen as \u0027larger\u0027"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  compareNumbers(strA: string, strB: string, order: SortOrder): number {"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    const numA: number \u003d Number(strA);"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    const numB: number \u003d Number(strB);"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    if (Number.isNaN(numA)) {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      return 1;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    if (Number.isNaN(numB)) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      return -1;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    return (order \u003d\u003d\u003d SortOrder.DESC ? -1 : 1) * Math.sign(numA - numB);"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"  /**"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * Compares two strings depending on element to sort by and the order given."},{"lineNumber":61,"author":{"gitId":"-"},"content":"   */"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  compare(sortBy: SortBy, order: SortOrder, strA: string, strB: string): number {"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    switch (sortBy) {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_VALUE:"},{"lineNumber":65,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_SUBQUESTION:"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_CHOICE:"},{"lineNumber":67,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM:"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_RECIPIENT:"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      case SortBy.RANK_OPTIONS_OVERALL_RANK:"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_MAX:"},{"lineNumber":71,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_MIN:"},{"lineNumber":72,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_RESPONSE_COUNT:"},{"lineNumber":73,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_OPTION_SELECTED_TIMES:"},{"lineNumber":74,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_RESPONSE_COUNT:"},{"lineNumber":75,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_OPTION_SELECTED_TIMES:"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      case SortBy.SECTION_NAME:"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      case SortBy.TEAM_NAME:"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_NAME:"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this.compareNaturally(strA, strB, order);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_OPTIONS_OPTION:"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_TEAM:"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      case SortBy.CONTRIBUTION_RECIPIENT:"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      case SortBy.COMMENTS_CREATION_DATE:"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_SELF_RANK:"},{"lineNumber":85,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_OVERALL_RANK:"},{"lineNumber":86,"author":{"gitId":"-"},"content":"      case SortBy.RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF:"},{"lineNumber":87,"author":{"gitId":"AdithyaNarayan"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM_RANK:"},{"lineNumber":88,"author":{"gitId":"AdithyaNarayan"},"content":"      case SortBy.RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF:"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      case SortBy.RANK_OPTIONS_OPTION:"},{"lineNumber":90,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_CHOICE:"},{"lineNumber":91,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_TEAM:"},{"lineNumber":92,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_RECIPIENT_NAME:"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_CHOICE:"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_TEAM:"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_RECIPIENT_NAME:"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      case SortBy.RESPONDENT_NAME:"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      case SortBy.RESPONDENT_EMAIL:"},{"lineNumber":98,"author":{"gitId":"-"},"content":"      case SortBy.STUDENT_GENDER:"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      case SortBy.INSTITUTION:"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      case SortBy.NATIONALITY:"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      case SortBy.JOIN_STATUS:"},{"lineNumber":102,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_ID:"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_NAME:"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      case SortBy.COURSE_CREATION_DATE:"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_COMPLETION_STATUS:"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_START_DATE:"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_END_DATE:"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_CREATION_DATE:"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      case SortBy.SESSION_DELETION_DATE:"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      case SortBy.QUESTION_TYPE:"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      case SortBy.QUESTION_TEXT:"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      case SortBy.GIVER_TEAM:"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      case SortBy.GIVER_NAME:"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      case SortBy.RECIPIENT_TEAM:"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      case SortBy.RECIPIENT_NAME:"},{"lineNumber":116,"author":{"gitId":"t-cheepeng"},"content":"      case SortBy.LOG_TYPE:"},{"lineNumber":117,"author":{"gitId":"t-cheepeng"},"content":"      case SortBy.LOG_DATE:"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return this.compareLexicographically(strA, strB, order);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_OPTIONS_POINTS:"},{"lineNumber":120,"author":{"gitId":"-"},"content":"      case SortBy.CONSTSUM_RECIPIENTS_POINTS:"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_WEIGHT_AVERAGE:"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      case SortBy.RUBRIC_TOTAL_CHOSEN_WEIGHT:"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_AVERAGE:"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      case SortBy.NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF:"},{"lineNumber":125,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT:"},{"lineNumber":126,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_PERCENTAGE:"},{"lineNumber":127,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHTED_PERCENTAGE:"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT_TOTAL:"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      case SortBy.MCQ_WEIGHT_AVERAGE:"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT:"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_PERCENTAGE:"},{"lineNumber":132,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHTED_PERCENTAGE:"},{"lineNumber":133,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT_TOTAL:"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      case SortBy.MSQ_WEIGHT_AVERAGE:"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this.compareNumbers(strA, strB, order);"},{"lineNumber":136,"author":{"gitId":"-"},"content":"      default:"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return 0;"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":2,"AdithyaNarayan":2,"-":136}},{"path":"src/web/styles.scss","fileType":"scss","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/* You can add global styles to this file, and also import other style files */"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"body {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"ul {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"h1,"},{"lineNumber":13,"author":{"gitId":"-"},"content":".h1 {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  font-size: 2.1875rem;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"h2,"},{"lineNumber":18,"author":{"gitId":"-"},"content":".h2 {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  font-size: 1.75rem;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"h3,"},{"lineNumber":23,"author":{"gitId":"-"},"content":".h3 {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  font-size: 1.53125rem;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"h4,"},{"lineNumber":28,"author":{"gitId":"-"},"content":".h4 {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  font-size: 1.3125rem;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"h5,"},{"lineNumber":33,"author":{"gitId":"-"},"content":".h5 {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  font-size: 1.09375rem;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"h6,"},{"lineNumber":38,"author":{"gitId":"-"},"content":".h6 {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":".btn,"},{"lineNumber":43,"author":{"gitId":"-"},"content":".form-control,"},{"lineNumber":44,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  font-size: .875rem;"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":".color-orange {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  color: #E46D0B;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":".color-blue {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  color: #4379D1;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":".hidden {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  display: none;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":".modal {"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":".modal::before {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  content: \u0027\u0027;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  height: 100%;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":".modal-header {"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  padding: .75rem 1rem;"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":".modal-body {"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  padding: 1rem 1.25rem;"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"-"},"content":".modal-footer {"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  padding: .3rem .5rem;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":".modal-dialog {"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  text-align: left;"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  display: inline-block;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  max-height: 90vh;"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  max-width: 70vw;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  min-width: 30vw;"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  scrollbar-width: none; // Firefox"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  -ms-overflow-style: none;  // IE10+"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  vertical-align: middle;"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"  \u0026::-webkit-scrollbar { // Webkit-based browsers"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    width: 0;"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    height: 0;"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"@media (max-width: 768px) {"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  .modal-dialog {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    max-width: 80vw;"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    min-width: 65vw;"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"halfwhole"},"content":".modal-large .modal-dialog {"},{"lineNumber":107,"author":{"gitId":"halfwhole"},"content":"  width: 1000px;"},{"lineNumber":108,"author":{"gitId":"halfwhole"},"content":"}"},{"lineNumber":109,"author":{"gitId":"halfwhole"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":".close:focus {"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  outline: 0;"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"-"},"content":".table {"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  margin-bottom: 0;"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"  \u0026 th,"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  td {"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    padding: .5rem;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}"},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"-"},"content":".card {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  margin-bottom: 20px;"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"-"},"content":".card-header {"},{"lineNumber":128,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  display: flex;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  padding: .5rem 1rem;"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":".card-header-btn-toolbar {"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  align-items: center;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  margin-left: auto;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  text-align: right;"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"  button {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    margin-right: var(--btn-margin);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .btn-primary {"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    background-color: darken(#007BFF, 5%); // 5% darker than primary"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"  .btn-secondary {"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    background-color: darken(#6C757D, 10%); // 10% darker than secondary"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":".dropdown-item {"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  \u0026:focus,"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    background-color: #DAE0E5;"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":".form-control::placeholder {"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  opacity: .7;"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"// The following few properties are for the usermap page."},{"lineNumber":163,"author":{"gitId":"-"},"content":"// They need to be global style because the map is not rendered as Angular components,"},{"lineNumber":164,"author":{"gitId":"-"},"content":"// thus it cannot read the component-specific CSS rules."},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":".usermap-country {"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  stroke: #CECECE;"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  stroke-width: .15px;"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    stroke-width: .7px;"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":".usermap-text {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-size: 10px;"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  text-transform: capitalize;"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":".usermap-tooltip {"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  color: #222;"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  background: #FFF;"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  padding: .5em;"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  text-shadow: #F5F5F5 0 1px 0;"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  border-radius: 2px;"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  box-shadow: 0 0 2px 0 #A6A6A6;"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  opacity: .9;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":".text-preserve-space {"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  white-space: pre-wrap;"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":".cursor-pointer {"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":".ngb-tooltip-class {"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  text-decoration: underline dotted #808080;"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":"  \u0026:hover {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    text-decoration: underline dotted #000;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"-"},"content":".modal-window-class {"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  color: #000;"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  text-decoration: underline dashed #000;"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  cursor: pointer;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":"@media print {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  .no-print {"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    display: none;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}"},{"lineNumber":218,"author":{"gitId":"-"},"content":""},{"lineNumber":219,"author":{"gitId":"-"},"content":"// cursor not-allowed for input disabled attribute and tinyMCE\u0027s disabled"},{"lineNumber":220,"author":{"gitId":"-"},"content":"[disabled],"},{"lineNumber":221,"author":{"gitId":"-"},"content":".editor.editor-disabled {"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  cursor: not-allowed;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":".btn-light {"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  border: 1px solid #DDD;"},{"lineNumber":227,"author":{"gitId":"-"},"content":""},{"lineNumber":228,"author":{"gitId":"-"},"content":"  \u0026[disabled] {"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    border: 1px solid #EEE;"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":":root {"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  --btn-margin: 5px;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":".btn-margin-left {"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  margin-left: var(--btn-margin);"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":".btn-margin-right {"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  margin-right: var(--btn-margin);"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":".btn-margin {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  margin: var(--btn-margin);"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":".fa-sort-down,"},{"lineNumber":250,"author":{"gitId":"-"},"content":".fa-sort-up {"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  color: black;"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}"},{"lineNumber":253,"author":{"gitId":"-"},"content":""},{"lineNumber":254,"author":{"gitId":"-"},"content":".fa-sort {"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  color: #CCC;"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}"},{"lineNumber":257,"author":{"gitId":"-"},"content":""},{"lineNumber":258,"author":{"gitId":"-"},"content":".fa-sort,"},{"lineNumber":259,"author":{"gitId":"-"},"content":".fa-sort-up,"},{"lineNumber":260,"author":{"gitId":"-"},"content":".fa-sort-down {"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  // copied from fa-stack-X"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  left: 0;"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  position: absolute;"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  text-align: center;"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  line-height: inherit;"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"-"},"content":".fa-stack {"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  width: auto;"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}"},{"lineNumber":271,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":272,"author":{"gitId":"daongochieu2810"},"content":".ngb-dp-today \u003e .btn-light {"},{"lineNumber":273,"author":{"gitId":"daongochieu2810"},"content":"  font-weight: bold;"},{"lineNumber":274,"author":{"gitId":"daongochieu2810"},"content":"  color: blue;"},{"lineNumber":275,"author":{"gitId":"daongochieu2810"},"content":"}"},{"lineNumber":276,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":277,"author":{"gitId":"daongochieu2810"},"content":".handsontable .invalid-row {"},{"lineNumber":278,"author":{"gitId":"daongochieu2810"},"content":"  background: red;"},{"lineNumber":279,"author":{"gitId":"daongochieu2810"},"content":"  color: white;"},{"lineNumber":280,"author":{"gitId":"daongochieu2810"},"content":"}"},{"lineNumber":281,"author":{"gitId":"daongochieu2810"},"content":""},{"lineNumber":282,"author":{"gitId":"daongochieu2810"},"content":".handsontable .valid-row {"},{"lineNumber":283,"author":{"gitId":"daongochieu2810"},"content":"  background: white;"},{"lineNumber":284,"author":{"gitId":"daongochieu2810"},"content":"  color: black;"},{"lineNumber":285,"author":{"gitId":"daongochieu2810"},"content":"}"}],"authorContributionMap":{"daongochieu2810":15,"halfwhole":4,"-":266}},{"path":"src/web/types/question-details-impl/feedback-rank-recipients-question-details.impl.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// tslint:disable-next-line:max-line-length"},{"lineNumber":2,"author":{"gitId":"-"},"content":"import { RankRecipientsQuestionStatisticsCalculation } from \u0027../../app/components/question-types/question-statistics/question-statistics-calculation/rank-recipients-question-statistics-calculation\u0027;"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  FeedbackRankRecipientsQuestionDetails, QuestionOutput,"},{"lineNumber":6,"author":{"gitId":"-"},"content":"} from \u0027../api-output\u0027;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import { NO_VALUE } from \u0027../feedback-response-details\u0027;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import { AbstractFeedbackQuestionDetails } from \u0027./abstract-feedback-question-details\u0027;"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Concrete implementation of {@link FeedbackRankRecipientsQuestionDetails}."},{"lineNumber":12,"author":{"gitId":"-"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"export class FeedbackRankRecipientsQuestionDetailsImpl extends AbstractFeedbackQuestionDetails"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    implements FeedbackRankRecipientsQuestionDetails {"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  maxOptionsToBeRanked: number \u003d NO_VALUE;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  minOptionsToBeRanked: number \u003d NO_VALUE;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  areDuplicatesAllowed: boolean \u003d false;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  questionText: string \u003d \u0027\u0027;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType \u003d FeedbackQuestionType.RANK_RECIPIENTS;"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"  constructor(apiOutput: FeedbackRankRecipientsQuestionDetails) {"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    this.maxOptionsToBeRanked \u003d apiOutput.maxOptionsToBeRanked;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    this.minOptionsToBeRanked \u003d apiOutput.minOptionsToBeRanked;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    this.areDuplicatesAllowed \u003d apiOutput.areDuplicatesAllowed;"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    this.questionText \u003d apiOutput.questionText;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  getQuestionCsvStats(question: QuestionOutput): string[][] {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    const statsRows: string[][] \u003d [];"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    const statsCalculation: RankRecipientsQuestionStatisticsCalculation"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003d new RankRecipientsQuestionStatisticsCalculation(this);"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    this.populateQuestionStatistics(statsCalculation, question);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    if (statsCalculation.responses.length \u003d\u003d\u003d 0) {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      // skip stats for no response"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      return [];"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    statsCalculation.calculateStatistics();"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    statsRows.push(["},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u0027Team\u0027,"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u0027Recipient\u0027,"},{"lineNumber":45,"author":{"gitId":"-"},"content":"      \u0027Self Rank\u0027,"},{"lineNumber":46,"author":{"gitId":"-"},"content":"      \u0027Overall Rank\u0027,"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u0027Overall Rank Excluding Self\u0027,"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u0027Ranks Received\u0027,"},{"lineNumber":49,"author":{"gitId":"AdithyaNarayan"},"content":"      \u0027Team Rank\u0027,"},{"lineNumber":50,"author":{"gitId":"AdithyaNarayan"},"content":"      \u0027Team Rank Excluding Self\u0027,"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    ]);"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Object.keys(statsCalculation.ranksReceivedPerOption).sort().forEach((recipient: string) \u003d\u003e {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      statsRows.push(["},{"lineNumber":55,"author":{"gitId":"-"},"content":"        statsCalculation.emailToTeamName[recipient],"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        statsCalculation.emailToName[recipient],"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        statsCalculation.selfRankPerOption[recipient] ? String(statsCalculation.selfRankPerOption[recipient]) : \u0027-\u0027,"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        statsCalculation.rankPerOption[recipient] ? String(statsCalculation.rankPerOption[recipient]) : \u0027-\u0027,"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        statsCalculation.rankPerOptionExcludeSelf[recipient] ?"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            String(statsCalculation.rankPerOptionExcludeSelf[recipient]) : \u0027-\u0027,"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ...statsCalculation.ranksReceivedPerOption[recipient].map(String),"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      ]);"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    });"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    return statsRows;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"  isParticipantCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    return false;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"  isInstructorCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AdithyaNarayan":2,"-":73}},{"path":"src/web/types/question-details-impl/feedback-text-question-details.impl.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"import {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  FeedbackQuestionType,"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  FeedbackTextQuestionDetails, QuestionOutput,"},{"lineNumber":4,"author":{"gitId":"-"},"content":"} from \u0027../api-output\u0027;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import { AbstractFeedbackQuestionDetails } from \u0027./abstract-feedback-question-details\u0027;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Concrete implementation of {@link FeedbackTextQuestionDetails}."},{"lineNumber":9,"author":{"gitId":"-"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"export class FeedbackTextQuestionDetailsImpl extends AbstractFeedbackQuestionDetails"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    implements FeedbackTextQuestionDetails {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"  recommendedLength?: number;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  questionText: string \u003d \u0027\u0027;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  questionType: FeedbackQuestionType \u003d FeedbackQuestionType.TEXT;"},{"lineNumber":16,"author":{"gitId":"moziliar"},"content":"  shouldAllowRichText: boolean;"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"  constructor(apiOutput: FeedbackTextQuestionDetails) {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    super();"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    this.recommendedLength \u003d apiOutput.recommendedLength;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    this.questionText \u003d apiOutput.questionText;"},{"lineNumber":22,"author":{"gitId":"moziliar"},"content":"    this.shouldAllowRichText \u003d apiOutput.shouldAllowRichText;"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  getQuestionCsvStats(_: QuestionOutput): string[][] {"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // no stats for text question"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    return [];"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"  isParticipantCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    return false;"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"  isInstructorCommentsOnResponsesAllowed(): boolean {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    return true;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"moziliar":2,"-":35}},{"path":"src/web/types/sort-properties.ts","fileType":"ts","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Elements that tables are sorted by."},{"lineNumber":3,"author":{"gitId":"-"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"export enum SortBy {"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"-"},"content":"     * Nothing."},{"lineNumber":7,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    NONE,"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Section Name."},{"lineNumber":12,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    SECTION_NAME,"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Team name."},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    TEAM_NAME,"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Respondent Name (student/instructor)."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    RESPONDENT_NAME,"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The email of a respondent (student/instructor)."},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    RESPONDENT_EMAIL,"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * The gender of the student."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    STUDENT_GENDER,"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Institution."},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    INSTITUTION,"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Nationality."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    NATIONALITY,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Join status"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     JOIN_STATUS,"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Course ID."},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    COURSE_ID,"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Course Name."},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    COURSE_NAME,"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The creation time of the course."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    COURSE_CREATION_DATE,"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The deletion time of the course."},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    COURSE_DELETION_DATE,"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Completion status of feedback session."},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    SESSION_COMPLETION_STATUS,"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Feedback session name."},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    SESSION_NAME,"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Start time of the feedback session."},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    SESSION_START_DATE,"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * End time of the feedback session."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    SESSION_END_DATE,"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The creation time of the feedback session."},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    SESSION_CREATION_DATE,"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The time when the feedback session is moved to recycle bin."},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    SESSION_DELETION_DATE,"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Feedback question type."},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    QUESTION_TYPE,"},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Feedback question text (brief)."},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    QUESTION_TEXT,"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Team of the giver of the feedback response."},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    GIVER_TEAM,"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Name of the giver of the feedback response."},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    GIVER_NAME,"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Team of the recipient of the feedback response."},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    RECIPIENT_TEAM,"},{"lineNumber":124,"author":{"gitId":"-"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Name of the recipient of the feedback response."},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    RECIPIENT_NAME,"},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Average score of the numerical scale question."},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE,"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Maximum score of the numerical scale question."},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MAX,"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Minimum score of the numerical scale question."},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_MIN,"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Average score (exclude self-review) of the numerical scale question."},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    NUMERICAL_SCALE_AVERAGE_EXCLUDE_SELF,"},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    MCQ_CHOICE,"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT,"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    MCQ_RESPONSE_COUNT,"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    MCQ_PERCENTAGE,"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    MCQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    MCQ_TEAM,"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    MCQ_RECIPIENT_NAME,"},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    MCQ_OPTION_SELECTED_TIMES,"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_TOTAL,"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    MCQ_WEIGHT_AVERAGE,"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Option text"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    MSQ_CHOICE,"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Weight assigned to the option"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT,"},{"lineNumber":209,"author":{"gitId":"-"},"content":""},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Number of selection of that option"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    MSQ_RESPONSE_COUNT,"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * Percentage of selection of that option"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    MSQ_PERCENTAGE,"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * Weighted percentage of selection of that option"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    MSQ_WEIGHTED_PERCENTAGE,"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Team"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    MSQ_TEAM,"},{"lineNumber":229,"author":{"gitId":"-"},"content":""},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * Recipient\u0027s Name"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    MSQ_RECIPIENT_NAME,"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * Number of times option chosen"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    MSQ_OPTION_SELECTED_TIMES,"},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Sum of weight of options"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_TOTAL,"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     * Average of weights"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    MSQ_WEIGHT_AVERAGE,"},{"lineNumber":249,"author":{"gitId":"-"},"content":""},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * Option to rank"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OPTION,"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     * Overall ranking of the option"},{"lineNumber":257,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    RANK_OPTIONS_OVERALL_RANK,"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     * Giver\u0027s / Recipients\u0027s team"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_TEAM,"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":266,"author":{"gitId":"-"},"content":"     * Recipient\u0027s name"},{"lineNumber":267,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_RECIPIENT,"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     * Recipient\u0027s self rank"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_SELF_RANK,"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK,"},{"lineNumber":279,"author":{"gitId":"-"},"content":""},{"lineNumber":280,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * Recipient\u0027s overall rank excluding self"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    RANK_RECIPIENTS_OVERALL_RANK_EXCLUDING_SELF,"},{"lineNumber":284,"author":{"gitId":"-"},"content":""},{"lineNumber":285,"author":{"gitId":"AdithyaNarayan"},"content":"    /**"},{"lineNumber":286,"author":{"gitId":"AdithyaNarayan"},"content":"     * Recipient\u0027s team rank"},{"lineNumber":287,"author":{"gitId":"AdithyaNarayan"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"AdithyaNarayan"},"content":"    RANK_RECIPIENTS_TEAM_RANK,"},{"lineNumber":289,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":290,"author":{"gitId":"AdithyaNarayan"},"content":"    /**"},{"lineNumber":291,"author":{"gitId":"AdithyaNarayan"},"content":"     * Recipient\u0027s team rank excluding self"},{"lineNumber":292,"author":{"gitId":"AdithyaNarayan"},"content":"     */"},{"lineNumber":293,"author":{"gitId":"AdithyaNarayan"},"content":"    RANK_RECIPIENTS_TEAM_RANK_EXCLUDING_SELF,"},{"lineNumber":294,"author":{"gitId":"AdithyaNarayan"},"content":""},{"lineNumber":295,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":296,"author":{"gitId":"-"},"content":"     * Rubric sub question"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    RUBRIC_SUBQUESTION,"},{"lineNumber":299,"author":{"gitId":"-"},"content":""},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Frequency of choice"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    RUBRIC_CHOICE,"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":306,"author":{"gitId":"-"},"content":"     * Weight average."},{"lineNumber":307,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    RUBRIC_WEIGHT_AVERAGE,"},{"lineNumber":309,"author":{"gitId":"-"},"content":""},{"lineNumber":310,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     * Total chosen weight."},{"lineNumber":312,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    RUBRIC_TOTAL_CHOSEN_WEIGHT,"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     * Option to constsum options"},{"lineNumber":317,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_OPTION,"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"-"},"content":"     * Option\u0027s recieved/total/average points"},{"lineNumber":322,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    CONSTSUM_OPTIONS_POINTS,"},{"lineNumber":324,"author":{"gitId":"-"},"content":""},{"lineNumber":325,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     * Recipient\u0027s received/total/average points"},{"lineNumber":327,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    CONSTSUM_RECIPIENTS_POINTS,"},{"lineNumber":329,"author":{"gitId":"-"},"content":""},{"lineNumber":330,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":331,"author":{"gitId":"-"},"content":"     * Team for contribution measurement"},{"lineNumber":332,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    CONTRIBUTION_TEAM,"},{"lineNumber":334,"author":{"gitId":"-"},"content":""},{"lineNumber":335,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"-"},"content":"     * Contribution recipient\u0027s name"},{"lineNumber":337,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    CONTRIBUTION_RECIPIENT,"},{"lineNumber":339,"author":{"gitId":"-"},"content":""},{"lineNumber":340,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     * Amount of contribution measured in numbers"},{"lineNumber":342,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    CONTRIBUTION_VALUE,"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":346,"author":{"gitId":"-"},"content":"     * The creation date of a comment"},{"lineNumber":347,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    COMMENTS_CREATION_DATE,"},{"lineNumber":349,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":350,"author":{"gitId":"t-cheepeng"},"content":"    /**"},{"lineNumber":351,"author":{"gitId":"t-cheepeng"},"content":"     * The type of log"},{"lineNumber":352,"author":{"gitId":"t-cheepeng"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"t-cheepeng"},"content":"    LOG_TYPE,"},{"lineNumber":354,"author":{"gitId":"t-cheepeng"},"content":""},{"lineNumber":355,"author":{"gitId":"t-cheepeng"},"content":"    /**"},{"lineNumber":356,"author":{"gitId":"t-cheepeng"},"content":"     * The date of log"},{"lineNumber":357,"author":{"gitId":"t-cheepeng"},"content":"     */"},{"lineNumber":358,"author":{"gitId":"t-cheepeng"},"content":"    LOG_DATE,"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}"},{"lineNumber":360,"author":{"gitId":"-"},"content":""},{"lineNumber":361,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":362,"author":{"gitId":"-"},"content":" * Sort order."},{"lineNumber":363,"author":{"gitId":"-"},"content":" */"},{"lineNumber":364,"author":{"gitId":"-"},"content":"export enum SortOrder {"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":366,"author":{"gitId":"-"},"content":"     * Descending sort order."},{"lineNumber":367,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    DESC,"},{"lineNumber":369,"author":{"gitId":"-"},"content":""},{"lineNumber":370,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":371,"author":{"gitId":"-"},"content":"     * Ascending sort order"},{"lineNumber":372,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    ASC,"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"t-cheepeng":10,"AdithyaNarayan":10,"-":354}}]
